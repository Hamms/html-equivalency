{
  "en": {
    "data": {
      "authored_hints": {
        "2-3 Artist 1 new_authored_hint": {
          "2-3_Artist_1_new_a": "If you use the block to have me `move forward by 100 pixels`, I will draw a line automatically.",
          "2-3_Artist_1_new_b": "Having trouble turning the corner? Use the `turn right 90 degrees` block."
        },
        "2-3 Artist 11_authored_hint": {
          "2-3_Artist_11_a": "Having trouble with the angles? You need to go 360 degrees in 8 turns.  What is 360/8? "
        },
        "2-3 Artist 12_authored_hint": {
          "2-3_Artist_12_a": "There are 360 degrees in a circle, so if the artist turns 1 degree each time through the loop, he'll need to go through 360 times."
        },
        "2-3 Artist 2 new_authored_hint": {
          "2-3_Artist_2_new_a": "The artist doesn't seem to be pointing in the correct direction. Can you make them turn first before drawing the line?"
        },
        "2-3 Artist 3new_authored_hint": {
          "2-3_Artist_3new_a": "What is 100-70?  Based on the story problem, that's how tall the hat needs to be!",
          "2-3_Artist_3new_b": "The artist doesn't seem to be pointing in the correct direction. Can you make them turn first before drawing the line?"
        },
        "2-3 Artist 4_authored_hint": {
          "2-3_Artist_4_a": "To finish the house, all we need to do is draw a square!"
        },
        "2-3 Artist 6_authored_hint": {
          "2-3_Artist_6_a": "To make those little angles, you have to turn *farther* each time than you did with the square.   ",
          "2-3_Artist_6_b": "Since I'm already facing to the right, it's easiest to start by moving forward, then make left turns to create the triangle.",
          "2-3_Artist_6_c": "Each side of the triangle is the same length as each side of the square...100 pixels!"
        },
        "2-3 Artist 7_authored_hint": {
          "2-3_Artist_7_a": "The easiest way to solve this puzzle is to draw the first square and end with the artist pointing down before starting your second square."
        },
        "2-3 Artist 8_authored_hint": {
          "2-3_Artist_8_a": "If you cut 200 in half, how many pixels wide does each square need to be?"
        },
        "2-3 Artist 9 NEW_authored_hint": {
          "2-3_Artist_9_a": "This diamond is really just a square on its side"
        },
        "2-3 Artist 9 REPLACEMENT_authored_hint": {
          "step_size": "Each step is 100 pixels wide and 100 pixels high."
        },
        "2-3 Artist 9_authored_hint": {
          "2-3_Artist_9_a": "This diamond is really just a square turned 45 degrees.",
          "2-3_Artist_9_b": "Don't forget to turn the artist left by 45 degrees before you start drawing your square!\n\n![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)"
        },
        "2-3 Artist Debugging 10_authored_hint": {
          "2-3_Artist_Debugging_10_a": "Remember, you want the control panel 10 pixels *wider*...so be sure to **add** 10 to whatever number you change.",
          "2-3_Artist_Debugging_10_b": "**Trial and error is perfectly fine here!**  \n\nStart by changing one number at a time.   \n\nWhich numbers do what?  \n\nIf you get too lost, just click \"Start over\" and your code will be reset."
        },
        "2-3 Artist Debugging 2_authored_hint": {
          "2-3_Artist_Debugging_2_a": "Hint: Each whisker is 75 pixels long."
        },
        "2-3 Artist Debugging 3_authored_hint": {
          "2-3_Artist_Debugging_3_a": "One of the turns is 15 degrees too small.",
          "2-3_Artist_Debugging_3_b": "If the program runs too fast to see what's happening, try slowing it down with the slider."
        },
        "2-3 Artist Debugging 7_authored_hint": {
          "2-3_Artist_Debugging_7_a": "What happens if you have the artist move or jump backward after he draws the first line?"
        },
        "2-3 Artist Debugging 8_authored_hint": {
          "2-3_Artist_Debugging_8_a": "How many times did my shape repeat?\n\nHow many times *should* the shape repeat?\n\nWhere can you change that in the program?"
        },
        "2-3 Artist Debugging 9_authored_hint": {
          "2-3_Artist_Debugging_9_a": "The artist needs to turn 60 degrees farther left before starting to draw!",
          "2-3_Artist_Debugging_9_b": "You don't need to add another block to get the full turn, just add 60 degrees to the `turn left` block that's already there!"
        },
        "2-3 Artist Functions 1 a_authored_hint": {
          "2-3_Artist_Functions_1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
          "2-3_Artist_Functions_1_b": "It is okay to draw overlapping lines to make your glasses."
        },
        "2-3 Artist Functions 1_authored_hint": {
          "2-3_Artist_Functions_1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
          "2-3_Artist_Functions_1_b": "It is okay to draw overlapping lines to make your glasses."
        },
        "2-3 Artist Functions 11 a_authored_hint": {
          "2-3_Artist_Functions_11_a": "You will need to change not only the number and length of sides within the function, but also the angle the artist turns between each side."
        },
        "2-3 Artist Functions 11_authored_hint": {
          "2-3_Artist_Functions_11_a": "You will need to change not only the number and length of sides within the function, but also the angle the artist turns between each side."
        },
        "2-3 Artist Functions 12 a_authored_hint": {
          "2-3_Artist_Functions_12_a": "Try running the code first to see what you need to add."
        },
        "2-3 Artist Functions 12_authored_hint": {
          "2-3_Artist_Functions_12_a": "Try running the code first to see what you need to add."
        },
        "2-3 Artist Functions 2 a_authored_hint": {
          "2-3_Artist_Functions_2_a": "Your program should:\n- Use function\n- Move forward 100 + 75 pixels\n- Use function"
        },
        "2-3 Artist Functions 2_authored_hint": {
          "2-3_Artist_Functions_2_a": "Your program should:\n- Use function\n- Move forward 100 + 75 pixels\n- Use function"
        },
        "2-3 Artist Functions 3 a_authored_hint": {
          "2-3_Artist_Functions_3_a": "**115 + 45 = 160**"
        },
        "2-3 Artist Functions 3_authored_hint": {
          "2-3_Artist_Functions_3_a": "**115 + 45 = 160**"
        },
        "2-3 Artist Functions 4 a_authored_hint": {
          "2-3_Artist_Functions_4_a": "The artist needs to turn 120 degrees between each square to complete this design."
        },
        "2-3 Artist Functions 4_authored_hint": {
          "2-3_Artist_Functions_4_a": "The artist needs to turn 120 degrees between each square to complete this design."
        },
        "2-3 Artist Loops New 11_authored_hint": {
          "2-3_Artist_Loops_New_11_a": "Remember that the code from the last puzzle was:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">8</title>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n            <next>\n              <block type=\"draw_turn_by_constant_dropdown\">\n                <title name=\"DIR\">turnRight</title>\n                <title name=\"VALUE\" config=\"45,60,90,120,180\">45</title>\n                <next>\n                  <block type=\"draw_move_by_constant\">\n                    <title name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">50</title>\n                    <next>\n                      <block type=\"draw_turn_by_constant_dropdown\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <title name=\"VALUE\" config=\"45,60,90,120,180\">90</title>\n                        <next>\n                          <block type=\"draw_move_by_constant\">\n                            <title name=\"DIR\">moveForward</title>\n                            <title name=\"VALUE\">50</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>",
          "2-3_Artist_Loops_New_11_b": "Your new turn should go at the **end** of the code inside the loop."
        },
        "2-3 Artist Loops New 12_authored_hint": {
          "2-3_Artist Loops_New_12_a": "Before starting the diamond, the artist needs to turn left by 60 degrees to get on the right path.",
          "2-3_Artist Loops_New_12_b": "After the artist goes forward 100 pixels, he will need to turn right 120 degrees to make the sharp corner.",
          "2-3_Artist Loops_New_12_c": "The artist will need to turn right only 60 degrees to create a wide corner."
        },
        "2-3 Artist Loops New 13_authored_hint": {
          "2-3_Artist_Loops_New_13_a": "At the end of each diamond, the artist is already facing the right direction to start the next one.  \n\nBecause of this, we don't need to add an extra `turn left by` block before we start again.",
          "2-3_Artist_Loops_New_13_b": "To make each diamond, the artist needs to:   \n- move\n- turn right 120 degrees\n- move\n- turn right 60 degrees  \n\nThen do it all again!"
        },
        "2-3 Artist Loops New 9_authored_hint": {
          "2-3_Artist_Loops_New_9_a": "The artist needs to turn 45 degrees to the right before he starts drawing.",
          "2-3_Artist_Loops_New_9_b": "This V is really just half of a square.  What would the code be to draw half of a square?"
        },
        "2-3 Artist Nested Loops 1_authored_hint": {
          "2-3_Artist_Nested_Loops_1_a": "Remember to put all of the grey blocks inside of your loop."
        },
        "2-3 Artist Nested Loops 3_authored_hint": {
          "2-3_Artist_Nested_Loops_3_a": "Need help with the angles?  \n**360/12 = 30**",
          "2-3_Artist_Nested_Loops_3_b": "Remember to put all of the grey code and your turn block inside of a loop."
        },
        "2-3 Artist Nested Loops 4_authored_hint": {
          "2-3_Artist_Nested_Loops_3_a": "Need help with the angles?  \n**360/12 = 30**"
        },
        "2-3 Artist Nested Loops 5_authored_hint": {
          "2-3_Artist_Nested_Loops_5_a": "Try using the `jump forward` block to get from the top of one square to the place where you will start the next. \n\nIf your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?"
        },
        "2-3 Artist Nested Loops 7_authored_hint": {
          "2-3_Artist_Nested_Loops_7_a": "How far should you turn in each loop?  \n\nWhat is 360/10?"
        },
        "2-3 Artist Nested Loops 9_authored_hint": {
          "2-3_Artist_Nested_Loops_9_a": "Need help finding the correct angle?\n\n**360 / 12 = 30**"
        },
        "2-3 Bee Conditionals 14_authored_hint": {
          "2-3_Bee_Conditionals_14_a": "Having a hard time figuring out how to get the blocks down?  Try treating the red flower exactly the same as a purple flower!",
          "2-3_Bee_Conditionals_14_b": "If the red flower were purple, could you figure out how to use an extra `repeat` loop to cut down on code?"
        },
        "2-3 Bee Conditionals 15_authored_hint": {
          "2-3_Bee_Conditionals_15_a": "Remember: Purple flowers only have either 0 or 1 nectar and they can change each time you run the program."
        },
        "2-3 Bee Conditionals 3_authored_hint": {
          "2-3_Bee_Conditionals_3_a": "The code will be shortest if you use a loop each time you move forward, another loop to gather nectar, and another one to make honey."
        },
        "2-3 Bee Conditionals 6_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "Remember: Purple flowers change between 0 and 1 nectar when you run your program!"
        },
        "2-3 Bee Debugging 1_authored_hint": {
          "2-3_Bee_Debugging_1_a": "Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "2-3 Bee Debugging 2_authored_hint": {
          "2-3_Bee_Debugging_2_a": "Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "2-3 Bee Debugging 4_authored_hint": {
          "2-3_Bee_Debugging_4_a": "Is there any place where the bee does something that doesn't make sense? What happens when you change that block?"
        },
        "2-3 Bee Functions 4_authored_hint": {
          "2-3_Bee_Functions_4_a": "You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again."
        },
        "2-3 Bee Functions 6_authored_hint": {
          "2-3_Bee_Functions_6_a": "You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again."
        },
        "2-3 Bee Functions 8_authored_hint": {
          "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        },
        "2-3 Bee Functions 9_authored_hint": {
          "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "2-3_Bee_Functions_8_b": "Remember to build your code inside of the green function block.\n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
        },
        "2-3 Bee Loops 2_authored_hint": {
          "2-3_Bee_Loops_2_a": "You should end up with four blocks inside your loop."
        },
        "2-3 Bee Loops 3_authored_hint": {
          "2-3_Bee_Loops_3_a": "You should have 6 blocks inside your loop."
        },
        "2-3 Bee Loops 3B_authored_hint": {
          "2-3_Bee_Loops_3B_a": "You will need two different `repeat` loops, one after the other."
        },
        "2-3 Bee Loops 4_authored_hint": {
          "2-3_Bee_Loops_4_a": "You should end up with five blocks inside your loop."
        },
        "2-3 Bee Loops 4A_authored_hint": {
          "2-3_Bee_Loops_4A_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_4A_b": "The last piece of the program can be finished by writing code at the end of your program outside of your loop.",
          "2-3_Bee_Loops_4A_c": "If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a `repeat` loop at the end."
        },
        "2-3 Bee Loops 5_authored_hint": {
          "2-3_Bee_Loops_5_a": "If you can't spot the blocks to put inside `repeat` right away, start by coding out each move and look for a pattern."
        },
        "2-3 Bee Loops 6_authored_hint": {
          "2-3_Bee_Loops_6_a": "If you can't tell what should go into the `repeat` loop, try dragging blocks out one by one and see if you can find a pattern.",
          "2-3_Bee_Loops_6_b": "There should be 6 blocks inside your `repeat` loop when you're done."
        },
        "2-3 Bee Loops 7_authored_hint": {
          "2-3_Bee_Loops_7_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_7_b": "If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  "
        },
        "2-3 Maze 1_authored_hint": {
          "2-3_Maze_1_a": "To use a `move forward` block, drag it from the toolbar area out into the workspace and connect it to the `when run` block."
        },
        "2-3 Maze 16_authored_hint": {
          "2-3_Maze_16_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "2-3_Maze_16_b": "To put lots of blocks inside a `repeat` loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  \n\nConnect it all back to the `when run` block and you're good to go!"
        },
        "2-3 Maze 6_authored_hint": {
          "2-3_Maze_6_a": "There are two ways to solve this puzzle!"
        },
        "2-3 Maze Loops 17_authored_hint": {
          "2-3_Maze_Loops_17_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "2-3_Maze_Loops_17_b": "Did the starting code get deleted?  Click `start over` to get it back!"
        },
        "2-3 Maze Loops 18_authored_hint": {
          "2-3_Maze_Loops_18_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in."
        },
        "2-3 Maze Loops 19_authored_hint": {
          "2-3_Maze_Loops_19_a": "If you are stuck, try writing out the code without loops first and looking for patterns.",
          "2-3_Maze_Loops_19_b": "Putting one repeat loop inside of another can help decrease the number of blocks used."
        },
        "2-3 Maze Loops 20_authored_hint": {
          "2-3_Maze_Loops_20_a": "Look for a stair-step pattern in this maze to find where a loop can be used."
        },
        "2-3 Maze Loops 21_authored_hint": {
          "2-3_Maze_Loops_21_a": "If you are having trouble finding the stair-step pattern, try covering the blocked paths with your finger."
        },
        "4-5 Artist 1_authored_hint": {
          "4-5_Artist_1_a": "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        },
        "4-5 Artist 11_authored_hint": {
          "4-5_Artist_11_a": "Within your loop, make sure the artist jumps backwards and upwards after drawing each line."
        },
        "4-5 Artist 3_authored_hint": {
          "4-5_Artist_3_a": "If the flower bed is 600 pixels around and two of the sides are 200 pixels long, here is how to figure out what the short sides add up to:\n\n**600 - 200 - 200 = 200**\n\nThat means both short sides add up to 200 pixels.\n\n**What is 200 / 2?**",
          "4-5_Artist_3_b": "If you can't see where the `repeat` loop goes right away, try coding out the whole solution and look for a pattern."
        },
        "4-5 Artist 4_authored_hint": {
          "4-5_Artist_4_a": "There are 360 degrees in a circle! \n\nThat's how many times you need to repeat this code (turning 1 degree at a time) before the circle is done!"
        },
        "4-5 Artist 5_authored_hint": {
          "4-5_Artist_5_a": "Trial and error is a great method, but you can also solve the problem by dividing the 90 degree angle into thirds.\n\n**90 / 3 = _____**"
        },
        "4-5 Artist 7_authored_hint": {
          "4-5_Artist_7_a": "Which angle is the smallest?  At which angle is the artist standing? "
        },
        "4-5 Artist 8_authored_hint": {
          "4-5_Artist_8_a": "The long sides are 240 pixels each.  That means that the 2 short sides must total:\n\n**800 - 240 - 240 = 320**\n\nWhat is **320/2** ? ",
          "4-5_Artist_8_b": "This image can be done 2 ways!  \n- Draw two rectangles that are **120** long and **160** tall, with an overlapping side\n\n- Draw one rectangle that is **240** long and **160** tall, then add a line in the middle."
        },
        "4-5 Artist 9_authored_hint": {
          "4-5_Artist_9_a": "When a triangle is an equilateral, all sides and all angles are the same.  \n",
          "4-5_Artist_9_b": "You will need to draw three triangles of the same size. Don't forget to jump to your new position after each one."
        },
        "4-5 Artist Assessment 1_authored_hint": {
          "4-5_Artist_Assessment_1_a": "You only need to draw the outside triangle to complete this puzzle."
        },
        "4-5 Artist Patterns 11_authored_hint": {
          "4-5_Artist_Patterns_11_a": "If there are 360 degrees in a circle and each loop turns 3 degrees, how many times would you need to loop draw half of a full circle?"
        },
        "4-5 Artist Patterns 2_authored_hint": {
          "4-5_Artist_Patterns_2_a": "Notice that since the squares are 20 pixels long, you'll need to jump 20 pixels before you start your next square."
        },
        "4-5 Artist Patterns 3_authored_hint": {
          "4-5_Artist_Patterns_3_a": "Be careful to pull out the full block of \"code from the toolbar each time you try a new one.",
          "4-5_Artist_Patterns_3_b": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "4-5 Artist Patterns 5_authored_hint": {
          "4-5_Artist_Patterns_5_a": "Now, when the artist finished each diamond, he's facing the opposite direction from where he needs to be to start the next one.  \n\nHow many degrees does he need to be turned to set himself straight?"
        },
        "4-5 Bee Conditionals 4_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "4-5 Bee Conditionals 5_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "4-5 Bee Conditionals 6_authored_hint": {
          "4-5 Bee Conditionals 6_a": "You can solve this puzzle using only the blocks on the workspace.  What order should they go in?",
          "4-5 Bee Conditionals 6_b": "Make sure that you are checking to see if the flower has more than **0** nectar at least **3** times to solve this puzzle."
        },
        "4-5 Bee Debugging 1_authored_hint": {
          "4-5_Bee_Debugging_1_a": "If you are having trouble figuring out what's not right, try running it to see where things go wrong."
        },
        "4-5 Bee Nested Loops Rows_authored_hint": {
          "4-5_Bee_Nested_Loops_Rows_a": "Try treating this puzzle like a long rectangle where the bee needs to move forward, then turn left several times to complete the path."
        },
        "4-5 Maze 10_authored_hint": {
          "4-5_Maze_10_a": "If you can't see how to use loops to solve the puzzle right away, try solving it the long way first, then looking for a pattern.\n\nWhat should you put a `repeat` around to make the code shorter?"
        },
        "4-5 Maze 4_authored_hint": {
          "4-5_Maze_4_a": "If you are having a hard time figuring out where to put the repeat, try coding everything out and looking for a pattern."
        },
        "4-5 Maze 5_authored_hint": {
          "4-5_Maze_5_a": "Try using a `repeat` loop anytime you need to `move forward` more than two steps.",
          "4-5_Maze_5_b": "You can use more than one `repeat` loop in a puzzle."
        },
        "4-5 Maze 6_authored_hint": {
          "4-5_Maze_6_a": "Try tracing out a path with your finger.  \nIs it the shortest path you can find?"
        },
        "4-5 Maze 7_authored_hint": {
          "4-5_Maze_7_a": "**Want to get your code as small as it can be?** \n\nLook for patterns in your blocks. Do you see something that repeats?  Try putting a loop around it instead!"
        },
        "4-5 Nested Loops 12_authored_hint": {
          "4-5_Nested_Loops_12_a": "**360 / 36 = ?**"
        },
        "4-5 Nested Loops 6_authored_hint": {
          "4-5_Nested_Loops_6_a": "Don't forget to make a turn after your inner loop.\n\nYou'll be looping 6 triangles over 360 degrees.\n\n**360 / 6 = ?**"
        },
        "4-5 Nested Loops 7_authored_hint": {
          "4-5_Nested_Loops_7_a": "This design will loop 10 times over 360 degrees.\n\n**360 / 10 = ?**"
        },
        "4-5 Nested Loops 8_authored_hint": {
          "4-5_Nested_Loops_8_a": "You will be looping this shape 6 times over 360 degrees.\n\n**360 / 6 = ?**"
        },
        "4-5 While Loops 8_authored_hint": {
          "4-5_While_Loops_8_a": "Each item will need its own `while` loop."
        },
        "Artist Inspiration_authored_hint": {
          "brush_width": "We set the brush width to 1, then the color to blue before we did anything else.",
          "double_loop": "Try putting a `for loop` inside of a `repeat` loop.",
          "specifics": "The `for loop` runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.\n        \nThe `set alpha` block uses division to fade the color as the counter gets higher.",
          "after": "When you're done with each \"petal\", be sure to `move forward` 20 pixels before you make a 60 degree rotation.",
          "solution": "**Solution**\n\n\n![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)"
        },
        "Bergeron Robot Maze1_authored_hint": {
          "2-3_Maze_1_a": "To use a `move forward` block, drag it from the toolbar area out into the workspace and connect it to the `when run` block."
        },
        "Course 4 Artist 11_authored_hint": {
          "Course_4_Artist_11_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
          "Course_4_Artist_11_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. "
        },
        "Course 4 Artist 12_authored_hint": {
          "Course_4_Artist_12_a": "Each repeated shape is the combination of **half of a hexagon**, followed by **2/3 of a triangle**. ",
          "Course_4_Artist_12_b": "The unit shape is almost the same as in the last puzzle, except the half-hexagon is a bit bigger. ",
          "Course_4_Artist_12_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#843179</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"draw_move_by_constant\">\n                    <title name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">60</title>\n                    <next>\n                      <block type=\"draw_turn_by_constant\">\n                        <title name=\"DIR\">turnRight</title>\n                        <title name=\"VALUE\">60</title>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"controls_repeat\">\n                    <title name=\"TIMES\">2</title>\n                    <statement name=\"DO\">\n                      <block type=\"draw_move_by_constant\">\n                        <title name=\"DIR\">moveForward</title>\n                        <title name=\"VALUE\">80</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">120</title>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist 6_authored_hint": {
          "Course_4_Artist_6_a": "There are 3 triangles within the 360 degree rotation...how many times does 3 go into 360?"
        },
        "Course 4 Artist 8a_authored_hint": {
          "Course_4_Artist_8a": "Need help figuring out how far to turn?\n\nThere are 3 triangles within the 360 degree rotation.\n\nHow many times does 3 go into 360?"
        },
        "Course 4 Artist 9_authored_hint": {
          "Course_4_Artist_9_a": "Need to know how much to turn? \n\nWhat is 360 divided by 10?"
        },
        "Course 4 Artist Binary Free Play 2b_authored_hint": {
          "Course_4_Artist_Binary_Free_Play_2b_a": "This code uses two `for loops`. One counts up from 1 to 8, the other counts down from 8 to 1.",
          "Course_4_Artist_Binary_Free_Play_2b_b": "Each `for loop` has three repeats.  The first draws the leftmost set of 1s, the second draws the 0s in the middle and the third draws the 1s on the right.",
          "Course_4_Artist_Binary_Free_Play_2b_c": "In each repeat you need `counter` for 1s and `16-(2 x counter)` for 0s.",
          "Course_4_Artist_Binary_Free_Play_2b_d": "**Solution:**\n\n<xml><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"controls_for_counter\" inline=\"true\"><mutation counter=\"counter\"></mutation><value name=\"FROM\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><value name=\"TO\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value><value name=\"BY\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><statement name=\"DO\"><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MINUS</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">16</title></block></value><value name=\"B\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MULTIPLY</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">0</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type=\"controls_for_counter\" inline=\"true\"><mutation counter=\"counter\"></mutation><value name=\"FROM\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value><value name=\"TO\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><value name=\"BY\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><statement name=\"DO\"><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MINUS</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">16</title></block></value><value name=\"B\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MULTIPLY</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">0</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>"
        },
        "Course 4 Artist For Loops 11_authored_hint": {
          "Course_4_Artist_For_Loops_11_a": "The turn angle will change with each shape!  \n\nUse the math block to enter 360 divided by the number of sides the shape has to get the angle right. "
        },
        "Course 4 Artist For Loops 11a_authored_hint": {
          "Course_4_Artist_For_Loops_11a_a": "360 divided by the number of sides a shape has is the number of degrees you'll need to turn. ",
          "Course_4_Artist_For_Loops_11a_b": "Each time, you will need to move forward by 10 times the length of the current number of sides. "
        },
        "Course 4 Artist For Loops 3_authored_hint": {
          "Course_4_Artist_For_Loops_3_a": "To have the `for` loop drive your movement, make sure that you're using `counter` as your distance."
        },
        "Course 4 Artist For Loops 4_authored_hint": {
          "Course_4_Artist_For_Loops_4_a": "**What is the smallest number you will need?  \nWhat is the largest number?  \nHow big is the increase each time?**\n\nThose are the questions you need to ask to fill in the blanks of the `for` loop."
        },
        "Course 4 Artist For Loops Challenge_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "The largest shape has 19 sides. The smallest has just two.",
          "Course_4_Artist_For_Loops_Challenge_b": "The `for` loop counts up by two each time through."
        },
        "Course 4 Artist For Loops Challenge_a_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "The largest polygon has 19 sides.",
          "Course_4_Artist_For_Loops_Challenge_b": "Each polygon is incomplete, with one side fewer than it should have."
        },
        "Course 4 Artist For Loops inspire_authored_hint": {
          "Course_4_Artist_For_Loops_inspire_a": "The foundation of this code is the same as the solution to the previous challenge puzzle...with a couple of changes.",
          "Course_4_Artist_For_Loops_inspire_b": "Try a `for` loop that goes from 3 to 10 with an increment of 1.",
          "Course_4_Artist_For_Loops_inspire_c": "There are two iterations of the same repeat loop inside the `for` loop, but the second repeat turns the opposite direction.",
          "Course_4_Artist_For_Loops_inspire_d": "**Solution:**  \n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_arithmetic\" inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value name=\"A\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <value name=\"B\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">40</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">360</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">1</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">40</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">360</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist Functions Inspiration_authored_hint": {
          "Course_4_Artist_Functions_Inspiration_a": "Start with the code from the last puzzle and add an extra `turn right` of three degrees inside the repeat loop.",
          "Course_4_Artist_Functions_Inspiration_b": "Try turning by more than 90 degrees outside of the `repeat loop`, but still inside the `for loop`.",
          "Course_4_Artist_Functions_Inspiration_c": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">14</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"procedures_callnoreturn\">\n                  <mutation name=\"draw a square 20\"></mutation>\n                    <next>\n                      <block type=\"jump_by_constant\">\n                        <title name=\"DIR\">jumpForward</title>\n                        <title name=\"VALUE\">20</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">3</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"draw_turn_by_constant\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <title name=\"VALUE\">100</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  </xml>"
        },
        "Course 4 Artist Functions challenge_authored_hint": {
          "Course_4_Artist_Functions_challenge_a": "Part of understanding how to use functions is figuring out which ones you need, and which ones you don't.",
          "Course_4_Artist_Functions_challenge_b": "Use a `for loop`, then use its counter variable inside of a nested `repeat` loop.",
          "Course_4_Artist_Functions_challenge_c": "Each iteration, you should draw a square then jump forward.",
          "Course_4_Artist_Functions_challenge_d": "You will need to turn left by 90 degrees outside of your `repeat`, but still inside the `for loop`."
        },
        "Course 4 Artist Inspire_authored_hint": {
          "Course_4_Artist_Inspire_a": "After you complete one square, try jumping forward half of its length before turning and making another.",
          "Course_4_Artist_Inspire_b": "Each square and jump is repeated four times (using a left turn inbetween) to make a full pinwheel-like unit.",
          "Course_4_Artist_Inspire_c": "Each pinwheel is also repeated four times, with a right turn of **360/sides**.",
          "Course_4_Artist_Inspire_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#843179</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">sides</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">4</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">length</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">sides</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">sides</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"draw_move\" inline=\"true\">\n                                <title name=\"DIR\">moveForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"jump\" inline=\"true\">\n                                <title name=\"DIR\">jumpForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">length</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">2</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnLeft</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">360</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist Vars 13_authored_hint": {
          "Course_4_Artist_Vars_13_a": "You need two repeat loops (one inside the other) both repeating `sides` times.",
          "Course_4_Artist_Vars_13_b": "The inner repeat loop draws an octagon (turning to the left).   \n\nAfterwards, you need to move forward and turn right only in the outer loop.",
          "Course_4_Artist_Vars_13_c": "To adjust the shape to stay the same size when the number of sides change, use the math block to divide the length in pixels by the number of sides."
        },
        "Course 4 Artist Vars 6_authored_hint": {
          "Course_4_Artist_Vars_6_a": "To draw a regular polygon, turn **360/sides** each time."
        },
        "Course 4 Artist Vars 8_authored_hint": {
          "Course_4_Artist_Vars_8_a": "If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher."
        },
        "Course 4 Bee Params 7_authored_hint": {
          "notice_pattern": "Do you see a pattern in how the number of nectar changes? ",
          "count_with_for": "Notice that the nectar goes up in steps. What kind of block can you use to do the same thing many times while counting up?"
        },
        "Course 4 Bee Params 8_authored_hint": {
          "Course_4_Bee_Params_8_a": "It's okay to ask for a honey number and a nectar number each time.  If there's none of something, the number can be 0."
        },
        "Course 4 Play Lab Params 2_authored_hint": {
          "Course_4_Play_Lab_Params_2_a": "You will need to click \"edit\" on the jump function and update it so that it uses the `height` parameter."
        },
        "Course 4 Play Lab Vars 2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "Make sure to set the number for `dog_speed` to something larger than `cat_speed`."
        },
        "Course 4 Play Labs For Loops 2_authored_hint": {
          "Course_4_Play_Labs_For_Loops_2_a": "What would you add to your `for` loop every time to skip the even numbers?"
        },
        "Course 4 Playlab For Loops 4b_authored_hint": {
          "Course_4_Playlab_For_Loops_4b_a": "The flags are about 330 pixels away from the characters.",
          "Course_4_Playlab_For_Loops_4b_b": "How can you make each character reach 330 pixels in the same number of moves with different starting and stopping numbers?",
          "Course_4_Playlab_For_Loops_4b_c": "Remember, it doesn't matter how much a character passes the flag by on its last step, as long as it takes each character the same number of steps to get to the flag."
        },
        "Course 4 Playlab For Loops 5b_authored_hint": {
          "Course_4_Playlab_For_Loops_5b_a": "The characters are about 175 pixels away from the center.",
          "Course_4_Playlab_For_Loops_5b_b": "Remember, a character's next step will be longer than their last, since the counter keeps getting larger."
        },
        "Course 4 SCF 1_authored_hint": {
          "Course_4_SCF_1_a": "Each hexagon has 40 pixel sides.",
          "Course_4_SCF_1_b": "There is a 120 pixel jump between each hexagon in each horizontal line.",
          "Course_4_SCF_1_c": "Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.",
          "Course_4_SCF_1_d": "Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your `shift down/forward` function. ",
          "Course_4_SCF_1_e": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw a line of hexagons\"></mutation>\n            <next>\n              <block type=\"procedures_callnoreturn\">\n              <mutation name=\"shift down/forward\"></mutation>\n                <next>\n                  <block type=\"procedures_callnoreturn\">\n                  <mutation name=\"draw a line of hexagons\"></mutation>\n                    <next>\n                      <block type=\"procedures_callnoreturn\">\n                      <mutation name=\"shift down/backward\"></mutation>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw a hexagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down/backward</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">60</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">440</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw a line of hexagons</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw a hexagon\"></mutation>\n            <next>\n              <block type=\"jump\" inline=\"true\">\n                <title name=\"DIR\">jumpForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">120</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down/forward</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">60</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">320</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 1a_authored_hint": {
          "Course_4_SCF_1a_a": "Remember your functions from stage 16.",
          "Course_4_SCF_1a_b": "Look at this path as your main route:  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)",
          "Course_4_SCF_1a_c": "You should consider using a `for loop`. Not for the steps, but for the function parameter.",
          "Course_4_SCF_1a_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\" uservisible=\"false\" y=\"14\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\" uservisible=\"false\">\n        <title name=\"VAR\">left</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" uservisible=\"false\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\" uservisible=\"false\">\n            <title name=\"VAR\">right</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\" uservisible=\"false\">\n                <title name=\"NUM\">0</title>\n              </block>\n            </value>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">21</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_if\">\n                <title name=\"DIR\">isPathLeft</title>\n                <statement name=\"DO\">\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"get nectar\">\n                    <arg name=\"dir\"></arg>\n                    <arg name=\"counter\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">left</title>\n                      </block>\n                    </value>\n                    <value name=\"ARG1\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_if\">\n                                <title name=\"DIR\">isPathRight</title>\n                                <statement name=\"DO\">\n                                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                    <mutation name=\"get nectar\">\n                                    <arg name=\"dir\"></arg>\n                                    <arg name=\"counter\"></arg>\n                                    </mutation>\n                                    <value name=\"ARG0\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">right</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"ARG1\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n    <arg name=\"dir\"></arg>\n    <arg name=\"counter\"></arg>\n    </mutation>\n    <title name=\"NAME\">get nectar</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_if\" inline=\"false\">\n      <mutation else=\"1\"></mutation>\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" inline=\"true\" movable=\"false\">\n            <title name=\"OP\">EQ</title>\n            <value name=\"A\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">dir</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">left</title>\n              </block>\n            </value>\n          </block>\n        </value>\n        <statement name=\"DO0\">\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n          </block>\n        </statement>\n        <statement name=\"ELSE\">\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                <block type=\"maze_nectar\"></block>\n                </statement>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveBackward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"controls_if\" inline=\"false\">\n                      <mutation else=\"1\"></mutation>\n                        <value name=\"IF0\">\n                          <block type=\"logic_compare\" inline=\"true\" movable=\"false\">\n                            <title name=\"OP\">EQ</title>\n                            <value name=\"A\">\n                              <block type=\"parameters_get\">\n                                <title name=\"VAR\">dir</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">left</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <statement name=\"DO0\">\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </statement>\n                        <statement name=\"ELSE\">\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 1b_authored_hint": {
          "Course_4_SCF_1b_a": "Notice that the shape of all honey points is similar.  \n\nGood place for a function!",
          "Course_4_SCF_1b_b": "Look at this idea for how the bee might travel:  \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)",
          "Course_4_SCF_1b_c": "You should consider using a `for loop` for the distance the bee travels.",
          "Course_4_SCF_1b_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"make honey up and over\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_move\">\n                                <title name=\"DIR\">moveForward</title>\n                              </block>\n                            </statement>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">make honey up and over</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_move\">\n        <title name=\"DIR\">moveForward</title>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_honey\">\n                    <next>\n                      <block type=\"maze_honey\">\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveBackward</title>\n                            <next>\n                              <block type=\"maze_turn\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveBackward</title>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 2_authored_hint": {
          "Course_4_SCF_2_a": "Each octagon has 40 pixel sides.",
          "Course_4_SCF_2_b": "There is a 136 pixel jump between each octagon in each horizontal line.",
          "Course_4_SCF_2_c": "Before you draw the second row of octagons, you need to turn right by 45 degrees and jump forward 96 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 408 pixels. ",
          "Course_4_SCF_2_d": "Notice that because there are fewer octagons in the even rows, you don't have to jump back any further to get to the starting place for the odd rows.  \n\nThis means you can use the same function for all rows.",
          "Course_4_SCF_2_e": "**Solution:**\n\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\" inline=\"false\">\n            <mutation name=\"draw octagons\">\n            <arg name=\"numOctagons\"></arg>\n            </mutation>\n            <value name=\"ARG0\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"procedures_callnoreturn\">\n              <mutation name=\"shift down\"></mutation>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"draw octagons\">\n                    <arg name=\"numOctagons\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"procedures_callnoreturn\">\n                      <mutation name=\"shift down\"></mutation>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"procedures_callnoreturn\" inline=\"false\">\n            <mutation name=\"draw octagons\">\n            <arg name=\"numOctagons\"></arg>\n            </mutation>\n            <value name=\"ARG0\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation>\n    <arg name=\"numOctagons\"></arg>\n    </mutation>\n    <title name=\"NAME\">draw octagons</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"parameters_get\">\n            <title name=\"VAR\">numOctagons</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw an octagon\"></mutation>\n            <next>\n              <block type=\"jump\" inline=\"true\">\n                <title name=\"DIR\">jumpForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">136</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw an octagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">8</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">45</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">96</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">408</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 3_authored_hint": {
          "Course_4_SCF_3_a": "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)",
          "Course_4_SCF_3_b": "This is a series of octagons with sides that are `counter` pixels long. ",
          "Course_4_SCF_3_c": "Each octagon is called from inside a `for` loop that goes from 200 down to 2 by 2. ",
          "Course_4_SCF_3_d": "Don't forget to turn by 22.5 degrees at the end of each iteration. ",
          "Course_4_SCF_3_e": "Both the color of each octagon and the width of the pen are controlled by the `counter` variable.",
          "Course_4_SCF_3_f": "**Solution:**\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation>\n    <arg name=\"length\"></arg>\n    </mutation>\n    <title name=\"NAME\">draw an octagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">8</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">200</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_rgb\" inline=\"false\">\n                <value name=\"RED\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <value name=\"GREEN\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <value name=\"BLUE\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MULTIPLY</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">4</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"draw an octagon\">\n                    <arg name=\"length\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">22.5</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1_authored_hint": {
          "Course_4_SCFL_1_a": "Take a look at this option for movement:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)",
          "Course_4_SCFL_1_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
          "Course_4_SCFL_1_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
          "Course_4_SCFL_1_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1a_authored_hint": {
          "Course_4_SCFL_1a_a": "You may have to travel farther overall to use the smallest number of blocks.",
          "Course_4_SCFL_1a_b": "Take a look at this option for movement:  \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)",
          "Course_4_SCFL_1a_c": "A `for loop` will help you execute the same pattern, but with a changing number of steps.  Notice that the number of steps needed decreases from 7 to 5 by 1.",
          "Course_4_SCFL_1a_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">7</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">5</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">2</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_moveForward\"/>\n                            </statement>\n                            <next>\n                              <block type=\"maze_turn\">\n                                <title name=\"DIR\">turnLeft</title>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1b_authored_hint": {
          "Course_4_SCFL_1b_a": "Try using a `for loop`.",
          "Course_4_SCFL_1b_b": "Take a look at this option for movement:  \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)",
          "Course_4_SCFL_1b_c": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 2_authored_hint": {
          "Course_4_SCFL_2_a": "Take a look at this option for movement:  \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)",
          "Course_4_SCFL_2_b": "Notice that there are three points during each iteration of this `for` loop where you stop to interact with objects.",
          "Course_4_SCFL_2_c": "During each iteration of the `for` loop, the number for each object relates to the `counter` variable in some way.",
          "Course_4_SCFL_2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_moveForward\">\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                    <next>\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_moveForward\">\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">MULTIPLY</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">3</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_honey\"/>\n                                </statement>\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnLeft</title>\n                                    <next>\n                                      <block type=\"maze_moveForward\">\n                                        <next>\n                                          <block type=\"maze_moveForward\">\n                                            <next>\n                                              <block type=\"maze_turn\">\n                                                <title name=\"DIR\">turnRight</title>\n                                                <next>\n                                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                    <value name=\"TIMES\">\n                                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                                        <title name=\"OP\">POWER</title>\n                                                        <value name=\"A\">\n                                                          <block type=\"math_number\">\n                                                            <title name=\"NUM\">2</title>\n                                                          </block>\n                                                        </value>\n                                                        <value name=\"B\">\n                                                          <block type=\"variables_get\">\n                                                            <title name=\"VAR\">counter</title>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </value>\n                                                    <statement name=\"DO\">\n                                                      <block type=\"maze_nectar\"/>\n                                                    </statement>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 3_authored_hint": {
          "Course_4_SCFL_3_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
          "Course_4_SCFL_3_b": "The opacity on the brush is always `counter`/2.",
          "Course_4_SCFL_3_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
          "Course_4_SCFL_3_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 4_authored_hint": {
          "Course_4_SCFL_4_a": "The color change happens using the `set color with red, green, blue` block.  Red is always the value of `counter`, green is always `255 - counter`, and blue remains constant at 255 exactly.",
          "Course_4_SCFL_4_b": "Each shape is a square with sides that are `counter` pixels long, starting with 5px, and increasing by 5px all the way up to 200px.",
          "Course_4_SCFL_4_c": "The artist turns 15 degrees between each square.",
          "Course_4_SCFL_4_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">200</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">4</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">90</title>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">15</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 6_authored_hint": {
          "Course_4_SCFL_6_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
          "Course_4_SCFL_6_b": "The code for this is much more simple than you might think.  Just set the color inside the `for loop`, move forward, then turn.",
          "Course_4_SCFL_6_c": "The `for loop` goes from 5 to 250 by 2. ",
          "Course_4_SCFL_6_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 7_authored_hint": {
          "Course_4_SCFL_7_a": "The color change happens using the `set color with red, green, blue` block.  Red is set to `counter`. Green is  `255 - counter`, and blue is set constant at 255.",
          "Course_4_SCFL_7_b": "This drawing is made using two similar `for loops`.  One goes from 5 to 200 by 2, the other goes from 200 to 5 by 2. ",
          "Course_4_SCFL_7_c": "Inside each `for loop` you move forward 5 pixels before you turn by `360 / counter`. Don't forget to set your brush to width `counter` before you do!",
          "Course_4_SCFL_7_d": "You'll need to turn left by 225 degrees between the two `for loops`.",
          "Course_4_SCFL_7_e": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n        <value name=\"VALUE\">\n          <block type=\"math_number_dropdown\">\n            <title name=\"NUM\" config=\"100,90,80,70,60,50,40,30,20,10,0\">20</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">200</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                    <value name=\"COLOUR\">\n                      <block type=\"colour_rgb\" inline=\"false\">\n                        <value name=\"RED\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"GREEN\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">MINUS</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">255</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <value name=\"BLUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">5</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">DIVIDE</title>\n                                <value name=\"A\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">360</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">counter</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">225</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_for_counter\" inline=\"true\">\n                  <mutation counter=\"counter\"></mutation>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_width\" inline=\"false\">\n                        <value name=\"WIDTH\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                            <value name=\"COLOUR\">\n                              <block type=\"colour_rgb\" inline=\"false\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">counter</title>\n                                  </block>\n                                </value>\n                                <value name=\"GREEN\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">MINUS</title>\n                                    <value name=\"A\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">255</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <value name=\"BLUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">255</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_move\" inline=\"true\">\n                                <title name=\"DIR\">moveForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">5</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 1_authored_hint": {
          "Course_4_SCV_1_a": "Variables are helpful because you can add to them each time through a loop. ",
          "Course_4_SCV_1_b": "This puzzle has one loop that creates the polygon, one loop that repeats the polygon `sides` times, then another loop that does it all again after adding 5 to `sides`.",
          "Course_4_SCV_1_c": "Using a variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
          "Course_4_SCV_1_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">length</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">500</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">sides</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">0</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                        <value name=\"COLOUR\">\n                          <block type=\"colour_random\"/>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">sides</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">5</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                    <statement name=\"DO\">\n                                      <block type=\"draw_move\" inline=\"true\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_turn\" inline=\"true\">\n                                            <title name=\"DIR\">turnLeft</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">DIVIDE</title>\n                                                <value name=\"A\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">360</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </statement>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnRight</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">360</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 2_authored_hint": {
          "Course_4_SCV_2_a": "The completed image is made up of 10 of these \"flowers\":  \n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)\n        \n...which are made up of 10 of these decagons:  \n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)",
          "Course_4_SCV_2_b": "This design uses nested loops (three deep). All loops run `sides` times. ",
          "Course_4_SCV_2_c": "The artist turns to the left when creating each decagon, but turns to the right in both of the other loops.",
          "Course_4_SCV_2_d": "To prevent all of your 10 petal \"flowers\" from getting drawn in the same place, make sure to jump forward by `length`/`sides` before you turn 360/`sides` degrees as part of your outermost loop.",
          "Course_4_SCV_2_e": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">length</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">400</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">sides</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                        <value name=\"COLOUR\">\n                          <block type=\"colour_picker\">\n                            <title name=\"COLOUR\">#ff0000</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">sides</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">length</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">360</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"jump\" inline=\"true\">\n                                <title name=\"DIR\">jumpForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">length</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 3_authored_hint": {
          "Course_4_SCV_3_a": "Use your math block to add and subtract points to the `points` variable when sprites collide. ",
          "Course_4_SCV_3_b": "You can change the parameter for how far you move your sprite each time one of the arrow keys is pressed.",
          "Course_4_SCV_3_c": "**Solution:**\n\n<xml><block type=\"when_run\"><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">up</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">1</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">down</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">4</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">left</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">8</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">right</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">2</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenSpriteCollided\"><title name=\"SPRITE1\">0</title><title name=\"SPRITE2\">1</title><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">ADD</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">points</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></next></block><block type=\"studio_whenSpriteCollided\"><title name=\"SPRITE1\">0</title><title name=\"SPRITE2\">2</title><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">ADD</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">points</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">3</title></block></value></block></value></block></next></block>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">points</title>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">points</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 4_authored_hint": {
          "Course_4_SCV_4_a": "Three variables will help you out here.  One for units of nectar, one for units of honey, and one for how far the bee should move each iteration.",
          "Course_4_SCV_4_b": "It will be very helpful to use three loops inside of your main loop.  One for moving forward, one for collecting nectar and one for making honey. ",
          "Course_4_SCV_4_c": "Take a look at this option for movement:  \n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)",
          "Course_4_SCV_4_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">honey</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">nectar</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">6</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">5</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">nectar</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">1</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">nectar</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_nectar\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_moveForward\">\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">honey</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_honey\"/>\n                                </statement>\n                                <next>\n                                  <block type=\"maze_moveForward\">\n                                    <next>\n                                      <block type=\"maze_turn\">\n                                        <title name=\"DIR\">turnRight</title>\n                                        <next>\n                                          <block type=\"variables_set\" inline=\"false\">\n                                            <title name=\"VAR\">honey</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">ADD</title>\n                                                <value name=\"A\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">honey</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">1</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">nectar</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">MINUS</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">nectar</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">1</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 5_authored_hint": {
          "Course_4_SCV_5_a": "Take a look at this option for movement:\n\n![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)",
          "Course_4_SCV_5_b": "Each time through the loop, the flowers have two less nectar and the bee needs to make one more honey.",
          "Course_4_SCV_5_c": "Notice that at the beginning of the outside loop, the bee moves as many times as there is nectar in the next flower.",
          "Course_4_SCV_5_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">honey</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">nectar</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">3</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">nectar</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">nectar</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_nectar\"/>\n                            </statement>\n                            <next>\n                              <block type=\"maze_move\">\n                                <title name=\"DIR\">moveForward</title>\n                                <next>\n                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">honey</title>\n                                      </block>\n                                    </value>\n                                    <statement name=\"DO\">\n                                      <block type=\"maze_honey\"/>\n                                    </statement>\n                                    <next>\n                                      <block type=\"variables_set\" inline=\"false\">\n                                        <title name=\"VAR\">honey</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">honey</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"variables_set\" inline=\"false\">\n                                            <title name=\"VAR\">nectar</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">nectar</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 6_authored_hint": {
          "Course_4_SCV_6_a": "Take a look at what a single completed shape looks like\n\n![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)",
          "Course_4_SCV_6_b": "You will benefit from creating 8 variables: red1, green1, blue1, red2, green2, blue2, length, and sides.",
          "Course_4_SCV_6_c": "Each of the shape's 5 sides is broken up into pieces of `length`/`sides` where the zig is teal (rgb = 0,175,200) and the zag is purple (rgb = 100, 50, 150).",
          "Course_4_SCV_6_d": "To zig, turn left by `360`/`sides`.  To zag, turn right by `360`/`sides`. ",
          "Course_4_SCV_6_e": "The rest of the program is very standard for making a full 360 degree rotation from a shape, except that we are overlapping the shapes by half, so we have to turn right by `180`/`sides`, which means that we need twice as many of them as usual (`sides`*`2` repetitions). ",
          "Course_4_SCV_6_f": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">red1</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">0</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">green1</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">175</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"variables_set\" inline=\"false\">\n                    <title name=\"VAR\">blue1</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">red2</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">100</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">green2</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">50</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"variables_set\" inline=\"false\">\n                                <title name=\"VAR\">blue2</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">150</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"variables_set\" inline=\"false\">\n                                    <title name=\"VAR\">length</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">70</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"variables_set\" inline=\"false\">\n                                        <title name=\"VAR\">sides</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">5</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                                            <value name=\"TIMES\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">MULTIPLY</title>\n                                                <value name=\"A\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">2</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                            <statement name=\"DO\">\n                                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                <value name=\"TIMES\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                                <statement name=\"DO\">\n                                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                    <value name=\"TIMES\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">sides</title>\n                                                      </block>\n                                                    </value>\n                                                    <statement name=\"DO\">\n                                                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                                                        <value name=\"COLOUR\">\n                                                          <block type=\"colour_rgb\" inline=\"false\">\n                                                            <value name=\"RED\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">red1</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"GREEN\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">green1</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"BLUE\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">blue1</title>\n                                                            </block>\n                                                            </value>\n                                                          </block>\n                                                        </value>\n                                                        <next>\n                                                          <block type=\"draw_move\" inline=\"true\">\n                                                            <title name=\"DIR\">moveForward</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">length</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_turn\" inline=\"true\">\n                                                            <title name=\"DIR\">turnLeft</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                                                            <value name=\"COLOUR\">\n                                                            <block type=\"colour_rgb\" inline=\"false\">\n                                                            <value name=\"RED\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">red2</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"GREEN\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">green2</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"BLUE\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">blue2</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_move\" inline=\"true\">\n                                                            <title name=\"DIR\">moveForward</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">length</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_turn\" inline=\"true\">\n                                                            <title name=\"DIR\">turnRight</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                          </block>\n                                                        </next>\n                                                      </block>\n                                                    </statement>\n                                                    <next>\n                                                      <block type=\"draw_turn\" inline=\"true\">\n                                                        <title name=\"DIR\">turnRight</title>\n                                                        <value name=\"VALUE\">\n                                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </next>\n                                                  </block>\n                                                </statement>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                                        <title name=\"OP\">DIVIDE</title>\n                                                        <value name=\"A\">\n                                                          <block type=\"math_number\">\n                                                            <title name=\"NUM\">180</title>\n                                                          </block>\n                                                        </value>\n                                                        <value name=\"B\">\n                                                          <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </statement>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "CourseF_PlayLab_vars2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "Make sure to set the number for `dog_speed` to something larger than `cat_speed`."
        },
        "D_Frozen_nested3_authored_hint": {
          "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
        },
        "D_Frozen_nested4_authored_hint": {
          "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />\n",
          "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
        },
        "D_Frozen_nested5_authored_hint": {
          "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />\n"
        },
        "D_Frozen_nested6_authored_hint": {
          "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />\n",
          "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
        },
        "D_Frozen_nested7_authored_hint": {
          "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />\n"
        },
        "D_Frozen_nested8_authored_hint": {
          "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
        },
        "D_Frozen_nested9_authored_hint": {
          "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />\n"
        },
        "Farmer for Authored Hint testing_authored_hint": {
          "first_hint": "This is the first hint.\n\nIt has *some* **basic** `markup`",
          "second_hint": "This is the second hint. It has a hint video.",
          "last_hint": "This is the third and final hint. It doesn't have anything special."
        },
        "Farmer for TTS testing_authored_hint": {
          "first_hint": "This is the first hint.\n\nIt has *some* **basic** `markup`",
          "second_hint": "This is the second hint. It has an image.\n\n![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)",
          "last_hint": "This is the third and final hint. It doesn't have anything special."
        },
        "Function intro Ryan_authored_hint": {
          "Function_intro_Ryan_b": "If you call the functions correctly, this is the path you will travel...",
          "Function_intro_Ryan_a": "You can call a function many times inside of your program!  Try calling it twice to solve this puzzle."
        },
        "Harvesting_authored_hint": {
          "pointer_harvester_test": "What kind of block can I use to check something and make a decision?"
        },
        "Inspirational Artwork_authored_hint": {
          "brush_width": "We set the brush width to 1, then the color to blue before we did anything else.",
          "double_loop": "Try putting a `for loop` inside of a `repeat` loop.",
          "specifics": "The `for loop` runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.\n        \nThe `set alpha` block uses division to fade the color as the counter gets higher.",
          "after": "When you're done with each \"petal\", be sure to `move forward` 20 pixels before you make a 60 degree rotation.",
          "solution": "**Solution**\n\n\n![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)"
        },
        "K2.0 sequence 1_authored_hint": {
          "K2.0_sequence_1_a": "This program is missing one block. Can you figure out which one?"
        },
        "K2.0 sequence 10_authored_hint": {
          "K2.0_sequence_10_a": "If you're having trouble, try writing down the steps on a piece of paper first.",
          "K2.0_sequence_10_b": "You will need three different kinds of arrows to solve this puzzle."
        },
        "K2.0 sequence 12_authored_hint": {
          "K2.0_sequence_12_a": "If the pig isn't moving far enough, try adding another block."
        },
        "K2.0 sequence 2_authored_hint": {
          "K2.0_sequence_2_a": "One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?"
        },
        "K2.0 sequence 3_authored_hint": {
          "K2.0_sequence_3_a": "If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit."
        },
        "K2.0 sequence 4_authored_hint": {
          "K2.0_sequence_4_a": "Use 2 different arrow blocks to solve this puzzle!"
        },
        "K2.0 sequence 5_authored_hint": {
          "K2.0_sequence_5": "Your final code should have three movement blocks."
        },
        "K2.0 sequence 6_authored_hint": {
          "K2.0_sequence_6_a": "There is 1 block that you need to add to move the bird to the pig.",
          "K2.0_sequence_6_b": "If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move."
        },
        "K2.0 sequence 7_authored_hint": {
          "K2.0_sequence_7_a": "If you're stuck, try drawing the image on paper to see how the bird should move."
        },
        "K2.0 sequence 8_authored_hint": {
          "K2.0_sequence_8_a": "Stuck? Try tracing the bird's path with your finger."
        },
        "K2.0 sequence 9_authored_hint": {
          "K2.0_sequence_9_a": "If you're having trouble, try writing down the steps on a piece of paper first.",
          "K2.0_sequence_9_b": "You will need to go three different directions to solve this puzzle."
        },
        "K2.0 sequence FP_authored_hint": {
          "K2.0_sequence_FP_a": "If the path you need is unclear, use your finger to trace your way from the bird to the pig."
        },
        "K2.0 sequence pre_authored_hint": {
          "K2.0_sequence_pre_a": "If you are having trouble getting the bird to move, make sure blocks are connected under `when run`."
        },
        "MC Agent Freeplay_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "Try having the Agent build some minecart tracks so you can explore the world!"
        },
        "MC_HOC_2017_01_Cole_authored_hint": {
          "MC_HOC_2017_01_Cole_a": "Use your arrow keys to direct the player into the house. End up on the orange square to win."
        },
        "MC_HOC_2017_01_RETRY_authored_hint": {
          "MC_HOC_2017_01_RETRY_a": "Drag one `move forward` block from the toolbox to the workspace, and snap it into place beneath the `when run` block.",
          "MC_HOC_2017_01_RETRY_b": "Don't forget to click \"Run\" to run the code for the Agent.",
          "MC_HOC_2017_01_RETRY_c": "Once the Agent has run all of its code, you can move the player with the arrow keys!"
        },
        "MC_HOC_2017_02_Cole_authored_hint": {
          "MC_HOC_2017_02_Cole_a": "Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.",
          "MC_HOC_2017_02_Cole_b": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_02_Cole_c": "Once the Agent has opened the door, use the arrow keys to move the player to the map!",
          "MC_HOC_2017_02_Cole_d": "Make sure the Agent is following the path outlined on the map!"
        },
        "MC_HOC_2017_02_Will_authored_hint": {
          "MC_HOC_2017_02_Cole_a": "Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.",
          "MC_HOC_2017_02_Cole_b": "Press \"Run Agent\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_02_Cole_c": "Once the Agent has opened the door, use the arrow keys to move the player to the orange square."
        },
        "MC_HOC_2017_03_Cole_authored_hint": {
          "MC_HOC_2017_03_Cole_a": "Once you get the Agent to the pressure plate, you can use your arrow keys to walk the player to the compass!",
          "MC_HOC_2017_03_Cole_b": "Does the code feel a little long?  Try using a `repeat` loop and see if you can figure out how to make it shorter!"
        },
        "MC_HOC_2017_04POINT5_Cole_authored_hint": {
          "MC_HOC_2017_04POINT5_Cole_a": "Crossing these two pressure plates will open the path for the player.\n\n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
        },
        "MC_HOC_2017_04POINT5_RYAN_authored_hint": {
          "MC_HOC_2017_04POINT5_RYAN_b": "Use the `turn right` block to change the agent's direction ",
          "MC_HOC_2017_04POINT5_RYAN_a": "The Agent only needs to get to the first pressure plate to let Alex or Steve through to the axe."
        },
        "MC_HOC_2017_04_Cole_authored_hint": {
          "MC_HOC_2017_04_Cole_a": "The Agent needs to `move forward` 7 times.  How can you use a `repeat` loop to make that happen?",
          "MC_HOC_2017_04_Cole_c": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_04_Cole_b": "Once the Agent gets to the pressure plate, the Agent will open the door for the player."
        },
        "MC_HOC_2017_05_Cole_authored_hint": {
          "MC_HOC_2017_05_Cole_a": "Did you know that you can put more than one piece of code inside of a loop?  Try moving forward **and** placing a plank inside of a `repeat` to complete this puzzle.",
          "MC_HOC_2017_05_Cole_b": "Get the Agent across the river, building a bridge as you go."
        },
        "MC_HOC_2017_05_Josh_authored_hint": {
          "MC_HOC_2017_05_Cole_a": "Did you know that you can put more than one piece of code inside of a loop?  Try placing a plank **and** moving forward inside of a `repeat` to complete this puzzle."
        },
        "MC_HOC_2017_06_Cole_authored_hint": {
          "MC_HOC_2017_06_Cole_a": "How many times does this loop run?  How many times *should* it run?",
          "MC_HOC_2017_06_Cole_b": "Help the Agent build a bridge all the way across the water! "
        },
        "MC_HOC_2017_06_Josh_authored_hint": {
          "MC_HOC_2017_06_Cole_a": "Try putting more than one instruction inside of a `repeat` loop!"
        },
        "MC_HOC_2017_07_Cole_authored_hint": {
          "MC_HOC_2017_07_Cole_c": "All you need to have the Agent do is clear the path to the Minecart.",
          "MC_HOC_2017_07_Cole_a": "To solve this puzzle, figure out what the `clear path` function does and call it as many times as you need using the small green `clear path` block from the toolbox.",
          "MC_HOC_2017_07_Cole_b": "Try mixing the function blocks with other blocks from the toolbox to help you solve this puzzle."
        },
        "MC_HOC_2017_08_RY_authored_hint": {
          "MC_HOC_2017_08_RY_a": "Press \"Run Agent\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!"
        },
        "MC_HOC_2017_08_Will_authored_hint": {
          "MC_HOC_2017_08_RY_a": "Press \"Run Agent\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!"
        },
        "MC_HOC_2017_10_Cole_authored_hint": {
          "MC_HOC_2017_10_Cole_a": "Use functions to make solving this puzzle easier!"
        },
        "MC_HOC_2017_10_RETRY_authored_hint": {
          "MC_HOC_2017_10_Cole_b": "Don't know where to go?  See if you can find the dotted line!",
          "MC_HOC_2017_10_Cole_a": "Use functions to make solving this puzzle easier!"
        },
        "MC_HOC_2017_13_Cole_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "Try having the Agent build some bridges so that Alex or Steve can walk around beyond the edges of the map."
        },
        "MC_HOC_2017_4.5v2_authored_hint": {
          "MC_HOC_2017_04POINT5_Cole_a": "Crossing these two pressure plates will open the path for the player.\n\n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
        },
        "MC_HOC_2017_Ali_authored_hint": {
          "MC_HOC_2017_08_RY_a": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
          "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!",
          "MC_HOC_2017_08_RY_c": "Try following the dotted line for a simple path through the lava."
        },
        "MC_HOC_2017_FP20x20_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "Try having the Agent build some minecart tracks so you can explore the world!"
        },
        "MikeStar_authored_hint": {
          "hint1": "Don't give up!"
        },
        "MikeStarHard_authored_hint": {
          "hint1": "Don't give up!"
        },
        "MikeStarNested_authored_hint": {
          "hint1": "Don't give up!"
        },
        "NEW Course 4 Artist Functions 13_authored_hint": {
          "NEW_Course_4_Artist_Functions_13_a": "Try editing the `draw a line of squares` function so that you don't have to call it twice.",
          "NEW_Course_4_Artist_Functions_13_c": "What code would you need if you were going to try to make a star using regular lines instead of boxes?"
        },
        "NEW Course 4 Artist Functions 4_authored_hint": {
          "NEW_Course_4_Artist_Functions_4_a": "You will have to use a `turn right by 120 degrees` block after each square."
        },
        "NEW Course 4 Artist Functions 9_authored_hint": {
          "NEW_Course_4_Artist_Functions_9_a": "Try running the code before you add any blocks.   What makes the drawing look a little off?",
          "NEW_Course_4_Artist_Functions_9_b": "If you can't quite put your finger on what's going wrong, try slowing down the artist's by moving the slider to the left."
        },
        "NEW Course 4 Artist Params 11_authored_hint": {
          "NEW_Course_4_Artist_Params_11_a": "There is more than one number that needs to be replaced by a variable inside the function."
        },
        "NEW Course 4 Artist Params 13_authored_hint": {
          "NEW_Course_4_Artist_Params_13_a": "You will need to divide the *perimeter* by the number of sides in order to keep the shapes the same size overall. "
        },
        "NEW Course 4 Artist Params 14_authored_hint": {
          "NEW_Course_4_Artist_Params_14_a": "It's okay to run the program a few times to figure out how the function works with different parameters."
        },
        "NEW Course 4 Artist Params inspire_authored_hint": {
          "brush_width": "We set the brush width to 1, then the color to blue before we did anything else.",
          "double_loop": "Try putting a `for loop` inside of a `repeat` loop.",
          "specifics": "The `for loop` runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.\n        \nThe `set alpha` block uses division to fade the color as the counter gets higher.",
          "after": "When you're done with each \"petal\", be sure to `move forward` 20 pixels before you make a 60 degree rotation.",
          "solution": "**Solution**\n\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">6</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_for_counter\" inline=\"true\">\n                  <mutation counter=\"counter\"></mutation>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">17</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">500</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                            <mutation name=\"draw a polygon\">\n                            <arg name=\"length\"></arg>\n                            <arg name=\"sides\"></arg>\n                            </mutation>\n                            <value name=\"ARG0\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">30</title>\n                              </block>\n                            </value>\n                            <value name=\"ARG1\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">20</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">60</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  </xml>"
        },
        "NEW Course 4 Bee For Loops 10a_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_10a_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
          "NEW_Course_4_Bee_For_Loops_10a_b": "You'll need to have 2 repeats, one will use a math block."
        },
        "NEW Course 4 Bee For Loops 7_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_7_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?"
        },
        "NEW Course 4 Bee For Loops 8_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the number after it?"
        },
        "New Minecraft Hero Project_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "Try having the Agent build some bridges so that Alex or Steve can walk around beyond the edges of the map."
        },
        "Overworld Avoid Monsters_authored_hint": {
          "mc_8_a": "There are a few paths you can take. Which is the shortest?",
          "mc_8_b": "Use `repeat` loops to simplify your code.",
          "mc_8_c": "Your goal is to get into the doorway of the house at the top of the screen."
        },
        "Overworld Avoid Monsters_2018_authored_hint": {
          "mc_8_a": "There are a few paths you can take. Which is the shortest?",
          "mc_8_b": "Use `repeat` loops to simplify your code.",
          "mc_8_c": "Your goal is to get into the doorway of the house at the top of the screen."
        },
        "Overworld Chop Tree_authored_hint": {
          "mc_2_a": "You need to `move forward` twice to stand in front of the tree.\n",
          "mc_2_b": "The `destroy block` command cuts down the tree in front of you."
        },
        "Overworld Chop Tree_2018_authored_hint": {
          "mc_2_a": "You need to `move forward` twice to stand in front of the tree.\n",
          "mc_2_b": "The `destroy block` command cuts down the tree in front of you."
        },
        "Overworld Chop Trees_authored_hint": {
          "mc_4_a": "You can chop down trees in any order. What path takes the smallest number of blocks?\n",
          "mc_4_b": "The `destroy block` command cuts down the tree in front of you."
        },
        "Overworld Chop Trees_2018_authored_hint": {
          "mc_4_a": "You can chop down trees in any order. What path takes the smallest number of blocks?\n",
          "mc_4_b": "The `destroy block` command cuts down the tree in front of you."
        },
        "Overworld House Frame Chosen_authored_hint": {
          "mc_6_a": "Click the arrow on the `place` block to choose what you want to place.",
          "mc_6_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "mc_6_c": "You can put more than one block inside of a `repeat` loop."
        },
        "Overworld House Frame Chosen_2018_authored_hint": {
          "mc_6_a": "Click the arrow on the `place` block to choose what you want to place.",
          "mc_6_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "mc_6_c": "You can put more than one block inside of a `repeat` loop."
        },
        "Overworld Move to Sheep_authored_hint": {
          "mc_1_a": "The `move forward` block is at the top of the toolbox.\n",
          "mc_1_b": "Make sure both `move forward` blocks are snapped to the `when run` block.\n"
        },
        "Overworld Move to Sheep_2018_authored_hint": {
          "mc_1_a": "The `move forward` block is at the top of the toolbox.\n",
          "mc_1_b": "Make sure both `move forward` blocks are snapped to the `when run` block.\n"
        },
        "Overworld Place Wall_authored_hint": {
          "mc_5_a": "Use the `place` block first, and then the `move` block.",
          "mc_5_b": "Make sure both blocks are inside of the `repeat` loop to run the code more than once.",
          "mc_5_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "Overworld Place Wall_2018_authored_hint": {
          "mc_5_a": "Use the `place` block first, and then the `move` block.",
          "mc_5_b": "Make sure both blocks are inside of the `repeat` loop to run the code more than once.",
          "mc_5_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "Overworld Plant Crops_authored_hint": {
          "mc_7_a": "Use the `plant crop` block to plant a crop in the space where you are standing.",
          "mc_7_b": "Both stripes of dark brown land by the water need to be filled with crops.",
          "mc_7_c": "You can put more than one block inside of a `repeat` loop."
        },
        "Overworld Plant Crops_2018_authored_hint": {
          "mc_7_a": "Use the `plant crop` block to plant a crop in the space where you are standing.",
          "mc_7_b": "Both stripes of dark brown land by the water need to be filled with crops.",
          "mc_7_c": "You can put more than one block inside of a `repeat` loop."
        },
        "Overworld Powered Minecart_authored_hint": {
          "mc_13_a": "Use `place rail` to lay rail on the square you are standing in.",
          "mc_13_b": "Use `repeat` loops to make your code shorter."
        },
        "Overworld Powered Minecart_2018_authored_hint": {
          "mc_13_a": "Use `place rail` to lay rail on the square you are standing in.",
          "mc_13_b": "Use `repeat` loops to make your code shorter."
        },
        "Overworld Shear Sheep_authored_hint": {
          "mc_3_a": "The `shear` block gets the sheep in front of you. Are you facing the sheep?\n",
          "mc_3_b": "If you need to change the way you are facing, use a `turn` block.\n",
          "mc_3_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.\n"
        },
        "Overworld Shear Sheep_2018_authored_hint": {
          "mc_3_a": "The `shear` block gets the sheep in front of you. Are you facing the sheep?\n",
          "mc_3_b": "If you need to change the way you are facing, use a `turn` block.\n",
          "mc_3_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.\n"
        },
        "Pattern Bee 1_authored_hint": {
          "conditional_pointer": "Start by thinking about this part: what's different each step of the way? What kind of block can you use to make a *decision* about whether you're at a flower or honeycomb?\n\n![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)",
          "turn_at_honeycomb_pointer": "Other than making honey, do you see anything different that you have to do at each honeycomb?"
        },
        "Planning Farmer_authored_hint": {
          "conditional_pointer": "Start by thinking about this part: what's different each step of the way? What kind of block can you use to make a *decision* about whether you're at a flower or honeycomb?\n\n![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)",
          "turn_at_honeycomb_pointer": "Other than making honey, do you see anything different that you have to do at each honeycomb?"
        },
        "Quantum Bee - Ryan_authored_hint": {
          "test_hint": "This is a test hint."
        },
        "Underground Avoiding Lava_authored_hint": {
          "mc_11_a": "All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.",
          "mc_11_b": "Should your `move forward` command go inside of the `if` statement or after?"
        },
        "Underground Avoiding Lava_2018_authored_hint": {
          "mc_11_a": "All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.",
          "mc_11_b": "Should your `move forward` command go inside of the `if` statement or after?"
        },
        "Underground If Statements_authored_hint": {
          "mc_12_a": "The spaces with red speckles are where you will find Redstone.",
          "mc_12_b": "Can you use a `repeat` loop to make your code shorter?",
          "mc_12_c": "Use an `if` statement to check spaces for lava, then place cobblestones. "
        },
        "Underground If Statements_2018_authored_hint": {
          "mc_12_a": "The spaces with red speckles are where you will find Redstone.",
          "mc_12_b": "Can you use a `repeat` loop to make your code shorter?",
          "mc_12_c": "Use an `if` statement to check spaces for lava, then place cobblestones. "
        },
        "Underground Iron_authored_hint": {
          "mc_10_a": "The iron blocks are the speckled spaces behind the torch! How are you going to get over there?",
          "mc_10_b": "When you are standing at the edge of the lava, use `place cobblestone ahead` to make a safe path. Then, you can walk over it!",
          "mc_10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "Underground Iron_2018_authored_hint": {
          "mc_10_a": "The iron blocks are the speckled spaces behind the torch! How are you going to get over there?",
          "mc_10_b": "When you are standing at the edge of the lava, use `place cobblestone ahead` to make a safe path. Then, you can walk over it!",
          "mc_10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "Underground Mining Coal_authored_hint": {
          "mc_9_a": "Are you facing the right way? The `destroy block` mines the block in front of you.",
          "mc_9_b": "The black specks in the wall are coal! Use `destroy block` on these to mine the coal.",
          "mc_9_c": "Use `place torch` to put a torch in the space where you are standing."
        },
        "Underground Mining Coal_2018_authored_hint": {
          "mc_9_a": "Are you facing the right way? The `destroy block` mines the block in front of you.",
          "mc_9_b": "The black specks in the wall are coal! Use `destroy block` on these to mine the coal.",
          "mc_9_c": "Use `place torch` to put a torch in the space where you are standing."
        },
        "Valentine_artist2_01_authored_hint": {
          "Valentine_artist2_01_a": "Each side of the grass is 30 pixels long. Try using a stair step pattern.",
          "Valentine_artist2_01_b": "Do you see any patterns repeating? You should be using two `move forward` blocks and two different `turn` blocks inside a loop. ",
          "Valentine_artist2_01_c": "Try this loop\n\n<xml><block type=\"controls_repeat\">\n            <title name=\"TIMES\">8</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\">30</title>\n                <next>\n                  <block type=\"draw_turn_by_constant\">\n                    <title name=\"DIR\">turnRight</title>\n                    <title name=\"VALUE\">90</title>\n                    <next>\n                      <block type=\"draw_move_by_constant\">\n                        <title name=\"DIR\">moveForward</title>\n                        <title name=\"VALUE\">30</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <title name=\"VALUE\">90</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block></xml>"
        },
        "Valentine_artist_01_authored_hint": {
          "Valentine_artist_01_a": "Which direction does the artist need to face to move? Which direction does the artist need to face to place a new llama sticker?",
          "Valentine_artist_01_b": "The artist needs to place 10 llama stickers and turn 90 degrees at each turn."
        },
        "Valentine_playlab_01_authored_hint": {
          "Valentine_playlab_01_a": "Snap the `actor 1 throw red hearts down` block into the `when actor 1 clicked` event.\n\nDon't forget to change `left` to `down`!",
          "Valentine_playlab_01_b": "Use the `move actor 1 left` block by clicking it into place beneath the `when left arrow clicked` event."
        },
        "aE2_authored_hint": {
          "aE2_a": "Notice that since the napkins are 20 pixels long, you'll need to jump 20 pixels before you start your next loop."
        },
        "aE3_authored_hint": {
          "aE3_a": "After you run your **nested loop** from the last stage, you need to jump back to the start of the line.",
          "aE3_b": "Don't forget to move the artist down before you start a new row of shapes! \n\nTo move the artist down and get him facing the right way again, make sure to:\n- Turn 90 degrees (to face down)\n- Jump 20 pixels (to get to new row)\n- Turn back 90 degrees (to face right again)",
          "aE3_c": "When you're all done, your **nested loops** should be three repeats deep.",
          "aE3_d": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "aE3alternate_authored_hint": {
          "aE3alternate_a": "After you run your **nested loop** from the last stage, you need to jump back to the start of the line.",
          "aE3alternate_b": "Don't forget to move the artist down before you start a new row of shapes! \n\nTo move the artist down and get him facing the right way again, make sure to:\n- Turn 90 degrees (to face down)\n- Jump 20 pixels (to get to new row)\n- Turn back 90 degrees (to face right again)",
          "aE3alternate_c": "When you're all done, your **nested loops** should be three repeats deep.",
          "aE3alternate_d": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "aE3alternateB_authored_hint": {
          "aE4alternateB_a": "After you run your **nested loop** from the last stage, you need to jump back to the start of the line.",
          "aE4alternateB_b": "Don't forget to move the artist down before you start a new row of shapes! \n\nTo move the artist down and get him facing the right way again, make sure to:\n- Turn 90 degrees (to face down)\n- Jump 20 pixels (to get to new row)\n- Turn back 90 degrees (to face right again)",
          "aE4alternateB_c": "When you're all done, your **nested loops** should be three repeats deep.",
          "aE4alternateB_d": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "aE4_authored_hint": {
          "aE4_a": "After you run your **nested loop** from the last stage, you need to jump back to the start of the line.",
          "aE4_b": "Don't forget to move the artist down before you start a new row of shapes! \n\nTo move the artist down and get him facing the right way again, make sure to:\n- Turn 90 degrees (to face down)\n- Jump 20 pixels (to get to new row)\n- Turn back 90 degrees (to face right again)",
          "aE4_c": "When you're all done, your **nested loops** should be three repeats deep.",
          "aE4_d": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "aE6_authored_hint": {
          "aE6_a": "If there are 180 degrees in a semicircle and each loop the artist makes turns 3 degrees, how many times would you need to loop to draw half of a full circle?\n\n**180 ÷ 3 = ?**"
        },
        "aE7_authored_hint": {
          "aE7_a": "Draw the bottom half of a circle and then the top half of a circle to make one segment.",
          "aE7_b": "You will need 4 segments to complete this puzzle."
        },
        "aE8_authored_hint": {
          "aE8_a": "To make a square from your line, you will need to: \n-  draw the line \n-  use the curvy corner\n\nRepeat these steps 4 times."
        },
        "allHallows2017_authored_hint": {
          "allHallows2017_a": "Careful!  GT might follow behind you on his bike and erase your line!",
          "allHallows2017_g": "Sarah says: \"Are you cold? Come sit in the corner... It's 90 degrees!\"",
          "allHallows2017_c": "Jordyn says: \"You crayon't stop now! Keep going!\"",
          "allHallows2017_d": "Josh says: \"You will need to draw on your coding skills to complete this puzzle!\"",
          "allHallows2017_e": "Dani says: \"I'm not good at puns. Try using a repeat block!\"",
          "allHallows2017_b": "Baker says: \"The Chicago crayon only works on the *green line*.\"",
          "allHallows2017_f": "Amy says: \"You can do it! Just think outside the box\""
        },
        "artistDebugVideo1_authored_hint": {
          "courseA_artist_loops7_a": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern."
        },
        "artistLoopsK2_authored_hint": {
          "artistLoopsK2_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block."
        },
        "artistLoopsK2gradek_artist_loops3_authored_hint": {
          "artistLoopsK2_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block."
        },
        "artistLoopsK3_authored_hint": {
          "artistLoopsK3_a": "Try using what you've learned about repeat blocks to complete this puzzle!"
        },
        "artistLoopsK4_authored_hint": {
          "artistLoopsK4_a": "Stuck? Try running the code to see which block is incorrect."
        },
        "artistLoopsK5_authored_hint": {
          "artistLoopsK5_a": "All 4 of the starting blocks should go inside of your repeat block to solve this puzzle."
        },
        "artistLoopsK6_authored_hint": {
          "artistLoopsK6_a": "Try running the code to see where there is a bug."
        },
        "artistLoopsK7_authored_hint": {
          "artistLoopsK7_a": "All of the blocks you need for this puzzle are already in your workspace!"
        },
        "artistLoopsK8_authored_hint": {
          "artistLoopsK8_a": "Try running the code to see where there is a bug."
        },
        "artistLoopsK9_authored_hint": {
          "artistLoopsK9_a": "This challenge uses FOUR loops, one right after another!"
        },
        "artistLoopsKA_authored_hint": {
          "artistLoopsKA_a": "Use the jump block to move forward without drawing a line."
        },
        "artistLoopsKB_authored_hint": {
          "artistLoopsKB_a": "There should be 3 blocks inside of your loop to solve this puzzle."
        },
        "comment_intro_maze_2018_authored_hint": {
          "courseC_maze_programming4_a": "Comments are also helpful when other people try to read your code.",
          "courseC_maze_programming4_b": "Add a comment when you change directions- what would have happened if you turned the other way?"
        },
        "course1_artist_loops_challenge1_authored_hint": {
          "courseA_artist_loops_challenge1_a": "You can use loops like this to create the walls and the roof. Try repeating different blocks.\n\n\n\n![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)\n\nDesign your own or click the ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) for some ideas!\n\n",
          "courseA_artist_loops_challenge1_b": "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)",
          "courseA_artist_loops_challenge1_c": "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)",
          "courseA_artist_loops_challenge1_d": "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
        },
        "course1_artist_loops_challenge2_authored_hint": {
          "harvey_tictactoe": "You can use `jump` blocks to move to other spaces."
        },
        "course1_artist_loops_challenge3_authored_hint": {
          "courseA_artist_loops_challenge2_a": "Blocks like this: <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!",
          "courseA_artist_loops_challenge2_b": "When you finish one bird house, `jump` to the next!",
          "courseA_artist_loops_challenge2_c": "You will need a LOT of blocks inside the loop for this challenge."
        },
        "course1_artist_loops_challenge4_authored_hint": {
          "courseB_artist_loops_challenge1_a": "Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!",
          "courseB_artist_loops_challenge1_b": "When you finish one of the dice, `jump` to the next!",
          "courseB_artist_loops_challenge1_c": "You will need to `move` or `jump` over some of the same lines twice. "
        },
        "course1_collector_loops_challenge1_authored_hint": {
          "courseA_collector_loops_challenge1_a": "Try changing the numbers in each loop if something goes wrong.",
          "courseA_collector_loops_challenge1_b": "You don't need to use a loop if you are only doing something one time.",
          "courseA_collector_loops_challenge1_c": "There are 6 gems on the right side of the cave, but you only need to move and collect 5 times. Do you know why?"
        },
        "course1_collector_loops_challenge2_authored_hint": {
          "courseA_collector_loops_challenge2_b": "You only need to use one ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) block to solve this.\n\n",
          "courseA_collector_loops_challenge2_a": "You can move back over the path a second time before moving south.\n\n![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)"
        },
        "course1_collector_loops_challenge3_authored_hint": {
          "courseB_collector_loops_challenge1_b": "Start by looping the commands `move south` and `get treasure`.\n\n<xml>\n  <block type=\"maze_moveSouth\"/><next>\n  <block type=\"collector_collect\"/></next>\n  </xml>\n",
          "courseB_collector_loops_challenge1_a": "The north pattern is a little different than the south pattern.\n\n<xml>\n  <block type=\"collector_collect\"/><next>\n  <block type=\"maze_moveNorth\"/></next>next>\n  </xml>\n",
          "courseB_collector_loops_challenge1_c": "Move East twice between each path.\n\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n  </xml>\n\nYou can do this with only 14 blocks. Click for one more hint to see a solution. \n",
          "courseB_collector_loops_challenge1_d": "Try this!\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course1_collector_loops_challenge4_authored_hint": {
          "courseB_collector_loops_challenge2_a": "If something goes wrong, don't be afraid to start over. Don't give up!",
          "courseB_collector_loops_challenge2_b": "If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!\n\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "Try using a `repeat` block to collect the final pile of treasure!",
          "courseB_collector_loops_challenge2_d": "Try this solution:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course1_maze_debugging_challenge1_authored_hint": {
          "courseA_maze_seq_challenge1_a": "Some paths will lead to TNT, if you move too far."
        },
        "course1_maze_debugging_challenge2_authored_hint": {
          "courseB_maze_seq_challenge2_a": "You do not need to add or remove blocks to solve this puzzle.",
          "courseB_maze_seq_challenge2_b": "Rearrange the blocks and take the middle path."
        },
        "course1_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge2_a": "Try counting the spaces with your finger. Remember not to count the space where you start!"
        },
        "course1_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge1_a": "The shortest path might not work this time.",
          "courseB_maze_seq_challenge1_b": "Try moving west to start."
        },
        "course1_playlab_events_challenge1_authored_hint": {
          "courseA_playlab_events_challenge1_a": "Make Waddles the Penguin show when you click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "Make Boo the Ghost show when you click Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "Make Jayden the Fuzzy Monster show when you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "Make Spiff the Robot show when you click the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "Finally, make Wendel the Wizard show when you click on Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "course1_playlab_events_challenge2_authored_hint": {
          "courseA_playlab_events_challenge2_a": "You can make a bird sing.\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "You can make a robot beep.\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "You can make an angry monster growl.\n\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "course2_artist_nestedLoops_challenge1_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "Start by making a nested loop to create four octagons. Turn 45 degrees to make the octagon. Jump, then turn 90 degrees after each one.",
          "courseD_artist_nestedLoops_challenge1_b": "Add code to draw a triangle inside of your nested loop. Use 120 degree turns for your triangle."
        },
        "course2_artist_nestedLoops_challenge2_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
          "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
        },
        "course2_artist_prog_challenge1_authored_hint": {
          "courseC_artist_prog_challenge1_a": "The rectangle is 200 pixels wide and 100 pixels tall. "
        },
        "course2_artist_prog_challenge2_authored_hint": {
          "courseC_artist_prog_challenge2_a": "You can put commands inside `repeat` block to loop them over and over. Try it!\n\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
        },
        "course2_bee_conditionals_challenge1_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.\n\n**You can solve this without ever turning left.**",
          "courseD_bee_conditionals_challenge1_b": "In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your `if/else` conditional at each square."
        },
        "course2_bee_conditionals_challenge2_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:\n\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "course2_collector_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_a": "The original code would work great - if there was only one piece of treasure in each pile!",
          "courseC_maze_loops_challenge2_b": "Use loops so you don't run out of `collect` blocks!"
        },
        "course2_collector_prog_challenge1_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use the `collect` command more often to collect the extra treasure."
        },
        "course2_collector_prog_challenge2_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use the `collect` command more often to collect the extra treasure."
        },
        "course2_harvester_loops_challenge1_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "Don't even think about try about trying this without loops!",
          "courseC_harvester_loops_challenge1_b": "You can repeat `move forward` and `pick corn` as many times as you need to, then `turn right` at each corner.",
          "courseC_harvester_loops_challenge1_c": "The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">2</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></next></block></xml>"
        },
        "course2_harvester_loops_challenge2_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!",
          "courseC_harvester_loops_challenge2_b": "You can repeat `move forward` and `pick lettuce` as many times as you need to, then turn at each corner.",
          "courseC_harvester_loops_challenge2_c": "This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!\n\n![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)\n",
          "courseC_harvester_loops_challenge2_d": "This spiral pattern can be coded with just 18 blocks!\n\n![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)"
        },
        "course2_maze_loops_challenge1_authored_hint": {
          "courseC_maze_loops_challenge1_a": "Think about this path as being three different pieces. Each one has a pattern you can repeat.",
          "courseC_maze_loops_challenge1_b": "In between each `repeat` block, you will need to `turn left` or `turn right` to get ready Scrat for the next pattern.",
          "courseC_maze_loops_challenge1_c": "If you make it this far, you just need to `turn left` then `move forward` a few times. Don't give up!\n\n![](https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)"
        },
        "course2_maze_programming_challenge2_authored_hint": {
          "courseC_maze_programming_challenge2_a": "*If you send me backwards, be extra careful that I turn the correct way!*",
          "courseC_maze_programming_challenge2_b": "The shortest solution use only 5 blocks, but it uses the `repeat` block!"
        },
        "course2_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge2_a": "Try counting the spaces with your finger. Remember not to count the space where you start!"
        },
        "course2_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge1_a": "The shortest path might not work this time.",
          "courseB_maze_seq_challenge1_b": "Try moving west to start."
        },
        "course3_artist_concept_challenge1_authored_hint": {
          "courseE_artist_concept_challenge1_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
          "courseE_artist_concept_challenge1_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. "
        },
        "course3_artist_functions_challenge1_authored_hint": {
          "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner. You can also `jump to` other positions or change the whole thing around however you want!"
        },
        "course3_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
        },
        "course3_bee_debugging_challenge1_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
          "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?"
        },
        "course3_bee_functions_challenge1_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "course3_bee_functions_challenge2_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "course3_bee_functions_challenge3_authored_hint": {
          "courseF_bee_functions_challenge1_a": "You can use the functions in the tool box to help you. You can call a function inside of another function's definition!"
        },
        "course3_bee_functions_challenge4_authored_hint": {
          "courseF_bee_functions_challenge2_a": "If there is a path to the right, you should do the following:\n* Get any nectar or make any honey.\n* Turn right towards the side path.\n* Move to the end of the side path.\n* Turn right.\n\nIf you repeat the above actions twice, you will be ready to move back down the main path.\n\n**Only click for another hint if you want to see the full solution!**",
          "courseF_bee_functions_challenge2_b": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                        <mutation name=\"move and check\"/>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation/>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_ifElseFlower\">\n        <title name=\"LOC\">atFlower</title>\n        <statement name=\"DO\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">nectarRemaining</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_nectar\"/>\n            </statement>\n          </block>\n        </statement>\n        <statement name=\"ELSE\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n            <mutation name=\"check nectar or honey\"/>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "course3_collector_debugging_challenge2_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "Start by focusing on collect TWO gems from each of the first two piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course3_farmer_condLoops_challenge1_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "The `STEP` button could be very helpful in this challenge.",
          "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
        },
        "course3_farmer_condLoops_challenge2_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space varies. Use `while` loops for these."
        },
        "course3_maze_debugging_challenge1_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
          "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time!",
          "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over, or remove all the code and find your own way!"
        },
        "course3_maze_debugging_challenge2_authored_hint": {
          "courseC_maze_debugging_challenge2_a": "One way to solve this is to add more steps forward in between the turns.",
          "courseC_maze_debugging_challenge2_b": "If you are getting stuck, you can always start over or remove all the code and find your own way!",
          "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow just using `move forward`, and only four turns. If you find a way to use the `repeat` block, there may be even more!\n\n![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)"
        },
        "course3_playLab_challenge1_authored_hint": {
          "courseE_playLab_challenge1_a": "Here are some things you could do when the player wins the game:\n\n* Make the dinosaur vanish.\n* Stop the squirrels.\n* Make the squirrels and knight happy.\n* Set a new background.\n* Make the knight thank the player for helping.\n* Make all of the actors vanish and show a \"You Win!\" message.",
          "courseE_playLab_challenge1_b": "Here are some things you could do when the player loses the game:\n\n* Make the knight vanish.\n* Make the squirrels sad.\n* Make the dinosaur say something.\n* Set a new background.\n* Make all of the actors vanish and show a \"Game Over\" message."
        },
        "course3_playlab_challenge2_authored_hint": {
          "courseE_playlab_challenge2_a": "The actor knows what to say based on its mood. Try playing with the things the witch might say.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseE_playlab_challenge2_b": "It will feel like the game starts all over if you call the `ask a question` function again below the list of conditionals.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>",
          "courseE_playlab_challenge2_c": "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!",
          "courseE_playlab_challenge2_d": "Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.\n\nDon't forget to change the instructions inside the `show title screen` block so they still make sense!",
          "courseE_playlab_challenge2_e": "When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?\n\nHave a friend try your app when it is finished!"
        },
        "course4_artist_binary_challenge2_authored_hint": {
          "courseD_artist_binary_challenge2_a": "The best tip I have for you is to press `⟲ Start Over` if it starts to get really messy.\n\nThere are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!"
        },
        "course4_artist_concept_challenge2_authored_hint": {
          "courseE_artist_concept_challenge2_a": "Once you define a function, you can call it over and over again - whenever and wherever you want!",
          "courseE_artist_concept_challenge2_b": "You can jump to different positions on the canvas using this command:\n\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "course4_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
        },
        "course4_artist_variables_challenge1_authored_hint": {
          "courseF_artist_variables_challenge1_a": "Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.",
          "courseF_artist_variables_challenge1_b": "You will want to increase the value of `length` by 10 **twice** inside the loop.",
          "courseF_artist_variables_challenge1_c": "To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.",
          "courseF_artist_variables_challenge1_d": "This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.\n\n![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)\n\nIf you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.",
          "courseF_artist_variables_challenge1_e": "Here is the solution.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course4_artist_variables_challenge2_authored_hint": {
          "courseF_artist_variables_challenge2_a": "Variables are helpful because you can add to them each time through a loop. ",
          "courseF_artist_variables_challenge2_b": "This puzzle has one loop that creates the polygon, one loop that repeats the polygon `sides` times, then another loop that does it all again after adding 5 to `sides`.",
          "courseF_artist_variables_challenge2_c": "Using a variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
          "courseF_artist_variables_challenge2_d": "**Solution:**\n\n![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)"
        },
        "course4_bee_fwp_challenge1_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "The main program should look something like this:\n\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "Look at how much corn is available to harvest in each space. Do you see the counter pattern? The `length` parameter should be used to set the maximum value in the `for loop`.\n\nDon't forget to have the farmer move back to the main path after harvesting!",
          "courseF_bee_fwp_challenge1_c": "Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.\nInside this loop, you should move forward and pick all of the corn.\n\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "Inside the `for loop` you will want to `move forward` then `get nectar` **counter times**.\nAfter the `for loop` you can just `move backward` **length times**.\n\nYou may need to read this hint several times to understand it. The part in **bold** is a hint about how to use the two `repeat` loops you will need.",
          "courseF_bee_fwp_challenge1_e": "**Here is the solution:**\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>\n"
        },
        "course4_bee_fwp_challenge2_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?\n\nAdd conditional statements to the function to check for corn, pumpkins, and lettuce.",
          "courseF_bee_fwp_challenge2_b": "Are you running out of `move forward` blocks?\nTry using a *second* `for loop` in your main program. \n\n**Note:** Be careful not to confuse `counter` with `counter2` in your code.",
          "courseF_bee_fwp_challenge2_c": "**Here is what your function should look like:**\n\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "**Here is what your main program should look like:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>\n"
        },
        "course4_collector_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns.",
          "courseD_bee_nested_loops_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course4_harvester_nested_loops_challenge1_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "You have probably already used a loop to create a zig-zag pattern. If you remember that algorithm, you can make a few additions to it here."
        },
        "course4_playlab_variables_challenge1_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "You will need additional blocks from the tool box to get the actors to talk.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "course4_playlab_variables_challenge3_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "The actor knows what to say because it checks the current value of the `fortune` variable.\n\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!",
          "courseF_playlab_variables_challenge3_d": "Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.\n\nDon't forget to change the instructions inside the `Ask a question` function so they still make sense!",
          "courseF_playlab_variables_challenge3_e": "When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?\n\nHave a friend try your app when it is finished!"
        },
        "courseA_artist_loops2_authored_hint": {
          "courseA_artist_loops2_a": "Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type=\"when_run\"/></xml> block to see what happens.",
          "courseA_artist_loops2_b": "Use this block <xml><block type=\"simple_move_right\"/></xml> to solve this puzzle."
        },
        "courseA_artist_loops2_2018_authored_hint": {
          "courseA_artist_loops2_a": "Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type=\"when_run\"/></xml> block to see what happens.",
          "courseA_artist_loops2_b": "Use this block <xml><block type=\"simple_move_right\"/></xml> to solve this puzzle."
        },
        "courseA_artist_loops3_authored_hint": {
          "courseA_artist_loops3_a": "Trace slowly through the program with your finger to see where it goes wrong.",
          "courseA_artist_loops3_b": "You will want to use a block like this to solve this puzzle.\n\n![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)"
        },
        "courseA_artist_loops3_2018_authored_hint": {
          "courseA_artist_loops3_a": "Trace slowly through the program with your finger to see where it goes wrong.",
          "courseA_artist_loops3_b": "You will want to use a block like this to solve this puzzle.\n\n![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)"
        },
        "courseA_artist_loops4_authored_hint": {
          "courseA_artist_loops4_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseA_artist_loops4_b": "Since you can only use one <xml><block type=\"simple_move_right\"/></xml>\n\nblock, try putting it inside of the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop."
        },
        "courseA_artist_loops4_2018_authored_hint": {
          "courseA_artist_loops4_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseA_artist_loops4_b": "Since you can only use one <xml><block type=\"simple_move_right\"/></xml>\n\nblock, try putting it inside of the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop."
        },
        "courseA_artist_loops5_authored_hint": {
          "courseA_artist_loops5_a": "Try using what you've learned about <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> blocks to complete this puzzle!",
          "courseA_artist_loops5_b": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseA_artist_loops5_c": "Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nloop."
        },
        "courseA_artist_loops5_2018_authored_hint": {
          "courseA_artist_loops5_a": "Try using what you've learned about <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> blocks to complete this puzzle!",
          "courseA_artist_loops5_b": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseA_artist_loops5_c": "Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nloop."
        },
        "courseA_artist_loops6_authored_hint": {
          "courseA_artist_loops6_a": "Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.",
          "courseA_artist_loops6_b": "You will need 2 blocks in 2 directions to solve this puzzle."
        },
        "courseA_artist_loops6_2018_authored_hint": {
          "courseA_artist_loops6_a": "Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.",
          "courseA_artist_loops6_b": "You will need 2 blocks in 2 directions to solve this puzzle."
        },
        "courseA_artist_loops7_authored_hint": {
          "courseA_artist_loops7_a": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.",
          "courseA_artist_loops7_b": "Write the code for one wave first, then repeat that to draw the other two."
        },
        "courseA_artist_loops7_2018_authored_hint": {
          "courseA_artist_loops7_a": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.",
          "courseA_artist_loops7_b": "Write the code for one wave first, then repeat that to draw the other two.",
          "courseA_artist_loops7_c": "Remember you can put more than one block in a <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"3-10\">???</title>\n  </block></xml> loop."
        },
        "courseA_artist_loops7_forVideo_authored_hint": {
          "courseA_artist_loops7_a": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.",
          "courseA_artist_loops7_b": "Write the code for one wave first, then repeat that to draw the other two."
        },
        "courseA_artist_loops8_authored_hint": {
          "courseA_artist_loops8_a": "Try running the code to see what has been written for you.",
          "courseA_artist_loops8_b": "How would you loop the code that has been given to you?",
          "courseA_artist_loops8_c": "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
        },
        "courseA_artist_loops8_2018_authored_hint": {
          "courseA_artist_loops8_a": "Try running the code to see what has been written for you.",
          "courseA_artist_loops8_b": "How would you loop the code that has been given to you?",
          "courseA_artist_loops8_c": "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
        },
        "courseA_artist_loops9_authored_hint": {
          "courseA_artist_loops9_a": "Add another block to the code you are given to draw the rest of the stairs.",
          "courseA_artist_loops9_c": "If you can't figure out where to put the loop, try writing your code step-by-step and look for patterns."
        },
        "courseA_artist_loops9_2018_authored_hint": {
          "courseA_artist_loops9_a": "Add another block to the code you are given to draw the rest of the stairs.",
          "courseA_artist_loops9_c": "If you can't figure out where to put the loop, try writing your code step-by-step and look for patterns."
        },
        "courseA_artist_loops_challenge2_authored_hint": {
          "courseA_artist_loops_challenge2_a": "Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!",
          "courseA_artist_loops_challenge2_b": "When you finish one bird house, `jump` to the next!",
          "courseA_artist_loops_challenge2_c": "You will need a LOT of blocks inside the loop for this challenge."
        },
        "courseA_artist_loops_challenge2a_authored_hint": {
          "courseA_artist_loops_challenge2_a": "Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!",
          "courseA_artist_loops_challenge2_b": "When you finish one tent, `jump` up twice to get to the next!",
          "courseA_artist_loops_challenge2_c": "All of your blocks will need to be inside of a loop to finish this puzzle."
        },
        "courseA_artist_loops_challenge2a_2018_authored_hint": {
          "courseA_artist_loops_challenge2_a": "Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!",
          "courseA_artist_loops_challenge2_b": "When you finish one tent, `jump` up twice to get to the next!",
          "courseA_artist_loops_challenge2_c": "All of your blocks will need to be inside of a loop to finish this puzzle."
        },
        "courseA_artist_loops_challenge3_authored_hint": {
          "harvey_tictactoe": "You can use `jump` blocks to move to other spaces."
        },
        "courseA_bee_seq1_authored_hint": {
          "courseA_bee_seq1_a": "Use this block to get nectar once the bee finds a flower.\n\n<xml>\n  <block type=\"maze_nectar\"/>\n</xml>"
        },
        "courseA_bee_seq12_authored_hint": {
          "courseA_bee_seq1_a": "Use this block to get nectar once the bee finds a flower.\n\n<xml>\n  <block type=\"maze_nectar\"/>\n</xml>"
        },
        "courseA_collector_loops1_authored_hint": {
          "courseA_collector_loops1_a": "After you have moved to a square with treasure, use this block to pick it up.\n\n<xml>  <block type=\"collector_collect\"/></xml>",
          "courseA_collector_loops1_b": "A simple solution would be to move East 2 times, then get the treasure."
        },
        "courseA_collector_loops1_2018_authored_hint": {
          "courseA_collector_loops1_a": "After you have moved to a square with treasure, use this block to pick it up.\n\n<xml>  <block type=\"collector_collect\"/></xml>",
          "courseA_collector_loops1_b": "A simple solution would be to move East 2 times, then get the treasure."
        },
        "courseA_collector_loops2_authored_hint": {
          "courseA_collector_loops2_a": "You'll have to move before you can collect any treasure.",
          "courseA_collector_loops2_b": "After you have moved to a square with treasure, use this block to pick it up.\n\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_collector_loops2_2018_authored_hint": {
          "courseA_collector_loops2_a": "You'll have to move before you can collect any treasure.",
          "courseA_collector_loops2_b": "After you have moved to a square with treasure, use this block to pick it up.\n\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_collector_loops3_authored_hint": {
          "courseA_collector_loops3_b": "Remember, you can put more than 1 block inside a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop."
        },
        "courseA_collector_loops3_2018_authored_hint": {
          "courseA_collector_loops3_b": "Remember, you can put more than 1 block inside a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop."
        },
        "courseA_collector_loops4_authored_hint": {
          "courseA_collector_loops4_a": "To change how far Laurel goes, change the number of times that the loop runs.",
          "courseA_collector_loops4_b": "Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!"
        },
        "courseA_collector_loops4_2018_authored_hint": {
          "courseA_collector_loops4_a": "To change how far Laurel goes, change the number of times that the loop runs.",
          "courseA_collector_loops4_b": "Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!"
        },
        "courseA_collector_loops5_authored_hint": {
          "courseA_collector_loops5_a": "If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern.",
          "courseA_collector_loops5_b": "Try splitting the problem into 2 parts, moving sideways and then down.",
          "courseA_collector_loops5_c": "You'll want to start with a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop that moves Laurel west and collects treasure."
        },
        "courseA_collector_loops5_2018_authored_hint": {
          "courseA_collector_loops5_a": "If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern.",
          "courseA_collector_loops5_b": "Try splitting the problem into 2 parts, moving sideways and then down.",
          "courseA_collector_loops5_c": "You'll want to start with a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop that moves Laurel west and collects treasure."
        },
        "courseA_collector_loops6_authored_hint": {
          "courseA_collector_loops6_a": "Can't figure out what's wrong? Try running the code a couple of times to see what happens.",
          "courseA_collector_loops6_b": "The shortest solution has 2 <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops, one after the other."
        },
        "courseA_collector_loops6_2018_authored_hint": {
          "courseA_collector_loops6_a": "Can't figure out what's wrong? Try running the code a couple of times to see what happens.",
          "courseA_collector_loops6_b": "The shortest solution has 2 <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops, one after the other."
        },
        "courseA_collector_loops7_authored_hint": {
          "courseA_collector_loops7_a": "If you can't figure out what comes next, try running the code to see where Laurel ends up."
        },
        "courseA_collector_loops7_2018_authored_hint": {
          "courseA_collector_loops7_a": "If you can't figure out what comes next, try running the code to see where Laurel ends up."
        },
        "courseA_collector_loops8_authored_hint": {
          "courseA_collector_loops8_a": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and looking for a pattern.",
          "courseA_collector_loops8_b": "Try breaking this puzzle into 3 separate problems, and writing loops for each.",
          "courseA_collector_loops8_c": "Remember you can write one piece of the code at a time, then press \"Run\" to figure out where you need to go from there."
        },
        "courseA_collector_loops8_2018_authored_hint": {
          "courseA_collector_loops8_a": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and looking for a pattern.",
          "courseA_collector_loops8_b": "Try breaking this puzzle into 3 separate problems, and writing loops for each.",
          "courseA_collector_loops8_c": "Remember you can write one piece of the code at a time, then press \"Run\" to figure out where you need to go from there."
        },
        "courseA_collector_loops9_authored_hint": {
          "courseA_collector_loops9_a": "If you can't spot the best places to use loops, try coding it out step-by-step and look for a pattern. ",
          "courseA_collector_loops9_b": "Try putting 2 of your <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops inside of another loop to make your code shorter!"
        },
        "courseA_collector_loops9_2018_authored_hint": {
          "courseA_collector_loops9_a": "If you can't spot the best places to use loops, try coding it out step-by-step and look for a pattern. ",
          "courseA_collector_loops9_b": "Try putting 2 of your <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops inside of another loop to make your code shorter!"
        },
        "courseA_collector_loops_challenge1_authored_hint": {
          "courseA_collector_loops_challenge1_a": "Try changing the numbers in each loop if something seems wrong.",
          "courseA_collector_loops_challenge1_b": "You don't need to use a loop if you are only doing something one time.",
          "courseA_collector_loops_challenge1_c": "There are 6 gems on the right side of the cave when you start, but you only need to get treasure 5 times moving South. Do you know why?",
          "courseA_collector_loops_challenge1_d": "The starting program doesn't collect the last 2 gems. Try adding this code at the very end:\n\n<xml><block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"collector_collect_simplified\">\n                            <next>\n                              <block type=\"maze_moveSouth\">\n                                <next>\n                                  <block type=\"collector_collect\"/>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block></xml>"
        },
        "courseA_collector_loops_challenge1_2018_authored_hint": {
          "courseA_collector_loops_challenge1_a": "Try changing the numbers in each loop if something seems wrong.",
          "courseA_collector_loops_challenge1_b": "You don't need to use a loop if you are only doing something one time.",
          "courseA_collector_loops_challenge1_c": "There are 6 gems on the right side of the cave when you start, but you only need to get treasure 5 times moving South. Do you know why?",
          "courseA_collector_loops_challenge1_d": "The starting program doesn't collect the last 2 gems. Try adding this code at the very end:\n\n<xml><block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"collector_collect_simplified\">\n                            <next>\n                              <block type=\"maze_moveSouth\">\n                                <next>\n                                  <block type=\"collector_collect\"/>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block></xml>"
        },
        "courseA_collector_loops_challenge2_authored_hint": {
          "courseA_collector_loops_challenge2_b": "You only need to use 1 block to solve this.",
          "courseA_collector_loops_challenge2_a": "You can move back over the path a second time before moving south."
        },
        "courseA_collector_loops_challenge2kp_authored_hint": {
          "courseA_collector_loops_challenge2kp_b": "Try this path to get you to a solution.",
          "courseA_collector_loops_challenge2kp_a": "Can you use loops to solve this puzzle?"
        },
        "courseA_collector_loops_challenge2kp_2018_authored_hint": {
          "courseA_collector_loops_challenge2kp_b": "Try this path to get you to a solution.",
          "courseA_collector_loops_challenge2kp_a": "Can you use loops to solve this puzzle?"
        },
        "courseA_collector_preLoops4_authored_hint": {
          "courseA_collector_preLoops4_a": "To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png) blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) block to the bottom of the program and click \"Run\"!\n\n"
        },
        "courseA_collector_preLoops5_authored_hint": {
          "courseA_collector_preLoops5_a": "You'll need to go two different directions to get even one gem!"
        },
        "courseA_collector_preLoops6_authored_hint": {
          "courseA_collector_preLoops6_a": "You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) blocks to solve this puzzle."
        },
        "courseA_collector_preLoops7_authored_hint": {
          "courseA_collector_loops2_b": "After you have moved to a square with treasure, use this block to pick it up.\n\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_harvester_forVideo_authored_hint": {
          "courseA_harvester_loops3_a": "Use a `repeat` block like this to help you!\n\n<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">3</title>\n  </block></xml>"
        },
        "courseA_harvester_loops1_authored_hint": {
          "courseA_harvester_loops1_a": "Once you move to some corn, use this block to pick it!\n\n<xml><block type=\"harvester_corn\"/></xml>"
        },
        "courseA_harvester_loops3_authored_hint": {
          "courseA_harvester_loops3_a": "Use a `repeat` block like this to help you!\n\n<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml>",
          "courseA_harvester_loops3_b": "To repeat code, drag out a `repeat` (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you want inside of it. "
        },
        "courseA_harvester_loops4_authored_hint": {
          "courseA_harvester_loops4_a": "Don't be afraid to press `Run` to see what happens!",
          "courseA_harvester_loops4_b": "How many pieces of corn are there? How many times does your code repeat?"
        },
        "courseA_harvester_loops5_authored_hint": {
          "courseA_harvester_loops5_a": "If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner.",
          "courseA_harvester_loops5_b": "Your final code will have **one** `repeat`  <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">6</title>\n    </block></xml> loop, **one** `move South`   <xml><block type=\"maze_moveSouth\" limit=\"1\"/></xml> block, and **one** `move East`   <xml><block type=\"maze_moveEast\" limit=\"1\"/> </xml>block.",
          "courseA_harvester_loops5_c": "Use this path to pick all the corn!"
        },
        "courseA_harvester_loops5a_authored_hint": {
          "courseA_harvester_loops5a_a": "You will need one `repeat` <xml> <block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">6</title>\n  </block></xml> loop after another.",
          "courseA_harvester_loops5a_b": "One loop will repeat `move South`<xml><block type=\"maze_moveSouth\" limit=\"1\"/></xml>, and the other will repeat `move East` <xml><block type=\"maze_moveEast\" limit=\"1\"/></xml>",
          "courseA_harvester_loops5a_c": "Use this path to move one way, and then the other."
        },
        "courseA_harvester_loops5b_authored_hint": {
          "courseA_harvester_loops5b_a": "Press `Run` and see what happens!",
          "courseA_harvester_loops5b_b": "Are your loops repeating the right number of times?",
          "courseA_harvester_loops5b_c": "Move one way, then the other with this path."
        },
        "courseA_harvester_loops6_authored_hint": {
          "courseA_harvester_loops6_a": "If you get stuck, try writing the steps on paper and looking for repeating patterns.",
          "courseA_harvester_loops6_b": "This is the path you should take to pick all the corn."
        },
        "courseA_harvester_loops7_authored_hint": {
          "courseA_harvester_loops7_a": "You will need two `repeat` <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">5</title>\n  </block></xml>loops after each other!",
          "courseA_harvester_loops7_b": "Use two loops to follow this path."
        },
        "courseA_harvester_loops9_authored_hint": {
          "courseA_harvester_loops9_a": "Break this puzzle up into three different parts. One part to the first corner, one part to the second corner, and one part to the end.",
          "courseA_harvester_loops9_b": "Don't be afraid to run your code after every part to see what happens!",
          "courseA_harvester_loops9_c": "Follow this path to pick all the corn."
        },
        "courseA_harvester_seq1_authored_hint": {
          "courseA_harvester_seq1_a": "Use this block to pick the corn when the harvester finds it!\n\n<xml>\n  <block type=\"harvester_corn\"/>\n</xml>",
          "courseA_harvester_seq1_b": "The harvester will need to move East three times to get to the corn. Use this block:\n\n<xml>\n  <block type=\"maze_moveEast\"/>\n</xml>"
        },
        "courseA_harvester_seq10_authored_hint": {
          "courseA_harvester_seq10_a": "Are you stuck? Try writing down the steps on a piece of paper first.",
          "courseA_harvester_seq10_b": "You need to `Move East`, then `Move North`. Do this two times. Don't forget to get all the corn too!",
          "courseA_harvester_seq10_c": "Try using this path to pick all the corn."
        },
        "courseA_harvester_seq13_authored_hint": {
          "courseA_bee_seq1_a": "Use this block to pick corn once the harvester gets to it.\n\n<xml>\n  <block type=\"harvester_corn\"/>\n</xml>"
        },
        "courseA_harvester_seq2_authored_hint": {
          "courseA_harvester_seq2_a": "Don't forget to use <xml><block type=\"harvester_corn\"/></xml> to pick the corn!",
          "courseA_harvester_seq2_b": "Try writing down the steps on paper to find a solution!"
        },
        "courseA_harvester_seq3_authored_hint": {
          "courseA_harvester_seq3_a": "Did you remember to use this block?\n\n<xml><block type=\"harvester_corn\"/></xml>",
          "courseA_harvester_seq3_b": "Say the steps out loud and see if it helps you figure out the answer."
        },
        "courseA_harvester_seq4_authored_hint": {
          "courseA_harvester_seq4_a": "How many spaces are between the Harvester and the corn? How many blocks are already in your workspace?",
          "courseA_harvester_seq4_b": "You will need five `Move East` blocks and one `Pick Corn` block:\n\n<xml><block type=\"harvester_corn\"/></xml>"
        },
        "courseA_harvester_seq5_authored_hint": {
          "courseA_harvester_seq5_a": "Which block moves the harvester the wrong way?",
          "courseA_harvester_seq5_b": "You need to remove one block.",
          "courseA_harvester_seq5_c": "Throw this block in the trash!\n\n<xml><block type=\"maze_moveNorth\"/></xml>"
        },
        "courseA_harvester_seq6_authored_hint": {
          "courseA_harvester_seq6_a": "If you're stuck, try saying the steps out loud. It could help you figure out the right path."
        },
        "courseA_harvester_seq7_authored_hint": {
          "courseA_harvester_seq7_a": "Try solving the puzzle in 2 parts, one part before the corner and one part after the corner.",
          "courseA_harvester_seq7_b": "Having trouble? This is the path the harvester should take."
        },
        "courseA_harvester_seq9_authored_hint": {
          "courseA_harvester_seq9_a": "Run the code a few times to see what happens. Where does the harvester stop?",
          "courseA_harvester_seq9_b": "Don't forget to pick all the corn! You will need **3** pick corn blocks.",
          "courseA_harvester_seq9_c": "You should take this path to pick all the corn."
        },
        "courseA_maze_ramp2_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp2a_2018_authored_hint": {
          "1": "Snap both `East` blocks to the bottom of the `when run` block."
        },
        "courseA_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        },
        "courseA_maze_ramp3a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveNorth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n"
        },
        "courseA_maze_ramp3b_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveSouth\">\n        <next>\n          <block type=\"maze_moveWest\">\n            <next>\n              <block type=\"maze_moveWest\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n"
        },
        "courseA_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
        },
        "courseA_maze_ramp4a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveSouth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseA_maze_ramp5a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveWest\">\n        <next>\n          <block type=\"maze_moveWest\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_seq1_authored_hint": {
          "courseA_maze_seq1_a": "If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>\n  <block type=\"when_run\"/>\n</xml>",
          "courseA_maze_seq1_b": "The bird will need to move West 3 times to get to the pig. Use this block:\n\n<xml><block type=\"maze_moveWest\"/></xml>"
        },
        "courseA_maze_seq10_authored_hint": {
          "courseA_maze_seq10_a": "If you're having trouble, try writing down the steps on a piece of paper first.",
          "courseA_maze_seq10_b": "You will need to go 3 directions to solve this puzzle."
        },
        "courseA_maze_seq10_2018_authored_hint": {
          "courseA_maze_seq10_a": "If you're having trouble, try writing down the steps on a piece of paper first.",
          "courseA_maze_seq10_b": "You will need to go 3 different directions to solve this puzzle."
        },
        "courseA_maze_seq13_authored_hint": {
          "courseA_maze_seq13_a": "If the path you need is unclear, use your finger to trace your way from the bird to the pig.",
          "courseA_maze_seq13_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen."
        },
        "courseA_maze_seq13_2018_authored_hint": {
          "courseA_maze_seq13_a": "If the path you need is unclear, use your finger to trace your way from the bird to the pig.",
          "courseA_maze_seq13_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen."
        },
        "courseA_maze_seq1_2018_authored_hint": {
          "courseA_maze_seq1_a": "If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>\n  <block type=\"when_run\"/>\n</xml>",
          "courseA_maze_seq1_b": "The bird will need to move West 3 times to get to the pig. Use this block:\n\n<xml><block type=\"maze_moveWest\"/></xml>"
        },
        "courseA_maze_seq2_authored_hint": {
          "courseA_maze_seq2_a": "This program is missing 1 block. Can you figure out which one?",
          "courseA_maze_seq2_b": "Try running the code first to see where the bird ends up. Where do you need to go from there?"
        },
        "courseA_maze_seq2_2018_authored_hint": {
          "courseA_maze_seq2_a": "This program is missing 1 block. Can you figure out which one?",
          "courseA_maze_seq2_b": "Try running the code first to see where the bird ends up. Where do you need to go from there?"
        },
        "courseA_maze_seq3_authored_hint": {
          "courseA_maze_seq3_a": "1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?",
          "courseA_maze_seq3_b": "Try using the step button to find where the program goes wrong. Is it the 1st step? The 2nd?",
          "courseA_maze_seq3_c": "This <xml><block type=\"maze_moveNorth\"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?"
        },
        "courseA_maze_seq3_2018_authored_hint": {
          "courseA_maze_seq3_a": "1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?",
          "courseA_maze_seq3_b": "Try using the step button to find where the program goes wrong. Is it the 1st step? The 2nd?",
          "courseA_maze_seq3_c": "This <xml><block type=\"maze_moveNorth\"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?"
        },
        "courseA_maze_seq4_authored_hint": {
          "courseA_maze_seq4_a": "If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.",
          "courseA_maze_seq4_b": "Try running the code as it is. Does something go wrong? Which block can you remove? How can you fix it?"
        },
        "courseA_maze_seq4_2018_authored_hint": {
          "courseA_maze_seq4_a": "If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.",
          "courseA_maze_seq4_b": "Try running the code as it is. Does something go wrong? Which block can you remove? How can you fix it?"
        },
        "courseA_maze_seq4a_authored_hint": {
          "courseA_maze_seq4_a": "If you are having trouble, try using your finger to figure out the correct path by pointing it out on the map. What moves did your finger make?"
        },
        "courseA_maze_seq5_authored_hint": {
          "courseA_maze_seq5_a": "Try writing down the steps on paper to find a solution!",
          "courseA_maze_seq5_b": "You will need 2 blocks, pointing in 2 directions."
        },
        "courseA_maze_seq5_2018_authored_hint": {
          "1": "Try writing down the steps on paper to find a solution!",
          "2": "You will need to use this block:\n\n<xml><block type=\"maze_moveSouth\"/></xml>"
        },
        "courseA_maze_seq5a_2018_authored_hint": {
          "1": "Say the steps out loud and see if it helps you figure out the answer."
        },
        "courseA_maze_seq6_authored_hint": {
          "courseA_maze_seq6_a": "Your final code should have 3 movement blocks.",
          "courseA_maze_seq6_b": "If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner."
        },
        "courseA_maze_seq6_2018_authored_hint": {
          "courseA_maze_seq6_a": "Your final code should have 3 movement blocks.",
          "courseA_maze_seq6_b": "If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner."
        },
        "courseA_maze_seq7_authored_hint": {
          "courseA_maze_seq7_a": "There is 1 block that you need to add to move the bird to the pig.",
          "courseA_maze_seq7_b": "If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move."
        },
        "courseA_maze_seq7_2018_authored_hint": {
          "courseA_maze_seq7_a": "There is 1 block that you need to add to move the bird to the pig.",
          "courseA_maze_seq7_b": "If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move."
        },
        "courseA_maze_seq8_authored_hint": {
          "courseA_maze_seq8_a": "If you're stuck, try drawing the image on paper to see how the bird should move."
        },
        "courseA_maze_seq8_2018_authored_hint": {
          "courseA_maze_seq8_a": "If you're stuck, try drawing the image on paper to see how the bird should move."
        },
        "courseA_maze_seq9_authored_hint": {
          "courseA_maze_seq9_a": "Stuck? Try tracing the bird's path with your finger.",
          "courseA_maze_seq9_b": "If you're not sure what to do, try pressing \"Start over\" and running the code to see what goes wrong.",
          "courseA_maze_seq9_c": "You will need to move in 3 directions to solve this puzzle."
        },
        "courseA_maze_seq9_2018_authored_hint": {
          "courseA_maze_seq9_a": "Stuck? Try tracing the bird's path with your finger.",
          "courseA_maze_seq9_b": "If you're not sure what to do, try pressing \"Start over\" and running the code to see what goes wrong.",
          "courseA_maze_seq9_c": "You will need to move in 3 directions to solve this puzzle."
        },
        "courseA_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge1_a": "There are two solutions to this puzzle."
        },
        "courseA_maze_seq_challenge1_2018_authored_hint": {
          "courseA_maze_seq_challenge1_a": "There are two solutions to this puzzle."
        },
        "courseA_maze_seq_challenge2_authored_hint": {
          "courseA_maze_seq_challenge2_a": "Try counting the spaces with your finger. Remember not to count the space where you start!"
        },
        "courseA_maze_seq_challenge2_2018_authored_hint": {
          "courseA_maze_seq_challenge2_a": "Try counting the spaces with your finger. Remember not to count the space where you start!"
        },
        "courseA_playLab_events2_authored_hint": {
          "courseA_playLab_events2_a": "Look for a block that makes the dog say something.",
          "courseA_playLab_events2_b": "This is the code you need to complete this puzzle:\n\n<xml>\n<block type=\"when_run\" movable=\"false\" deletable=\"false\">\n<next>\n<block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</next>\n</block>\n</xml>"
        },
        "courseA_playLab_events2_2018_authored_hint": {
          "courseA_playLab_events2_a": "Look for a block that that makes the dog say something.",
          "courseA_playLab_events2_b": "This is the code you need to complete this puzzle:\n\n<xml>\n<block type=\"when_run\" movable=\"false\" deletable=\"false\">\n<next>\n<block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</next>\n</block>\n</xml>"
        },
        "courseA_playLab_events3_authored_hint": {
          "courseA_playLab_events3_a": "Drag this block  <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> out and snap it to the bottom of <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml>",
          "courseA_playLab_events3_b": "Remember to use the left arrow key to move Jorge to the flag once you have written your program. When the flag turns green, you've finished!"
        },
        "courseA_playLab_events3_2018_authored_hint": {
          "courseA_playLab_events3_a": "Drag this block  <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> out and snap it to the bottom of <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml>",
          "courseA_playLab_events3_b": "Remember to use the left arrow key to move Jorge to the flag once you have written your program. When the flag turns green, you've finished!"
        },
        "courseA_playLab_events4_authored_hint": {
          "courseA_playLab_events4_a": "Here is the event block that you will need to get Jorge to move right:\n\n<xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></xml>",
          "courseA_playLab_events4_b": "This is the code you will need to complete this puzzle:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n  <block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></next></block></xml>"
        },
        "courseA_playLab_events4_2018_authored_hint": {
          "courseA_playLab_events4_a": "Here is the event block that you will need to get Jorge to move right:\n\n<xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></xml>",
          "courseA_playLab_events4_b": "This is the code you will need to complete this puzzle:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n  <block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></next></block></xml>"
        },
        "courseA_playLab_events5_authored_hint": {
          "courseA_playLab_events5_a": "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\n\nand \n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>",
          "courseA_playLab_events5_b": "Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?\n\n![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)"
        },
        "courseA_playLab_events5_2018_authored_hint": {
          "courseA_playLab_events5_a": "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\n\nand \n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>",
          "courseA_playLab_events5_b": "Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?\n\n![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)"
        },
        "courseA_playLab_events6_authored_hint": {
          "courseA_playLab_events6_a": "Here is the event block that you would use to have Jorge do something when clicked:\n\n<xml><block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block></xml>",
          "courseA_playLab_events6_b": "Here is the block you would use to change the background:\n\n<xml><block type=\"studio_setBackground\">\n    <title name=\"VALUE\">random</title>\n  </block></xml>",
          "courseA_playLab_events6_c": "Here is the block you would use to play a random sound:\n\n<xml><block type=\"studio_playSound\">\n    <title name=\"SOUND\">random</title>\n  </block></xml>"
        },
        "courseA_playLab_events6_2018_authored_hint": {
          "courseA_playLab_events6_a": "Here is the event block that you would use to have Jorge do something when clicked:\n\n<xml><block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block></xml>",
          "courseA_playLab_events6_b": "Here is the block you would use to change the background:\n\n<xml><block type=\"studio_setBackground\">\n    <title name=\"VALUE\">random</title>\n  </block></xml>",
          "courseA_playLab_events6_c": "Here is the block you would use to play a random sound:\n\n<xml><block type=\"studio_playSound\">\n    <title name=\"SOUND\">random</title>\n  </block></xml>"
        },
        "courseA_playLab_events7_authored_hint": {
          "courseA_playLab_events7_a": "Use this block to control what happens when the actors collide.\n\n<xml><block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">0</title>\n  </block></xml>"
        },
        "courseA_playLab_events7_2018_authored_hint": {
          "courseA_playLab_events7_a": "Use this block to control what happens when the actors collide.\n\n<xml><block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">0</title>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge1_authored_hint": {
          "courseA_playlab_events_challenge1_a": "Make Waddles the Penguin show when you click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "Make Boo the Ghost show when you click Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "Make Jayden the Fuzzy Monster show when you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "Make Spiff the Robot show when you click the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "Finally, make Wendel the Wizard show when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge1_2018_authored_hint": {
          "courseA_playlab_events_challenge1_a": "Make Waddles the Penguin show when you click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "Make Boo the Ghost show when you click Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "Make Jayden the Fuzzy Monster show when you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "Make Spiff the Robot show when you click the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "Finally, make Wendel the Wizard show when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge1a_authored_hint": {
          "courseA_playlab_events_challenge1_a": "You can make a bird sing.\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "You can make a robot beep.\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "You can make an angry monster growl.\n\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge2_authored_hint": {
          "courseA_playlab_events_challenge2_a": "You can make a bird sing.\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "You can make a robot beep.\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "You can make an angry monster growl.\n\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge2_2018_authored_hint": {
          "courseA_playlab_events_challenge2_a": "You can make a bird sing.\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "You can make a robot beep.\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "You can make an angry monster growl.\n\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challengeClone_authored_hint": {
          "courseA_playlab_events_challenge1_a": "Make Waddles the Penguin show when you click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "Make Boo the Ghost show when you click Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "Make Jayden the Fuzzy Monster show when you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "Make Spiff the Robot show when you click the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "Finally, make Wendel the Wizard show when you click on Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseB_Scrat_ramp1_2018_authored_hint": {
          "1": "If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click \"Run\" again.",
          "2": "Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!"
        },
        "courseB_Scrat_ramp2_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp3a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveNorth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n"
        },
        "courseB_Scrat_ramp3b_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveSouth\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n"
        },
        "courseB_Scrat_ramp4a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveSouth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp5a_2018_authored_hint": {
          "1": "Your code should look like this:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveWest\">\n        <next>\n          <block type=\"maze_moveWest\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_artist_loops2_authored_hint": {
          "courseB_artist_loops2_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseB_artist_loops2_b": "Try running the code first to see where the artist ends up."
        },
        "courseB_artist_loops2_2018_authored_hint": {
          "courseB_artist_loops2_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block.",
          "courseB_artist_loops2_b": "Try running the code first to see where the artist ends up."
        },
        "courseB_artist_loops3_authored_hint": {
          "courseB_artist_loops3_a": "Remember to use a `repeat` loop for better code!",
          "courseB_artist_loops3_b": "The artist will want to move South to draw this line."
        },
        "courseB_artist_loops3_2018_authored_hint": {
          "courseB_artist_loops3_a": "Remember to use a `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loop for better code!",
          "courseB_artist_loops3_b": "The artist will want to move South to draw this line."
        },
        "courseB_artist_loops4_authored_hint": {
          "courseB_artist_loops4_a": "The jump block lets you move forward without drawing a line.",
          "courseB_artist_loops4_b": "You will need to add a block inside of the repeat loop to solve this puzzle.",
          "courseB_artist_loops4_c": "Don't forget to change the number of times the loop repeats."
        },
        "courseB_artist_loops4_2018_authored_hint": {
          "courseB_artist_loops4_a": "The jump block lets you move forward without drawing a line.",
          "courseB_artist_loops4_b": "You will need to add a block inside of the repeat loop to solve this puzzle.",
          "courseB_artist_loops4_c": "Don't forget to change the number of times the loop repeats."
        },
        "courseB_artist_loops5_authored_hint": {
          "courseB_artist_loops5_a": "Drag out a `repeat` loop, then put the other blocks inside of it. How many times do you need to repeat?"
        },
        "courseB_artist_loops5_2018_authored_hint": {
          "courseB_artist_loops5_a": "Drag out a `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?"
        },
        "courseB_artist_loops6_authored_hint": {
          "courseB_artist_loops6_b": "Try writing the moves down on a piece of paper and look for a pattern."
        },
        "courseB_artist_loops6_2018_authored_hint": {
          "courseB_artist_loops6_b": "Try writing the moves down on a piece of paper and look for a pattern."
        },
        "courseB_artist_loops7_authored_hint": {
          "courseB_artist_loops7_a": "This challenge uses **4** loops, one right after another!",
          "courseB_artist_loops7_b": "Notice that every loop makes a stair pattern that goes a different direction.\n\n![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)",
          "courseB_artist_loops7_c": "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
        },
        "courseB_artist_loops7_2018_authored_hint": {
          "courseB_artist_loops7_a": "This challenge uses **4** loops, one right after another!",
          "courseB_artist_loops7_b": "Notice that every loop makes a stair pattern that goes a different direction.\n\n![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)",
          "courseB_artist_loops7_c": "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
        },
        "courseB_artist_loops8_authored_hint": {
          "courseB_artist_loops8_a": "How many times should you repeat the pattern to make the ladder?",
          "courseB_artist_loops8_b": "Try running the code you're given to see what it does."
        },
        "courseB_artist_loops8_2018_authored_hint": {
          "courseB_artist_loops8_a": "How many times should you repeat the pattern to make the ladder?",
          "courseB_artist_loops8_b": "Try running the code you're given to see what it does."
        },
        "courseB_artist_loops9_authored_hint": {
          "courseB_artist_loops9_a": "Remember that jump blocks can be used to move without drawing a line.",
          "courseB_artist_loops9_b": "You will want to use the W block to solve this puzzle.",
          "courseB_artist_loops9_c": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern."
        },
        "courseB_artist_loops9_2018_authored_hint": {
          "courseB_artist_loops9_a": "Remember that jump blocks can be used to move without drawing a line.",
          "courseB_artist_loops9_b": "You will want to use the W block to solve this puzzle.",
          "courseB_artist_loops9_c": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern."
        },
        "courseB_artist_loops_challenge1_authored_hint": {
          "courseB_artist_loops_challenge1_a": "Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!",
          "courseB_artist_loops_challenge1_b": "When you finish one of the dice, `jump` to the next!",
          "courseB_artist_loops_challenge1_c": "You will need to `move` or `jump` over some of the same lines twice. "
        },
        "courseB_artist_loops_challenge1_2018_authored_hint": {
          "courseB_artist_loops_challenge1_a": "Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!",
          "courseB_artist_loops_challenge1_b": "When you finish one of the dice, `jump` to the next!",
          "courseB_artist_loops_challenge1_c": "You will need to `move` or `jump` over some of the same lines twice. "
        },
        "courseB_artist_loops_challenge2_authored_hint": {
          "courseB_artist_loops_challenge2_a": "The code to draw an X is already given to you. All you need to do is repeat the X and `jump` to the next spot.",
          "courseB_artist_loops_challenge2_b": "You can use `jump` blocks to move to other spaces without drawing."
        },
        "courseB_artist_loops_challenge2_2018_authored_hint": {
          "courseB_artist_loops_challenge2_a": "The code to draw an X is already given to you. All you need to do is repeat the X and `jump` to the next spot.",
          "courseB_artist_loops_challenge2_b": "You can use `jump` blocks to move to other spaces without drawing."
        },
        "courseB_collector_loops1_authored_hint": {
          "courseB_collector_loops1_a": "The <xml><block type=\"collector_collect_simplified\"/></xml> block can be used to pick up treasure when you are standing on top of it."
        },
        "courseB_collector_loops10_authored_hint": {
          "courseB_collector_loops10_a": "If you can't figure out where to put the `repeat` loops, write out the code step-by-step and look for a pattern.",
          "courseB_collector_loops10_b": "Try writing the moves down on a piece of paper and looking for a pattern."
        },
        "courseB_collector_loops10_2018_authored_hint": {
          "courseB_collector_loops10_a": "If you can't figure out where to put the `repeat` loops, write out the code step-by-step and look for a pattern.",
          "courseB_collector_loops10_b": "Try writing the moves down on a piece of paper and looking for a pattern."
        },
        "courseB_collector_loops1_2018_authored_hint": {
          "courseB_collector_loops1_a": "The <xml><block type=\"collector_collect_simplified\"/></xml> block can be used to pick up treasure when you are standing on top of it."
        },
        "courseB_collector_loops2_authored_hint": {
          "courseB_collector_loops2_a": "You'll have to move before you can collect any treasure.",
          "courseB_collector_loops2_b": "When you have reached a spot with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up."
        },
        "courseB_collector_loops2_2018_authored_hint": {
          "courseB_collector_loops2_a": "You'll have to move before you can collect any treasure.",
          "courseB_collector_loops2_b": "When you have reached a spot with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up."
        },
        "courseB_collector_loops3_authored_hint": {
          "courseB_collector_prog3_a": "Try using a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block></xml> block to collect your treasure.",
          "courseB_collector_prog3_b": "Remember you can put more than one block inside a repeat loop."
        },
        "courseB_collector_loops3_2018_authored_hint": {
          "courseB_collector_prog3_a": "Try using a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block></xml> block to collect your treasure.",
          "courseB_collector_prog3_b": "Remember you can put more than one block inside a repeat loop."
        },
        "courseB_collector_loops3_predict1_authored_hint": {
          "courseB_collector_prog3_a": "Try using a `repeat` block to collect your gold."
        },
        "courseB_collector_loops4_authored_hint": {
          "courseB_collector_loops4_a": "Try using the step button to figure out where things go wrong.",
          "courseB_collector_loops4_b": "To change how far Laurel goes, change the number of times that the loop runs.",
          "courseB_collector_loops4_c": "Laurel needs to walk down and collect the treasure after she finishes the `repeat` loop!"
        },
        "courseB_collector_loops4_2018_authored_hint": {
          "courseB_collector_loops4_a": "Try using the step button to figure out where things go wrong.",
          "courseB_collector_loops4_b": "To change how far Laurel goes, change the number of times that the loop runs.",
          "courseB_collector_loops4_c": "Laurel needs to walk down and collect the treasure after she finishes the `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml>loop!"
        },
        "courseB_collector_loops5_authored_hint": {
          "courseB_collector_loops5_a": "Use more than one loop to get the job done.",
          "courseB_collector_loops5_b": "Try running the code a couple of times to see what happens."
        },
        "courseB_collector_loops5_2018_authored_hint": {
          "courseB_collector_loops5_a": "Use more than one loop to get the job done.",
          "courseB_collector_loops5_b": "Try running the code a couple of times to see what happens."
        },
        "courseB_collector_loops6_authored_hint": {
          "courseB_collector_loops6_a": "Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time.",
          "courseB_collector_loops6_b": "You can change the number of times the repeat loop runs by clicking on the \"3\" and choosing a different number.",
          "courseB_collector_loops6_c": "You will want to use 3 `repeat` loops to solve this puzzle.",
          "courseB_collector_loops6_d": "If you're confused, try breaking this puzzle into 3 pieces."
        },
        "courseB_collector_loops6_2018_authored_hint": {
          "courseB_collector_loops6_a": "Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time.",
          "courseB_collector_loops6_b": "You can change the number of times the repeat loop runs by clicking on the \"3\" and choosing a different number.",
          "courseB_collector_loops6_c": "You will want to use 3 `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loops to solve this puzzle.",
          "courseB_collector_loops6_d": "If you're confused, try breaking this puzzle into 3 pieces."
        },
        "courseB_collector_loops7_authored_hint": {
          "courseB_collector_loops7_a": "If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.",
          "courseB_collector_loops7_b": "You will need 3 repeat loops to solve this puzzle, and don't forget the extra treasure at the end!"
        },
        "courseB_collector_loops7_2018_authored_hint": {
          "courseB_collector_loops7_a": "If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.",
          "courseB_collector_loops7_b": "You will need 3 repeat loops to solve this puzzle, and don't forget the extra treasure at the end!"
        },
        "courseB_collector_loops8_authored_hint": {
          "courseB_collector_loops8_challenge_a": "If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern."
        },
        "courseB_collector_loops8_2018_authored_hint": {
          "courseB_collector_loops8_challenge_a": "If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern."
        },
        "courseB_collector_loops9_authored_hint": {
          "courseB_collector_loops9_a": "Does this seem too hard?  Break it up into 3 little problems to make it feel easier.\n",
          "courseB_collector_loops9_b": "You will need 3 repeat loops, one after the other, for this solution."
        },
        "courseB_collector_loops9_2018_authored_hint": {
          "courseB_collector_loops9_a": "Does this seem too hard?  Break it up into 3 little problems to make it feel easier.\n",
          "courseB_collector_loops9_b": "You will need 3 repeat loops, one after the other, for this solution."
        },
        "courseB_collector_loops_challenge1_authored_hint": {
          "courseB_collector_loops_challenge1_b": "Start by looping the following commands:\n\n<xml>\n  <block type=\"maze_moveSouth\">\n    <next>\n    <block type=\"collector_collect\"></block>\n    </next>\n    </block>\n</xml>\n",
          "courseB_collector_loops_challenge1_c": "Move East twice between each path.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\n\nYou can do this with only 14 blocks. Click for one more hint to see a solution. \n",
          "courseB_collector_loops_challenge1_d": "Try this!\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge1_2018_authored_hint": {
          "courseB_collector_loops_challenge1_b": "Start by looping the following commands:\n\n<xml>\n  <block type=\"maze_moveSouth\">\n    <next>\n    <block type=\"collector_collect\"></block>\n    </next>\n    </block>\n</xml>\n",
          "courseB_collector_loops_challenge1_c": "Move East twice between each path.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\n\nYou can do this with only 14 blocks. Click for one more hint to see a solution. \n",
          "courseB_collector_loops_challenge1_d": "Try this!\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2_authored_hint": {
          "courseB_collector_loops_challenge2_a": "If something goes wrong, don't be afraid to start over. Don't give up!",
          "courseB_collector_loops_challenge2_b": "If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!\n\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "Try using a `repeat` block to collect the final pile of treasure!",
          "courseB_collector_loops_challenge2_d": "Try this solution:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2_2018_authored_hint": {
          "courseB_collector_loops_challenge2_a": "If something goes wrong, don't be afraid to start over. Don't give up!",
          "courseB_collector_loops_challenge2_b": "If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!\n\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "Try using a `repeat` block to collect the final pile of treasure!",
          "courseB_collector_loops_challenge2_d": "Try this solution:\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2a_authored_hint": {
          "courseB_collector_loops_challenge2a_a": "If something goes wrong, try debugging it. Don't give up!",
          "courseB_collector_loops_challenge2a_b": "Look at this option for getting through the maze. Do you see a pattern that you can repeat?",
          "courseB_collector_loops_challenge2a_c": "To collect all of the treasure, you will either need to add two  <xml> <block type=\"collector_collect\"/></xml> blocks inside your loop, or put the block inside of its own `repeat` block."
        },
        "courseB_collector_loops_challenge2a_2018_authored_hint": {
          "courseB_collector_loops_challenge2a_a": "If something goes wrong, try debugging it. Don't give up!",
          "courseB_collector_loops_challenge2a_b": "Look at this option for getting through the maze. Do you see a pattern that you can repeat?",
          "courseB_collector_loops_challenge2a_c": "To collect all of the treasure, you will either need to add two  <xml> <block type=\"collector_collect\"/></xml> blocks inside your loop, or put the block inside of its own `repeat` block."
        },
        "courseB_collector_loops_challenge`_authored_hint": {
          "courseA_collector_loops_challenge2_b": "You only need to use one ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) block to solve this.\n\n",
          "courseA_collector_loops_challenge2_a": "You can move back over the path a second time before moving south.\n\n![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)"
        },
        "courseB_collector_prog3_authored_hint": {
          "courseB_collector_prog3_a": "Try using a `repeat` block to collect your gold."
        },
        "courseB_iceage_loops1_authored_hint": {
          "courseB_iceage_loops1_a": "Watch out for broken ice! Scrat will fall right through!",
          "courseB_iceage_loops1_b": "You will have to use this block:\n\n<xml><block type=\"maze_moveEast\"/></xml>"
        },
        "courseB_iceage_loops10_authored_hint": {
          "courseB_iceage_loops10_a": "Watch out for broken ice! Scrat will fall into the water!",
          "courseB_iceage_loops10_b": "Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?",
          "courseB_iceage_loops10_c": "This is a long puzzle! Follow this path."
        },
        "courseB_iceage_loops2_authored_hint": {
          "courseB_iceage_loops2_a": "Break this puzzle into two pieces, one before the corner, and one after the corner.",
          "courseB_iceage_loops2_b": "If you get stuck, try saying the steps out loud.",
          "courseB_iceage_loops2_c": "Follow this path to get Scrat to the acorn."
        },
        "courseB_iceage_loops3_authored_hint": {
          "courseB_iceage_loops3_b": "To repeat code, drag out a `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml>loop, then put the block you want inside of it."
        },
        "courseB_iceage_loops4_authored_hint": {
          "courseB_iceage_loops4_a": "Try writing down the steps Scrat would take to get to the acorn. Do you see a pattern?",
          "courseB_iceage_loops4_b": "Don't be afraid to run your code and see what happens!",
          "courseB_iceage_loops4_c": "This is the path Scrat should take."
        },
        "courseB_iceage_loops6_authored_hint": {
          "courseB_iceage_loops6_a": "Your final code will have **three** movement blocks.",
          "courseB_iceage_loops6_b": "You only need to add **one** more loop!",
          "courseB_iceage_loops6_c": "Your final path should look like this."
        },
        "courseB_iceage_loops7_authored_hint": {
          "courseB_iceage_loops7_a": "If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?",
          "courseB_iceage_loops7_b": "This is the path Scrat should take to get to the acorn."
        },
        "courseB_iceage_loops8_authored_hint": {
          "courseB_iceage_loops8_a": "Are the movement blocks right? What else can you change?",
          "courseB_iceage_loops8_b": "The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.",
          "courseB_iceage_loops8_c": "Use loops to help Scrat follow this path."
        },
        "courseB_iceage_loops9_authored_hint": {
          "courseB_iceage_loops9_a": "Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!",
          "courseB_iceage_loops9_b": "Your final code should have **4** loops.",
          "courseB_iceage_loops9_c": "Scrat should follow this path to get the acorn."
        },
        "courseB_maze_seq1_authored_hint": {
          "courseB_maze_seq1_a": "Connect blocks to the <xml><block type=\"when_run\"/></xml> block to make the bird move!",
          "courseB_maze_seq1_b": "Drag three of these <xml><block type=\"maze_moveSouth\"/></xml> arrows out and connect them to the <xml><block type=\"when_run\"/></xml> block to get your bird to the pig."
        },
        "courseB_maze_seq10_authored_hint": {
          "courseB_maze_seq10_a": "Try writing down the steps on a piece of paper first.",
          "courseB_maze_seq10_b": "You will need to move in two different directions to reach the pig."
        },
        "courseB_maze_seq11_authored_hint": {
          "courseB_maze_seq11_a": "Try writing down the steps on a piece of paper first.",
          "courseB_maze_seq11_b": "Solve the puzzle in two parts: one before the corner and one after the corner."
        },
        "courseB_maze_seq1_2018_authored_hint": {
          "courseB_maze_seq1_a": "Connect blocks to the <xml><block type=\"when_run\"/></xml> block to make Scrat move!",
          "courseB_maze_seq1_b": "Drag three of these <xml><block type=\"maze_moveSouth\"/></xml> arrows out and connect them to the <xml><block type=\"when_run\"/></xml> block to get Scrat to the acorn."
        },
        "courseB_maze_seq2_authored_hint": {
          "courseB_maze_seq2_a": "This program is missing one block. Can you figure out which one?",
          "courseB_maze_seq2_b": "Try running the code you are given to see what the bird needs to do next."
        },
        "courseB_maze_seq2_2018_authored_hint": {
          "courseB_maze_seq2_a": "This program is missing one block. Can you figure out which one?",
          "courseB_maze_seq2_b": "Try running the code you are given to see what Scrat needs to do next."
        },
        "courseB_maze_seq3_authored_hint": {
          "courseB_maze_seq3_a": "One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?",
          "courseB_maze_seq3_b": "Try using the step button to find where the program goes wrong. Is it the first step? The second?",
          "courseB_maze_seq3_c": "The <xml><block type=\"maze_moveWest\"/></xml> block doesn't seem to be moving the bird in the right direction."
        },
        "courseB_maze_seq3_2018_authored_hint": {
          "courseB_maze_seq3_a": "One of the blocks is moving Scrat in the wrong direction. Can you figure out which one and replace it with the correct block?",
          "courseB_maze_seq3_b": "Try using the step button to find where the program goes wrong. Is it the first step? The second?",
          "courseB_maze_seq3_c": "The <xml><block type=\"maze_moveWest\"/></xml> block doesn't seem to be moving the bird in the right direction."
        },
        "courseB_maze_seq4_authored_hint": {
          "courseB_maze_seq4_a": "Try adding one instruction at a time until you get to the pig.",
          "courseB_maze_seq4_b": "You will want to use the <xml><block type=\"maze_moveEast\"/></xml> block to solve this puzzle."
        },
        "courseB_maze_seq4_2018_authored_hint": {
          "courseB_maze_seq4_a": "Try adding one instruction at a time until you get to the acorn.",
          "courseB_maze_seq4_b": "You will want to use the <xml><block type=\"maze_moveEast\"/></xml> block to solve this puzzle."
        },
        "courseB_maze_seq5_authored_hint": {
          "courseB_maze_seq5_a": "If you get stuck, try drawing out the path on paper.",
          "courseB_maze_seq5_b": "There are 2 ways to solve this puzzle!",
          "courseB_maze_seq5_c": "Not sure how to get to the pig?  Try this path."
        },
        "courseB_maze_seq5_2018_authored_hint": {
          "courseB_maze_seq5_a": "If you get stuck, try drawing out the path on paper.",
          "courseB_maze_seq5_b": "There are 2 ways to solve this puzzle!",
          "courseB_maze_seq5_c": "Not sure how to get to the acorn?  Try this path."
        },
        "courseB_maze_seq6_authored_hint": {
          "courseB_maze_seq6_a": "Your final code should have three movement blocks.",
          "courseB_maze_seq6_b": "If you get stuck, try solving the puzzle in two parts, one sideways and one up-and-down.",
          "courseB_maze_seq5_c": "There are two ways to solve this puzzle.",
          "courseB_maze_seq5_d": "Not sure how to get to the pig? Try this path!"
        },
        "courseB_maze_seq6_2018_authored_hint": {
          "courseB_maze_seq6_a": "Your final code should have three movement blocks.",
          "courseB_maze_seq6_b": "If you get stuck, try solving the puzzle in two parts, one sideways and one up-and-down.",
          "courseB_maze_seq5_c": "There are two ways to solve this puzzle.",
          "courseB_maze_seq5_d": "Not sure how to get to the acorn? Try this path!"
        },
        "courseB_maze_seq7_authored_hint": {
          "courseB_maze_seq7_a": "Add 1 block to move the bird to the pig.",
          "courseB_maze_seq7_b": "Try running the code that's given to you and see where you end up.",
          "courseB_maze_seq7_c": "Can't get to the pig?  Try this path!"
        },
        "courseB_maze_seq7_2018_authored_hint": {
          "courseB_maze_seq7_a": "Add 1 block to move Scrat to the acorn.",
          "courseB_maze_seq7_b": "Try running the code that's given to you and see where you end up.",
          "courseB_maze_seq7_c": "Can't get to the acorn?  Try this path!"
        },
        "courseB_maze_seq8_authored_hint": {
          "courseB_maze_seq8_a": "Try adding one block at a time until you solve the puzzle.",
          "courseB_maze_seq8_b": "There are two ways to solve this puzzle!",
          "courseB_maze_seq8_c": "Don't know which way to go? Try this path!"
        },
        "courseB_maze_seq8_2018_authored_hint": {
          "courseB_maze_seq8_a": "Try adding one block at a time until you solve the puzzle.",
          "courseB_maze_seq8_b": "There is more than one way to solve this puzzle!",
          "courseB_maze_seq8_c": "Don't know which way to go? Try this path!"
        },
        "courseB_maze_seq9_authored_hint": {
          "courseB_maze_seq9_a": "Try writing down all of the steps on a piece of paper first.",
          "courseB_maze_seq9_b": "Build your program a block at a time and test as you build.",
          "courseB_maze_seq9_c": "There are two ways to solve this puzzle.",
          "courseB_maze_seq9_d": "Stuck?  Try this path!"
        },
        "courseB_maze_seq9_2018_authored_hint": {
          "courseB_maze_seq9_a": "Try writing down all of the steps on a piece of paper first.",
          "courseB_maze_seq9_b": "Build your program a block at a time and test as you build.",
          "courseB_maze_seq9_c": "There are two ways to solve this puzzle.",
          "courseB_maze_seq9_d": "Stuck?  Try this path!"
        },
        "courseB_maze_seqCold_authored_hint": {
          "courseB_maze_seqCold_a": "Stuck? Try tracing the bird's path with your finger.",
          "courseB_maze_seqCold_b": "The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )"
        },
        "courseB_maze_seqOld_authored_hint": {
          "courseB_maze_seqOld_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "courseB_maze_seq_challenge1_authored_hint": {
          "courseB_maze_seq_challenge1_a": "The shortest path might not work this time.",
          "courseB_maze_seq_challenge1_b": "Try using the <xml><block type=\"maze_moveWest\"/></xml> block to start."
        },
        "courseB_maze_seq_challenge1_2018_authored_hint": {
          "courseB_maze_seq_challenge1_a": "The shortest path might not work this time.",
          "courseB_maze_seq_challenge1_b": "Try using the <xml><block type=\"maze_moveWest\"/></xml> block to start."
        },
        "courseB_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge2_a": "You do not need to add or remove blocks to solve this puzzle.",
          "courseB_maze_seq_challenge2_b": "Rearrange the blocks and take the staircase pattern path."
        },
        "courseB_maze_seq_challenge2_2018_authored_hint": {
          "courseB_maze_seq_challenge2_a": "You do not need to add or remove blocks to solve this puzzle.",
          "courseB_maze_seq_challenge2_b": "Rearrange the blocks and take the staircase pattern path."
        },
        "courseB_playlab_events2_authored_hint": {
          "courseB_playlab_events2_a": "This is the block to have Daisy say something:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events2_2018_authored_hint": {
          "courseB_playlab_events2_a": "This is the block to have Daisy say something:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events3_authored_hint": {
          "courseB_playlab_events3_a": "This is the block you should use to add the event:\n\n<xml>\n<block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">0</title>\n  </block>\n  </xml>",
          "courseB_playlab_events3_b": "This is the block you need to switch Daisy's mood:\n\n<xml>\n<block type=\"studio_setSpriteEmotion\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">random</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events3_2018_authored_hint": {
          "courseB_playlab_events3_a": "This is the block you should use to add the event:\n\n<xml>\n<block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">0</title>\n  </block>\n  </xml>",
          "courseB_playlab_events3_b": "This is the block you need to switch Daisy's mood:\n\n<xml>\n<block type=\"studio_setSpriteEmotion\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">random</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events4_authored_hint": {
          "courseB_playlab_events4_a": "This is the event that controls the left arrow:\n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block>\n  </xml>",
          "courseB_playlab_events4_b": "This is the block that makes the knight move left.\n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events4_2018_authored_hint": {
          "courseB_playlab_events4_a": "This is the event that controls the left arrow:\n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block>\n  </xml>",
          "courseB_playlab_events4_b": "This is the block that makes the knight move left.\n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events5_authored_hint": {
          "courseB_playlab_events5_a": "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>",
          "courseB_playlab_events5_b": "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events5_2018_authored_hint": {
          "courseB_playlab_events5_a": "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>",
          "courseB_playlab_events5_b": "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events6_authored_hint": {
          "courseB_playlab_events6_a": "You will need these event blocks:\n\n<xml>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">up</title>\n  </block>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">down</title>\n  </block>\n  </xml>",
          "courseB_playlab_events6_b": "Use the drop down arrows on the green `when ___ arrow pressed` event blocks to choose different directions.\n\n![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)",
          "courseB_playlab_events6_c": "Get to all of the flags to pass!"
        },
        "courseB_playlab_events6_2018_authored_hint": {
          "courseB_playlab_events6_a": "You will need these event blocks:\n\n<xml>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">up</title>\n  </block>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">down</title>\n  </block>\n  </xml>",
          "courseB_playlab_events6_b": "Use the drop down arrows on the green `when ___ arrow pressed` event blocks to choose different directions.\n\n![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)",
          "courseB_playlab_events6_c": "Get to all of the flags to pass!"
        },
        "courseB_playlab_events7_authored_hint": {
          "courseB_playlab_events7_a": "This is the event block that you will need:\n\n<xml>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_b": "This is the block you need to play a sound.\n\n<xml>\n<block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_c": "This is the block you need to make the knight vanish:\n\n<xml>\n<block type=\"studio_vanish\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events7_2018_authored_hint": {
          "courseB_playlab_events7_a": "This is the event block that you will need:\n\n<xml>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_b": "This is the block you need to play a sound.\n\n<xml>\n<block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_c": "This is the block you need to make the knight vanish:\n\n<xml>\n<block type=\"studio_vanish\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_eventsToolbox_authored_hint": {
          "courseB_playlab_events7_a": "This is the event block that you will need:\n\n![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)",
          "courseB_playlab_events7_b": "This is the block you need to play a sound.\n\n![](https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)",
          "courseB_playlab_events7_c": "This is the block you need to make the knight vanish:\n\n![](https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)"
        },
        "courseB_playlab_events_challenge1_authored_hint": {
          "courseB_playlab_events_challenge1_a": "Make the other animals move down when you press `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>",
          "courseB_playlab_events_challenge1_b": "Change the speed of the animals by using this block:\n\n<xml>\n  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.NORMAL</title>\n  </block></xml>\n",
          "courseB_playlab_events_challenge1_c": "What will the everyone say when the race is over? Make them talk with this event:\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_saySpriteChoices\">\n        <title name=\"SPRITE\">2</title>\n        <title name=\"VALUE\">Woo hoo!</title>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_playlab_events_challenge1_2018_authored_hint": {
          "courseB_playlab_events_challenge1_a": "Make the other animals move down when you press `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>",
          "courseB_playlab_events_challenge1_b": "Change the speed of the animals by using this block:\n\n<xml>\n  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.NORMAL</title>\n  </block></xml>\n",
          "courseB_playlab_events_challenge1_c": "What will the everyone say when the race is over? Make them talk with this event:\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_saySpriteChoices\">\n        <title name=\"SPRITE\">2</title>\n        <title name=\"VALUE\">Woo hoo!</title>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_playlab_events_challenge2_authored_hint": {
          "courseB_playlab_events_challenge2_a": "Each animal in the game should disappear when clicked. It should also come back after a second or two!",
          "courseB_playlab_events_challenge2_b": "Use other event blocks to make the other animals disappear!\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "Use extra commands to play sounds or score points when you click the animals!\n\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "Mix it up!\n\nMake some animals give more points than others.\nUse different sounds.\nChange the animals' moods!"
        },
        "courseB_playlab_events_challenge2_2018_authored_hint": {
          "courseB_playlab_events_challenge2_a": "Each animal in the game should disappear when clicked. It should also come back after a second or two!",
          "courseB_playlab_events_challenge2_b": "Use other event blocks to make the other animals disappear!\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "Use extra commands to play sounds or score points when you click the animals!\n\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "Mix it up!\n\nMake some animals give more points than others.\nUse different sounds.\nChange the animals' moods!"
        },
        "courseB_playlab_events_challenge2_embed_authored_hint": {
          "courseB_playlab_events_challenge2_a": "Each animal in the game should vanish when tapped. It should also come back after a second or two!",
          "courseB_playlab_events_challenge2_b": "Use other event blocks to make the other animals disappear!\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "Use extra commands to play sounds or score points when you click the animals!\n\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "Mix it up!\n\nMake some animals give more points than others.\nUse different sounds.\nChange the animals' moods!"
        },
        "courseB_playlab_events_challenge2_template_authored_hint": {
          "courseB_playlab_events_challenge2_a": "Each animal in the game should vanish when tapped. It should also come back after a second or two!",
          "courseB_playlab_events_challenge2_b": "Use other event blocks to make the other animals disappear!\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "Use extra commands to play sounds or score points when you click the animals!\n\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "Mix it up!\n\nMake some animals give more points than others.\nUse different sounds.\nChange the animals' moods!"
        },
        "courseB_playlab_events_challenge2_template_2018_authored_hint": {
          "courseB_playlab_events_challenge2_a": "Each animal in the game should vanish when tapped. It should also come back after a second or two!",
          "courseB_playlab_events_challenge2_b": "Use other event blocks to make the other animals disappear!\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "Use extra commands to play sounds or score points when you click the animals!\n\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "Mix it up!\n\nMake some animals give more points than others.\nUse different sounds.\nChange the animals' moods!"
        },
        "courseB_starWars_prog1_authored_hint": {
          "courseB_starWars_prog1_a": "Try adding blocks one at a time, then click \"Run\" to see what happens.",
          "courseB_starWars_prog1_b": "You will want to move East to solve this puzzle. How far do you need to move?\n\n<xml><block type=\"studio_moveEast\"/></xml>\n"
        },
        "courseB_starWars_prog1_2018_authored_hint": {
          "courseB_starWars_prog1_a": "Try adding blocks one at a time, then click \"Run\" to see what happens.",
          "courseB_starWars_prog1_b": "You will want to move East to solve this puzzle. How far do you need to move?\n\n<xml><block type=\"studio_moveEast\"/></xml>\n"
        },
        "courseB_starWars_prog2_authored_hint": {
          "courseB_starWars_prog2_a": "Split this problem into two parts. Get one one pile of scrap metal, then figure out how to get to the other one."
        },
        "courseB_starWars_prog2_2018_authored_hint": {
          "courseB_starWars_prog2_a": "Split this problem into two parts. Get one one pile of scrap metal, then figure out how to get to the other one."
        },
        "courseB_starWars_prog3_authored_hint": {
          "courseB_starWars_prog3_a": "You will need to move 3 ways to solve this puzzle.",
          "courseB_starWars_prog3_b": "Build one piece of code at a time. Run it to figure out where to go from there."
        },
        "courseB_starWars_prog3_2018_authored_hint": {
          "courseB_starWars_prog3_a": "You will need to move 3 ways to solve this puzzle.",
          "courseB_starWars_prog3_b": "Build one piece of code at a time. Run it to figure out where to go from there."
        },
        "courseB_starWars_prog4_authored_hint": {
          "courseB_starWars_prog4_a": "Build one piece of code at a time. Run it to figure out where to go from there.",
          "courseB_starWars_prog4_b": "Try using the `repeat` block for shorter code.\n\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog4_2018_authored_hint": {
          "courseB_starWars_prog4_a": "Build one piece of code at a time. Run it to figure out where to go from there.",
          "courseB_starWars_prog4_b": "Try using the `repeat` block for shorter code.\n\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog5_authored_hint": {
          "courseB_starWars_prog5_a": "Doesn't this pattern look a little like the last puzzle?",
          "courseB_starWars_prog5_b": "BB-8 will grab the scrap metal as he rolls over it.",
          "courseB_starWars_prog5_c": "Trace this pattern with your finger. Count the pieces of metal as you move.",
          "courseB_starWars_prog5_da": "Look what happens if you use the same solution as the stair-step puzzle:\n\n![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)"
        },
        "courseB_starWars_prog5_2018_authored_hint": {
          "courseB_starWars_prog5_a": "Doesn't this pattern look a little like the last puzzle?",
          "courseB_starWars_prog5_b": "BB-8 will grab the scrap metal as he rolls over it.",
          "courseB_starWars_prog5_c": "Trace this pattern with your finger. Count the pieces of metal as you move.",
          "courseB_starWars_prog5_da": "Look what happens if you use the same solution as the stair-step puzzle:\n\n![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)"
        },
        "courseB_starWars_prog6_authored_hint": {
          "courseB_starWars_prog6_a": "This pattern is just a stair step with two moves per direction!",
          "courseB_starWars_prog6_b": "Try using the `repeat` block for shorter code.\n\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog6_2018_authored_hint": {
          "courseB_starWars_prog6_a": "This pattern is just a stair step with two moves per direction!",
          "courseB_starWars_prog6_b": "Try using the `repeat` block for shorter code.\n\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog7_authored_hint": {
          "courseB_starWars_prog7_a": "Doesn't this pattern look a little like the last puzzle?",
          "courseB_starWars_prog7_b": "BB-8 will grab the scrap metal as he rolls over it.",
          "courseB_starWars_prog7_c": "Try drawing the large stair step pattern over this puzzle. Does it cover all of the scrap metal?"
        },
        "courseB_starWars_prog7_2018_authored_hint": {
          "courseB_starWars_prog7_a": "Doesn't this pattern look a little like the last puzzle?",
          "courseB_starWars_prog7_b": "BB-8 will grab the scrap metal as he rolls over it.",
          "courseB_starWars_prog7_c": "Try drawing the large stair step pattern over this puzzle. Does it cover all of the scrap metal?"
        },
        "courseB_starWars_prog8_authored_hint": {
          "courseB_starWars_prog8_a": "It is okay to go back over a set of spaces where you have already traveled.",
          "courseB_starWars_prog8_b": "Try using the `repeat` block to see what happens to the code that you put inside.\n\n<xml>\n  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog8_2018_authored_hint": {
          "courseB_starWars_prog8_a": "It is okay to go back over a set of spaces where you have already traveled.",
          "courseB_starWars_prog8_b": "Try using the `repeat` block to see what happens to the code that you put inside.\n\n<xml>\n  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog9_authored_hint": {
          "courseB_starWars_prog9_a": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "courseB_starWars_prog9_b": "There are many ways to solve this puzzle.",
          "courseB_starWars_prog9_c": "Could a `repeat` loop help out here?"
        },
        "courseB_starWars_prog9_2018_authored_hint": {
          "courseB_starWars_prog9_a": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "courseB_starWars_prog9_b": "There are many ways to solve this puzzle.",
          "courseB_starWars_prog9_c": "Could a `repeat` <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block></xml>loop help out here?"
        },
        "courseC_PlayLab_events1_authored_hint": {
          "courseC_PlayLab_events1_a": "Attach this block to the `when run` block:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events1_2018_authored_hint": {
          "courseC_PlayLab_events1_a": "Attach this block to the `when run` block:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events2_authored_hint": {
          "courseC_PlayLab_events2_a": "Attach two of these blocks to the `when run` block:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>",
          "courseC_PlayLab_events2_b": "Use the dropdown menu on the second `actor __ say` block to change which actor speaks."
        },
        "courseC_PlayLab_events2_2018_authored_hint": {
          "courseC_PlayLab_events2_a": "Attach two of these blocks to the `when run` block:\n\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>",
          "courseC_PlayLab_events2_b": "Use the dropdown menu on the second `actor __ say` block to change which actor speaks."
        },
        "courseC_PlayLab_events3_authored_hint": {
          "courseC_PlayLab_events3_a": "You only need to move Jorge to the right by about 25 pixels to solve this puzzle.",
          "courseC_PlayLab_events3_b": "Is there a block in the toolbox that looks like it would move an actor?",
          "courseC_PlayLab_events3_c": "Attach this block to the `when run` block:\n\n<xml>\n<block type=\"studio_moveDistance\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"DIR\">2</title>\n    <title name=\"DISTANCE\">25</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events3_2018_authored_hint": {
          "courseC_PlayLab_events3_a": "You only need to move Jorge to the right by about 25 pixels to solve this puzzle.",
          "courseC_PlayLab_events3_b": "Is there a block in the toolbox that looks like it would move an actor?",
          "courseC_PlayLab_events3_c": "Attach this block to the `when run` block:\n\n<xml>\n<block type=\"studio_moveDistance\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"DIR\">2</title>\n    <title name=\"DISTANCE\">25</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events4_authored_hint": {
          "courseC_PlayLab_events4_b": "When the \"Run\" button is clicked, Jorge needs to move right **100** pixels to reach Olive the Cat.",
          "courseC_PlayLab_events4_a": "You will need to attach an `actor __ say` block to the `when actor touches` event to solve this puzzle."
        },
        "courseC_PlayLab_events4_2018_authored_hint": {
          "courseC_PlayLab_events4_b": "When the \"Run\" button is clicked, Jorge needs to move right **100** pixels to reach Olive the Cat.",
          "courseC_PlayLab_events4_a": "You will need to attach an `actor __ say` block to the `when actor touches` event to solve this puzzle."
        },
        "courseC_PlayLab_events5_authored_hint": {
          "courseC_PlayLab_events5_a": "You will need to click the dropdown menu in the `actor say` block to find the text \"What's new?\"",
          "courseC_PlayLab_events5_b": "Click on Octavia when you run your program to check that it works!"
        },
        "courseC_PlayLab_events5_2018_authored_hint": {
          "courseC_PlayLab_events5_a": "You will need to click the dropdown menu in the `actor say` block to find the text \"What's new?\"",
          "courseC_PlayLab_events5_b": "Click on Octavia when you run your program to check that it works!"
        },
        "courseC_PlayLab_events6_authored_hint": {
          "courseC_PlayLab_events6_a": "Each green `when arrow` block should have one action below it.",
          "courseC_PlayLab_events6_b": "Use the drop down menu on the `move actor 1` block to change which direction Waddles moves.",
          "courseC_PlayLab_events6_c": "When you're done, you should be able to move Waddles around using the arrow keys on your computer!"
        },
        "courseC_PlayLab_events6_2018_authored_hint": {
          "courseC_PlayLab_events6_a": "Each green `when arrow` block should have one action below it.",
          "courseC_PlayLab_events6_b": "Use the drop down menu on the `move actor 1` block to change which direction Waddles moves.",
          "courseC_PlayLab_events6_c": "When you're done, you should be able to move Waddles around using the arrow keys on your computer!"
        },
        "courseC_PlayLab_events7_authored_hint": {
          "courseC_PlayLab_events7_a": "Use both the `move actor 2 up 400 pixels` block and the `move actor 2 down 400 pixels` block inside the `repeat forever` loop to solve this puzzle. ",
          "courseC_PlayLab_events7_b": "The `repeat forever` loop does not need to be connected to any other event blocks; it will run on its own."
        },
        "courseC_PlayLab_events7_2018_authored_hint": {
          "courseC_PlayLab_events7_a": "Use both the `move actor 2 up 400 pixels` block and the `move actor 2 down 400 pixels` block inside the `repeat forever` loop to solve this puzzle. ",
          "courseC_PlayLab_events7_b": "The `repeat forever` loop does not need to be connected to any other event blocks; it will run on its own."
        },
        "courseC_PlayLab_events8_authored_hint": {
          "courseC_PlayLab_events8_a": "You will need to connect blocks to the `when actor touches` block to make this happen correctly.",
          "courseC_PlayLab_events8_b": "The `actor say` and `play sound` blocks in the toolbox should help you out!"
        },
        "courseC_PlayLab_events8_2018_authored_hint": {
          "courseC_PlayLab_events8_a": "You will need to connect blocks to the `when actor touches` block to make this happen correctly.",
          "courseC_PlayLab_events8_b": "The `actor say` and `play sound` blocks in the toolbox should help you out!"
        },
        "courseC_PlayLab_events9_authored_hint": {
          "courseC_PlayLab_events9_a": "The `score point` block will help you to solve this puzzle.",
          "courseC_PlayLab_events9_b": "Make sure that your new `when actor touches` block says actor **1** and actor **3**.",
          "courseC_PlayLab_events9_c": "You can have more than one `when actor touches` event in your workspace at the same time, so you don't have to delete the first one!"
        },
        "courseC_PlayLab_events9_2018_authored_hint": {
          "courseC_PlayLab_events9_a": "The `score point` block will help you to solve this puzzle.",
          "courseC_PlayLab_events9_b": "Make sure that your new `when actor touches` block says actor **1** and actor **3**.",
          "courseC_PlayLab_events9_c": "You can have more than one `when actor touches` event in your workspace at the same time, so you don't have to delete the first one!"
        },
        "courseC_PlayLab_eventsA_authored_hint": {
          "courseC_PlayLab_eventsA_a": "Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.",
          "courseC_PlayLab_eventsA_b": "You will need to specifically drag a `when run` event block into the workspace to solve this puzzle."
        },
        "courseC_PlayLab_eventsA_2018_authored_hint": {
          "courseC_PlayLab_eventsA_a": "Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.",
          "courseC_PlayLab_eventsA_b": "You will need to specifically drag a `when run` event block into the workspace to solve this puzzle."
        },
        "courseC_PlayLab_eventsFP_authored_hint": {
          "idea1": "*Need an idea?*\n\n**Who's there?** Make characters appear with random images, so no one knows who's showing up next.\n\n![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)",
          "idea2": "*Need an idea?*\n\n**Going on an Adventure** - Change the background, then have the characters talk about where they are now.\n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)",
          "idea3": "*Need an idea?*\n\n**Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen."
        },
        "courseC_PlayLab_eventsFP_2018_authored_hint": {
          "idea1": "*Need an idea?*\n\n**Who's there?** Make characters appear with random images, so no one knows who's showing up next.\n\n![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)",
          "idea2": "*Need an idea?*\n\n**Going on an Adventure** - Change the background, then have the characters talk about where they are now.\n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)",
          "idea3": "*Need an idea?*\n\n**Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen."
        },
        "courseC_PlayLab_events_challenge1_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "You can use this block to move actors to different places on the game space.\n\n<xml> <block type=\"studio_setSpritePosition\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">12</title>\n  </block></xml>\n",
          "courseC_PlayLab_events_challenge_b": "Try using `set actor 1 to the middle left position` when it touches either of the other actors. This will reset the game so the player can keep trying!",
          "courseC_PlayLab_events_challenge_c": "You might also want to try changing the speed of the different actors to make the game easier or more challenging!\n\n<xml>  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n  </block></xml>"
        },
        "courseC_PlayLab_events_challenge1_2018_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "You can use this block to move actors to different places on the game space.\n\n<xml> <block type=\"studio_setSpritePosition\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">12</title>\n  </block></xml>\n",
          "courseC_PlayLab_events_challenge_b": "Try using `set actor 1 to the middle left position` when it touches either of the other actors. This will reset the game so the player can keep trying!",
          "courseC_PlayLab_events_challenge_c": "You might also want to try changing the speed of the different actors to make the game easier or more challenging!\n\n<xml>  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n  </block></xml>"
        },
        "courseC_PlayLab_events_challenge1_xy_blocks_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "The two values on this block allow you to move an actor to any pixel in the game area. You can choose any number from 0-400.",
          "courseC_PlayLab_events_challenge_b": "You can decide which numbers to use, by thinking about how far over from the top left corner you'd like to move. The first number is the number of pixels from the left. The second number is the number of pixels from the top.\n\n<xml><block type=\"studio_setSpriteXY\" inline=\"true\">\n    <value name=\"SPRITE\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">1</title>\n      </block>\n    </value>\n    <value name=\"XPOS\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">37</title>\n      </block>\n    </value>\n    <value name=\"YPOS\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">187</title>\n      </block>\n    </value>\n  </block></xml>\n\n![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)"
        },
        "courseC_artist_loop1_authored_hint": {
          "courseC_artist_loop1_a": "You don't need to make any changes to the loop, just put one block above it.",
          "courseC_artist_loop1_b": "This is the block you will need to set a pattern:\n\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>\n\nChoose any pattern you like!"
        },
        "courseC_artist_loop1_2018_authored_hint": {
          "courseC_artist_loop1_a": "You don't need to make any changes to the loop, just put one block above it.",
          "courseC_artist_loop1_b": "This is the block you will need to set a pattern:\n\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>\n\nChoose any pattern you like!"
        },
        "courseC_artist_loops1a_authored_hint": {
          "courseC_artist_loops1a_a": "This is the first block you will need:\n\n<xml>\n<block type=\"jump_to_xy\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n</xml>",
          "courseC_artist_loops1a_b": "Use this block to draw the sticker!\n\n<xml>\n<block type=\"sticker\">\n    <title name=\"VALUE\">Bird</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops1a_2018_authored_hint": {
          "courseC_artist_loops1a_a": "This is the first block you will need:\n\n<xml>\n<block type=\"jump_to_xy\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n</xml>",
          "courseC_artist_loops1a_b": "Use this block to draw the sticker!\n\n<xml>\n<block type=\"sticker\">\n    <title name=\"VALUE\">Bird</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops2a_authored_hint": {
          "courseC_artist_loops2a_a": "Inside your loop, you will want to jump to 200 over 200 down, then draw the bird sticker, then turn 30 degrees.",
          "courseC_artist_loops2a_b": "Click on the number at the top of the `repeat` loop to change how many times it repeats."
        },
        "courseC_artist_loops2a_2018_authored_hint": {
          "courseC_artist_loops2a_a": "Inside your loop, you will want to jump to 200 over 200 down, then draw the bird sticker, then turn 30 degrees.",
          "courseC_artist_loops2a_b": "Click on the number at the top of the `repeat` loop to change how many times it repeats."
        },
        "courseC_artist_loops3a_authored_hint": {
          "courseC_artist_loops3a_a": "You will want to add just one block inside of your loop, after the bird sticker.",
          "courseC_artist_loops3a_b": "Use the drop down menu on the `draw sticker` block to find the bat sticker."
        },
        "courseC_artist_loops3a_2018_authored_hint": {
          "courseC_artist_loops3a_a": "You will want to add just one block inside of your loop, after the bird sticker.",
          "courseC_artist_loops3a_b": "Use the drop down menu on the `draw sticker` block to find the bat sticker."
        },
        "courseC_artist_loops4a_authored_hint": {
          "courseC_artist_loops4a_a": "Use this block to jump forward:\n\n<xml>\n<block type=\"jump_by_constant\">\n    <title name=\"DIR\">jumpForward</title>\n    <title name=\"VALUE\">100</title>\n  </block>\n</xml>\n\nDon't forget to change how far!"
        },
        "courseC_artist_loops4a_2018_authored_hint": {
          "courseC_artist_loops4a_a": "Use this block to jump forward:\n\n<xml>\n<block type=\"jump_by_constant\">\n    <title name=\"DIR\">jumpForward</title>\n    <title name=\"VALUE\">100</title>\n  </block>\n</xml>\n\nDon't forget to change how far!"
        },
        "courseC_artist_loops5_authored_hint": {
          "courseC_artist_loops5_a": "Try using the `jump to` block to get your artist back toward the center:\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">100</title>\n    <title name=\"YPOS\">100</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops5a_authored_hint": {
          "courseC_artist_loops5a_a": "Use the drop down menus on the `draw sticker` blocks to change their images."
        },
        "courseC_artist_loops5a_2018_authored_hint": {
          "courseC_artist_loops5a_a": "Use the drop down menus on the `draw sticker` blocks to change their images."
        },
        "courseC_artist_loops5b_authored_hint": {
          "courseC_artist_loops5b_a": "Use this block to set the pattern of your lines:\n\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>",
          "courseC_artist_loops5b_b": "To make a design like the one above, you will want to move backward the same amount that you move forward."
        },
        "courseC_artist_loops5b_2018_authored_hint": {
          "courseC_artist_loops5b_a": "Use this block to set the pattern of your lines:\n\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>",
          "courseC_artist_loops5b_b": "To make a design like the one above, you will want to move backward the same amount that you move forward."
        },
        "courseC_artist_loops6_authored_hint": {
          "courseC_artist_loops6_a": "Try a triangle flower:\n<img src=\"https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png\" width=\"150px\" />\n\nOr a little green bug:\n<img src=\"https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png\" width=\"150px\" />\n"
        },
        "courseC_artist_loops6a_authored_hint": {
          "courseC_artist_loops6a_a": "To make a design like the one above, jump forward less than 75 pixels between each sticker."
        },
        "courseC_artist_loops6a_2018_authored_hint": {
          "courseC_artist_loops6a_a": "To make a design like the one above, jump forward less than 75 pixels between each sticker."
        },
        "courseC_artist_loops7a_authored_hint": {
          "courseC_artist_loops7a_a": "A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?\nCheck the suggested rotations to see that this works!"
        },
        "courseC_artist_loops7a_2018_authored_hint": {
          "courseC_artist_loops7a_a": "A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?\nCheck the suggested rotations to see that this works!"
        },
        "courseC_artist_loopsPre1a_authored_hint": {
          "courseC_artist_loopsPre1a_a": "Remember to put the `turn` block inside of the loop.",
          "courseC_artist_loopsPre1a_b": "Your `repeat` loop should have 3 blocks inside of it: `jump to 200 over 200 down`, `move forward by 50 pixels`, and `turn right by 60 degrees`."
        },
        "courseC_artist_loopsPre1a_2018_authored_hint": {
          "courseC_artist_loopsPre1a_a": "Remember to put the `turn` block inside of the loop.",
          "courseC_artist_loopsPre1a_b": "Your `repeat` loop should have 3 blocks inside of it: `jump to 200 over 200 down`, `move forward by 50 pixels`, and `turn right by 60 degrees`."
        },
        "courseC_artist_loopsPrePre1a_authored_hint": {
          "courseC_artist_loopsPrePre1a_a": "The first block you will need is:\n\n![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)",
          "courseC_artist_loopsPrePre1a_b": "To move forward 50 pixels, use this block:\n\n![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)"
        },
        "courseC_artist_loopsPrePre1a_2018_authored_hint": {
          "courseC_artist_loopsPrePre1a_a": "The first block you will need is:\n\n<xml>  <block type=\"jump_to_xy\" id=\"callMe\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block></xml>",
          "courseC_artist_loopsPrePre1a_b": "To move forward 50 pixels, use this block:\n\n<xml><block type=\"draw_move_by_constant\">\n    <title name=\"DIR\">moveForward</title>\n    <title name=\"VALUE\">50</title>\n  </block></xml>"
        },
        "courseC_artist_prog2_authored_hint": {
          "courseC_artist_prog2_a": "*\"If you use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, I will draw a line.\"*",
          "courseC_artist_prog2_b": "Having trouble turning the corner? Use the <xml><block type=\"draw_turn_by_constant_dropdown\"><title name=\"DIR\">turnRight</title><title name=\"VALUE\" config=\"45,60,90,120,180\">90</title></block></xml> block."
        },
        "courseC_artist_prog2_2018_authored_hint": {
          "courseC_artist_prog2_a": "*\"If you use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, I will draw a line.\"*",
          "courseC_artist_prog2_b": "Having trouble turning the corner? Use the <xml><block type=\"draw_turn_by_constant_dropdown\"><title name=\"DIR\">turnRight</title><title name=\"VALUE\" config=\"45,60,90,120,180\">90</title></block></xml> block."
        },
        "courseC_artist_prog3_authored_hint": {
          "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n- move forward\n- turn\n- move forward\n- turn\n- move forward\n- turn\n- move forward",
          "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
        },
        "courseC_artist_prog3_2018_authored_hint": {
          "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n- move forward\n- turn\n- move forward\n- turn\n- move forward\n- turn\n- move forward",
          "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
        },
        "courseC_artist_prog4_authored_hint": {
          "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
          "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n- move forward\n- turn left 120 degrees\n- move forward\n- turn left 120 degrees\n- move forward"
        },
        "courseC_artist_prog4_2018_authored_hint": {
          "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
          "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n- move forward\n- turn left 120 degrees\n- move forward\n- turn left 120 degrees\n- move forward"
        },
        "courseC_artist_prog5_authored_hint": {
          "courseC_artist_prog5_a": "Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.",
          "courseC_artist_prog5_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
          "courseC_artist_prog5_c": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseC_artist_prog5_d": "Each turn should be 90 degrees to the right."
        },
        "courseC_artist_prog5_2018_authored_hint": {
          "courseC_artist_prog5_a": "Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.",
          "courseC_artist_prog5_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
          "courseC_artist_prog5_c": "You can use the drop down menus in the blocks to change what they do!",
          "courseC_artist_prog5_d": "Each turn should be 90 degrees to the right."
        },
        "courseC_artist_prog6_authored_hint": {
          "courseC_artist_prog6_a": "The artist is already facing the correct way to draw his first line.",
          "courseC_artist_prog6_b": "This diamond is really just a square that's standing on its corner.",
          "courseC_artist_prog6_c": "Since this diamond is also a square, be sure to turn 90 degrees at the corners."
        },
        "courseC_artist_prog6_2018_authored_hint": {
          "courseC_artist_prog6_a": "The artist is already facing the correct way to draw his first line.",
          "courseC_artist_prog6_b": "This diamond is really just a square that's standing on its corner.",
          "courseC_artist_prog6_c": "Since this diamond is also a square, be sure to turn 90 degrees at the corners."
        },
        "courseC_artist_prog7_authored_hint": {
          "courseC_artist_prog7_a": "Every angle is either 45 or 90 degrees.",
          "courseC_artist_prog7_b": "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?",
          "courseC_artist_prog7_c": "You can use the dropdown menu on the turn blocks to see which angle you need!",
          "courseC_artist_prog7_d": "You will want to:\n- move forward\n- turn right 45 degrees\n- move forward\n- turn right 90 degrees\n- move forward\n- turn right 45 degrees\n\nRepeat this pattern 2 times!",
          "courseC_artist_prog7_e": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_artist_prog7_2018_authored_hint": {
          "courseC_artist_prog7_a": "Every angle is either 45 or 90 degrees.",
          "courseC_artist_prog7_b": "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?",
          "courseC_artist_prog7_c": "You can use the dropdown menu on the turn blocks to see which angle you need!",
          "courseC_artist_prog7_d": "You will want to:\n- move forward\n- turn right 45 degrees\n- move forward\n- turn right 90 degrees\n- move forward\n- turn right 45 degrees\n\nRepeat this pattern 2 times!",
          "courseC_artist_prog7_e": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_artist_prog_challenge1-doghouse_authored_hint": {
          "courseC_artist_prog7_a": "Use 60 degree angles to make the roof."
        },
        "courseC_artist_prog_challenge1_authored_hint": {
          "courseC_artist_prog_challenge1_a": "You can draw this as a rectangle with a line in the middle or two different squares!"
        },
        "courseC_artist_prog_challenge1_2018_authored_hint": {
          "courseC_artist_prog_challenge1_a": "You can draw this as a rectangle with a line in the middle or two different squares!"
        },
        "courseC_artist_prog_challenge2_authored_hint": {
          "courseC_artist_prog_challenge2_a": "You can put commands inside `repeat` block to loop them over and over. Try it!\n\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
        },
        "courseC_artist_prog_challenge2a_authored_hint": {
          "courseC_artist_prog_challenge2_a": "After you draw the first line, turn left before you draw your second line.",
          "courseC_artist_prog_challenge2_b": "After you draw the second line, turn right before you draw your third line."
        },
        "courseC_artist_prog_challenge2a_2018_authored_hint": {
          "courseC_artist_prog_challenge2_a": "After you draw the first line, turn left before you draw your second line.",
          "courseC_artist_prog_challenge2_b": "After you draw the second line, turn right before you draw your third line."
        },
        "courseC_collector_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_b": "Use loops so you don't run out of `collect` blocks!"
        },
        "courseC_collector_loops_challenge2_2018_authored_hint": {
          "courseC_maze_loops_challenge2_b": "Use loops so you don't run out of `collect` blocks!"
        },
        "courseC_collector_prog1_authored_hint": {
          "courseC_collector_prog1_a": "When you are standing on a space with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.",
          "courseC_collector_prog1_b": "The most simple solution would be to move forward once, then collect treasure."
        },
        "courseC_collector_prog1_2018_authored_hint": {
          "courseC_collector_prog1_a": "When you are standing on a space with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.",
          "courseC_collector_prog1_b": "The most simple solution would be to move forward once, then collect treasure."
        },
        "courseC_collector_prog2_authored_hint": {
          "courseC_collector_prog2_a": "You can use four <xml><block type=\"maze_move\"><title name=\"DIR\">moveForward</title></block></xml> blocks or use the <xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> block to make your program shorter.",
          "courseC_collector_prog2_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_collector_prog2_2018_authored_hint": {
          "courseC_collector_prog2_a": "You can use four <xml><block type=\"maze_move\"><title name=\"DIR\">moveForward</title></block></xml> blocks or use the <xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> block to make your program shorter.",
          "courseC_collector_prog2_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_collector_prog3_authored_hint": {
          "courseC_collector_prog3_a": "The program will only run the blocks that are connected to the <xml><block type=\"when_run\"/></xml> block.",
          "courseC_collector_prog3_b": "Try using the \"Step\" button to run your code one line at a time.  Do you see where the code goes wrong?",
          "courseC_collector_prog3_c": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
        },
        "courseC_collector_prog3_2018_authored_hint": {
          "courseC_collector_prog3_a": "The program will only run the blocks that are connected to the <xml><block type=\"when_run\"/></xml> block.",
          "courseC_collector_prog3_b": "Try using the \"Step\" button to run your code one line at a time.  Do you see where the code goes wrong?",
          "courseC_collector_prog3_c": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
        },
        "courseC_collector_prog4_authored_hint": {
          "courseC_collector_prog4_a": "If you get stuck, try writing out the steps on a piece of paper.",
          "courseC_collector_prog4_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
          "courseC_collector_prog4_c": "Try this option for a path."
        },
        "courseC_collector_prog4_2018_authored_hint": {
          "courseC_collector_prog4_a": "If you get stuck, try writing out the steps on a piece of paper.",
          "courseC_collector_prog4_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
          "courseC_collector_prog4_c": "Try this option for a path."
        },
        "courseC_collector_prog5_authored_hint": {
          "courseC_collector_prog5_a": "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\"",
          "courseC_collector_prog5_b": "If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.",
          "courseC_collector_prog5_c": "If you get stuck, try writing out the steps on a piece of paper.",
          "courseC_collector_prog5_d": "Follow the path to collect the treasure."
        },
        "courseC_collector_prog5_2018_authored_hint": {
          "courseC_collector_prog5_a": "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\"",
          "courseC_collector_prog5_b": "If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.",
          "courseC_collector_prog5_c": "If you get stuck, try writing out the steps on a piece of paper.",
          "courseC_collector_prog5_d": "Follow the path to collect the treasure."
        },
        "courseC_collector_prog6_authored_hint": {
          "courseC_collector_prog6_a": "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line.",
          "courseC_collector_prog6_b": "Stuck?  Try this path to collect the treasure."
        },
        "courseC_collector_prog6_2018_authored_hint": {
          "courseC_collector_prog6_a": "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line.",
          "courseC_collector_prog6_b": "Stuck?  Try this path to collect the treasure."
        },
        "courseC_collector_prog7_authored_hint": {
          "courseC_collector_prog7_a": "There is already a lot of great code in the workspace.  You don't need to delete any of it to solve this puzzle.  ",
          "courseC_collector_prog7_b": "Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.",
          "courseC_collector_prog7_c": "Having trouble seeing a route to collect all of the treasure?  Try this path!"
        },
        "courseC_collector_prog7_2018_authored_hint": {
          "courseC_collector_prog7_a": "There is already a lot of great code in the workspace.  You don't need to delete any of it to solve this puzzle.  ",
          "courseC_collector_prog7_b": "Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.",
          "courseC_collector_prog7_c": "Having trouble seeing a route to collect all of the treasure?  Try this path!"
        },
        "courseC_collector_progA_authored_hint": {
          "courseC_collector_progA_a": "Try using the \"Step\" button to go through your code line by line."
        },
        "courseC_collector_prog_challenge1_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use the `collect` block many times to collect the extra treasure."
        },
        "courseC_collector_prog_challenge1_2018_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use the `collect` block many times to collect the extra treasure."
        },
        "courseC_collector_prog_challenge2_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use more than one `collect` block at each space.",
          "courseC_collector_prog_challenge1_b": "Lost your way?  Try this path to solve the puzzle!"
        },
        "courseC_collector_prog_challenge2_2018_authored_hint": {
          "courseC_collector_prog_challenge1_a": "You can use more than one `collect` block at each space.",
          "courseC_collector_prog_challenge1_b": "Lost your way?  Try this path to solve the puzzle!"
        },
        "courseC_flappy_events1_authored_hint": {
          "courseC_flappy_events1_a": "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
        },
        "courseC_flappy_events1_2018_authored_hint": {
          "courseC_flappy_events1_a": "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
        },
        "courseC_flappy_events2_authored_hint": {
          "courseC_flappy_events2_a": "The block you need to add is called `set speed`. ",
          "courseC_flappy_events2_b": "Connect the `set speed` block to the `when run` block to solve this puzzle."
        },
        "courseC_flappy_events2_2018_authored_hint": {
          "courseC_flappy_events2_a": "The block you need to add is called `set speed`. ",
          "courseC_flappy_events2_b": "Connect the `set speed` block to the `when run` block to solve this puzzle."
        },
        "courseC_flappy_events3_authored_hint": {
          "courseC_flappy_events3_a": "If something isn't working correctly, make sure your blocks are connected to the correct events in the workspace."
        },
        "courseC_flappy_events3_2018_authored_hint": {
          "courseC_flappy_events3_a": "If something isn't working correctly, make sure your blocks are connected to the correct events in the workspace."
        },
        "courseC_flappy_events4_authored_hint": {
          "courseC_flappy_events4_a": "Connect the `end game` block to `when hit an obstacle` to solve this puzzle."
        },
        "courseC_flappy_events4_2018_authored_hint": {
          "courseC_flappy_events4_a": "Connect the `end game` block to `when hit an obstacle` to solve this puzzle."
        },
        "courseC_flappy_events5_authored_hint": {
          "courseC_flappy_events5_a": "You will need to use the `score a point` block to pass this level."
        },
        "courseC_flappy_events5_2018_authored_hint": {
          "courseC_flappy_events5_a": "You will need to use the `score a point` block to pass this level."
        },
        "courseC_flappy_events6_authored_hint": {
          "courseC_flappy_events6_a": "Try connecting the `flap a ____ amount` block to the `when click` event."
        },
        "courseC_flappy_events6_2018_authored_hint": {
          "courseC_flappy_events6_a": "Try connecting the `flap a ____ amount` block to the `when click` event."
        },
        "courseC_flappy_events7_authored_hint": {
          "courseC_flappy_events7_a": "You can change the background using the `set scene` block. "
        },
        "courseC_flappy_events7_2018_authored_hint": {
          "courseC_flappy_events7_a": "You can change the background using the `set scene` block. "
        },
        "courseC_flappy_events8_authored_hint": {
          "courseC_flappy_events8_a": "Try connecting a second `set scene` block under the `when pass obstacle` event to pass this level."
        },
        "courseC_flappy_events8_2018_authored_hint": {
          "courseC_flappy_events8_a": "Try connecting a second `set scene` block under the `when pass obstacle` event to pass this level."
        },
        "courseC_flappy_events9_authored_hint": {
          "courseC_flappy_events9_a": "Connect the `set score 0` block to the `when hit an obstacle` event to pass this level."
        },
        "courseC_flappy_events9_2018_authored_hint": {
          "courseC_flappy_events9_a": "Connect the `set score 0` block to the `when hit an obstacle` event to pass this level."
        },
        "courseC_harvester_loops1_authored_hint": {
          "courseC_harvester_loops1_a": "Once you have moved to a pumpkin, use <xml><block type=\"harvester_pumpkin\"/></xml> to collect it.",
          "courseC_harvester_loops1_b": "You can use a loop with the <xml><block type=\"harvester_pumpkin\"/></xml> block to pick more than one pumpkin from a square."
        },
        "courseC_harvester_loops1_2018_authored_hint": {
          "courseC_harvester_loops1_a": "Once you have moved to a pumpkin, use <xml><block type=\"harvester_pumpkin\"/></xml> to collect it.",
          "courseC_harvester_loops1_b": "You can use a loop with the <xml><block type=\"harvester_pumpkin\"/></xml> block to pick more than one pumpkin from a square."
        },
        "courseC_harvester_loops2_authored_hint": {
          "courseC_harvester_loops2_a": "If you get stuck, try writing the steps on paper and looking for repeating patterns.",
          "courseC_harvester_loops2_b": "You will need one `repeat` loop after another.",
          "courseC_harvester_loops2_c": "One loop will repeat the `move forward` command, and the other will repeat the `pick pumpkin` command."
        },
        "courseC_harvester_loops2_2018_authored_hint": {
          "courseC_harvester_loops2_a": "If you get stuck, try writing the steps on paper and looking for repeating patterns.",
          "courseC_harvester_loops2_b": "You will need one `repeat` loop after another.",
          "courseC_harvester_loops2_c": "One loop will repeat the `move forward` command, and the other will repeat the `pick pumpkin` command."
        },
        "courseC_harvester_loops3_authored_hint": {
          "courseC_harvester_loops3_a": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseC_harvester_loops3_b": "For the first pumpkins, you can use code very similar to the last puzzle. Which way do you need to turn afterwards?",
          "courseC_harvester_loops3_c": "If you want to simplify your code, you can actually put one loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops3_2018_authored_hint": {
          "courseC_harvester_loops3_a": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseC_harvester_loops3_b": "For the first pumpkins, you can use code very similar to the last puzzle. Which way do you need to turn afterwards?",
          "courseC_harvester_loops3_c": "If you want to simplify your code, you can actually put one loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops4_authored_hint": {
          "courseC_harvester_loops4_a": "Use the new `pick corn` block to collect the corn.",
          "courseC_harvester_loops4_b": "You can use multiple repeat loops in your code, some to pick corn and some to pick pumpkins.",
          "courseC_harvester_loops4_c": "If you want to simplify your code, you can actually put one loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops4_2018_authored_hint": {
          "courseC_harvester_loops4_a": "Use the new `pick corn` block to collect the corn.",
          "courseC_harvester_loops4_b": "You can use multiple repeat loops in your code, some to pick corn and some to pick pumpkins.",
          "courseC_harvester_loops4_c": "If you want to simplify your code, you can actually put one loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops5_authored_hint": {
          "courseC_harvester_loops5_a": "If you get stuck, try drawing the entire program and then looking for repeating patterns.",
          "courseC_harvester_loops5_b": "Does this stair step look familiar from other puzzles? The movements should be similar, just remember to collect crops along the way."
        },
        "courseC_harvester_loops5_2018_authored_hint": {
          "courseC_harvester_loops5_a": "If you get stuck, try drawing the entire program and then looking for repeating patterns.",
          "courseC_harvester_loops5_b": "Does this stair step look familiar from other puzzles? The movements should be similar, just remember to collect crops along the way."
        },
        "courseC_harvester_loops6_authored_hint": {
          "courseC_harvester_loops6_a": "Remember you can put multiple blocks in one repeat loop.",
          "courseC_harvester_loops6_b": "Don’t forget to turn at the end of the row of corn."
        },
        "courseC_harvester_loops6_2018_authored_hint": {
          "courseC_harvester_loops6_a": "Remember you can put multiple blocks in one repeat loop.",
          "courseC_harvester_loops6_b": "Don’t forget to turn at the end of the row of corn."
        },
        "courseC_harvester_loops7_authored_hint": {
          "courseC_harvester_loops7_a": "You can solve this puzzle two ways, either get the corn or the pumpkins first.",
          "courseC_harvester_loops7_b": "You will need multiple `repeat` loops to solve this puzzle."
        },
        "courseC_harvester_loops7_2018_authored_hint": {
          "courseC_harvester_loops7_a": "You can solve this puzzle two ways, either get the corn or the pumpkins first.",
          "courseC_harvester_loops7_b": "You will need multiple `repeat` loops to solve this puzzle."
        },
        "courseC_harvester_loops8_authored_hint": {
          "courseC_harvester_loops8_a": "Does this stair step look familiar from the previous puzzle? The movements should be similar, just remember to collect crops along the way.",
          "courseC_harvester_loops8_b": "If you want to simplify your code more, you can actually put one `repeat` loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops8_2018_authored_hint": {
          "courseC_harvester_loops8_a": "Does this stair step look familiar from the previous puzzle? The movements should be similar, just remember to collect crops along the way.",
          "courseC_harvester_loops8_b": "If you want to simplify your code more, you can actually put one `repeat` loop inside of another! This is called a **nested loop**."
        },
        "courseC_harvester_loops_challenge1_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "This is too hard without loops!",
          "courseC_harvester_loops_challenge1_b": "You can repeat `move forward` and `pick corn` as many times as you need, then turn right at each corner.",
          "courseC_harvester_loops_challenge1_c": "The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">2</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></next></block></xml>"
        },
        "courseC_harvester_loops_challenge1a_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "This is too hard without loops!",
          "courseC_harvester_loops_challenge1_b": "You can repeat `move forward` and `pick corn` as many times as you need, then `turn right` at each corner.",
          "courseC_harvester_loops_challenge1_c": "The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.\n\n<xml><block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></xml>"
        },
        "courseC_harvester_loops_challenge1a_2018_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "This is too hard without loops!",
          "courseC_harvester_loops_challenge1_b": "You can repeat `move forward` and `pick corn` as many times as you need, then `turn right` at each corner.",
          "courseC_harvester_loops_challenge1_c": "The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.\n\n<xml><block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></xml>"
        },
        "courseC_harvester_loops_challenge2_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!",
          "courseC_harvester_loops_challenge2_b": "You can repeat `move forward` and `pick lettuce` as many times as you need to, then turn at each corner.",
          "courseC_harvester_loops_challenge2_c": "This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!\n\n![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)\n",
          "courseC_harvester_loops_challenge2_d": "This spiral pattern can be coded with just 18 blocks!\n\n![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)"
        },
        "courseC_harvester_loops_challenge2_2018_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!",
          "courseC_harvester_loops_challenge2_b": "You can repeat `move forward` and `pick lettuce` as many times as you need to, then turn at each corner.",
          "courseC_harvester_loops_challenge2_c": "This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!\n\n![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)\n",
          "courseC_harvester_loops_challenge2_d": "This spiral pattern can be coded with just 18 blocks!\n\n![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)"
        },
        "courseC_maze_debugging1_authored_hint": {
          "courseC_maze_debugging1_a": "- Does everything work after the first step?\n- Does it still work after the second?\n- Where does it go wrong?",
          "courseC_maze_debugging1_b": "There is 1 block you need to add to complete this puzzle."
        },
        "courseC_maze_debugging1_2018_authored_hint": {
          "courseC_maze_debugging1_a": "- Does everything work after the first step?\n- Does it still work after the second?\n- Where does it go wrong?",
          "courseC_maze_debugging1_b": "There is 1 block you need to add to complete this puzzle."
        },
        "courseC_maze_debugging2_authored_hint": {
          "courseC_maze_debugging2_a": "There is a lot of valuable code in the workspace.  Don't just delete it all and start over!",
          "courseC_maze_debugging2_b": "- Does everything work after the first step?\n- Does it still work after the second?\n- Where does it go wrong?",
          "courseC_maze_debugging2_c": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
        },
        "courseC_maze_debugging2_2018_authored_hint": {
          "courseC_maze_debugging2_a": "There is a lot of valuable code in the workspace.  Don't just delete it all and start over!",
          "courseC_maze_debugging2_b": "- Does everything work after the first step?\n- Does it still work after the second?\n- Where does it go wrong?",
          "courseC_maze_debugging2_c": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
        },
        "courseC_maze_debugging3_authored_hint": {
          "courseC_maze_debugging3_a": "To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong.\n\n![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)",
          "courseC_maze_debugging3_b": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
        },
        "courseC_maze_debugging3_2018_authored_hint": {
          "courseC_maze_debugging3_a": "To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong.\n\n![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)",
          "courseC_maze_debugging3_b": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
        },
        "courseC_maze_debugging4_authored_hint": {
          "courseC_maze_debugging4_a": "Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?",
          "courseC_maze_debugging4_b": "One of the turns is making Scrat go in the wrong direction. Can you figure out which one?"
        },
        "courseC_maze_debugging4_2018_authored_hint": {
          "courseC_maze_debugging4_a": "Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?",
          "courseC_maze_debugging4_b": "One of the turns is making Scrat go in the wrong direction. Can you figure out which one?"
        },
        "courseC_maze_debugging5_authored_hint": {
          "courseC_maze_debugging5_a": "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong.",
          "courseC_maze_debugging5_b": "Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?"
        },
        "courseC_maze_debugging5_2018_authored_hint": {
          "courseC_maze_debugging5_a": "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong.",
          "courseC_maze_debugging5_c": "You can change the direction of the turn block by clicking on the dropdown.",
          "courseC_maze_debugging5_b": "Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?"
        },
        "courseC_maze_debugging6_authored_hint": {
          "courseC_maze_debugging6_a": "- What is Scrat supposed to do?\n- What does Scrat do?\n- What does that tell you?",
          "courseC_maze_debugging6_b": "Once you've found and fixed the first bug, go through the debugging process again to find the second one.\n\nRepeat the process until the program works!"
        },
        "courseC_maze_debugging6_2018_authored_hint": {
          "courseC_maze_debugging6_a": "- What is Scrat supposed to do?\n- What does Scrat do?\n- What does that tell you?",
          "courseC_maze_debugging6_b": "Once you've found and fixed the first bug, go through the debugging process again to find the second one.\n\nRepeat the process until the program works!"
        },
        "courseC_maze_debugging7_authored_hint": {
          "courseC_maze_debugging7_a": "- Does everything work at the first step?\n- How about the second step?\n- Where does it go wrong?",
          "courseC_maze_debugging7_b": "Don't forget to use the \"Step\" button to run the program line by line!",
          "courseC_maze_debugging7_c": "After you find and fix the first bug, make sure to use the debugging process again to find the next one.\n\nRepeat the debugging process until the program works!"
        },
        "courseC_maze_debugging7_2018_authored_hint": {
          "courseC_maze_debugging7_a": "- Does everything work at the first step?\n- How about the second step?\n- Where does it go wrong?",
          "courseC_maze_debugging7_b": "Don't forget to use the \"Step\" button to run the program line by line!",
          "courseC_maze_debugging7_c": "After you find and fix the first bug, make sure to use the debugging process again to find the next one.\n\nRepeat the debugging process until the program works!"
        },
        "courseC_maze_debugging8_authored_hint": {
          "courseC_maze_debugging8_a": "- What is Scrat supposed to do?\n- What does Scrat do?\n- What does that tell you?"
        },
        "courseC_maze_debugging_challenge1_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
          "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time.",
          "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over and find a new way!"
        },
        "courseC_maze_debugging_challenge1_2018_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
          "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time.",
          "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over and find a new way!"
        },
        "courseC_maze_debugging_challenge2_authored_hint": {
          "courseC_maze_debugging_challenge2_b": "If you are getting stuck, try debugging the code.  Where does it go wrong?",
          "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!\n\n![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)"
        },
        "courseC_maze_debugging_challenge2_2018_authored_hint": {
          "courseC_maze_debugging_challenge2_b": "If you are getting stuck, try debugging the code.  Where does it go wrong?",
          "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!\n\n![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)"
        },
        "courseC_maze_loops2_authored_hint": {
          "courseC_maze_loops2_a": "You can solve this puzzle with just three blocks, including `when run`.",
          "courseC_maze_loops2_b": "Try putting the `move forward` block inside of a `repeat` block to create a loop.",
          "courseC_maze_loops2_c": "You need to repeat the `move forward` command 5 times to solve this puzzle."
        },
        "courseC_maze_loops2_predict1_authored_hint": {
          "courseC_maze_loops2_a": "You can solve this puzzle with just three blocks, including `when run`.",
          "courseC_maze_loops2_b": "Try putting the `move forward` block inside of a `repeat` block to create a loop.",
          "courseC_maze_loops2_c": "You need to repeat the `move forward` command 5 times to solve this puzzle."
        },
        "courseC_maze_loops3_authored_hint": {
          "courseC_maze_loops3_a": "This puzzle is very similar to the last one.",
          "courseC_maze_loops3_b": "Use a `repeat 5 times` block to create the loop."
        },
        "courseC_maze_loops4_authored_hint": {
          "courseC_maze_loops4_a": "Not all command blocks should be repeated.",
          "courseC_maze_loops4_b": "Use two `repeat` blocks set to different numbers.",
          "courseC_maze_loops4_c": "`Turn right` once between the two loops."
        },
        "courseC_maze_loops5_authored_hint": {
          "courseC_maze_loops5_a": "The best solution uses two `move forward` commands and one loop."
        },
        "courseC_maze_loops6_authored_hint": {
          "courseC_maze_loops6_a": "If the pattern is hard to see, try coding it all out first and see what repeats over and over before you put the loops in.",
          "courseC_maze_loops6_b": "To put lots of blocks inside a `repeat` loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  \n\nConnect it all back to the `when run` block and you're good to go!"
        },
        "courseC_maze_loops7_authored_hint": {
          "courseC_maze_loops7_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in."
        },
        "courseC_maze_loops8_authored_hint": {
          "courseC_puppy_loops8courseC_maze_loops8_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
          "courseC_puppy_loops8courseC_maze_loops8_b": "The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.",
          "courseC_puppy_loops8courseC_maze_loops8_c": "There are different ways to solve this. \n\nYou will want to use at least two loops, and repeat a set of actions in the first one, then a single `move forward` in the other."
        },
        "courseC_maze_loops9_authored_hint": {
          "courseC_maze_loops9_1": "If you're having trouble finding where the code should repeat, try writing it down on a piece of paper and looking for a pattern. "
        },
        "courseC_maze_loops_challenge1_authored_hint": {
          "courseC_maze_loops_challenge1_a": "Think about this path as being three different pieces. Each one has a pattern you can repeat.",
          "courseC_maze_loops_challenge1_b": "In between each `repeat` block, you will need to `turn left` or `turn right` to get ready Scrat for the next pattern."
        },
        "courseC_maze_loops_challenge1a_authored_hint": {
          "courseC_maze_loops_challenge1_a": "Think about this path as being two different pieces. Each one has a pattern you can repeat.",
          "courseC_maze_loops_challenge1_b": "Can you remember how to use loops to repeat a staircase pattern?"
        },
        "courseC_maze_loops_challenge1a_2018_authored_hint": {
          "courseC_maze_loops_challenge1_a": "Think about this path as being two different pieces. Each one has a pattern you can repeat.",
          "courseC_maze_loops_challenge1_b": "Can you remember how to use loops to repeat a staircase pattern?"
        },
        "courseC_maze_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_a": "The original code would work great - if there was only one piece of treasure in each pile!",
          "courseC_maze_loops_challenge2_b": "Use loops so you don't run out of `collect` blocks!"
        },
        "courseC_maze_programming1_authored_hint": {
          "courseC_maze_programming1_0": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
        },
        "courseC_maze_programming1_2018_authored_hint": {
          "courseC_maze_programming1_0": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
        },
        "courseC_maze_programming2_authored_hint": {
          "courseC_maze_programming2_a": "To use a <xml><block type=\"maze_moveForward\"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type=\"when_run\"/></xml> block.",
          "courseC_maze_programming2_b": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
        },
        "courseC_maze_programming2_2018_authored_hint": {
          "courseC_maze_programming2_a": "To use a <xml><block type=\"maze_moveForward\"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type=\"when_run\"/></xml> block.",
          "courseC_maze_programming2_b": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
        },
        "courseC_maze_programming3_authored_hint": {
          "courseC_maze_programming3_a": "Try running the code first to see where it goes wrong.",
          "courseC_maze_programming3_b": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong."
        },
        "courseC_maze_programming3_2018_authored_hint": {
          "courseC_maze_programming3_a": "Try running the code first to see where it goes wrong.",
          "courseC_maze_programming3_b": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong."
        },
        "courseC_maze_programming4_authored_hint": {
          "courseC_maze_programming4_a": "Remember that when you turn, you are turning from the *bird's* point of view.  If you turn right, the bird will point down.",
          "courseC_maze_programming4_b": "To follow the path:\n- move forward\n- turn one way\n- move forward\n- turn back the other way\n- move forward"
        },
        "courseC_maze_programming4_2018_authored_hint": {
          "courseC_maze_programming4_a": "Remember that when you turn, you are turning from the *bird's* point of view.  If you turn right, the bird will point down.",
          "courseC_maze_programming4_b": "To follow the path:\n- move forward\n- turn one way\n- move forward\n- turn back the other way\n- move forward"
        },
        "courseC_maze_programming5_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "The bird will need to make one turn to complete this puzzle. Can you figure out which way?",
          "courseC_maze_programming5_c": "The solution will have two `move forward` blocks, a turn, and two more `move forward` blocks."
        },
        "courseC_maze_programming5_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "The bird will need to make one turn to complete this puzzle. Can you figure out which way?",
          "courseC_maze_programming5_c": "The solution will have two `move forward` blocks, a turn, and two more `move forward` blocks."
        },
        "courseC_maze_programming6_authored_hint": {
          "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
          "courseC_maze_programming6_b": "Follow your finger from the bird to the pig, which steps did you take?",
          "courseC_maze_programming6_c": "Remember you have to turn first, since the bird starts facing a wall.",
          "courseC_maze_programming6_d": "Feel stuck?  Look at this path!"
        },
        "courseC_maze_programming6_2018_authored_hint": {
          "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
          "courseC_maze_programming6_b": "Follow your finger from the bird to the pig, which steps did you take?",
          "courseC_maze_programming6_c": "Remember you have to turn first, since the bird starts facing a wall.",
          "courseC_maze_programming6_d": "Feel stuck?  Look at this path!"
        },
        "courseC_maze_programming7_authored_hint": {
          "courseC_maze_programming7_a": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseC_maze_programming7_b": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
        },
        "courseC_maze_programming7_2018_authored_hint": {
          "courseC_maze_programming7_a": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseC_maze_programming7_b": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
        },
        "courseC_maze_programming8_authored_hint": {
          "courseC_maze_programming8_a": "Remember you can use the \"Step\" button to look through your code line-by-line if you get stuck.",
          "courseC_maze_programming8_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_maze_programming8_2018_authored_hint": {
          "courseC_maze_programming8_a": "Remember you can use the \"Step\" button to look through your code line-by-line if you get stuck.",
          "courseC_maze_programming8_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseC_maze_programming_challenge1_authored_hint": {
          "courseC_maze_programming_challenge1_a": "There are many ways to get to the pig. Use your finger to find a path and then program it!"
        },
        "courseC_maze_programming_challenge1_2018_authored_hint": {
          "courseC_maze_programming_challenge1_a": "There are many ways to get to the pig. Use your finger to find a path and then program it!"
        },
        "courseC_maze_programming_challenge2_authored_hint": {
          "courseC_maze_programming_challenge2_a": "*\"If you send me backwards, be extra careful that I turn the correct way!\"*",
          "courseC_maze_programming_challenge2_b": "The shortest solution uses only 5 blocks, but it uses this block:\n\n<xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>"
        },
        "courseC_maze_programming_challenge2_2018_authored_hint": {
          "courseC_maze_programming_challenge2_a": "*\"If you send me backwards, be extra careful that I turn the correct way!\"*",
          "courseC_maze_programming_challenge2_b": "The shortest solution uses only 5 blocks, but it uses this block:\n\n<xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>"
        },
        "courseC_puppy_loops10_authored_hint": {
          "courseC_puppy_loops9_1": "I need to move two or three time between each turn."
        },
        "courseC_puppy_loops8_authored_hint": {
          "2-3_Maze_Loops_17_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
          "2-3_Maze_Loops_17_b": "The first half of this path is similar to the stair step from the last puzzle, but it goes a different direction.",
          "courseC_puppy_loops8_c": "There are different ways to solve this. You will want to use at least two loops, and repeat either a set of actions or a single movement."
        },
        "courseC_puppy_loops8courseC_maze_loops8_authored_hint": {
          "courseC_puppy_loops8courseC_maze_loops8_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
          "courseC_puppy_loops8courseC_maze_loops8_b": "The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.",
          "courseC_puppy_loops8courseC_maze_loops8_c": "There are different ways to solve this. \n\nYou will want to use at least two loops, and repeat a set of actions in the first one, then a single `move forward` in the other."
        },
        "courseC_puppy_loops9_authored_hint": {
          "courseC_puppy_loops9_1": "If you repeat the first few actions, you can get me to the pig with just four more blocks!"
        },
        "courseC_starWars_loops1_authored_hint": {
          "courseC_starWars_loops1_a": "When BB-8 rolls over scrap metal he picks it up automatically.",
          "courseC_starWars_loops1_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "courseC_starWars_loops1_c": "You will want to `move forward` five times to solve this puzzle."
        },
        "courseC_starWars_loops10_authored_hint": {
          "courseC_starWars_loops10_a": "Doesn't this pattern look like a giant set of stair steps? See if you can use what you learned from previous puzzles to get all of the turns.",
          "courseC_starWars_loops10_b": "If you want to use less code, you can put one `repeat` loop inside of another!   \nThis is called a **nested loop**.",
          "courseC_starWars_loops10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "courseC_starWars_loops10_2018_authored_hint": {
          "courseC_starWars_loops10_a": "Doesn't this pattern look like a giant set of stair steps? See if you can use what you learned from previous puzzles to get all of the turns.",
          "courseC_starWars_loops10_b": "If you want to use less code, you can put one `repeat` loop inside of another!   \nThis is called a **nested loop**.",
          "courseC_starWars_loops10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "courseC_starWars_loops1_2018_authored_hint": {
          "courseC_starWars_loops1_a": "When BB-8 rolls over scrap metal he picks it up automatically.",
          "courseC_starWars_loops1_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
          "courseC_starWars_loops1_c": "You will want to `move forward` five times to solve this puzzle."
        },
        "courseC_starWars_loops2_authored_hint": {
          "courseC_starWars_loops2_a": "To repeat code, drag out a `repeat` loop, then put the block you want inside of it."
        },
        "courseC_starWars_loops2_2018_authored_hint": {
          "courseC_starWars_loops2_a": "To repeat code, drag out a `repeat` loop, then put the block you want inside of it."
        },
        "courseC_starWars_loops4_authored_hint": {
          "courseC_starWars_loops4_c": "Clicking on the small arrow next to \"left\" on the turn block will let you change it to  \"right\".",
          "courseC_starWars_loops4_a": "Use two `repeat` blocks.",
          "courseC_starWars_loops4_b": "Each `repeat` loop will have only one command inside of it: `move forward`."
        },
        "courseC_starWars_loops4_2018_authored_hint": {
          "courseC_starWars_loops4_c": "Clicking on the small arrow next to \"left\" on the turn block will let you change it to  \"right\".",
          "courseC_starWars_loops4_a": "Use two `repeat` blocks.",
          "courseC_starWars_loops4_b": "Each `repeat` loop will have only one command inside of it: `move forward`."
        },
        "courseC_starWars_loops5_authored_hint": {
          "courseC_starWars_loops5_b": "To move down, you have to turn and then move forward.",
          "courseC_starWars_loops5_a": "The best solution uses a turn, then a single `move forward`, another turn, then a loop."
        },
        "courseC_starWars_loops5_2018_authored_hint": {
          "courseC_starWars_loops5_b": "To move down, you have to turn and then move forward.",
          "courseC_starWars_loops5_a": "The best solution uses a turn, then a single `move forward`, another turn, then a loop."
        },
        "courseC_starWars_loops6_authored_hint": {
          "courseC_starWars_loops6_a": "Try writing all of the moves down on a piece of paper and looking for a pattern.",
          "courseC_starWars_loops6_b": "If you want to use less code, you can put one `repeat` loop inside of another!   \nThis is called a **nested loop**."
        },
        "courseC_starWars_loops6_2018_authored_hint": {
          "courseC_starWars_loops6_a": "Try writing all of the moves down on a piece of paper and looking for a pattern.",
          "courseC_starWars_loops6_b": "If you want to use less code, you can put one `repeat` loop inside of another!   \nThis is called a **nested loop**."
        },
        "courseC_starWars_loops7_authored_hint": {
          "courseC_starWars_loops7_a": "This pattern looks harder than it is! Start with a simple stair step. Does that cover all of the scrap metal?",
          "courseC_starWars_loops7_b": "If you are having trouble with this puzzle, try writing all of the moves on a piece of paper and looking for a pattern.",
          "courseC_starWars_loops7_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "courseC_starWars_loops7_2018_authored_hint": {
          "courseC_starWars_loops7_a": "This pattern looks harder than it is! Start with a simple stair step. Does that cover all of the scrap metal?",
          "courseC_starWars_loops7_b": "If you are having trouble with this puzzle, try writing all of the moves on a piece of paper and looking for a pattern.",
          "courseC_starWars_loops7_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
        },
        "courseC_starWars_loops8_authored_hint": {
          "course_starWars_loops8_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
          "course_starWars_loops8_b": "Think of the first half of this problem as a stair step problem. How did you solve that before?",
          "course_starWars_loops8_c": "Take a look at this path.\n\n![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)"
        },
        "courseC_starWars_loops8_2018_authored_hint": {
          "course_starWars_loops8_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
          "course_starWars_loops8_b": "Think of the first half of this problem as a stair step problem. How did you solve that before?",
          "course_starWars_loops8_c": "Take a look at this path.\n\n![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)"
        },
        "courseC_starWars_loops9_authored_hint": {
          "course_starWars_loops9_b": "You can put more than one block inside a `repeat` loop.",
          "course_starWars_loops9_c": "You do not need to turn left to solve this puzzle. All of your turns can be to the right.\n\n![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)"
        },
        "courseC_starWars_loops9_2018_authored_hint": {
          "course_starWars_loops9_b": "You can put more than one block inside a `repeat` loop.",
          "course_starWars_loops9_c": "You do not need to turn left to solve this puzzle. All of your turns can be to the right.\n\n![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)"
        },
        "courseD_Frozen_nested1_authored_hint": {
          "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
        },
        "courseD_Frozen_nested2_authored_hint": {
          "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
          "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
        },
        "courseD_Frozen_nested3_authored_hint": {
          "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
        },
        "courseD_Frozen_nested4_authored_hint": {
          "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />\n",
          "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
        },
        "courseD_Frozen_nested5_authored_hint": {
          "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />\n"
        },
        "courseD_Frozen_nested6_authored_hint": {
          "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />\n",
          "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
        },
        "courseD_Frozen_nested7_authored_hint": {
          "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />\n"
        },
        "courseD_Frozen_nested8_authored_hint": {
          "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
        },
        "courseD_Frozen_nested9_authored_hint": {
          "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />\n"
        },
        "courseD_artist_1_2018_authored_hint": {
          "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
        },
        "courseD_artist_2_2018_authored_hint": {
          "courseD_artist_project1_b": "Remember that `move` draws a line, while `jump` does not.",
          "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!"
        },
        "courseD_artist_5_2018_authored_hint": {
          "1": "If you are switching your shapes, don't forget that you will need to switch their angles, too!"
        },
        "courseD_artist_7_2018_authored_hint": {
          "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />\n"
        },
        "courseD_artist_8_2018_authored_hint": {
          "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
        },
        "courseD_artist_9_2018_authored_hint": {
          "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />\n"
        },
        "courseD_artist_binary1_authored_hint": {
          "courseD_artist_binary1_a": "Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.",
          "courseD_artist_binary1_b": "The artist will draw a white space for every 1 and a black space for every 0.",
          "courseD_artist_binary1_c": "This is how you can input your binary code:\n\n![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)"
        },
        "courseD_artist_binary1_2018_authored_hint": {
          "courseD_artist_binary1_a": "Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.",
          "courseD_artist_binary1_b": "The artist will draw a white space for every 1 and a black space for every 0.",
          "courseD_artist_binary1_c": "This is how you can input your binary code:\n\n![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)"
        },
        "courseD_artist_binary2_authored_hint": {
          "courseD_artist_binary2_a": "Just click `Run` to see this program in action!"
        },
        "courseD_artist_binary2_2018_authored_hint": {
          "courseD_artist_binary2_a": "Just click `Run` to see this program in action!"
        },
        "courseD_artist_binary3_authored_hint": {
          "courseD_artist_binary3_a": "One of the four binary patterns in the toolbox will solve this puzzle!",
          "courseD_artist_binary3_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseD_artist_binary3_2018_authored_hint": {
          "courseD_artist_binary3_a": "One of the four binary patterns in the toolbox will solve this puzzle!",
          "courseD_artist_binary3_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseD_artist_binary4_authored_hint": {
          "courseD_artist_binary4_a": "Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?",
          "courseD_artist_binary4_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_artist_binary4_2018_authored_hint": {
          "courseD_artist_binary4_a": "Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?",
          "courseD_artist_binary4_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_artist_binary5_authored_hint": {
          "courseD_artist_binary5_a": "Try running the code first to see what you have to work with.",
          "courseD_artist_binary5_b": "You only need to switch two rows to make a smile.",
          "courseD_artist_binary5_c": "If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern."
        },
        "courseD_artist_binary5_2018_authored_hint": {
          "courseD_artist_binary5_a": "Try running the code first to see what you have to work with.",
          "courseD_artist_binary5_b": "You only need to switch two rows to make a smile.",
          "courseD_artist_binary5_c": "If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern."
        },
        "courseD_artist_binary6_authored_hint": {
          "courseD_artist_binary6_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
          "courseD_artist_binary6_b": "You can build your binary string a bit at a time, and keep testing!"
        },
        "courseD_artist_binary6_2018_authored_hint": {
          "courseD_artist_binary6_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
          "courseD_artist_binary6_b": "You can build your binary string a bit at a time, and keep testing!"
        },
        "courseD_artist_binary7_authored_hint": {
          "courseD_artist_binary7_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
          "courseD_artist_binary7_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_artist_binary7_2018_authored_hint": {
          "courseD_artist_binary7_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
          "courseD_artist_binary7_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_artist_binary8_authored_hint": {
          "courseD_artist_binary8_a": "The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.",
          "courseD_artist_binary8_b": "Try running the code first to see what you have to work with.",
          "courseD_artist_binary8_c": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseD_artist_binary8_2018_authored_hint": {
          "courseD_artist_binary8_a": "The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.",
          "courseD_artist_binary8_b": "Try running the code first to see what you have to work with.",
          "courseD_artist_binary8_c": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseD_artist_binary_challenge2_authored_hint": {
          "courseD_artist_binary_challenge2_a": "There are only few lines wrong in the original program."
        },
        "courseD_artist_binary_challenge2_2018_authored_hint": {
          "courseD_artist_binary_challenge2_a": "There are only few lines wrong in the original program."
        },
        "courseD_artist_binary_challenge3_authored_hint": {
          "courseD_artist_binary_challenge3_a": "The best tip I have for you is to press `⟲ Start Over` if it starts to get really messy.\n\nThere are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!"
        },
        "courseD_artist_functions10_authored_hint": {
          "courseD_artist_functions10_b": "This drawing is a lot like the last one, except the function draws a different kind of line.",
          "courseD_artist_functions10_a": "To get around using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times."
        },
        "courseD_artist_functions2_authored_hint": {
          "courseD_artist_functions2_a": "Your program should:\n- Use function\n- Move forward 100 + 75 pixels\n- Use function"
        },
        "courseD_artist_functions3_authored_hint": {
          "courseD_artist_functions3_a": "To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.\n\nIf you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace."
        },
        "courseD_artist_functions4_authored_hint": {
          "courseD_artist_functions4_a": "Try using a function!"
        },
        "courseD_artist_functions5_authored_hint": {
          "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
          "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!"
        },
        "courseD_artist_functions6_authored_hint": {
          "grade4_artist_functions_windows0_a": "Focus only on making one window for now.  We'll create a function for it in the next puzzle.",
          "grade4_artist_functions_windows0_b": "Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times."
        },
        "courseD_artist_functions7_authored_hint": {
          "courseD_artist_functions7_a": "Try creating your function first then adding in windows one at a time.",
          "courseD_artist_functions7_b": "You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows."
        },
        "courseD_artist_functions8_authored_hint": {
          "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
          "courseD_artist_functions8_b": "After your first line of squares, you need to move the artist down and back before you start your second line of squares.",
          "courseD_artist_functions8_c": "You should move the artist back a different number of pixels for even lines than for odd ones."
        },
        "courseD_artist_functions9_authored_hint": {
          "courseD_artist_functions9_a": "To get around the need to have multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.",
          "courseD_artist_functions9_b": "This drawing is made by creating a line of triangles and turning either 60 or 120 degrees after each time you draw the triangle line."
        },
        "courseD_artist_nestedLoops1_authored_hint": {
          "courseD_artist_nestedLoops1_a": "The easiest way to draw this is to move forward and use right turns.",
          "courseD_artist_nestedLoops1_b": "You can draw this triangle with a `repeat` loop with two blocks inside. Which blocks do you need?",
          "courseD_artist_nestedLoops1_c": "Try writing the steps on paper and looking for patterns that can be simplified with loops."
        },
        "courseD_artist_nestedLoops1_2018_authored_hint": {
          "courseD_artist_nestedLoops1_a": "The easiest way to draw this is to move forward and use right turns.",
          "courseD_artist_nestedLoops1_b": "You can draw this triangle with a `repeat` loop with two blocks inside. Which blocks do you need?",
          "courseD_artist_nestedLoops1_c": "Try writing the steps on paper and looking for patterns that can be simplified with loops."
        },
        "courseD_artist_nestedLoops1a_authored_hint": {
          "courseD_artist_nestedLoops1a_a": "You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.\n\n![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)",
          "courseD_artist_nestedLoops1a_b": "If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.",
          "courseD_artist_nestedLoops1a_c": "If you want colors, use the `set color` block in your code. You don't have to match the colors in the template image."
        },
        "courseD_artist_nestedLoops1a_2018_authored_hint": {
          "courseD_artist_nestedLoops1a_a": "You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.\n\n![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)",
          "courseD_artist_nestedLoops1a_b": "If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.",
          "courseD_artist_nestedLoops1a_c": "If you want colors, use the `set color` block in your code. You don't have to match the colors in the template image."
        },
        "courseD_artist_nestedLoops2_authored_hint": {
          "courseD_artist_nestedLoops2_a": "Nest your loops by surrounding your triangle code with another `repeat` loop.",
          "courseD_artist_nestedLoops2_b": "Remember to put the `turn` block inside of the loop so that the artist turns after each triangle."
        },
        "courseD_artist_nestedLoops2_2018_authored_hint": {
          "courseD_artist_nestedLoops2_a": "Nest your loops by surrounding your triangle code with another `repeat` loop.",
          "courseD_artist_nestedLoops2_b": "Remember to put the `turn` block inside of the loop so that the artist turns after each triangle."
        },
        "courseD_artist_nestedLoops3_authored_hint": {
          "courseD_artist_nestedLoops3_a": "Try using the `jump forward` block to get from the top of one square to the place where you will start the next. \n\nIf your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?",
          "courseD_artist_nestedLoops3_b": "Don't forget to use a nested loop to solve this puzzle quickly. ",
          "courseD_artist_nestedLoops3_c": "Start by using a `repeat` loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. "
        },
        "courseD_artist_nestedLoops3_2018_authored_hint": {
          "courseD_artist_nestedLoops3_a": "Try using the `jump forward` block to get from the top of one square to the place where you will start the next. \n\nIf your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?",
          "courseD_artist_nestedLoops3_b": "Don't forget to use a nested loop to solve this puzzle quickly. ",
          "courseD_artist_nestedLoops3_c": "Start by using a `repeat` loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. "
        },
        "courseD_artist_nestedLoops4_authored_hint": {
          "courseD_artist_nestedLoops4_d": "To solve this correctly, you'll need to move **before** you turn, or else your circles will be off by the tiniest little amount!",
          "courseD_artist_nestedLoops4_b": "Don't forget to jump forward by 50 pixels between circles.",
          "courseD_artist_nestedLoops4_c": "Use a nested loop to draw your circles 4 times."
        },
        "courseD_artist_nestedLoops4_2018_authored_hint": {
          "courseD_artist_nestedLoops4_d": "To solve this correctly, you'll need to move **before** you turn, or else your circles will be off by the tiniest little amount!",
          "courseD_artist_nestedLoops4_b": "Don't forget to jump forward by 50 pixels between circles.",
          "courseD_artist_nestedLoops4_c": "Use a nested loop to draw your circles 4 times."
        },
        "courseD_artist_nestedLoops5_authored_hint": {
          "courseD_artist_nestedLoops5_b": "To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree."
        },
        "courseD_artist_nestedLoops5_2018_authored_hint": {
          "courseD_artist_nestedLoops5_b": "To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree."
        },
        "courseD_artist_nestedLoops6_authored_hint": {
          "courseD_artist_nestedLoops6_a": "You'll need to repeat your outer loop 6 times now, instead of only 4.",
          "courseD_artist_nestedLoops6_b": "Now that you're breaking 360 degrees into six pieces instead of only four, you will only need to turn 60 degrees between circles. "
        },
        "courseD_artist_nestedLoops7_authored_hint": {
          "courseD_artist_nestedLoops7_a": "You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?"
        },
        "courseD_artist_nestedLoops7_2018_authored_hint": {
          "courseD_artist_nestedLoops7_a": "You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?"
        },
        "courseD_artist_nestedLoops8_authored_hint": {
          "courseD_artist_nestedLoops8_a": "To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.",
          "courseD_artist_nestedLoops8_b": "If you're stuck, start by looking at the last puzzle, then change the things that are different."
        },
        "courseD_artist_nestedLoops8_2018_authored_hint": {
          "courseD_artist_nestedLoops8_a": "To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.",
          "courseD_artist_nestedLoops8_b": "If you're stuck, start by looking at the last puzzle, then change the things that are different."
        },
        "courseD_artist_nestedLoops9_authored_hint": {
          "courseD_artist_nestedLoops9_a": "Start by using a nested loop like you had before, but this time, make it with squares.",
          "courseD_artist_nestedLoops9_b": "Add a second set of nested loops to the end of the first set, but this time use triangles."
        },
        "courseD_artist_nestedLoops9_2018_authored_hint": {
          "courseD_artist_nestedLoops9_a": "Start by using a nested loop like you had before, but this time, make it with squares.",
          "courseD_artist_nestedLoops9_b": "Add a second set of nested loops to the end of the first set, but this time use triangles."
        },
        "courseD_artist_nestedLoopsFP_authored_hint": {
          "courseD_artist_nestedLoopsFP_a": "<img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.",
          "courseD_artist_nestedLoopsFP_b": "<img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/>\n\nThis image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).",
          "courseD_artist_nestedLoopsFP_c": "<img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn."
        },
        "courseD_artist_nestedLoopsFP_2018_authored_hint": {
          "courseD_artist_nestedLoopsFP_a": "<img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.",
          "courseD_artist_nestedLoopsFP_b": "<img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/>\n\nThis image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).",
          "courseD_artist_nestedLoopsFP_c": "<img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn."
        },
        "courseD_artist_nestedLoops_challenge1_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.",
          "courseD_artist_nestedLoops_challenge1_b": "Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.",
          "courseD_artist_nestedLoops_challenge1_c": "After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.",
          "courseD_artist_nestedLoops_challenge1_d": "Put all of your code inside of a `repeat 4 times` loop to finish it off."
        },
        "courseD_artist_nestedLoops_challenge1_2018_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.",
          "courseD_artist_nestedLoops_challenge1_b": "Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.",
          "courseD_artist_nestedLoops_challenge1_c": "After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.",
          "courseD_artist_nestedLoops_challenge1_d": "Put all of your code inside of a `repeat 4 times` loop to finish it off."
        },
        "courseD_artist_nestedLoops_challenge2_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
          "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
        },
        "courseD_artist_nestedLoops_challenge2_2018_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
          "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
        },
        "courseD_artist_project1_authored_hint": {
          "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
        },
        "courseD_artist_project1_2018_authored_hint": {
          "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
        },
        "courseD_artist_project1a_authored_hint": {
          "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />\n",
          "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
        },
        "courseD_artist_project1a_2018_authored_hint": {
          "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />\n",
          "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
        },
        "courseD_artist_project2_authored_hint": {
          "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
          "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
        },
        "courseD_artist_project2_2018_authored_hint": {
          "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
          "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
        },
        "courseD_artist_project2a_authored_hint": {
          "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />\n"
        },
        "courseD_artist_project2a_2018_authored_hint": {
          "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />\n"
        },
        "courseD_artist_project3_authored_hint": {
          "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
        },
        "courseD_artist_project3_2018_authored_hint": {
          "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
          "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
        },
        "courseD_artist_project3a_authored_hint": {
          "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
        },
        "courseD_artist_project3a_2018_authored_hint": {
          "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
        },
        "courseD_artist_project4_authored_hint": {
          "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />\n",
          "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
        },
        "courseD_artist_project4_2018_authored_hint": {
          "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />\n",
          "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
        },
        "courseD_artist_project4a_authored_hint": {
          "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />\n"
        },
        "courseD_artist_project4a_2018_authored_hint": {
          "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />\n"
        },
        "courseD_artist_project5_authored_hint": {
          "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />\n"
        },
        "courseD_artist_project5_2018_authored_hint": {
          "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />\n"
        },
        "courseD_artist_ramp11_authored_hint": {
          "courseD_artist_ramp11a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseD_artist_ramp11b": "To draw 4 sides, put a `move forward by 200 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseD_artist_ramp11_c": "Remember to put the `turn` block inside of your loop!"
        },
        "courseD_artist_ramp12_authored_hint": {
          "courseD_artist_ramp12_a": "You can either draw the square first, then the triangle, or do it the other way around!",
          "courseD_artist_ramp12_b": "Try splitting the problem into 2 parts, and using 2 loops.",
          "courseD_artist_ramp12_c": "You can use the drop down menu on the `turn` blocks to see which angle you need!"
        },
        "courseD_bee_conditionals1_authored_hint": {
          "courseD_bee_conditionals1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
        },
        "courseD_bee_conditionals1_predict1_authored_hint": {
          "courseD_bee_conditionals1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
        },
        "courseD_bee_conditionals1_predict1_2018_authored_hint": {
          "courseD_bee_conditionals1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
        },
        "courseD_bee_conditionals2_authored_hint": {
          "courseD_bee_conditionals2_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
          "courseD_bee_conditionals2_b": "You can use a `repeat` loop or a `while path ahead` to move through this maze.",
          "courseD_bee_conditionals2_c": "You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.",
          "courseD_bee_conditionals2_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals2_2018_authored_hint": {
          "courseD_bee_conditionals2_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
          "courseD_bee_conditionals2_b": "You can use a `repeat` loop or a `while path ahead` to move through this maze.",
          "courseD_bee_conditionals2_c": "You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.",
          "courseD_bee_conditionals2_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals2_test_authored_hint": {
          "courseD_bee_conditionals2_aa": "Need help getting started?  Here is a little hint video.",
          "courseD_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
          "courseD_bee_conditionals2_b": "You can use a `repeat` loop or a `while path ahead` to move through this maze.",
          "courseD_bee_conditionals2_c": "You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.",
          "courseD_bee_conditionals2_d": "Need help finishing things up?  Watch this hint video."
        },
        "courseD_bee_conditionals3_authored_hint": {
          "courseD_bee_conditionals3_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
          "courseD_bee_conditionals3_b": "You can use a `repeat` loop or a `while` loop to keep the bee moving forward. Use whichever one you like!",
          "courseD_bee_conditionals3_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseD_bee_conditionals3_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals3_2018_authored_hint": {
          "courseD_bee_conditionals3_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
          "courseD_bee_conditionals3_b": "You can use a `repeat` loop or a `while` loop to keep the bee moving forward. Use whichever one you like!",
          "courseD_bee_conditionals3_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseD_bee_conditionals3_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals4_authored_hint": {
          "courseD_bee_conditionals4_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
          "courseD_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
          "courseD_bee_conditionals4_c": "Using <xml><block type=\"maze_untilBlocked\"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?",
          "courseD_bee_conditionals4_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals4_2018_authored_hint": {
          "courseD_bee_conditionals4_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
          "courseD_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
          "courseD_bee_conditionals4_c": "Using <xml><block type=\"maze_untilBlocked\"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?",
          "courseD_bee_conditionals4_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals5_authored_hint": {
          "courseD_bee_conditionals5_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` loop on the inside. How many paths does the bee need to buzz down if the bee needs to buzz down every side with a flower?",
          "courseD_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. `if there is a flower`, the bee should `get nectar`.",
          "courseD_bee_conditionals5_b": "Inside the `while there is a path ahead` block you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
          "courseD_bee_conditionals5_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals5_2018_authored_hint": {
          "courseD_bee_conditionals5_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while path ahead` loop on the inside. How many paths does the bee need to buzz down if the bee needs to buzz down every side with a flower?",
          "courseD_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while path ahead`. To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. `if there is a flower`, the bee should `get nectar`.",
          "courseD_bee_conditionals5_b": "Inside the `while path ahead` block you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
          "courseD_bee_conditionals5_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals6_authored_hint": {
          "courseD_bee_conditionals6_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals6_a": "Make sure to use an `if` statement to check for honeycomb beneath each cloud.",
          "courseD_bee_conditionals6_b": "In this case, you do not need to check for flowers under the clouds.",
          "courseD_bee_conditionals6_c": "Is there a loop you can use to make your code simpler?",
          "courseD_bee_conditionals6_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals6_2018_authored_hint": {
          "courseD_bee_conditionals6_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals6_a": "Make sure to use an `if` statement to check for honeycomb beneath each cloud.",
          "courseD_bee_conditionals6_b": "In this case, you do not need to check for flowers under the clouds.",
          "courseD_bee_conditionals6_c": "Is there a loop you can use to make your code simpler?",
          "courseD_bee_conditionals6_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals7_authored_hint": {
          "courseD_bee_conditionals7_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge.",
          "courseD_bee_conditionals7_b": "If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space.",
          "courseD_bee_conditionals7_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals7_2018_authored_hint": {
          "courseD_bee_conditionals7_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge.",
          "courseD_bee_conditionals7_b": "If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space.",
          "courseD_bee_conditionals7_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals7_predict2_authored_hint": {
          "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        },
        "courseD_bee_conditionals7_predict2_2018_authored_hint": {
          "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        },
        "courseD_bee_conditionals8_authored_hint": {
          "courseD_bee_conditionals8_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
          "courseD_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
          "courseD_bee_conditionals8_c": "How can you make sure to travel to the end every path, no matter how long the path is?",
          "courseD_bee_conditionals8_d": "Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.\n\n![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)",
          "courseD_bee_conditionals8_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals8_2018_authored_hint": {
          "courseD_bee_conditionals8_hintVid1": "Need help getting started?  Watch the video!",
          "courseD_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
          "courseD_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
          "courseD_bee_conditionals8_c": "How can you make sure to travel to the end every path, no matter how long the path is?",
          "courseD_bee_conditionals8_d": "Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.\n\n![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)",
          "courseD_bee_conditionals8_hintVid2": "Watch this video for help solving this puzzle."
        },
        "courseD_bee_conditionals_challenge1_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.",
          "courseD_bee_conditionals_challenge1_b": "In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your `if/else` conditional at each square."
        },
        "courseD_bee_conditionals_challenge1_2018_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.",
          "courseD_bee_conditionals_challenge1_b": "In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your `if/else` conditional at each square."
        },
        "courseD_bee_conditionals_challenge2_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:\n\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_conditionals_challenge2_2018_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:\n\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_conditionals_challenge3_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:\n\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_debugging1_authored_hint": {
          "courseD_bee_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_bee_debugging1_b": "Do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "courseD_bee_debugging2_authored_hint": {
          "courseD_bee_debugging2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_bee_debugging2_b": "Do you see a pattern?   \nTry using nested loops to solve this puzzle.\n\n![](https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png)"
        },
        "courseD_bee_debugging3_authored_hint": {
          "courseD_bee_debugging3_a": "Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?",
          "courseD_bee_debugging3_b": "Try simplifying the code using nested loops."
        },
        "courseD_bee_debugging4_authored_hint": {
          "courseD_bee_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_bee_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        },
        "courseD_bee_debugging5_authored_hint": {
          "courseD_bee_debugging5_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_bee_debugging5_b": "Once you have the first loop the way you want it, what is left over in your code?",
          "courseD_bee_debugging5_c": "Try wrapping the leftover loop around the rest of your completed code.  Does is work now?\n\nIf not, what is still going wrong?"
        },
        "courseD_bee_debugging6_authored_hint": {
          "courseD_bee_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_bee_debugging6_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?"
        },
        "courseD_bee_debugging7_authored_hint": {
          "courseD_bee_debugging7_a": "Try using the \"Step\" button.  Is everything right at the first step?  \n\nHow about the second?  \n\nWhere does it go wrong?  ",
          "courseD_bee_debugging7_b": "If something needs to happen several times, try adding a `repeat` loop."
        },
        "courseD_bee_debugging8_authored_hint": {
          "courseD_bee_debugging8_a": "Do you see a pattern that you can simplify with a loop?",
          "courseD_bee_debugging8_b": "Try using a nested loop to make this code shorter."
        },
        "courseD_bee_debugging9_authored_hint": {
          "courseD_bee_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
          "courseD_bee_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.",
          "courseD_bee_debugging9_c": "Envision one of these stair steps to the flowers.   \n\n![](https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png)\n\nCan you build either of these with what's in the workspace and toolbox?\n\n"
        },
        "courseD_bee_debugging_challenge1_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
          "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?"
        },
        "courseD_bee_debugging_challenge1_2018_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
          "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?"
        },
        "courseD_bee_debugging_challenge1a_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
          "courseD_bee_debugging_challenge1_b": "To solve this puzzle, have the bee follow the same pattern to make honey that it does when collecting nectar.",
          "courseD_bee_debugging_challenge1_c": "After the bee makes it to the bottom row, have it repeat these commands:\n\n<xml><block type=\"controls_repeat\">\n                    <title name=\"TIMES\">2</title>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_honey\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveBackward</title>\n                      </block>\n                    </next>\n                  </block></xml>"
        },
        "courseD_bee_debugging_challenge2_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "Why the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
          "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?"
        },
        "courseD_bee_nestedLoops1_authored_hint": {
          "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
          "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
          "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
        },
        "courseD_bee_nestedLoops1_2018_authored_hint": {
          "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
          "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
          "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
        },
        "courseD_bee_nestedLoops1a_authored_hint": {
          "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
          "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
        },
        "courseD_bee_nestedLoops1a_2018_authored_hint": {
          "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
          "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
        },
        "courseD_bee_nestedLoops2_authored_hint": {
          "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
          "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
          "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
        },
        "courseD_bee_nestedLoops2_2018_authored_hint": {
          "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
          "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
          "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
        },
        "courseD_bee_nestedLoops3_authored_hint": {
          "grade4_bee_nestedLoops1_a": "If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see."
        },
        "courseD_bee_nestedLoops5_authored_hint": {
          "grade4_bee_nestedLoops4_a": "Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!",
          "grade4_bee_nestedLoops4_b": "You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.\n\nAltogether, you should be using 3 loops."
        },
        "courseD_bee_nestedLoops6_2018_authored_hint": {
          "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
          "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
          "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
        },
        "courseD_bee_nestedLoops7_authored_hint": {
          "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
          "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle."
        },
        "courseD_bee_nestedLoops7_2018_authored_hint": {
          "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
          "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle."
        },
        "courseD_bee_nested_loops_challenge1_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns."
        },
        "courseD_bee_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Then turn left or right and use a nested loop to move from the first pile of treasure to the second.",
          "courseD_bee_nested_loops_challenge2_c": "If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge2_d": "The shortest program that reaches all the treasure uses only one `collect` block and two turns."
        },
        "courseD_bounce_events10s_authored_hint": {
          "courseD_bounce_events10s_a": "You should have both of these events in your code:\n\n<xml><block type=\"bounce_whenBallInGoal\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">swish</title><next><block type=\"bounce_incrementPlayerScore\"></block></next></block></next></block><block type=\"bounce_whenBallMissesPaddle\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">whistle</title><next><block type=\"bounce_incrementOpponentScore\"></block></next></block></next></block</xml>"
        },
        "courseD_bounce_events10s_2018_authored_hint": {
          "courseD_bounce_events10s_a": "You should have both of these events in your code:\n\n<xml><block type=\"bounce_whenBallInGoal\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">swish</title><next><block type=\"bounce_incrementPlayerScore\"></block></next></block></next></block><block type=\"bounce_whenBallMissesPaddle\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">whistle</title><next><block type=\"bounce_incrementOpponentScore\"></block></next></block></next></block</xml>"
        },
        "courseD_bounce_events11s_authored_hint": {
          "courseD_bounce_events11s_a": "You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball."
        },
        "courseD_bounce_events11s_2018_authored_hint": {
          "courseD_bounce_events11s_a": "You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball."
        },
        "courseD_bounce_events12s_authored_hint": {
          "courseD_bounce_events12s_a": "You can speed up the basketball or the hand by attaching those blocks to the `when run` event.",
          "courseD_bounce_events12s_b": "Try making each shot worth 2 points and changing the team logo to the one from your home town!"
        },
        "courseD_bounce_events12s_2018_authored_hint": {
          "courseD_bounce_events12s_a": "You can speed up the basketball or the hand by attaching those blocks to the `when run` event.",
          "courseD_bounce_events12s_b": "Try making each shot worth 2 points and changing the team logo to the one from your home town!"
        },
        "courseD_bounce_events1s_authored_hint": {
          "courseD_bounce_events1s_a": "You need to add the `move left` block to the `when left arrow` event to make this game work:\n\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>",
          "courseD_bounce_events1s_b": "Don't forget to press \"Run\" and get the hand to the basket in order to solve this puzzle."
        },
        "courseD_bounce_events1s_2018_authored_hint": {
          "courseD_bounce_events1s_a": "You need to add the `move left` block to the `when left arrow` event to make this game work:\n\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>",
          "courseD_bounce_events1s_b": "Don't forget to press \"Run\" and get the hand to the basket in order to solve this puzzle."
        },
        "courseD_bounce_events2s_authored_hint": {
          "courseD_bounce_events2s_a": "You will need to have two sets of `move` events coded for this to work:\n\n<xml>\n  <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n  <block type=\"bounce_whenRight\" deletable=\"false\" x=\"180\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveRight\"/>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_bounce_events2s_2018_authored_hint": {
          "courseD_bounce_events2s_a": "You will need to have two sets of `move` events coded for this to work:\n\n<xml>\n  <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n  <block type=\"bounce_whenRight\" deletable=\"false\" x=\"180\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveRight\"/>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_bounce_events5s_authored_hint": {
          "courseD_bounce_events5s_a": "You do not need to move the hand to solve this puzzle.",
          "courseD_bounce_events5s_b": "Make sure you have added this code to your workspace:\n\n<xml>  <block type=\"bounce_whenPaddleCollided\" deletable=\"false\"> <next> <block type=\"bounce_bounceBall\"/></next></block></xml>"
        },
        "courseD_bounce_events5s_2018_authored_hint": {
          "courseD_bounce_events5s_a": "You do not need to move the hand to solve this puzzle.",
          "courseD_bounce_events5s_b": "Make sure you have added this code to your workspace:\n\n<xml>  <block type=\"bounce_whenPaddleCollided\" deletable=\"false\"> <next> <block type=\"bounce_bounceBall\"/></next></block></xml>"
        },
        "courseD_bounce_events6s_authored_hint": {
          "courseD_bounce_events6s_a": "Do you have an event that looks like this?\n\n<xml><block type=\"bounce_whenWallCollided\" deletable=\"false\"><next><block type=\"bounce_bounceBall\"></block></next></block></block></xml>",
          "courseD_bounce_events6s_b": "If you've written the code correctly, you don't have to move the hand to win."
        },
        "courseD_bounce_events6s_2018_authored_hint": {
          "courseD_bounce_events6s_a": "Do you have an event that looks like this?\n\n<xml><block type=\"bounce_whenWallCollided\" deletable=\"false\"><next><block type=\"bounce_bounceBall\"></block></next></block></block></xml>",
          "courseD_bounce_events6s_b": "If you've written the code correctly, you don't have to move the hand to win."
        },
        "courseD_bounce_events7s_authored_hint": {
          "courseD_bounce_events7s_a": "You can add sounds in more places if you feel like it!"
        },
        "courseD_bounce_events7s_2018_authored_hint": {
          "courseD_bounce_events7s_a": "You can add sounds in more places if you feel like it!"
        },
        "courseD_collector_debugging1_authored_hint": {
          "courseD_collector_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging1_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
          "courseD_collector_debugging1_c": "Remember to use the `collect` block to pick up treasure once you have moved to it.\n"
        },
        "courseD_collector_debugging10_predict1_authored_hint": {
          "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
          "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
        },
        "courseD_collector_debugging10_predict1_2018_authored_hint": {
          "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
          "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
        },
        "courseD_collector_debugging1_2018_authored_hint": {
          "courseD_collector_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging1_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
          "courseD_collector_debugging1_c": "Remember to use the `collect` block to pick up treasure once you have moved to it.\n"
        },
        "courseD_collector_debugging1a_authored_hint": {
          "courseD_collector_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging1_c": "Remember to use the `collect` block to pick up treasure once you have moved to it.\n"
        },
        "courseD_collector_debugging1a_2018_authored_hint": {
          "courseD_collector_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging1_c": "Remember to use the `collect` block to pick up treasure once you have moved to it.\n"
        },
        "courseD_collector_debugging2_authored_hint": {
          "courseD_collector_debugging2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging2_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
          "courseD_collector_debugging2_c": "Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?"
        },
        "courseD_collector_debugging2_2018_authored_hint": {
          "courseD_collector_debugging2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging2_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
          "courseD_collector_debugging2_c": "Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?"
        },
        "courseD_collector_debugging2a_authored_hint": {
          "courseD_collector_debugging2a_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging2a_c": "What happens?\n\nWhat is supposed to happen?\n\nWhat does that tell you?"
        },
        "courseD_collector_debugging2a_2018_authored_hint": {
          "courseD_collector_debugging2a_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_collector_debugging2a_c": "What happens?\n\nWhat is supposed to happen?\n\nWhat does that tell you?"
        },
        "courseD_collector_debugging3_authored_hint": {
          "courseD_collector_debugging3_a": "Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?",
          "courseD_collector_debugging3_b": "Try simplifying the code using nested loops."
        },
        "courseD_collector_debugging3_2018_authored_hint": {
          "courseD_collector_debugging3_a": "Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?",
          "courseD_collector_debugging3_b": "Try simplifying the code using nested loops."
        },
        "courseD_collector_debugging3a_authored_hint": {
          "courseD_collector_debugging3_a": "Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?"
        },
        "courseD_collector_debugging3a_2018_authored_hint": {
          "courseD_collector_debugging3_a": "Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?"
        },
        "courseD_collector_debugging4_authored_hint": {
          "courseD_collector_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_collector_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!",
          "courseD_collector_debugging4_c": "This loop is only missing one block. Can you figure out which one?"
        },
        "courseD_collector_debugging4_2018_authored_hint": {
          "courseD_collector_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_collector_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!",
          "courseD_collector_debugging4_c": "This loop is only missing one block. Can you figure out which one?"
        },
        "courseD_collector_debugging4a_authored_hint": {
          "courseD_collector_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_collector_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        },
        "courseD_collector_debugging4a_2018_authored_hint": {
          "courseD_collector_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_collector_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        },
        "courseD_collector_debugging5_authored_hint": {
          "courseD_collector_debugging5_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_collector_debugging5_b": "Once you have the first loop the way you want it, what is left over in your code?"
        },
        "courseD_collector_debugging5_2018_authored_hint": {
          "courseD_collector_debugging5_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_collector_debugging5_b": "Once you have the first loop the way you want it, what is left over in your code?"
        },
        "courseD_collector_debugging5a_authored_hint": {
          "courseD_collector_debugging5a_a": "What does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_collector_debugging5a_b": "Once you have the first line of treasure collected, what is left over in your code?"
        },
        "courseD_collector_debugging5a_2018_authored_hint": {
          "courseD_collector_debugging5a_a": "What does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_collector_debugging5a_b": "Once you have the first line of treasure collected, what is left over in your code?"
        },
        "courseD_collector_debugging6_authored_hint": {
          "courseD_collector_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_collector_debugging6_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `collect` action multiple times?"
        },
        "courseD_collector_debugging6_2018_authored_hint": {
          "courseD_collector_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_collector_debugging6_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `collect` action multiple times?"
        },
        "courseD_collector_debugging6a_authored_hint": {
          "courseD_collector_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_collector_debugging6_b": "It looks like all of the blocks you need are in the workspace. Try clicking \"start over\" if things get too confusing."
        },
        "courseD_collector_debugging6a_2018_authored_hint": {
          "courseD_collector_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_collector_debugging6_b": "It looks like all of the blocks you need are in the workspace. Try clicking \"start over\" if things get too confusing."
        },
        "courseD_collector_debugging7_authored_hint": {
          "courseD_collector_debugging7_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_collector_debugging7_b": "If something needs to happen several times, try adding a `repeat` loop.",
          "courseD_collector_debugging7_c": "If you're having trouble, try writing the steps on a piece of paper and then putting the blocks into that order."
        },
        "courseD_collector_debugging8_authored_hint": {
          "courseD_collector_debugging8_a": "Do you see a pattern that you can simplify with a loop?",
          "courseD_collector_debugging8_b": "Try using a nested loop to make this code shorter."
        },
        "courseD_collector_debugging8_2018_authored_hint": {
          "courseD_collector_debugging8_a": "Do you see a pattern that you can simplify with a loop?",
          "courseD_collector_debugging8_b": "Try using a nested loop to make this code shorter."
        },
        "courseD_collector_debugging9_authored_hint": {
          "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
          "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
        },
        "courseD_collector_debugging9_2018_authored_hint": {
          "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
          "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
        },
        "courseD_collector_debugging_challenge2_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "Start by collecting just **two** gems from each of the first **two** piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_debugging_challenge2_2018_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "Start by collecting just **two** gems from each of the first **two** piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns.",
          "courseD_bee_nested_loops_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2_2018_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns.",
          "courseD_bee_nested_loops_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2a_authored_hint": {
          "courseD_collector_nested_loops_challenge2a_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_collector_nested_loops_challenge2a_b": "Can you figure out how to get all four gems without using any more blocks than it takes to get two?"
        },
        "courseD_collector_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:\n\n<xml><block type=\"controls_repeat\">\n                                            <title name=\"TIMES\">4</title>\n                                            <statement name=\"DO\">\n                                              <block type=\"maze_moveForward\"/>\n                                            </statement>\n                                          </block></xml>",
          "courseD_artist_ramp10_b": "Don't forget to collect one piece of treasure, then turn to start on a new side of the square!",
          "courseD_artist_ramp10_c": "If you want to simplify your code, you can put one loop inside of another! This is called a **nested loop**."
        },
        "courseD_collector_ramp8_authored_hint": {
          "courseD_collector_ramp8_a": "When you get to a square with treasure, use `collect` to pick it up. For this puzzle, you'll need to collect treasure more than once!",
          "courseD_collector_ramp8_b": "If you want to simplify your code more, you can actually put one `repeat` loop inside of another! This is called a **nested loop**."
        },
        "courseD_collector_ramp9_authored_hint": {
          "courseD_collector_ramp9_a": "Start by moving Laurel to the first treasure, then collecting it. Can you repeat this sequence to get the second pile?",
          "courseD_collector_ramp9_b": "If you want to simplify your code, you can put one repeat loop inside of another! This is called a **nested loop**."
        },
        "courseD_debugging_1_authored_hint": {
          "courseD_debugging_1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_debugging_1_b": "Do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "courseD_debugging_2_authored_hint": {
          "courseD_debugging_2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "courseD_debugging_2_b": "Do you see a pattern?  Try using nested loops to solve this puzzle."
        },
        "courseD_debugging_3_authored_hint": {
          "courseD_debugging_3_a": "Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?",
          "courseD_debugging_3_b": "Try simplifying the code using nested loops."
        },
        "courseD_debugging_4_authored_hint": {
          "courseD_debugging_4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "courseD_debugging_4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        },
        "courseD_debugging_5_authored_hint": {
          "courseD_debugging_5_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "courseD_debugging_5_b": "Once you have the first loop the way you want it, what is left over in your code?",
          "courseD_debugging_5_c": "Try wrapping the leftover loop around the rest of your completed code.  Does is work now?\n\nIf not, what is still going wrong?"
        },
        "courseD_debugging_6_authored_hint": {
          "courseD_debugging_6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "courseD_debugging_6_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?"
        },
        "courseD_farmer_condLoops1_authored_hint": {
          "courseD_farmer_condLoops1_a": "You will need to look for corn 5 times, using a repeat loop.",
          "courseD_farmer_condLoops1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
        },
        "courseD_farmer_condLoops1_2018_authored_hint": {
          "courseD_farmer_condLoops1_a": "You will need to look for corn 5 times, using a repeat loop.",
          "courseD_farmer_condLoops1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
        },
        "courseD_farmer_condLoops2_authored_hint": {
          "courseD_farmer_condLoops2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
          "courseD_farmer_condLoops2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement."
        },
        "courseD_farmer_condLoops2_2018_authored_hint": {
          "courseD_farmer_condLoops2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
          "courseD_farmer_condLoops2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement."
        },
        "courseD_farmer_condLoops3_authored_hint": {
          "courseD_farmer_condLoops3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
          "courseD_farmer_condLoops3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
        },
        "courseD_farmer_condLoops3_2018_authored_hint": {
          "courseD_farmer_condLoops3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
          "courseD_farmer_condLoops3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
        },
        "courseD_farmer_condLoops4_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered.",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "The `while` loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "You can use either a `while path ahead` loop or a `repeat` loop to go through all of the crops."
        },
        "courseD_farmer_condLoops4_2018_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered.",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "The `while` loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "You can use either a `while path ahead` loop or a `repeat` loop to go through all of the crops."
        },
        "courseD_farmer_condLoops4a_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered."
        },
        "courseD_farmer_condLoops5_authored_hint": {
          "courseD_farmer_condLoops5_a": "There is a new loop: `repeat until at pumpkin`. Can you see how to use it in this puzzle?",
          "courseD_farmer_condLoops5_b": "There could be more than one corn or lettuce plant in each spot. Use a `while` loop to gather all of them!"
        },
        "courseD_farmer_condLoops5_2018_authored_hint": {
          "courseD_farmer_condLoops5_a": "There is a new loop: `repeat until at pumpkin`. Can you see how to use it in this puzzle?",
          "courseD_farmer_condLoops5_b": "There could be more than one corn or lettuce plant in each spot. Use a `while` loop to gather all of them!"
        },
        "courseD_farmer_condLoops6_authored_hint": {
          "courseD_farmer_condLoops6_a": "Use a `while there is corn` loop to make sure you get all of the corn along the way. This block won't do anything if there's no corn to pick.",
          "courseD_farmer_condLoops6_b": "Make sure to check `if` there's a path ahead before you take your next step!"
        },
        "courseD_farmer_condLoops6_2018_authored_hint": {
          "courseD_farmer_condLoops6_a": "Use a `while path ahead` loop to move the farmer down each piece of the spiral.",
          "courseD_farmer_condLoops6_b": "You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program."
        },
        "courseD_farmer_condLoops7_authored_hint": {
          "courseD_farmer_condLoops7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)",
          "courseD_farmer_condLoops7_b": "Try using `when path ahead` to keep the harvester moving the right number of steps."
        },
        "courseD_farmer_condLoops7_2018_authored_hint": {
          "courseD_farmer_condLoops7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)",
          "courseD_farmer_condLoops7_b": "Try using `when path ahead` to keep the harvester moving the right number of steps."
        },
        "courseD_farmer_condLoops_challenge1_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "The \"Step\" button could be very helpful in this challenge.",
          "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
        },
        "courseD_farmer_condLoops_challenge1_2018_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "The \"Step\" button could be very helpful in this challenge.",
          "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
        },
        "courseD_farmer_condLoops_challenge2_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space can change. A `while` loop can help!"
        },
        "courseD_farmer_condLoops_challenge2_2018_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space can change. A `while` loop can help!"
        },
        "courseD_farmer_conditionals4_authored_hint": {
          "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone."
        },
        "courseD_farmer_conditionals5_authored_hint": {
          "courseD_farmer_conditionals5a": "Try nesting a `while` loop inside of a `repeat` loop."
        },
        "courseD_farmer_conditionals6_authored_hint": {
          "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
          "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern."
        },
        "courseD_farmer_conditionals7_authored_hint": {
          "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path."
        },
        "courseD_farmer_conditionals8_authored_hint": {
          "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
          "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
          "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
        },
        "courseD_farmer_while1_authored_hint": {
          "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
          "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
        },
        "courseD_farmer_while1_2018_authored_hint": {
          "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
          "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
        },
        "courseD_farmer_while2_authored_hint": {
          "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
          "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
        },
        "courseD_farmer_while2_2018_authored_hint": {
          "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
          "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
        },
        "courseD_farmer_while3_authored_hint": {
          "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
          "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
        },
        "courseD_farmer_while3_2018_authored_hint": {
          "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
          "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
        },
        "courseD_farmer_while4_authored_hint": {
          "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.",
          "courseD_farmer_conditionals4_b": "This looks very similar to an earlier puzzle, the only difference is which loop you need."
        },
        "courseD_farmer_while4_2018_authored_hint": {
          "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.",
          "courseD_farmer_conditionals4_b": "This looks very similar to an earlier puzzle, the only difference is which loop you need."
        },
        "courseD_farmer_while5_authored_hint": {
          "courseD_farmer_conditionals5a_a": "Try nesting a `while` loop inside of a `repeat` loop.",
          "courseD_farmer_conditionals5a_b": "The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?",
          "courseD_farmer_conditionals5a_c": "Move forward 5 times. Each time you move forward, remove the pile of dirt by using the `while there is a pile` block."
        },
        "courseD_farmer_while5_2018_authored_hint": {
          "courseD_farmer_conditionals5a_a": "Try nesting a `while` loop inside of a `repeat` loop.",
          "courseD_farmer_conditionals5a_b": "The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?",
          "courseD_farmer_conditionals5a_c": "Move forward 5 times. Each time you move forward, remove the pile of dirt by using the `while there is a pile` block."
        },
        "courseD_farmer_while6_authored_hint": {
          "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
          "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern.",
          "courseD_farmer_conditionals6_c": "The stair step pattern uses the following blocks\n  - move forward\n  - fill hole\n  - turn right\n  - move forward\n  - fill hole\n  - turn left\n\nHow many times do you need to use this stair step pattern?\n\nMake sure you are using the `while there is a hole` to fill the hole."
        },
        "courseD_farmer_while6_2018_authored_hint": {
          "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
          "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern.",
          "courseD_farmer_conditionals6_c": "The stair step pattern uses the following blocks\n  - move forward\n  - fill hole\n  - turn right\n  - move forward\n  - fill hole\n  - turn left\n\nHow many times do you need to use this stair step pattern?\n\nMake sure you are using the `while there is a hole` to fill the hole."
        },
        "courseD_farmer_while7_authored_hint": {
          "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
          "courseD_farmer_conditionals8_b": "Putting a `while path ahead` loop inside of a repeat loop can help you in this puzzle.",
          "courseD_farmer_conditionals8_c": "What do you need to do at the end of each path?"
        },
        "courseD_farmer_while7_2018_authored_hint": {
          "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
          "courseD_farmer_conditionals8_b": "Putting a `while path ahead` loop inside of a repeat loop can help you in this puzzle.",
          "courseD_farmer_conditionals8_c": "What do you need to do at the end of each path?"
        },
        "courseD_farmer_while8_authored_hint": {
          "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
          "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
          "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
        },
        "courseD_farmer_while8_2018_authored_hint": {
          "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
          "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
          "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
        },
        "courseD_farmer_while_challenge1_authored_hint": {
          "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
          "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.",
          "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
        },
        "courseD_farmer_while_challenge1_2018_authored_hint": {
          "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
          "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.",
          "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
        },
        "courseD_farmer_while_challenge2_authored_hint": {
          "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
          "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.",
          "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
        },
        "courseD_farmer_while_challenge2_2018_authored_hint": {
          "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
          "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.",
          "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
        },
        "courseD_harvester_nested_loops_challenge1-broken_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "You have probably already used a loop to create a zig-zag pattern. If you remember that algorithm, you can make a few additions to it here."
        },
        "courseD_harvester_nested_loops_challenge1_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "Try following this path to reach all of the corn! ",
          "courseD_harvester_nested_loops_challenge1_b": "To collect more than one piece of corn, you need to use `pick corn` more than one time.",
          "courseD_harvester_nested_loops_challenge1_c": "You will need to put a small loop inside of your main loop to solve this puzzle!"
        },
        "courseD_harvester_nested_loops_challenge1_2018_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "Try following this path to reach all of the corn! ",
          "courseD_harvester_nested_loops_challenge1_b": "To collect more than one piece of corn, you need to use `pick corn` more than one time.",
          "courseD_harvester_nested_loops_challenge1_c": "You will need to put a small loop inside of your main loop to solve this puzzle!"
        },
        "courseD_iceage_loops1_authored_hint": {
          "courseD_iceage_loops1_a": "Watch out for broken ice! Scrat will fall right through!",
          "courseD_iceage_loops1_b": "You will have to use this block:\n\n<xml><block type=\"maze_moveForward\"/></xml>"
        },
        "courseD_iceage_loops10_authored_hint": {
          "courseB_iceage_loops10_a": "Watch out for broken ice! Scrat will fall into the water!",
          "courseB_iceage_loops10_b": "Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?",
          "courseB_iceage_loops10_c": "This is a long puzzle! Follow this path."
        },
        "courseD_iceage_loops2_authored_hint": {
          "courseD_iceage_loops2_a": "Break this puzzle into two pieces, one before the corner, and one after the corner.",
          "courseD_iceage_loops2_b": "If you get stuck, try saying the steps out loud.",
          "courseD_iceage_loops2_c": "Follow this path to get Scrat to the acorn."
        },
        "courseD_iceage_loops3_authored_hint": {
          "courseB_iceage_loops3_b": "To repeat code, drag out a `repeat` loop, then put the block you want repeated inside."
        },
        "courseD_iceage_loops4_authored_hint": {
          "courseD_iceage_loops4_a": "Don't be afraid to run your code and see what happens!",
          "courseD_iceage_loops4_b": "Try writing down the steps Scrat would take to get to the acorn.  Do you see a pattern?",
          "courseD_iceage_loops4_c": "This is the path Scrat should take."
        },
        "courseD_iceage_loops6_authored_hint": {
          "courseD_iceage_loops6_a": "Your final code will have **three** `move forward` blocks.",
          "courseD_iceage_loops6_b": "You only need to add **one** more loop!",
          "courseD_iceage_loops6_c": "Your final path should look like this."
        },
        "courseD_iceage_loops7_authored_hint": {
          "courseB_iceage_loops7_a": "If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?",
          "courseB_iceage_loops7_b": "This is the path Scrat should take to get to the acorn."
        },
        "courseD_iceage_loops8_authored_hint": {
          "courseD_iceage_loops8_a": "Are the `turn` blocks right? What else can you change?",
          "courseD_iceage_loops8_b": "The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.",
          "courseD_iceage_loops8_c": "Use loops to help Scrat follow this path."
        },
        "courseD_iceage_loops9_authored_hint": {
          "courseD_iceage_loops9_a": "Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!",
          "courseD_iceage_loops9_b": "Your final code should have **4** loops.",
          "courseD_iceage_loops9_c": "Scrat should follow this path to get the acorn."
        },
        "courseD_maze_loops_challenge1_authored_hint": {
          "courseD_bee_nested_loops_challenge1_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
          "courseD_bee_nested_loops_challenge1_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!",
          "courseD_bee_nested_loops_challenge1_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns."
        },
        "courseD_maze_nestedLoops3_authored_hint": {
          "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
          "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
          "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
        },
        "courseD_maze_nestedLoops3_2018_authored_hint": {
          "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
          "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
          "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
        },
        "courseD_maze_nestedLoops4_authored_hint": {
          "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)",
          "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
          "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
        },
        "courseD_maze_nestedLoops4_2018_authored_hint": {
          "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)",
          "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
          "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
        },
        "courseD_maze_nestedLoops5_authored_hint": {
          "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
          "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
        },
        "courseD_maze_nestedLoops5_2018_authored_hint": {
          "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
          "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
        },
        "courseD_maze_nestedLoops6_authored_hint": {
          "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
          "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
          "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
        },
        "courseD_maze_nestedLoops6_2018_authored_hint": {
          "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
          "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
          "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
        },
        "courseD_maze_ramp1_authored_hint": {
          "courseC_maze_programming1_a": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all 3 blocks are clicked together and attached to the `when run` block."
        },
        "courseD_maze_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all 3 blocks are clicked together and attached to the `when run` block."
        },
        "courseD_maze_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        },
        "courseD_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        },
        "courseD_maze_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
        },
        "courseD_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
        },
        "courseD_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp5a_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp5a_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp5b_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp5b_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
          "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_maze_ramp6_authored_hint": {
          "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
          "courseC_maze_programming6_b": "The bird starts facing a wall, so remember to turn before you move.",
          "courseC_maze_programming6_c": "Remember you can write one piece of the code at a time, then run it to figure out where you need to go from there."
        },
        "courseD_maze_ramp6a_authored_hint": {
          "courseC_maze_programming6a_a": "Use a `repeat` loop to get this bird moving!"
        },
        "courseD_maze_ramp7_authored_hint": {
          "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseD_maze_ramp7_c": "If you want to simplify your code, you can put one repeat loop inside of another! This is called a **nested loop**."
        },
        "courseD_maze_until1_authored_hint": {
          "courseD_maze_until1_a": "Are there any sequences you can loop to make your code shorter?",
          "courseD_maze_until1_b": "Try using a nested loop to solve this puzzle."
        },
        "courseD_maze_until1_2018_authored_hint": {
          "courseD_maze_until1_a": "Are there any sequences you can loop to make your code shorter?",
          "courseD_maze_until1_b": "Try using a nested loop to solve this puzzle."
        },
        "courseD_maze_until2_authored_hint": {
          "courseD_maze_until2_a": "An `until pig` loop will help you keep going until you succeed!"
        },
        "courseD_maze_until3_authored_hint": {
          "courseD_maze_until3_a": "- What does your code do?\n- What is it supposed to do?\n- What does that tell you?",
          "courseD_maze_until3_b": "If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.",
          "courseD_maze_until3_c": "Is there a stair step pattern you can follow for this puzzle?",
          "courseD_maze_until3_d": "Don't forget to use the `repeat until` block to make your code shorter."
        },
        "courseD_maze_until3_2018_authored_hint": {
          "courseD_maze_until3_a": "- What does your code do?\n- What is it supposed to do?\n- What does that tell you?",
          "courseD_maze_until3_b": "If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.",
          "courseD_maze_until3_c": "Is there a stair step pattern you can follow for this puzzle?",
          "courseD_maze_until3_d": "Don't forget to use the `repeat until` block to make your code shorter."
        },
        "courseD_maze_until4_authored_hint": {
          "courseD_maze_until4_a": "Use the \"Step\" button to go through your code line by line.\n\n- Does everything work at the first step?\n- Does everything work at the second step?\n- Where does it go wrong?",
          "courseD_maze_until4_b": "Is there a stair step pattern you can follow for this puzzle?",
          "courseD_maze_until4_c": "Don't forget to use the `repeat until` block to make your code shorter."
        },
        "courseD_maze_until4_2018_authored_hint": {
          "courseD_maze_until4_a": "Use the \"Step\" button to go through your code line by line.\n\n- Does everything work at the first step?\n- Does everything work at the second step?\n- Where does it go wrong?",
          "courseD_maze_until4_b": "Is there a stair step pattern you can follow for this puzzle?",
          "courseD_maze_until4_c": "Don't forget to use the `repeat until` block to make your code shorter."
        },
        "courseD_maze_until5_authored_hint": {
          "courseD_maze_until5_a": "Don't forget to use `if path to the left` to keep the zombie checking for a place to turn.",
          "courseD_maze_until5_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
          "courseD_maze_until5_c": "After each step, the zombie should check whether there is a path to the left. What should he do if he finds one?"
        },
        "courseD_maze_until5_2018_authored_hint": {
          "courseD_maze_until5_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block."
        },
        "courseD_maze_until6_authored_hint": {
          "courseD_maze_until6_a": "This time, try the `if path to the right` to keep the zombie on track.",
          "courseD_maze_until6_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
          "courseD_maze_until6_c": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!"
        },
        "courseD_maze_until6_2018_authored_hint": {
          "courseD_maze_until6_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block."
        },
        "courseD_maze_until7_authored_hint": {
          "courseD_maze_until7_a": "You don't need your code to be any longer than last time, just because the maze is!",
          "courseD_maze_until7_b": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!",
          "courseD_maze_until7_c": "Remember to check for paths to the left, because turning right will take you down the wrong path!"
        },
        "courseD_maze_until7_2018_authored_hint": {
          "courseD_maze_until7_a": "You don't need your code to be any longer than last time, just because the maze is!",
          "courseD_maze_until7_b": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!"
        },
        "courseD_maze_until8_authored_hint": {
          "courseD_maze_until8_a": "Make sure you're using an `if/else` block to keep the zombie headed the right direction.",
          "courseD_maze_until8_b": "With your `if/else` block: if there is a path ahead, what should you do?",
          "courseD_maze_until8_c": "With your `if/else` block: if there is not a path ahead, which way should you turn?"
        },
        "courseD_maze_until8_2018_authored_hint": {
          "courseD_maze_until8_a": "Make sure you're using an `if/else` block to keep the zombie headed the right direction.",
          "courseD_maze_until8_b": "With your `if/else` block: if there is a path ahead, what should you do?",
          "courseD_maze_until8_c": "With your `if/else` block: if there is not a path ahead, which way should you turn?"
        },
        "courseD_maze_until9_authored_hint": {
          "courseD_maze_until8_a": "Using `if path ahead` will keep you going forward whenever possible, helping you miss the paths with chompers.",
          "courseD_maze_until8_b": "Which direction should you turn if there is no path forward?",
          "courseD_maze_until8_c": "Remember to use the `repeat until` block to get you to the sunflower!"
        },
        "courseD_maze_until9_2018_authored_hint": {
          "courseD_maze_until8_c": "Remember to use the `repeat until` block to get you to the sunflower!"
        },
        "courseD_playLab_cond1_authored_hint": {
          "courseD_playLab_cond1_a": "To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.",
          "courseD_playLab_cond1_b": "Use the drop down menus on the `when arrow` and `move actor` blocks to change which direction they go.",
          "courseD_playLab_cond1_c": "Remember to move Pegleg to both of the flags once you click \"Run\"!"
        },
        "courseD_playLab_cond1_2018_authored_hint": {
          "courseD_playLab_cond1_a": "To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.",
          "courseD_playLab_cond1_b": "Use the drop down menus on the `when arrow` and `move actor` blocks to change which direction they go.",
          "courseD_playLab_cond1_c": "Remember to move Pegleg to both of the flags once you click \"Run\"!"
        },
        "courseD_playLab_cond2_authored_hint": {
          "courseD_playLab_cond2_a": "To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event."
        },
        "courseD_playLab_cond2_2018_authored_hint": {
          "courseD_playLab_cond2_a": "To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event."
        },
        "courseD_playLab_cond3_authored_hint": {
          "courseD_playLab_cond3_a": "You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again."
        },
        "courseD_playLab_cond3_2018_authored_hint": {
          "courseD_playLab_cond3_a": "You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again."
        },
        "courseD_playLab_cond3b_authored_hint": {
          "courseD_playLab_cond3b_a": "You will need to add blocks to your `repeat forever` loop to make the dragon continue to move up and down"
        },
        "courseD_playLab_cond4_authored_hint": {
          "courseD_playLab_cond4_a": "You will want to use the `when run` event to get the ninja to chase the pirate.",
          "courseD_playLab_cond4_b": "There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!",
          "courseD_playLab_cond4_c": "Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event."
        },
        "courseD_playLab_cond4_2018_authored_hint": {
          "courseD_playLab_cond4_a": "You will want to use the `when run` event to get the ninja to chase the pirate.",
          "courseD_playLab_cond4_b": "There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!",
          "courseD_playLab_cond4_c": "Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event."
        },
        "courseD_playLab_cond5_authored_hint": {
          "courseD_playLab_cond5_a": "Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.",
          "courseD_playLab_cond5_b": "You can have more than one `repeat forever` loop in the workspace."
        },
        "courseD_playLab_cond5_2018_authored_hint": {
          "courseD_playLab_cond5_a": "Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.",
          "courseD_playLab_cond5_b": "You can have more than one `repeat forever` loop in the workspace."
        },
        "courseD_playLab_cond6_authored_hint": {
          "courseD_playLab_cond6_a": "Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.",
          "courseD_playLab_cond6_b": "You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses."
        },
        "courseD_playLab_cond6_2018_authored_hint": {
          "courseD_playLab_cond6_a": "Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.",
          "courseD_playLab_cond6_b": "You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses."
        },
        "courseD_playLab_cond6a_authored_hint": {
          "courseD_playLab_cond6_c": "Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly."
        },
        "courseD_playLab_cond6a_2018_authored_hint": {
          "courseD_playLab_cond6_c": "Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly."
        },
        "courseD_playLab_cond6cloneForTest_authored_hint": {
          "courseD_playLab_cond6_a": "Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.",
          "courseD_playLab_cond6_b": "You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses.",
          "courseD_playLab_cond6_c": "Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly."
        },
        "courseD_scrat_ramp1_authored_hint": {
          "courseC_maze_programming1_a": "If Scrat isn't getting to the acorn, make sure all three of the blocks have been fully snapped together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "If Scrat isn't getting to the acorn, make sure all three of the blocks have been fully snapped together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all three `move forward` blocks are attached to the `when run` block."
        },
        "courseD_scrat_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all three `move forward` blocks are attached to the `when run` block."
        },
        "courseD_scrat_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseC_maze_programming3_b": "Remember that turns to the right and left are from Scrat's perspective."
        },
        "courseD_scrat_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseC_maze_programming3_b": "Remember that turns to the right and left are from Scrat's perspective."
        },
        "courseD_scrat_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from Scrat's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the acorn.",
          "courseC_maze_programming4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from Scrat's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the acorn.",
          "courseC_maze_programming4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "How far do you need to move to get to the corner?",
          "courseC_maze_programming5_c": "You will need to turn left at the corner to get to the acorn."
        },
        "courseD_scrat_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "How far do you need to move to get to the corner?",
          "courseC_maze_programming5_c": "You will need to turn left at the corner to get to the acorn."
        },
        "courseD_scrat_ramp6_authored_hint": {
          "courseC_maze_programming6a_a": "Use a `repeat` loop to get Scrat moving!"
        },
        "courseD_scrat_ramp6_2018_authored_hint": {
          "courseC_maze_programming6a_a": "Use a `repeat` loop to get Scrat moving!"
        },
        "courseD_scrat_ramp7_authored_hint": {
          "courseD_scrat_programming6_a": "There are two ways to solve this puzzle!",
          "courseD_scrat_programming6_b": "Remember to turn first before moving, since Scrat is facing the wrong direction.",
          "courseD_scrat_programming6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp7_2018_authored_hint": {
          "courseD_scrat_programming6_a": "There are two ways to solve this puzzle!",
          "courseD_scrat_programming6_b": "Remember to turn first before moving, since Scrat is facing the wrong direction.",
          "courseD_scrat_programming6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp8_authored_hint": {
          "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseD_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseD_scrat_ramp8_2018_authored_hint": {
          "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseD_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_artist_concept1_authored_hint": {
          "courseE_artist_concept1_a": "The hexagons have 50 pixel sides and 60 degree turns to the right.",
          "courseE_artist_concept1_b": "Try using a function here so you don't have to write the code for a hexagon over and over again.",
          "courseE_artist_concept1_c": "Use the `set width` block before each function call to change the pen width."
        },
        "courseE_artist_concept1_2018_authored_hint": {
          "courseE_artist_concept1_a": "The hexagons have 50 pixel sides and 60 degree turns to the right.",
          "courseE_artist_concept1_b": "Try using a function here so you don't have to write the code for a hexagon over and over again.",
          "courseE_artist_concept1_c": "Use the `set width` block before each function call to change the pen width."
        },
        "courseE_artist_concept4_authored_hint": {
          "courseE_artist_concept4_a": "There are several ways to solve this puzzle. Can you make a plan?",
          "courseE_artist_concept4_b": "Try creating one square. Then make a line of squares.  What comes next?",
          "courseE_artist_concept4_c": "After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?"
        },
        "courseE_artist_concept4_2018_authored_hint": {
          "courseE_artist_concept4_a": "There are several ways to solve this puzzle. Can you make a plan?",
          "courseE_artist_concept4_b": "Try creating one square. Then make a line of squares.  What comes next?",
          "courseE_artist_concept4_c": "After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?"
        },
        "courseE_artist_concept_challenge1_authored_hint": {
          "courseE_artist_concept_challenge1_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
          "courseE_artist_concept_challenge1_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. ",
          "courseE_artist_concept_challenge1_c": "This is the design you want to repeat to make the full shape:\n\n![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)"
        },
        "courseE_artist_concept_challenge1_2018_authored_hint": {
          "courseE_artist_concept_challenge1_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
          "courseE_artist_concept_challenge1_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. ",
          "courseE_artist_concept_challenge1_c": "This is the design you want to repeat to make the full shape:\n\n![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)"
        },
        "courseE_artist_concept_challenge2_authored_hint": {
          "courseE_artist_concept_challenge2_a": "Once you define a function, you can call it over and over again - whenever and wherever you want!",
          "courseE_artist_concept_challenge2_b": "You can jump to different positions on the canvas using this command:\n\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "courseE_artist_concept_challenge2_2018_authored_hint": {
          "courseE_artist_concept_challenge2_a": "Once you define a function, you can call it over and over again - whenever and wherever you want!",
          "courseE_artist_concept_challenge2_b": "You can jump to different positions on the canvas using this command:\n\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "courseE_artist_functions1_authored_hint": {
          "courseE_artist_functions1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
          "courseE_artist_functions1_b": "It is okay to draw overlapping lines to make your glasses.",
          "courseE_artist_functions1_c": "For shorter code, try using a `repeat` loop to draw the square frames of the glasses."
        },
        "courseE_artist_functions10_authored_hint": {
          "courseD_artist_functions10_b": "This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.",
          "courseD_artist_functions10_a": "To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.",
          "courseD_artist_functions10_c": "Do you see where this drawing could use a function called `line of hexagons`?\n\n![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)"
        },
        "courseE_artist_functions10_2018_authored_hint": {
          "courseD_artist_functions10_b": "This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.",
          "courseD_artist_functions10_a": "To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.",
          "courseD_artist_functions10_c": "Do you see where this drawing could use a function called `line of hexagons`?\n\n![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)"
        },
        "courseE_artist_functions1_2018_authored_hint": {
          "courseE_artist_functions1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
          "courseE_artist_functions1_b": "It is okay to draw overlapping lines to make your glasses.",
          "courseE_artist_functions1_c": "For shorter code, try using a `repeat` loop to draw the square frames of the glasses."
        },
        "courseE_artist_functions2_authored_hint": {
          "courseD_artist_functions2_b": "The function you write should not contain your whole program, just the part that draws a square with 100 pixel sides.",
          "courseD_artist_functions2_c": "Use the green `draw a square` block to \"call\" your function under the `when run` block. Otherwise, the code in your function will not run.\n\n<xml><block type=\"procedures_callnoreturn\" limit=\"2\"><mutation name=\"draw a square\"/></block></xml>",
          "courseD_artist_functions2_a": "Your program should:\n- Use function\n- Move forward 100 + 75 pixels\n- Use function"
        },
        "courseE_artist_functions2_2018_authored_hint": {
          "courseD_artist_functions2_b": "The function should not contain your whole program, just the part that draws a square with 100 pixel sides.",
          "courseD_artist_functions2_c": "Make sure that you use the green `draw a square` block to \"call\" your function. Otherwise, the code in your function will not run.\n\n<xml><block type=\"procedures_callnoreturn\" limit=\"2\"><mutation name=\"draw a square\"/></block></xml>",
          "courseD_artist_functions2_a": "Your program should:\n- Use your function\n- Move forward 100 + 75 pixels\n- Use your function again"
        },
        "courseE_artist_functions3_authored_hint": {
          "courseD_artist_functions3_a": "To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.\n\nIf you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace.",
          "courseD_artist_functions3_b": "Your loop should have all 3 starter code blocks inside of it."
        },
        "courseE_artist_functions4_authored_hint": {
          "courseD_artist_functions4_a": "Try using a function!",
          "courseD_artist_functions4_b": "Drag the `draw a star` function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.",
          "courseD_artist_functions4_c": "Use the green `draw a star` block to call this function in your main program. Don't forget to jump forward between each star!"
        },
        "courseE_artist_functions4_2018_authored_hint": {
          "courseD_artist_functions4_a": "Try using a function!",
          "courseD_artist_functions4_b": "Drag the `draw a star` function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.",
          "courseD_artist_functions4_c": "Use the green `draw a star` block to call this function in your main program. Don't forget to jump forward between each star!"
        },
        "courseE_artist_functions5_authored_hint": {
          "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
          "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!",
          "courseD_artist_functions5_c": "Start by dragging the code for a star shape into the `draw a star` function, then use this function to draw the three stars!"
        },
        "courseE_artist_functions5_2018_authored_hint": {
          "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
          "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!",
          "courseD_artist_functions5_c": "Start by creating your `draw a star` function, then use this function to draw the three stars!"
        },
        "courseE_artist_functions6_authored_hint": {
          "grade4_artist_functions_windows0_a": "Focus only on making one window for now.  We'll create a function in the next puzzle.",
          "grade4_artist_functions_windows0_b": "Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.",
          "grade4_artist_functions_windows0_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseE_artist_functions6_2018_authored_hint": {
          "grade4_artist_functions_windows0_a": "Focus only on making one window for now.  We'll create a function in the next puzzle.",
          "grade4_artist_functions_windows0_b": "Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.",
          "grade4_artist_functions_windows0_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseE_artist_functions7_authored_hint": {
          "courseD_artist_functions7_a": "Try creating your function first then add windows one at a time.",
          "courseD_artist_functions7_b": "You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows."
        },
        "courseE_artist_functions7_2018_authored_hint": {
          "courseD_artist_functions7_a": "Try creating your function first then add windows one at a time.",
          "courseD_artist_functions7_b": "To get from the top windows to the bottom windows, simply turn the artist right, jump 150 pixels, then turn the artist right again!  Now the artist will be facing the correct direction to finish the rest of the house!"
        },
        "courseE_artist_functions8_authored_hint": {
          "courseD_artist_functions8_f": "You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!",
          "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
          "courseD_artist_functions8_b": "Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?\n\n![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)",
          "courseD_artist_functions8_c": "At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.",
          "courseD_artist_functions8_g": "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
        },
        "courseE_artist_functions8_2018_authored_hint": {
          "courseD_artist_functions8_f": "You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!",
          "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
          "courseD_artist_functions8_b": "Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?\n\n![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)",
          "courseD_artist_functions8_c": "At the end of each set of staggered squares, the artist will need to jump down and backward before he draws the next set of staggered squares.",
          "courseD_artist_functions8_g": "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
        },
        "courseE_artist_functions8b_2018_authored_hint": {
          "courseD_artist_functions8_f": "You only need one `move forward` block if you're doing this correctly!",
          "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares."
        },
        "courseE_artist_functions8c_2018_authored_hint": {
          "courseD_artist_functions8_f": "This is easier than it looks!  You shouldn't need any `move` or `jump` blocks here!",
          "courseD_artist_functions8_a": "The second line of squares is just a 180 degree turn different than the first!",
          "courseD_artist_functions8_c": "At the end of each line of squares, the artist only needs to turn 180 degrees before drawing the next line of squares.  Put the whole thing in a repeat loop to set you up for the next exercise!"
        },
        "courseE_artist_functions9_authored_hint": {
          "courseD_artist_functions9_e": "Can you spot all four places that the `line of triangles` can be used in this drawing?\n\n![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)",
          "courseD_artist_functions9_a": "This puzzle can be broken into three parts:\n  - make the `draw a triangle` function\n  - make the `draw a line of triangles` function\n  - use your `draw a line of triangles` function four times to complete the drawing",
          "courseD_artist_functions9_b": "This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line."
        },
        "courseE_artist_functions9_2018_authored_hint": {
          "courseD_artist_functions9_e": "Can you spot all four places that the `line of triangles` can be used in this drawing?\n\n![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)",
          "courseD_artist_functions9_a": "This puzzle can be broken into three parts:\n  - make the `draw a triangle` function\n  - make the `draw a line of triangles` function\n  - use your `draw a line of triangles` function four times to complete the drawing",
          "courseD_artist_functions9_b": "This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line."
        },
        "courseE_artist_functions_challenge_authored_hint": {
          "courseE_artist_functions_challenge_a": "If you call the function one more time, you can create the same design in the final corner. You can also `jump to` other positions or change the whole thing around however you want!"
        },
        "courseE_artist_functions_challenge1_authored_hint": {
          "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner.",
          "courseE_artist_functions_challenge1_b": "You can also `jump to` other positions or change the whole design however you want!"
        },
        "courseE_artist_functions_challenge1_2018_authored_hint": {
          "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner.",
          "courseE_artist_functions_challenge1_b": "You can also `jump to` other positions or change the whole design however you want!"
        },
        "courseE_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
        },
        "courseE_artist_functions_challenge2_2018_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
        },
        "courseE_artist_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?",
          "courseD_artist_ramp10_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseD_artist_ramp10_c": "The artist will draw six triangles in total:\n\n![](https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)"
        },
        "courseE_artist_ramp11_authored_hint": {
          "courseD_artist_ramp11a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseD_artist_ramp11b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!"
        },
        "courseE_artist_ramp12_authored_hint": {
          "courseD_artist_ramp12_a": "You can either draw the square first, then the triangle, or do it the other way around!"
        },
        "courseE_artist_ramp8_authored_hint": {
          "courseE_artist_ramp8_a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseE_artist_ramp8_b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseE_artist_ramp8_c": "Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`."
        },
        "courseE_artist_ramp8_2_authored_hint": {
          "courseE_artist_ramp8_a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseE_artist_ramp8_b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseE_artist_ramp8_c": "Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`."
        },
        "courseE_artist_ramp8_2018_authored_hint": {
          "courseE_artist_ramp8_a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseE_artist_ramp8_b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseE_artist_ramp8_c": "Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`."
        },
        "courseE_artist_ramp8_2_2018_authored_hint": {
          "courseE_artist_ramp8_a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
          "courseE_artist_ramp8_b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseE_artist_ramp8_c": "Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`."
        },
        "courseE_artist_ramp9_authored_hint": {
          "courseD_artist_ramp12_a": "How is this similar to a square?  How is it different?",
          "courseD_artist_ramp12_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseD_artist_ramp12_c": "To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?"
        },
        "courseE_artist_ramp9_2_authored_hint": {
          "courseD_artist_ramp12_a": "How is this similar to a square?  How is it different?",
          "courseD_artist_ramp12_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseD_artist_ramp12_c": "To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?"
        },
        "courseE_artist_ramp9_2018_authored_hint": {
          "courseD_artist_ramp12_a": "How is this similar to a square?  How is it different?",
          "courseD_artist_ramp12_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseD_artist_ramp12_c": "To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?"
        },
        "courseE_artist_ramp9_2_2018_authored_hint": {
          "courseD_artist_ramp12_a": "How is this similar to a square?  How is it different?",
          "courseD_artist_ramp12_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
          "courseD_artist_ramp12_c": "To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?"
        },
        "courseE_bee_concept1_authored_hint": {
          "courseE_bee_concept1_b": "Are there any patterns that *repeat* here?",
          "courseE_bee_concept1_a": "If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see."
        },
        "courseE_bee_concept1_2018_authored_hint": {
          "courseE_bee_concept1_b": "Are there any patterns that *repeat* here?",
          "courseE_bee_concept1_a": "If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see."
        },
        "courseE_bee_concept2_authored_hint": {
          "courseE_bee_concept2_a": "Would a `while` loop help here?",
          "courseE_bee_concept2_d": "You can even check empty spaces to see if honey is > 0.",
          "courseE_bee_concept2_b": "You can use `while` loops to move to the end of each path, and to collect all of the honey from each space.",
          "courseE_bee_concept2_c": "Which way should the bee turn after each path?"
        },
        "courseE_bee_concept2_2018_authored_hint": {
          "courseE_bee_concept2_a": "Would a `while` loop help here?",
          "courseE_bee_concept2_d": "With this `while` loop you  can check empty spaces to see if the amount of honey is > 0. This does the same as the `while there is honey` loop. ",
          "courseE_bee_concept2_b": "You can use `while` loops to move to the end of each path, and to collect all of the honey from each space.",
          "courseE_bee_concept2_c": "Which way should the bee turn after each path?"
        },
        "courseE_bee_concept3_authored_hint": {
          "courseE_bee_concept3a_a": "Try using nested `repeat` loops to solve this puzzle.",
          "courseE_bee_concept3a_b": "If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.",
          "courseE_bee_concept3a_c": "There are three groups of flowers, so your outer `repeat` loop should repeat three times."
        },
        "courseE_bee_concept3_2018_authored_hint": {
          "courseE_bee_concept3a_a": "Try using nested `repeat` loops to solve this puzzle.",
          "courseE_bee_concept3a_b": "If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.",
          "courseE_bee_concept3a_c": "There are three groups of flowers, so your outer `repeat` loop should repeat three times."
        },
        "courseE_bee_concept4_authored_hint": {
          "courseE_bee_concept4_a": "An `if/else` statement could really help you out here.",
          "courseE_bee_concept4_b": "The stair step pattern can help you get through all of the flowers and honeycombs.",
          "courseE_bee_concept4_c": "If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?"
        },
        "courseE_bee_concept4_2018_authored_hint": {
          "courseE_bee_concept4_a": "An `if/else` statement could really help you out here.",
          "courseE_bee_concept4_b": "The stair step pattern can help you get through all of the flowers and honeycombs.",
          "courseE_bee_concept4_c": "If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?"
        },
        "courseE_bee_concept5_authored_hint": {
          "courseE_bee_concept5_a": "The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.",
          "courseE_bee_concept5_c": "Here's a picture of a rectangular path the bee could take.\n\n![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)",
          "courseE_bee_concept5_b": "You can check every square for a flower using the `if` block, even if you already know there's not one there."
        },
        "courseE_bee_concept5_2018_authored_hint": {
          "courseE_bee_concept5_a": "The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.",
          "courseE_bee_concept5_c": "Here's a picture of a rectangular path the bee could take.\n\n![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)",
          "courseE_bee_concept5_b": "You can check every square for a flower using the `if` block, even if you already know there's not one there."
        },
        "courseE_bee_functions1_authored_hint": {
          "courseE_bee_functions1_a": "Remember that left and right turns are from the point of view of the bee.",
          "courseE_bee_functions1_b": "Use a `repeat` loop when collecting nectar to make your code shorter.",
          "courseE_bee_functions1_c": "Remember that left and right turns are from the perspective of the bee."
        },
        "courseE_bee_functions10_authored_hint": {
          "courseE_bee_functions10_a": "You will need a `while` loop to collect all of the honey, since it varies between honeycombs.",
          "courseE_bee_functions10_b": "Include the turns and movement in your function, so you can call it when the bee is on the main path.",
          "courseE_bee_functions10_c": "Remember to call your function in the main program!"
        },
        "courseE_bee_functions10_2018_authored_hint": {
          "courseE_bee_functions10_a": "You will need a `while` loop to collect all of the honey, since it varies between honeycombs.",
          "courseE_bee_functions10_b": "Include the turns and movement in your function, so you can call it when the bee is on the main path.",
          "courseE_bee_functions10_c": "Remember to call your function in the main program!"
        },
        "courseE_bee_functions1_2018_authored_hint": {
          "courseE_bee_functions1_a": "Remember that left and right turns are from the point of view of the bee.",
          "courseE_bee_functions1_b": "Use a `repeat` loop when collecting nectar to make your code shorter.",
          "courseE_bee_functions1_c": "Remember that left and right turns are from the perspective of the bee."
        },
        "courseE_bee_functions2_authored_hint": {
          "courseE_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower.",
          "courseE_bee_functions2_b": "This <xml><block type=\"procedures_callnoreturn\"><mutation name=\"get 2 nectar\"/></block></xml> block calls the function given to you.",
          "courseE_bee_functions2_c": "You will want to move forward and get 2 nectar twice to solve this puzzle."
        },
        "courseE_bee_functions2_2018_authored_hint": {
          "courseE_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower.",
          "courseE_bee_functions2_b": "This <xml><block type=\"procedures_callnoreturn\"><mutation name=\"get 2 nectar\"/></block></xml> block calls the function given to you.",
          "courseE_bee_functions2_c": "You will want to move forward and get 2 nectar twice to solve this puzzle."
        },
        "courseE_bee_functions3_authored_hint": {
          "courseE_bee_functions3_a": "Your function for this puzzle only needs to collect nectar, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseE_bee_functions3_b": "Call your `get 5` function under the `when run` block.",
          "courseE_bee_functions3_c": "Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.",
          "courseE_bee_functions3_d": "Try using this path through."
        },
        "courseE_bee_functions3_2018_authored_hint": {
          "courseE_bee_functions3_a": "Your function for this puzzle only needs to collect nectar, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseE_bee_functions3_b": "Call your `get 5` function under the `when run` block.",
          "courseE_bee_functions3_c": "Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.",
          "courseE_bee_functions3_d": "Try using this path through."
        },
        "courseE_bee_functions4_authored_hint": {
          "courseE_bee_functions4_a": "Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.",
          "courseE_bee_functions4_b": "Use the green `move and get nectar` block to call this function.",
          "courseE_bee_functions4_c": "You don't need to change the function, just use it in your program."
        },
        "courseE_bee_functions4_2018_authored_hint": {
          "courseE_bee_functions4_a": "Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.",
          "courseE_bee_functions4_b": "Use the green `move and get nectar` block to call this function.",
          "courseE_bee_functions4_c": "You don't need to change the function, just use it in your program."
        },
        "courseE_bee_functions5_authored_hint": {
          "courseE_bee_functions5_a": "Edit the function so that it solves the puzzle without having to change the main program.",
          "courseE_bee_functions5_c": "The `move forward` block can be changed into a `move backward` block. Use this instead of turning all the way around at the end of the paths!",
          "courseE_bee_functions5_b": "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
        },
        "courseE_bee_functions5_2018_authored_hint": {
          "courseE_bee_functions5_a": "Edit the function so that it solves the puzzle without having to change the main program.",
          "courseE_bee_functions5_c": "The `move forward` block can be changed into a `move backward` block. Use this instead of turning all the way around at the end of the paths!",
          "courseE_bee_functions5_b": "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
        },
        "courseE_bee_functions6_authored_hint": {
          "courseE_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)",
          "courseE_bee_functions6_b": "It might help in this case to move inside of the function, but not all of your `move` blocks need to be there."
        },
        "courseE_bee_functions6_2018_authored_hint": {
          "courseE_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)",
          "courseE_bee_functions6_b": "It might help in this case to move inside of the function, but not all of your `move` blocks need to be there."
        },
        "courseE_bee_functions6test_authored_hint": {
          "courseE_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)",
          "courseE_bee_functions6_b": "It might help in this case to move inside of the function, but not all of your `move` blocks need to be there."
        },
        "courseE_bee_functions7_authored_hint": {
          "courseE_bee_functions7_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions7_b": "Remember to build your code inside of the green function block.\n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)",
          "courseE_bee_functions7_c": "This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back."
        },
        "courseE_bee_functions7_2018_authored_hint": {
          "courseE_bee_functions7_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions7_b": "Remember to build your code inside of the green function block.\n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)",
          "courseE_bee_functions7_c": "This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back."
        },
        "courseE_bee_functions8_authored_hint": {
          "courseE_bee_functions8_a": "Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.",
          "courseE_bee_functions8_b": "Use `while nectar > 0` to make sure you get all of the nectar.",
          "courseE_bee_functions8_c": "Your main program will need a stair step movement pattern. Remember, the main program is the code under the `when run` block."
        },
        "courseE_bee_functions8_2018_authored_hint": {
          "courseE_bee_functions8_a": "Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.",
          "courseE_bee_functions8_b": "Use `while nectar > 0` to make sure you get all of the nectar.",
          "courseE_bee_functions8_c": "Your main program will need a stair step movement pattern. Remember, the main program is the code under the `when run` block."
        },
        "courseE_bee_functions9_authored_hint": {
          "courseE_bee_functions9_a": "You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.",
          "courseE_bee_functions9_b": "Even though you know how much nectar some of the flowers have, a `while` loop can make one function work for all of them."
        },
        "courseE_bee_functions9_2018_authored_hint": {
          "courseE_bee_functions9_a": "You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.",
          "courseE_bee_functions9_b": "Even though you know how much nectar some of the flowers have, a `while` loop can make one function work for all of them."
        },
        "courseE_bee_functions_challenge1_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "courseE_bee_functions_challenge1_2018_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "courseE_bee_functions_challenge2_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "courseE_bee_functions_challenge2_2018_authored_hint": {
          "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
        },
        "courseE_bee_ramp14_authored_hint": {
          "courseE_bee_ramp14_a": "The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar > 0) and make all of the honey.",
          "courseE_bee_ramp14_b": "There can be more than one flower or honeycomb at each space, so make sure to use `while` loops to get them all!",
          "courseE_bee_ramp14_c": "This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables."
        },
        "courseE_bee_ramp14_2018_authored_hint": {
          "courseE_bee_ramp14_a": "The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar > 0) and make all of the honey.",
          "courseE_bee_ramp14_b": "There can be more than one flower or honeycomb at each space, so make sure to use `while` loops to get them all!",
          "courseE_bee_ramp14_c": "This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables."
        },
        "courseE_bee_ramp17_authored_hint": {
          "courseE_bee_ramp17_a": "Since we don't have a repeat block to do something a certain number of times, what block should we use to move along the path?",
          "courseE_bee_ramp17": "If you were to solve this puzzle without an until block, where would you see repeated code? How can you use this repeated code to shape how you must use an until block to solve the problem?",
          "courseE_bee_ramp17_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseE_bee_ramp17_c": "You will want to move in a stair-step pattern. Try coding that first, then adding the `if/else` statement and `while` loops to check for flowers and honeycombs."
        },
        "courseE_collector_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:\n\n<xml><block type=\"controls_repeat\">\n                                            <title name=\"TIMES\">4</title>\n                                            <statement name=\"DO\">\n                                              <block type=\"maze_moveForward\"/>\n                                            </statement>\n                                          </block></xml>",
          "courseD_artist_ramp10_b": "Don't forget to collect one piece of treasure, then turn after each set of steps!"
        },
        "courseE_farmer_concept1_authored_hint": {
          "courseE_farmer_concept1_a": "A `while there is a hole` block will help you fill any hole until it's flat.",
          "courseE_farmer_concept1_b": "You can use a stair step pattern to get to the holes."
        },
        "courseE_farmer_concept1_2018_authored_hint": {
          "courseE_farmer_concept1_a": "A `while there is a hole` block will help you fill any hole until it's flat.",
          "courseE_farmer_concept1_b": "You can use a stair step pattern to get to the holes."
        },
        "courseE_farmer_concept2_authored_hint": {
          "courseE_farmer_concept2_a": "The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.",
          "courseE_farmer_concept2_b": "A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.",
          "courseE_farmer_concept2_c": "Your main program can call this function with the green `do something` block."
        },
        "courseE_farmer_concept2_2018_authored_hint": {
          "courseE_farmer_concept2_a": "The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.",
          "courseE_farmer_concept2_b": "A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.",
          "courseE_farmer_concept2_c": "Your main program can call this function with the green `do something` block."
        },
        "courseE_farmer_concept3_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "What should you do once you've reached the end of a path?",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "Use a `repeat` loop to run your code multiple times for each straight path."
        },
        "courseE_farmer_concept3_2018_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "What should you do once you've reached the end of a path?",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "Use a `repeat` loop to run your code multiple times for each straight path."
        },
        "courseE_farmer_concept4_authored_hint": {
          "4-5_Artist_Patterns_3_a": "Be careful to pull out the full block of \"code from the toolbar each time you try a new one.",
          "4-5_Artist_Patterns_3_b": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
        },
        "courseE_farmer_elseif_test_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "What should you do once you've reached the end of a path?",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "Use a `repeat` loop to run your code multiple times for each straight path."
        },
        "courseE_farmer_functions1_authored_hint": {
          "courseE_farmer_functions1_a": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.",
          "courseE_farmer_functions1_b": "You only need to pick one pumpkin, but could you use a loop to get to it?"
        },
        "courseE_farmer_functions10b_authored_hint": {
          "courseE_farmer_functions10b_a": "You will have to re-create your function first.",
          "courseE_farmer_functions10b_b": "Which way do you need to turn after the first pumpkin?",
          "courseE_farmer_functions10b_c": "Look back at the last puzzle if you need help making the function."
        },
        "courseE_farmer_functions10b_2018_authored_hint": {
          "courseE_farmer_functions10b_a": "You will have to re-create your function first.",
          "courseE_farmer_functions10b_b": "Which way do you need to turn after the first pumpkin?",
          "courseE_farmer_functions10b_c": "Look back at the last puzzle if you need help making the function."
        },
        "courseE_farmer_functions1_2018_authored_hint": {
          "courseE_farmer_functions1_a": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.",
          "courseE_farmer_functions1_b": "You only need to pick one pumpkin, but could you use a loop to get to it?"
        },
        "courseE_farmer_functions1a_authored_hint": {
          "courseE_farmer_functions1a_a": "Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?",
          "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
        },
        "courseE_farmer_functions1a_2018_authored_hint": {
          "courseE_farmer_functions1a_a": "Make sure you read through the function definition. Can you tell what it does?",
          "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
        },
        "courseE_farmer_functions2b_authored_hint": {
          "courseE_farmer_functions2b_a": "You can use a `repeat until pumpkin` to get to the ends of the two paths.",
          "courseE_farmer_functions2b_b": "There is no corn on the connecting path, so you can just move along it and turn.",
          "courseE_farmer_functions2b_c": "You will need two separate `repeat until` blocks to get all of the crops."
        },
        "courseE_farmer_functions2b_2018_authored_hint": {
          "courseE_farmer_functions2b_a": "You can `repeat until pumpkin` to get to the ends of the two paths.",
          "courseE_farmer_functions2b_b": "There is no corn on the connecting path, so you can just move along it and turn.",
          "courseE_farmer_functions2b_c": "You will need two separate `repeat until` blocks to get all of the crops."
        },
        "courseE_farmer_functions2ba_authored_hint": {
          "courseE_farmer_functions2ba_a": "Use the green `corn and pumpkin` block to call this function.",
          "courseE_farmer_functions2ba_b": "Drag all of the blocks in the workspace together under `when run` to see how this function works."
        },
        "courseE_farmer_functions2ba_2018_authored_hint": {
          "courseE_farmer_functions2ba_a": "Use the green `get all pumpkins` block to make sure you get all of the pumpkins!"
        },
        "courseE_farmer_functions3_authored_hint": {
          "courseE_farmer_functions3_a": "Try using a `while path ahead` loop to get you where you need to be."
        },
        "courseE_farmer_functions3b_authored_hint": {
          "courseE_farmer_functions1a_a": "Nested `if` and `if/else` statements will really help you out here."
        },
        "courseE_farmer_functions3c_authored_hint": {
          "courseE_farmer_functions3c_a": "What sequence is repeated often in this program? Can you drag these blocks into the function?",
          "courseE_farmer_functions3c_b": "Don't forget to call your function in the main program wherever you removed blocks."
        },
        "courseE_farmer_functions3c1_2018_authored_hint": {
          "coursee_farmer_functions3c1_2018_a": "You'll need to use the `pick along path` function three times to solve this puzzle.",
          "coursee_farmer_functions3c1_2018_b": "What code do you need to add to get around the corners?"
        },
        "courseE_farmer_functions4_authored_hint": {
          "courseE_farmer_functions4_a": "Drag all of the code out of your `repeat` loop and into the `go get pumpkins` function.",
          "courseE_farmer_functions4_b": "Don't forget to put the block that calls the `go get pumpkins` functions inside your loop before you run your code."
        },
        "courseE_farmer_functions4b_authored_hint": {
          "courseE_farmer_functions4b_a": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseE_farmer_functions4b_b": "Remember to turn after each path.",
          "courseE_farmer_functions4b_c": "The green `corn and pumpkin` blocks are in the Functions tab of the toolbox."
        },
        "courseE_farmer_functions4b_2018_authored_hint": {
          "courseE_farmer_functions4b_a": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseE_farmer_functions4b_b": "Remember to turn after each path.",
          "courseE_farmer_functions4b_c": "The green `corn and pumpkin` blocks are in the Functions tab of the toolbox."
        },
        "courseE_farmer_functions5b_authored_hint": {
          "courseE_farmer_functions5b_a": "You will need to use a `while corn` loop, a `while lettuce` and a `while pumpkin` to make sure you get everything."
        },
        "courseE_farmer_functions5c_authored_hint": {
          "courseE_farmer_functions5c_a": "Are there any other patterns you can loop in this puzzle?",
          "courseE_farmer_functions5c_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseE_farmer_functions5c_2018_authored_hint": {
          "courseE_farmer_functions5c_a": "Are there any other patterns you can loop in this puzzle?",
          "courseE_farmer_functions5c_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseE_farmer_functions6c_authored_hint": {
          "courseE_farmer_functions6c_a": "Edit your function to check for the lettuce as well.",
          "courseE_farmer_functions6c_b": "Would an `if/else` block help to check if there is lettuce in a space?",
          "courseE_farmer_functions6c_c": "Don't forget to keep checking for corn!"
        },
        "courseE_farmer_functions6c_2018_authored_hint": {
          "courseE_farmer_functions6c_a": "Edit your function to check for the lettuce as well.",
          "courseE_farmer_functions6c_b": "Would an `if/else` block help to check if there is lettuce in a space?",
          "courseE_farmer_functions6c_c": "Don't forget to keep checking for corn!"
        },
        "courseE_farmer_functions7a1_2018_authored_hint": {
          "courseE_farmer_functions7a1_2018_a": "Create your function under the `functions` section in the toolbox.",
          "courseE_farmer_functions7a1_2018_b": "Don't forget to use your function when you're done making it!"
        },
        "courseE_farmer_functions7b_authored_hint": {
          "courseE_farmer_functions7b_a": "You don't need a function here, but you can make one if it is helpful to you!",
          "courseE_farmer_functions7b_b": "Use an `if/else` statement to check for crops, then turn based on which crop you find.",
          "courseE_farmer_functions7b_c": "A `repeat until pumpkin` loop can help you get all the way through the maze."
        },
        "courseE_farmer_functions7b_2018_authored_hint": {
          "courseE_farmer_functions7b_a": "You don't need a function here, but you can make one if it is helpful to you!",
          "courseE_farmer_functions7b_b": "Use an `if/else` statement to check for crops, then turn based on which crop you find.",
          "courseE_farmer_functions7b_c": "A `repeat until pumpkin` loop can help you get all the way through the maze."
        },
        "courseE_farmer_functions8_authored_hint": {
          "courseE_farmer_functions8_a": "Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back."
        },
        "courseE_farmer_functions8a1_2018_authored_hint": {
          "courseE_farmer_functions8a1_2018a": "Start this puzzle off by coding the same function you made in the last puzzle.",
          "courseE_farmer_functions8a1_2018b": "After the function runs the first time, you'll need to make one extra turn before you can run it again."
        },
        "courseE_farmer_functions8b_authored_hint": {
          "courseE_farmer_functions8b_a": "Try running the code given to see what it does. What do you need after this?",
          "courseE_farmer_functions8b_b": "Drag all of the starter blocks into a function so that you can use them more than once.",
          "courseE_farmer_functions8b_c": "How many times do you need to call the function?"
        },
        "courseE_farmer_functions8b_2018_authored_hint": {
          "courseE_farmer_functions8b_a": "Try running the code given to see what it does. What do you need after this?",
          "courseE_farmer_functions8b_b": "Drag all of the starter blocks into a function so that you can use them more than once.",
          "courseE_farmer_functions8b_c": "How many times do you need to call the function?"
        },
        "courseE_farmer_functions9_authored_hint": {
          "courseE_farmer_functions8_a": "Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back."
        },
        "courseE_farmer_functions9a1_2018_authored_hint": {
          "courseE_farmer_functions9a1_2018a": "You'll use the same function that you made in the last couple of puzzles.",
          "courseE_farmer_functions9a1_2018b": "Use the same steps from the previous puzzle to solve the first half of this puzzle.",
          "courseE_farmer_functions9a1_2018c": "You'll need to `turn` a few times and `move forward` to get to the last crop of lettuce before you can call your function again."
        },
        "courseE_farmer_functions9b_authored_hint": {
          "courseE_farmer_functions9b_a": "Can you use nested `if` and `if/else` statements to move along the path?",
          "courseE_farmer_functions9b_b": "Use `repeat until pumpkin` to move through all of the paths.",
          "courseE_farmer_functions9b_c": "You will want to move through the paths as if they are squares getting larger after each loop."
        },
        "courseE_farmer_functions9b_2018_authored_hint": {
          "courseE_farmer_functions9b_a": "Can you use nested `if` and `if/else` statements to move along the path?",
          "courseE_farmer_functions9b_b": "Use `repeat until pumpkin` to move through all of the paths.",
          "courseE_farmer_functions9b_c": "You will want to move through the paths as if they are squares getting larger after each loop."
        },
        "courseE_farmer_predict1_authored_hint": {
          "courseE_farmer_ramp12a": "Feel free to go back to the last puzzle if you need a reminder of how to pick produce only **while** there is produce to pick."
        },
        "courseE_farmer_predict1_2018_authored_hint": {
          "courseE_farmer_ramp12a": "Feel free to go back to the last puzzle if you need a reminder of how to pick produce only **while** there is produce to pick."
        },
        "courseE_farmer_ramp11_authored_hint": {
          "courseE_farmer_ramp11_a": "If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.",
          "courseE_farmer_ramp11_b": "How can you use a `repeat` loop to pick lettuce instead of dragging out 5 `pick lettuce` blocks?",
          "courseE_farmer_ramp11_c": "You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a `move forward` block, and you'll have it!)"
        },
        "courseE_farmer_ramp11a_authored_hint": {
          "courseE_farmer_ramp12_a": "Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  ",
          "courseE_farmer_ramp12_b": "You only need to move forward once to get to the dirt."
        },
        "courseE_farmer_ramp11a_2018_authored_hint": {
          "courseE_farmer_ramp12_a": "Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  ",
          "courseE_farmer_ramp12_b": "You only need to move forward once to get to the dirt."
        },
        "courseE_farmer_ramp11b_authored_hint": {
          "courseE_farmer_ramp11b_a": "You can nest your `while` loop inside of a `repeat` loop to make your code shorter."
        },
        "courseE_farmer_ramp11b_2018_authored_hint": {
          "courseE_farmer_ramp11b_a": "You can nest your `while` loop inside of a `repeat` loop to make your code shorter."
        },
        "courseE_farmer_ramp12_authored_hint": {
          "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
        },
        "courseE_farmer_ramp12_2018_authored_hint": {
          "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
        },
        "courseE_farmer_ramp12_forswap_authored_hint": {
          "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
        },
        "courseE_farmer_ramp12_forswap_2018_authored_hint": {
          "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
        },
        "courseE_farmer_ramp12a_authored_hint": {
          "courseE_farmer_ramp12b": "You will need to check your `if` statement 21 times to solve this puzzle.",
          "courseE_farmer_ramp12c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseE_farmer_ramp12d": "There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins."
        },
        "courseE_farmer_ramp12a_2018_authored_hint": {
          "courseE_farmer_ramp12b": "You will need to check your `if` statement 21 times to solve this puzzle.",
          "courseE_farmer_ramp12c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseE_farmer_ramp12d": "There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins."
        },
        "courseE_farmer_ramp12c_authored_hint": {
          "courseE_farmer_ramp12b_b": "You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce."
        },
        "courseE_farmer_ramp12c_2018_authored_hint": {
          "courseE_farmer_ramp12b_b": "You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce."
        },
        "courseE_farmer_ramp12d_authored_hint": {
          "courseE_farmer_ramp12d_b": "You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!"
        },
        "courseE_farmer_ramp12d_2018_authored_hint": {
          "courseE_farmer_ramp12d_b": "You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!"
        },
        "courseE_farmer_ramp12e_authored_hint": {
          "courseE_farmer_ramp12e_b": "The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction."
        },
        "courseE_farmer_ramp12e_2018_authored_hint": {
          "courseE_farmer_ramp12e_b": "The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction."
        },
        "courseE_farmer_ramp12f_authored_hint": {
          "courseE_farmer_ramp12f_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
        },
        "courseE_farmer_ramp12f_2018_authored_hint": {
          "courseE_farmer_ramp12f_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
        },
        "courseE_farmer_ramp12g_authored_hint": {
          "courseE_farmer_ramp12G_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
        },
        "courseE_farmer_ramp12g_2018_authored_hint": {
          "courseE_farmer_ramp12G_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
        },
        "courseE_farmer_ramp13_authored_hint": {
          "courseE_farmer_ramp13_a": "There can be more than one of either crop in a space, so make sure to use `while` loops to pick them all!",
          "courseE_farmer_ramp13_b": "Use a `repeat` loop so that you don't have to write a separate if statement for each square.",
          "courseE_farmer_ramp13_c": "If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns."
        },
        "courseE_farmer_ramp13_2018_authored_hint": {
          "courseE_farmer_ramp13_a": "There can be more than one of either crop in a space, so make sure to use `while` loops to pick them all!",
          "courseE_farmer_ramp13_b": "Use a `repeat` loop so that you don't have to write a separate if statement for each square.",
          "courseE_farmer_ramp13_c": "If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns."
        },
        "courseE_farmer_ramp15_authored_hint": {
          "courseE_farmer_ramp15_a": "Use the `repeat until at pumpkin` block to make it to the end of the path.",
          "courseE_farmer_ramp15_b": "What else needs to be done while moving along the path to the pumpkin?",
          "courseE_farmer_ramp15_c": "The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin."
        },
        "courseE_farmer_ramp15_2018_authored_hint": {
          "courseE_farmer_ramp15_a": "Use the `repeat until at pumpkin` block to make it to the end of the path.",
          "courseE_farmer_ramp15_b": "What else needs to be done while moving along the path to the pumpkin?",
          "courseE_farmer_ramp15_c": "The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin."
        },
        "courseE_farmer_ramp16_authored_hint": {
          "courseE_farmer_ramp16_a": "If we are moving along the path to the pumpkin, what do we have to do over and over? When do we stop repeating?",
          "courseE_farmer_ramp16_b": "Checking for corn or lettuce at every space will help simplify your code. What should you do if there is a crop? What if there is nothing?",
          "courseE_farmer_ramp16_c": "Use an `if/else` block to keep moving forward. Which way do you need to turn when the forward path is blocked?"
        },
        "courseE_maze_ramp1_authored_hint": {
          "courseC_maze_programming1_0": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "You don't need any extra blocks from the toolbox for this puzzle!"
        },
        "courseE_maze_ramp13_authored_hint": {
          "courseD_maze_ramp11_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp11_a": "Use repeat blocks to run either a single block or a chunk of code over and over."
        },
        "courseE_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_0": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "You don't need any extra blocks from the toolbox for this puzzle!"
        },
        "courseE_maze_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all three `move forward` blocks are attached to the `when run` block."
        },
        "courseE_maze_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
          "courseC_maze_programming2_b": "Make sure all three `move forward` blocks are attached to the `when run` block."
        },
        "courseE_maze_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseC_maze_programming3_b": "Remember that turns to the right and left are from the bird's perspective."
        },
        "courseE_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseC_maze_programming3_b": "Remember that turns to the right and left are from the bird's perspective."
        },
        "courseE_maze_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.",
          "courseC_maze_programming4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.",
          "courseC_maze_programming4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "How far do you need to move to get to the corner?",
          "courseC_maze_programming5_c": "You will need to turn left at the corner to get to the pig."
        },
        "courseE_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseC_maze_programming5_b": "How far do you need to move to get to the corner?",
          "courseC_maze_programming5_c": "You will need to turn left at the corner to get to the pig."
        },
        "courseE_maze_ramp6_authored_hint": {
          "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
          "courseC_maze_programming6_b": "Remember to turn first before moving, since the bird starts facing a wall.",
          "courseC_maze_programming6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_maze_ramp6_2018_authored_hint": {
          "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
          "courseC_maze_programming6_b": "Remember to turn first before moving, since the bird starts facing a wall.",
          "courseC_maze_programming6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_maze_ramp7_authored_hint": {
          "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseD_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_maze_ramp7_2018_authored_hint": {
          "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseD_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseE_multi_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?"
        },
        "courseE_playLab_challenge1_authored_hint": {
          "courseE_playLab_challenge1_a": "Here are some things you could do when the player wins the game:\n\n* Make the dinosaur vanish.\n* Stop the squirrels.\n* Make the squirrels and knight happy.\n* Set a new background.\n* Make the knight thank the player for helping.\n* Make all of the actors vanish and show a \"You Win!\" message.",
          "courseE_playLab_challenge1_b": "Here are some things you could do when the player loses the game:\n\n* Make the knight vanish.\n* Make the squirrels sad.\n* Make the dinosaur say something.\n* Set a new background.\n* Make all of the actors vanish and show a \"Game Over\" message."
        },
        "courseE_playLab_challenge1_2018_authored_hint": {
          "courseE_playLab_challenge1_a": "Here are some things you could do when the player wins the game:\n\n* Make the dinosaur vanish.\n* Stop the squirrels.\n* Make the squirrels and knight happy.\n* Set a new background.\n* Make the knight thank the player for helping.\n* Make all of the actors vanish and show a \"You Win!\" message.",
          "courseE_playLab_challenge1_b": "Here are some things you could do when the player loses the game:\n\n* Make the knight vanish.\n* Make the squirrels sad.\n* Make the dinosaur say something.\n* Set a new background.\n* Make all of the actors vanish and show a \"Game Over\" message."
        },
        "courseE_playLab_scaffold1_authored_hint": {
          "courseE_playLab_scaffold1_a": "The `set actor 1 to ??? image` block can be used to add an actor to the stage.",
          "courseE_playLab_scaffold1_b": "Put the `set actor` block under `when run` to make your actor appear at the beginning of the program.",
          "courseE_playLab_scaffold1_c": "Use `set ??? background` to choose a background for your scene."
        },
        "courseE_playLab_scaffold1_2018_authored_hint": {
          "courseE_playLab_scaffold1_a": "The `set actor 1 to ??? image` block can be used to add an actor to the stage.",
          "courseE_playLab_scaffold1_b": "Put the `set actor` block under `when run` to make your actor appear at the beginning of the program.",
          "courseE_playLab_scaffold1_c": "Use `set ??? background` to choose a background for your scene."
        },
        "courseE_playLab_scaffold2_authored_hint": {
          "courseE_playLab_scaffold1_a": "Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.",
          "courseE_playLab_scaffold1_b": "You should have four `when arrow` event blocks, with a direction to move underneath each.",
          "courseE_playLab_scaffold1_c": "When you are done, you should be able to move your hero with the arrow keys!"
        },
        "courseE_playLab_scaffold2_2018_authored_hint": {
          "courseE_playLab_scaffold1_a": "Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.",
          "courseE_playLab_scaffold1_b": "You should have four `when arrow` event blocks, with a direction to move underneath each.",
          "courseE_playLab_scaffold1_c": "When you are done, you should be able to move your hero with the arrow keys!"
        },
        "courseE_playLab_scaffold4_authored_hint": {
          "courseE_playLab_scaffold4_a": "Use `score point` to add a point, and `remove point` to subtract one."
        },
        "courseE_playLab_scaffold4_2018_authored_hint": {
          "courseE_playLab_scaffold4_a": "Use `score point` to add a point, and `remove point` to subtract one."
        },
        "courseE_playLab_scaffold5_authored_hint": {
          "courseE_playLab_scaffold5_a": "To finish this level, you need to win or lose. Use a `end game as win` or `end game as loss` block to finish."
        },
        "courseE_playLab_scaffold5_2018_authored_hint": {
          "courseE_playLab_scaffold5_a": "To finish this level, you need to win or lose. Use a `end game as win` or `end game as loss` block to finish."
        },
        "courseE_playlab_challenge2_authored_hint": {
          "courseE_playlab_challenge2_a": "The actor knows what to say based on its mood. Try playing with the things the witch might say.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseE_playlab_challenge2_b": "It will feel like the game starts all over if you call the `ask a question` function again below the list of conditionals.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>",
          "courseE_playlab_challenge2_c": "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!",
          "courseE_playlab_challenge2_d": "Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.\n\nDon't forget to change the instructions inside the `show title screen` block so they still make sense!",
          "courseE_playlab_challenge2_e": "When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?\n\nHave a friend try your app when it is finished!"
        },
        "courseE_playlab_variables_challenge2_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "The actor knows what to say because it checks the current value of the `fortune` variable.\n\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!",
          "courseF_playlab_variables_challenge3_d": "Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.\n\nDon't forget to change the instructions inside the `Ask a question` function so they still make sense!",
          "courseF_playlab_variables_challenge3_e": "When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?\n\nHave a friend try your app when it is finished!"
        },
        "courseF_IceAge_1_authored_hint": {
          "iceage_hello1_a": "You only need to add one block to solve this puzzle.  Drag the `actor 1 say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type \"Hello!\" inside."
        },
        "courseF_IceAge_10_authored_hint": {
          "iceage_throw_hearts_a": "When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!",
          "iceage_throw_hearts_b": "To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event."
        },
        "courseF_IceAge_11_authored_hint": {
          "iceage_free_play_a": "Can you make Sid and Manny have an Ice Crystal fight?  ",
          "iceage_free_play_b": "Make Granny chase Diego.  End the game as a win if she catches him.",
          "iceage_free_play_c": "Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times."
        },
        "courseF_IceAge_2_authored_hint": {
          "iceage_hello2_a": "To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. "
        },
        "courseF_IceAge_3_authored_hint": {
          "iceage_hello3_a": "Use the `move actor 1 right by 200 pixels` block to solve this puzzle."
        },
        "courseF_IceAge_4_authored_hint": {
          "iceage_move_to_actor_a": "For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.",
          "iceage_move_to_actor_b": "Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge."
        },
        "courseF_IceAge_5_authored_hint": {
          "iceage_repeat_a": "Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle."
        },
        "courseF_IceAge_6_authored_hint": {
          "iceage_click_hello_a": "Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle."
        },
        "courseF_IceAge_7_authored_hint": {
          "iceage_move_events_a": "Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. "
        },
        "courseF_IceAge_8_authored_hint": {
          "iceage_sound_and_points_a": "You will need to add two blocks beneath the `when actor 1 touches actor 2` event."
        },
        "courseF_IceAge_9_authored_hint": {
          "iceage_warn_ice_age_a": "You should only have to add two blocks to get this puzzle where it needs to be. ",
          "iceage_warn_ice_age_b": "Add both new blocks beneath the `when run` event to have them happen immediately after the program starts."
        },
        "courseF_artist_for1_authored_hint": {
          "courseF_artist_for1_a": "Can you draw something like this:\n\n![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)"
        },
        "courseF_artist_for10_authored_hint": {
          "courseF_artist_for10_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
          "courseF_artist_for10_b": "The image in the drawing uses a turn of 61 degrees.",
          "courseF_artist_for10_c": "Want to know how the sample image was done?\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#ff0000</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">15</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">175</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">61</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for10_2018_authored_hint": {
          "courseF_artist_for10_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
          "courseF_artist_for10_b": "The image in the drawing uses a turn of 61 degrees.",
          "courseF_artist_for10_c": "Want to know how the sample image was done?\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#ff0000</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">15</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">175</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">61</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for1_2018_authored_hint": {
          "courseF_artist_for1_a": "Can you draw something like this:\n\n![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)"
        },
        "courseF_artist_for2_authored_hint": {
          "courseF_artist_for2_a": "Use `counter` for the length of your triangles inside your `repeat` loop.\n\n<xml><block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n    </xml>",
          "courseF_artist_for2_b": "Remember to count by 10 within your for loop.",
          "courseF_artist_for2_c": "This is the pattern that the Artist will follow:\n\n![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)"
        },
        "courseF_artist_for2_2018_authored_hint": {
          "courseF_artist_for2_a": "Use `counter` for the length of your triangles inside your `repeat` loop.\n\n<xml><block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n    </xml>",
          "courseF_artist_for2_b": "Remember to count by 10 within your for loop.",
          "courseF_artist_for2_c": "This is the pattern that the Artist will follow:\n\n![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)"
        },
        "courseF_artist_for3_authored_hint": {
          "courseF_artist_for3_a": "To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.\n\n<xml>\n<block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n</xml>",
          "courseF_artist_for3_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_artist_for3_2018_authored_hint": {
          "courseF_artist_for3_a": "To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.\n\n<xml>\n<block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n</xml>",
          "courseF_artist_for3_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_artist_for4_authored_hint": {
          "courseF_artist_for4_a": "**What is the smallest number you will need?  \nWhat is the largest number?  \nHow big is the increase each time?**\n\nThose are the questions you need to ask to fill in the blanks of the `for` loop.",
          "courseF_artist_for4_b": "Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!",
          "courseF_artist_for4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_artist_for4_2018_authored_hint": {
          "courseF_artist_for4_a": "**What is the smallest number you will need?  \nWhat is the largest number?  \nHow big is the increase each time?**\n\nThose are the questions you need to ask to fill in the blanks of the `for` loop.",
          "courseF_artist_for4_b": "Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!",
          "courseF_artist_for4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_artist_for5_authored_hint": {
          "courseF_artist_for5_a": "You don't need the `repeat` loop inside when making this spiral!",
          "courseF_artist_for5_b": "Your `for` loop, move, and turn blocks can stay exactly the same."
        },
        "courseF_artist_for5_2018_authored_hint": {
          "courseF_artist_for5_a": "You don't need the `repeat` loop inside when making this spiral!",
          "courseF_artist_for5_b": "Your `for` loop, move, and turn blocks can stay exactly the same."
        },
        "courseF_artist_for6_authored_hint": {
          "courseF_artist_for6_a": "Your `for` loop will count from 15 to 300 by 15.",
          "courseF_artist_for6_b": "Put a `move forward` and a `turn` block within this `for` loop.",
          "courseF_artist_for6_c": "All you have to change is the number of degrees in the `turn` block."
        },
        "courseF_artist_for6_2018_authored_hint": {
          "courseF_artist_for6_a": "Your `for` loop will count from 15 to 300 by 15.",
          "courseF_artist_for6_b": "Put a `move forward` and a `turn` block within this `for` loop.",
          "courseF_artist_for6_c": "All you have to change is the number of degrees in the `turn` block."
        },
        "courseF_artist_for7_authored_hint": {
          "courseF_artist_for7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
          "courseF_artist_for7_b": "Notice that this spiral turns right instead of left!",
          "courseF_artist_for7_c": "The `for` loop in this puzzle goes from 15 to 300 by 2.",
          "courseF_artist_for7_d": "This image is made by turning just 89 degrees."
        },
        "courseF_artist_for7_2018_authored_hint": {
          "courseF_artist_for7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
          "courseF_artist_for7_b": "Notice that this spiral turns right instead of left!",
          "courseF_artist_for7_c": "The `for` loop in this puzzle goes from 15 to 300 by 2.",
          "courseF_artist_for7_d": "This image is made by turning just 89 degrees."
        },
        "courseF_artist_for8_authored_hint": {
          "courseF_artist_for8_a": "Keep everything else the same in your code, only the turn angle needs to change.",
          "courseF_artist_for8_b": "If you want, you can choose a different color for your spiral!"
        },
        "courseF_artist_for8_2018_authored_hint": {
          "courseF_artist_for8_a": "Keep everything else the same in your code, only the turn angle needs to change.",
          "courseF_artist_for8_b": "If you want, you can choose a different color for your spiral!"
        },
        "courseF_artist_for9_authored_hint": {
          "courseF_artist_for9_a": "If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.",
          "courseF_artist_for9_b": "The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is."
        },
        "courseF_artist_for9_2018_authored_hint": {
          "courseF_artist_for9_a": "If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.",
          "courseF_artist_for9_b": "The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is."
        },
        "courseF_artist_for_challenge1_authored_hint": {
          "courseF_artist_for_challenge1_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
          "courseF_artist_for_challenge1_b": "The opacity on the brush is always `counter`/2.",
          "courseF_artist_for_challenge1_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
          "courseF_artist_for_challenge1_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for_challenge1_2018_authored_hint": {
          "courseF_artist_for_challenge1_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
          "courseF_artist_for_challenge1_b": "The opacity on the brush is always `counter`/2.",
          "courseF_artist_for_challenge1_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
          "courseF_artist_for_challenge1_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for_challenge2_authored_hint": {
          "courseF_artist_for_challenge2_c": "The `for loop` goes from 5 to 250 by 2. ",
          "courseF_artist_for_challenge2_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
          "courseF_artist_for_challenge2_b": "The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.",
          "courseF_artist_for_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n\n![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)"
        },
        "courseF_artist_for_challenge2_2018_authored_hint": {
          "courseF_artist_for_challenge2_c": "The `for loop` goes from 5 to 250 by 2. ",
          "courseF_artist_for_challenge2_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
          "courseF_artist_for_challenge2_b": "The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.",
          "courseF_artist_for_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n\n![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)"
        },
        "courseF_artist_fwp1_authored_hint": {
          "courseF_artist_fwp1_c": "Put all of the code for drawing a square inside the function editor.",
          "courseF_artist_fwp1_a": "Remember, you need to turn 90 degrees to draw a square.",
          "courseF_artist_fwp1_b": "You only need to repeat as many times as the number of sides in a square."
        },
        "courseF_artist_fwp1_2018_authored_hint": {
          "courseF_artist_fwp1_c": "Put all of the code for drawing a square inside the function editor.",
          "courseF_artist_fwp1_a": "Remember, you need to turn 90 degrees to draw a square.",
          "courseF_artist_fwp1_b": "You only need to repeat as many times as the number of sides in a square."
        },
        "courseF_artist_fwp2_authored_hint": {
          "courseF_artist_fwp2_a": "You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!",
          "courseF_artist_fwp2_b": "When calling your function, use a `for loop` for the best possible code!"
        },
        "courseF_artist_fwp2_2018_authored_hint": {
          "courseF_artist_fwp2_a": "You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!",
          "courseF_artist_fwp2_b": "When calling your function, use a `for loop` for the best possible code!"
        },
        "courseF_artist_fwp3_authored_hint": {
          "courseF_artist_fwp3_a": "This gets easier if you put it all in a `for` loop.",
          "courseF_artist_fwp3_b": "Be sure to turn 90 degrees between each square!\n\n![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)"
        },
        "courseF_artist_fwp3_2018_authored_hint": {
          "courseF_artist_fwp3_a": "This gets easier if you put it all in a `for` loop.",
          "courseF_artist_fwp3_b": "Be sure to turn 90 degrees between each square!\n\n![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)"
        },
        "courseF_artist_fwp4_authored_hint": {
          "courseF_artist_fwp4_b": "Remember to **add** a parameter.  Don't remove the one that is already there!",
          "courseF_artist_fwp4_c": "You will need to call your function three times to draw the shapes."
        },
        "courseF_artist_fwp4_2018_authored_hint": {
          "courseF_artist_fwp4_b": "Remember to **add** a parameter.  Don't remove the one that is already there!",
          "courseF_artist_fwp4_c": "You will need to call your function three times to draw the shapes."
        },
        "courseF_artist_fwp5_authored_hint": {
          "courseF_artist_fwp5_d": "A `for` loop would really help you out here!",
          "courseF_artist_fwp5_c": "You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.",
          "courseF_artist_fwp5_a": "The length of sides for each shape is 7 times the number of sides it has.",
          "courseF_artist_fwp5_b": "Don't forget to jump 100 pixels between shapes."
        },
        "courseF_artist_fwp5_2018_authored_hint": {
          "courseF_artist_fwp5_d": "A `for` loop would really help you out here!",
          "courseF_artist_fwp5_c": "You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.",
          "courseF_artist_fwp5_a": "The length of sides for each shape is 7 times the number of sides it has.",
          "courseF_artist_fwp5_b": "Don't forget to jump 100 pixels between shapes."
        },
        "courseF_artist_fwp6_authored_hint": {
          "courseF_artist_fwp6_a": "It's okay to run the program a few times to figure out how the function works with different parameters.",
          "courseF_artist_fwp6_b": "You don't need to add any `move` or `turn` blocks to finish this code."
        },
        "courseF_artist_fwp6_2018_authored_hint": {
          "courseF_artist_fwp6_a": "It's okay to run the program a few times to figure out how the function works with different parameters.",
          "courseF_artist_fwp6_b": "You don't need to add any `move` or `turn` blocks to finish this code."
        },
        "courseF_artist_fwp7_authored_hint": {
          "courseF_artist_fwp7_a": "Feeling lost after trying a couple of ideas? Try clicking the \"Start over\" button in the upper right-hand corner.",
          "courseF_artist_fwp7_b": "Your new `min` variable should go in the first slot in your `for` loop, inside the function."
        },
        "courseF_artist_fwp7_2018_authored_hint": {
          "courseF_artist_fwp7_a": "Feeling lost after trying a couple of ideas? Try clicking the \"Start over\" button in the upper right-hand corner.",
          "courseF_artist_fwp7_b": "Your new `min` variable should go in the first slot in your `for` loop, inside the function."
        },
        "courseF_artist_fwp8_authored_hint": {
          "courseF_artist_fwp8_a": "If your function is correct, you shouldn't need to change it for this puzzle.",
          "courseF_artist_fwp8_b": "The only thing you should need to do between function calls is change the color of the line."
        },
        "courseF_artist_fwp8_2018_authored_hint": {
          "courseF_artist_fwp8_a": "If your function is correct, you shouldn't need to change it for this puzzle.",
          "courseF_artist_fwp8_b": "The only thing you should need to do between function calls is change the color of the line."
        },
        "courseF_artist_fwp9_authored_hint": {
          "courseF_artist_fwp9_a": "Try one of these drawings.\n![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)"
        },
        "courseF_artist_fwp9_2018_authored_hint": {
          "courseF_artist_fwp9_a": "Try one of these drawings.\n![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)"
        },
        "courseF_artist_fwp_challenge1_authored_hint": {
          "courseF_artist_fwp_challenge1_b": "This is a series of polygons with sides that are counter pixels long.",
          "courseF_artist_fwp_challenge1_c": "Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?"
        },
        "courseF_artist_fwp_challenge1_2018_authored_hint": {
          "courseF_artist_fwp_challenge1_b": "This is a series of polygons with sides that are counter pixels long.",
          "courseF_artist_fwp_challenge1_c": "Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?"
        },
        "courseF_artist_fwp_challenge2_authored_hint": {
          "courseF_artist_fwp_challenge1_a": "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)",
          "courseF_artist_fwp_challenge1_b": "This is a series of octagons with sides that are `counter` pixels long. ",
          "courseF_artist_fwp_challenge1_c": "Each octagon is called from inside a `for` loop that goes from 200 down to 2 by 2. ",
          "courseF_artist_fwp_challenge1_d": "Don't forget to turn by 22.5 degrees at the end of each iteration. ",
          "courseF_artist_fwp_challenge1_e": "Both the color of each octagon and the width of the pen are controlled by the `counter` variable.",
          "courseF_artist_fwp_challenge1_f": "**Solution:**\n\n![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)"
        },
        "courseF_artist_fwp_challenge2_2018_authored_hint": {
          "courseF_artist_fwp_challenge1_a": "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)",
          "courseF_artist_fwp_challenge1_b": "This is a series of octagons with sides that are `counter` pixels long. ",
          "courseF_artist_fwp_challenge1_c": "Each octagon is called from inside a `for` loop that goes from 200 down to 2 by 2. ",
          "courseF_artist_fwp_challenge1_d": "Don't forget to turn by 22.5 degrees at the end of each iteration. ",
          "courseF_artist_fwp_challenge1_e": "Both the color of each octagon and the width of the pen are controlled by the `counter` variable.",
          "courseF_artist_fwp_challenge1_f": "**Solution:**\n\n![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)"
        },
        "courseF_artist_ramp10_authored_hint": {
          "courseF_artist_ramp10_a": "Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?",
          "courseF_artist_ramp10_b": "If your code for a triangle is in a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">6</title></block></xml> loop, this task will be a lot simpler.",
          "courseF_artist_ramp10_c": "You will draw six triangles in total for this design:\n\n![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)"
        },
        "courseF_artist_ramp10_2018_authored_hint": {
          "courseF_artist_ramp10_a": "Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?",
          "courseF_artist_ramp10_b": "If your code for a triangle is in a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">6</title></block></xml> loop, this task will be a lot simpler.",
          "courseF_artist_ramp10_c": "You will draw six triangles in total for this design:\n\n![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)"
        },
        "courseF_artist_ramp8_authored_hint": {
          "courseF_artist_ramp8_a": "To draw a side, use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, and change the 100 to a 200.",
          "courseF_artist_ramp8_b": "To draw 4 sides, put the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseF_artist_ramp8_c": "Your turn will also go inside of the <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop."
        },
        "courseF_artist_ramp8_2018_authored_hint": {
          "courseF_artist_ramp8_a": "To draw a side, use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, and change the 100 to a 200.",
          "courseF_artist_ramp8_b": "To draw 4 sides, put the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
          "courseF_artist_ramp8_c": "Your turn will also go inside of the <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop."
        },
        "courseF_artist_ramp9_authored_hint": {
          "courseF_artist_ramp9_a": "How is this similar to a square?  How is it different?",
          "courseF_artist_ramp9_b": "You can use the drop down menu on the turn blocks to see which angle you need!",
          "courseF_artist_ramp9_c": "You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop to make your code shorter?"
        },
        "courseF_artist_ramp9_2018_authored_hint": {
          "courseF_artist_ramp9_a": "How is this similar to a square?  How is it different?",
          "courseF_artist_ramp9_b": "You can use the drop down menu on the turn blocks to see which angle you need!",
          "courseF_artist_ramp9_c": "You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop to make your code shorter?"
        },
        "courseF_artist_variables10_authored_hint": {
          "courseF_artist_variables10_a": "Have fun with this level! See what little changes can do to your code.",
          "courseF_artist_variables10_b": "You can try multiple things, and run your code multiple times."
        },
        "courseF_artist_variables10_2018_authored_hint": {
          "courseF_artist_variables10_a": "Have fun with this level! See what little changes can do to your code.",
          "courseF_artist_variables10_b": "You can try multiple things, and run your code multiple times."
        },
        "courseF_artist_variables2_authored_hint": {
          "courseF_artist_variables2_a": "Remember to move forward after drawing each triangle.",
          "courseF_artist_variables2_b": "Your new loop will contain the loop for your triangle, then a `move forward` command."
        },
        "courseF_artist_variables2_2018_authored_hint": {
          "courseF_artist_variables2_a": "Remember to move forward after drawing each triangle.",
          "courseF_artist_variables2_b": "Your new loop will contain the loop for your triangle, then a `move forward` command."
        },
        "courseF_artist_variables3_authored_hint": {
          "courseF_artist_variables3_a": "The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.",
          "courseF_artist_variables3_b": "A number block with value 50 should only be in one place: after the `set variable length` block."
        },
        "courseF_artist_variables3_2018_authored_hint": {
          "courseF_artist_variables3_a": "The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.",
          "courseF_artist_variables3_b": "A number block with value 50 should only be in one place: after the `set variable length` block."
        },
        "courseF_artist_variables4_authored_hint": {
          "courseF_artist_variables4_a": "Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.",
          "courseF_artist_variables4_c": "This is the pattern your artist will be following:\n\n![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)",
          "courseF_artist_variables4_b": "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
        },
        "courseF_artist_variables4_2018_authored_hint": {
          "courseF_artist_variables4_a": "Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.",
          "courseF_artist_variables4_c": "This is the pattern your artist will be following:\n\n![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)",
          "courseF_artist_variables4_b": "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
        },
        "courseF_artist_variables5_authored_hint": {
          "courseF_artist_variables5_a": "The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.",
          "courseF_artist_variables5_b": "The first half of your code will draw three triangles, and the second half will draw the other three.",
          "courseF_artist_variables5_c": "Start by duplicating the code in the first half of your program, then alter it to make the design shown.",
          "courseF_artist_variables5_d": "This is the pattern your artist will follow:\n\n![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)"
        },
        "courseF_artist_variables5_2018_authored_hint": {
          "courseF_artist_variables5_a": "The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.",
          "courseF_artist_variables5_b": "The first half of your code will draw three triangles, and the second half will draw the other three.",
          "courseF_artist_variables5_c": "Start by duplicating the code in the first half of your program, then alter it to make the design shown.",
          "courseF_artist_variables5_d": "This is the pattern your artist will follow:\n\n![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)"
        },
        "courseF_artist_variables6_authored_hint": {
          "courseF_artist_variables6_a": "Thanks to variables, you only need to change one number at the top to make this work.",
          "courseF_artist_variables6_b": "You will need to edit the number block with value 50, but nothing else in the code needs to be altered."
        },
        "courseF_artist_variables6_2018_authored_hint": {
          "courseF_artist_variables6_a": "Thanks to variables, you only need to change one number at the top to make this work.",
          "courseF_artist_variables6_b": "You will need to edit the number block with value 50, but nothing else in the code needs to be altered."
        },
        "courseF_artist_variables6a_authored_hint": {
          "courseF_artist_variables6a_a": "Remember to use the variable `length` instead of an actual number to solve this puzzle.",
          "courseF_artist_variables6a_b": "This code will be very similar to your triangle code, just with a different shape!",
          "courseF_artist_variables6a_c": "Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!",
          "courseF_artist_variables6a_d": "This is the pattern you'll follow!\n\n![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)"
        },
        "courseF_artist_variables6a_2018_authored_hint": {
          "courseF_artist_variables6a_a": "Remember to use the variable `length` instead of an actual number to solve this puzzle.",
          "courseF_artist_variables6a_b": "This code will be very similar to your triangle code, just with a different shape!",
          "courseF_artist_variables6a_c": "Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!",
          "courseF_artist_variables6a_d": "This is the pattern you'll follow!\n\n![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)"
        },
        "courseF_artist_variables7_authored_hint": {
          "courseF_artist_variables7_a": "Start your code by using the `set length` block. Set the length variable to 150.",
          "courseF_artist_variables7_b": "You can use a `repeat` loop to make your code for the triangle simpler.",
          "courseF_artist_variables7_c": "You will want to turn left 120 degrees to make the corners of the triangle."
        },
        "courseF_artist_variables7_2018_authored_hint": {
          "courseF_artist_variables7_a": "Start your code by using the `set length` block. Set the length variable to 150.",
          "courseF_artist_variables7_b": "You can use a `repeat` loop to make your code for the triangle simpler.",
          "courseF_artist_variables7_c": "You will want to turn left 120 degrees to make the corners of the triangle."
        },
        "courseF_artist_variables8_authored_hint": {
          "courseF_artist_variables8_b": "Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.",
          "courseF_artist_variables8_c": "Make sure to use the `repeat` loop to draw your triangle.",
          "courseF_artist_variables8_a": "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
        },
        "courseF_artist_variables8_2018_authored_hint": {
          "courseF_artist_variables8_b": "Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.",
          "courseF_artist_variables8_c": "Make sure to use the `repeat` loop to draw your triangle.",
          "courseF_artist_variables8_a": "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
        },
        "courseF_artist_variables9_authored_hint": {
          "courseF_artist_variables9_a": "For this puzzle, all you need to do is change how many times the loop repeats.",
          "courseF_artist_variables9_b": "Make sure the blocks that increment `length` are within your loop so the lines keep getting longer."
        },
        "courseF_artist_variables9_2018_authored_hint": {
          "courseF_artist_variables9_a": "For this puzzle, all you need to do is change how many times the loop repeats.",
          "courseF_artist_variables9_b": "Make sure the blocks that increment `length` are within your loop so the lines keep getting longer."
        },
        "courseF_artist_variablesFP_authored_hint": {
          "courseF_artist_variablesFP_a": "Try one of these three drawings.\n![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)"
        },
        "courseF_artist_variablesFP_2018_authored_hint": {
          "courseF_artist_variablesFP_a": "Try one of these three drawings.\n![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)"
        },
        "courseF_artist_variables_4_authored_hint": {
          "courseF_artist_variables_4_a": "Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to move down, then turn him back to get ready to move forward again.",
          "courseF_artist_variables_4_b": "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
        },
        "courseF_artist_variables_6_authored_hint": {
          "courseF_artist_variables_6_a": "Thanks to variables, you only need to change one number at the top to make this work."
        },
        "courseF_artist_variables_6a_authored_hint": {
          "courseF_artist_variables6a_a": "Remember to use the variable `length` instead of an actual number to solve this puzzle."
        },
        "courseF_artist_variables_8_authored_hint": {
          "courseF_artist_variables_8_a": "Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png) blocks inside your loop at the end.\n"
        },
        "courseF_artist_variables_challenge1_authored_hint": {
          "courseF_artist_variables_challenge1_a": "Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.",
          "courseF_artist_variables_challenge1_b": "You will want to increase the value of `length` by 10 **twice** inside the loop.",
          "courseF_artist_variables_challenge1_c": "To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.",
          "courseF_artist_variables_challenge1_d": "This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.\n\n![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)\n\nIf you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.",
          "courseF_artist_variables_challenge1_e": "Here is the solution.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_variables_challenge1_2018_authored_hint": {
          "courseF_artist_variables_challenge1_a": "Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.",
          "courseF_artist_variables_challenge1_b": "You will want to increase the value of `length` by 10 **twice** inside the loop.",
          "courseF_artist_variables_challenge1_c": "To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.",
          "courseF_artist_variables_challenge1_d": "This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.\n\n![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)\n\nIf you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.",
          "courseF_artist_variables_challenge1_e": "Here is the solution.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_variables_challenge1a_authored_hint": {
          "courseF_artist_variables_challenge1_a": "Variables are helpful because you can add to them each time through a loop. ",
          "courseF_artist_variables_challenge1_b": "This puzzle has one loop that creates the polygon, one loop that repeats the polygon `sides` times, then another loop that does it all again after adding 5 to `sides`.",
          "courseF_artist_variables_challenge1_c": "Using a variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
          "courseF_artist_variables_challenge1_d": "**Solution:**\n\n![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)"
        },
        "courseF_artist_variables_challenge2_authored_hint": {
          "courseF_artist_variables_challenge2_a": "Variables are helpful because you can add to them each time through a loop.",
          "courseF_artist_variables_challenge2_c": "Using one variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
          "courseF_artist_variables_challenge2_d": "**Solution:**\n\n![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)"
        },
        "courseF_artist_variables_challenge2_2018_authored_hint": {
          "courseF_artist_variables_challenge2_a": "Variables are helpful because you can add to them each time through a loop.",
          "courseF_artist_variables_challenge2_c": "Using one variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
          "courseF_artist_variables_challenge2_d": "**Solution:**\n\n![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)"
        },
        "courseF_bee_conditionals10_authored_hint": {
          "courseF_bee_conditionals10_a": "Imagine there is a cloud in every spot. Does this help simplify your code?",
          "courseF_bee_conditionals10_b": "Use an `if/else` block to check every space for nectar or honey.",
          "courseF_bee_conditionals10_c": "Could a `while` loop help get to the end of this path?"
        },
        "courseF_bee_conditionals10_2018_authored_hint": {
          "courseF_bee_conditionals10_a": "Imagine there is a cloud in every spot. Does this help simplify your code?",
          "courseF_bee_conditionals10_b": "Use an `if/else` block to check every space for nectar or honey.",
          "courseF_bee_conditionals10_c": "Could a `while` loop help get to the end of this path?"
        },
        "courseF_bee_conditionals2_authored_hint": {
          "courseF_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
          "courseF_bee_conditionals2_b": "Try writing the sequence to get you to all of the spaces, then add the `if` statement."
        },
        "courseF_bee_conditionals2_2018_authored_hint": {
          "courseF_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
          "courseF_bee_conditionals2_b": "Try writing the sequence to get you to all of the spaces, then add the `if` statement."
        },
        "courseF_bee_conditionals3_authored_hint": {
          "courseF_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
          "courseF_bee_conditionals3_b": "A `repeat` loop will be useful so you only have to use one `if` block.",
          "courseF_bee_conditionals3_c": "Try writing code to check the first cloud. Can you loop this to check all of them?"
        },
        "courseF_bee_conditionals3_2018_authored_hint": {
          "courseF_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
          "courseF_bee_conditionals3_b": "A `repeat` loop will be useful so you only have to use one `if` block.",
          "courseF_bee_conditionals3_c": "Try writing code to check the first cloud. Can you loop this to check all of them?"
        },
        "courseF_bee_conditionals4_authored_hint": {
          "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
          "courseF_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
          "courseF_bee_conditionals4_c": "Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?"
        },
        "courseF_bee_conditionals4_2018_authored_hint": {
          "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
          "courseF_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
          "courseF_bee_conditionals4_c": "Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?"
        },
        "courseF_bee_conditionals5_authored_hint": {
          "courseF_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?",
          "courseF_bee_conditionals5_b": "Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
          "courseF_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. ",
          "courseF_bee_conditionals5_d": "To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?"
        },
        "courseF_bee_conditionals5_2018_authored_hint": {
          "courseF_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?",
          "courseF_bee_conditionals5_b": "Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
          "courseF_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. ",
          "courseF_bee_conditionals5_d": "To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?"
        },
        "courseF_bee_conditionals8_authored_hint": {
          "courseF_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
          "courseF_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
          "courseF_bee_conditionals8_c": "What happens if you skip the first flower, then use the `while path ahead` block?"
        },
        "courseF_bee_conditionals8_2018_authored_hint": {
          "courseF_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
          "courseF_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
          "courseF_bee_conditionals8_c": "What happens if you skip the first flower, then use the `while path ahead` block?"
        },
        "courseF_bee_for1_authored_hint": {
          "courseF_bee_for1_a": "Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.",
          "courseF_bee_for1_b": "You will need two blocks in your ‘repeat’ loop to collect all of the nectar."
        },
        "courseF_bee_for10_authored_hint": {
          "courseF_bee_for10_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
          "courseF_bee_for10_b": "The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?",
          "courseF_bee_for10_c": "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?",
          "courseF_bee_for10_d": "You'll need to have 2 repeats, one will use a math block."
        },
        "courseF_bee_for10_2018_authored_hint": {
          "courseF_bee_for10_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
          "courseF_bee_for10_b": "The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?",
          "courseF_bee_for10_c": "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?",
          "courseF_bee_for10_d": "You'll need to have 2 repeats, one will use a math block."
        },
        "courseF_bee_for11_authored_hint": {
          "courseF_bee_for11_a": "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
        },
        "courseF_bee_for11_2018_authored_hint": {
          "courseF_bee_for11_a": "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
        },
        "courseF_bee_for1_2018_authored_hint": {
          "courseF_bee_for1_a": "Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.",
          "courseF_bee_for1_b": "You will need two blocks in your ‘repeat’ loop to collect all of the nectar."
        },
        "courseF_bee_for2_authored_hint": {
          "courseF_bee_for2_a": "If you’re confused, work one flower at a time, and test often.",
          "courseF_bee_for2_b": "Remember to move forward between each loop, so you reach each flower."
        },
        "courseF_bee_for2_2018_authored_hint": {
          "courseF_bee_for2_a": "If you’re confused, work one flower at a time, and test often.",
          "courseF_bee_for2_b": "Remember to move forward between each loop, so you reach each flower."
        },
        "courseF_bee_for3_authored_hint": {
          "courseF_bee_for3_a": "Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. ",
          "courseF_bee_for3_b": "Your `for` loop will need to count from 1 to 5 with an increment of 1."
        },
        "courseF_bee_for4_authored_hint": {
          "courseF_bee_for4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
          "courseF_bee_for4_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for4_c": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
        },
        "courseF_bee_for4_2018_authored_hint": {
          "courseF_bee_for4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
          "courseF_bee_for4_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for4_c": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
        },
        "courseF_bee_for5_authored_hint": {
          "courseF_bee_for5_a": "This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.",
          "courseF_bee_for5_b": "Use the `counter` variable in each loop so the bee moves different distances between each flower.",
          "courseF_bee_for5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_bee_for5_2018_authored_hint": {
          "courseF_bee_for5_a": "This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.",
          "courseF_bee_for5_b": "Use the `counter` variable in each loop so the bee moves different distances between each flower.",
          "courseF_bee_for5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_bee_for6_authored_hint": {
          "courseF_bee_for6_a": "Don't forget to use a `counter` variable inside your `repeat` loop.",
          "courseF_bee_for6_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for6_c": "Your loop should count **from 5 to 1**."
        },
        "courseF_bee_for6_2018_authored_hint": {
          "courseF_bee_for6_a": "Don't forget to use a `counter` variable inside your `repeat` loop.",
          "courseF_bee_for6_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for6_c": "Your loop should count **from 5 to 1**."
        },
        "courseF_bee_for7_authored_hint": {
          "courseF_bee_for7_a": "Your `for` loop will need to count from 1 to 7 by 2.",
          "courseF_bee_for7_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for7_c": "Remember to use the `counter` variable in your `repeat` loop."
        },
        "courseF_bee_for7_2018_authored_hint": {
          "courseF_bee_for7_a": "Your `for` loop will need to count from 1 to 7 by 2.",
          "courseF_bee_for7_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
          "courseF_bee_for7_c": "Remember to use the `counter` variable in your `repeat` loop."
        },
        "courseF_bee_for8_authored_hint": {
          "courseF_bee_for8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?",
          "courseF_bee_for8_b": "In this puzzle, you will need to move in a stair step pattern to get to the flowers.",
          "courseF_bee_for8_c": "Your loop will count *from 3 to 15* with some increment. What is it?"
        },
        "courseF_bee_for8_2018_authored_hint": {
          "courseF_bee_for8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?",
          "courseF_bee_for8_b": "In this puzzle, you will need to move in a stair step pattern to get to the flowers.",
          "courseF_bee_for8_c": "Your loop will count *from 3 to 15* with some increment. What is it?"
        },
        "courseF_bee_for9_authored_hint": {
          "courseF_bee_for9_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?",
          "courseF_bee_for9_c": "It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.",
          "courseF_bee_for9_b": "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
        },
        "courseF_bee_for9_2018_authored_hint": {
          "courseF_bee_for9_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?",
          "courseF_bee_for9_c": "It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.",
          "courseF_bee_for9_b": "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
        },
        "courseF_bee_for_challenge2_authored_hint": {
          "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)",
          "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
          "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
          "courseF_bee_for_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_for_challenge2_2018_authored_hint": {
          "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)",
          "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
          "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
          "courseF_bee_for_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_for_challenge3_authored_hint": {
          "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)",
          "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
          "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
          "courseF_bee_for_challenge2_d": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_functions2_authored_hint": {
          "courseF_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower.",
          "courseF_bee_functions2_b": "Click on the blue edit button on the `get only nectar` function to see what it does."
        },
        "courseF_bee_functions2_2018_authored_hint": {
          "courseF_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower.",
          "courseF_bee_functions2_b": "Click on the blue edit button on the `get only nectar` function to see what it does."
        },
        "courseF_bee_functions3_authored_hint": {
          "courseF_bee_functions3_a": "Your function for this puzzle only needs to make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseF_bee_functions3_b": "Remember that your function should only get honey *if* there is a honeycomb.",
          "courseF_bee_functions3_c": "Use the green `only make honey` block to call your function.",
          "courseF_bee_functions3_d": "Check out this path."
        },
        "courseF_bee_functions3_2018_authored_hint": {
          "courseF_bee_functions3_a": "Your function for this puzzle only needs to make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseF_bee_functions3_b": "Remember that your function should only get honey *if* there is a honeycomb.",
          "courseF_bee_functions3_c": "Use the green `only make honey` block to call your function.",
          "courseF_bee_functions3_d": "Check out this path."
        },
        "courseF_bee_functions3a_authored_hint": {
          "courseF_bee_functions3a_a": "Your function for this puzzle only needs to get nectar or make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseF_bee_functions3a_b": "Use a stairstep pattern to check the first four clouds."
        },
        "courseF_bee_functions3a_2018_authored_hint": {
          "courseF_bee_functions3a_a": "Your function for this puzzle only needs to get nectar or make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
          "courseF_bee_functions3a_b": "Use a stairstep pattern to check the first four clouds."
        },
        "courseF_bee_functions4_authored_hint": {
          "courseF_bee_functions4_a": "Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.",
          "courseF_bee_functions4_b": "Try building the program and using the function blocks as you expect the function to behave, then create the function."
        },
        "courseF_bee_functions4_2018_authored_hint": {
          "courseF_bee_functions4_a": "Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.",
          "courseF_bee_functions4_b": "Try building the program and using the function blocks as you expect the function to behave, then create the function."
        },
        "courseF_bee_functions5_authored_hint": {
          "courseE_bee_functions5_a": "Edit the function so that it solves the puzzle without having to change the main program.",
          "courseE_bee_functions5_b": "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
        },
        "courseF_bee_functions5a_authored_hint": {
          "courseF_bee_functions5a_a": "Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  \n\nYou don't need to add that part to your main program.",
          "courseF_bee_functions5a_b": "Use a `while` loop to travel down all of the main paths, since they are different lengths.",
          "courseF_bee_functions5a_c": "Within your `while` loop, make sure to move forward, then use your function to check for a path."
        },
        "courseF_bee_functions5a_2018_authored_hint": {
          "courseF_bee_functions5a_a": "Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  \n\nYou don't need to add that part to your main program.",
          "courseF_bee_functions5a_b": "Use a `while` loop to travel down all of the main paths, since they are different lengths.",
          "courseF_bee_functions5a_c": "Within your `while` loop, make sure to move forward, then use your function to check for a path."
        },
        "courseF_bee_functions6_authored_hint": {
          "courseF_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_functions6_b": "Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.",
          "courseF_bee_functions6_c": "Since you are turning within your function, you only need one `while` loop to get you through this maze."
        },
        "courseF_bee_functions6_2018_authored_hint": {
          "courseF_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)",
          "courseF_bee_functions6_b": "Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.",
          "courseF_bee_functions6_c": "Since you are turning within your function, you only need one `while` loop to get you through this maze."
        },
        "courseF_bee_functions7_authored_hint": {
          "courseF_bee_functions7_a": "You can look back at the last puzzle to see your function.",
          "courseF_bee_functions7_b": "Try drawing a path through this maze with your finger. Where will the bee have to make a decision?"
        },
        "courseF_bee_functions7_2018_authored_hint": {
          "courseF_bee_functions7_a": "You can look back at the last puzzle to see your function.",
          "courseF_bee_functions7_b": "Try drawing a path through this maze with your finger. Where will the bee have to make a decision?"
        },
        "courseF_bee_functions8a_authored_hint": {
          "courseF_bee_functions8a_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseF_bee_functions8a_b": "Remember to build code inside of the function editor.\n\n"
        },
        "courseF_bee_functions8a_2018_authored_hint": {
          "courseF_bee_functions8a_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseF_bee_functions8a_b": "Remember to build code inside of the function editor.\n\n"
        },
        "courseF_bee_functionsPre7_authored_hint": {
          "courseF_bee_functions7_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseF_bee_functions7_b": "Remember to build code inside of the green function block.\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n    </statement>\n  </block>\n</xml>\n",
          "courseF_bee_functions7_c": "Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?"
        },
        "courseF_bee_functionsPre7_2018_authored_hint": {
          "courseF_bee_functions7_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseF_bee_functions7_b": "Remember to build code inside of the green function block.\n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)",
          "courseF_bee_functions7_c": "Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?"
        },
        "courseF_bee_functions_challenge1_authored_hint": {
          "courseF_bee_functions_challenge1_a": "You can use the functions in the tool box to help you. You can call a function inside of another function's definition!"
        },
        "courseF_bee_functions_challenge1_2018_authored_hint": {
          "courseF_bee_functions_challenge1_a": "You can use the functions in the tool box to help you. You can call a function inside of another function's definition!"
        },
        "courseF_bee_functions_challenge2_authored_hint": {
          "courseF_bee_functions_challenge2_a": "If there is a path to the right, you should do the following:\n* Get any nectar or make any honey.\n* Turn right towards the side path.\n* Move to the end of the side path.\n* Turn right.\n\nIf you repeat the above actions twice, you will be ready to move back down the main path.\n\n**Only click for another hint if you want to see the full solution!**",
          "courseF_bee_functions_challenge2_b": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                      <mutation name=\"move and check\"></mutation>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"check nectar or honey\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_whileNectarAmount\">\n        <title name=\"ARG1\">nectarRemaining</title>\n        <title name=\"OP\">&gt;</title>\n        <title name=\"ARG2\">0</title>\n        <statement name=\"DO\">\n          <block type=\"maze_nectar\"/>\n        </statement>\n        <next>\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "courseF_bee_functions_challenge2_2018_authored_hint": {
          "courseF_bee_functions_challenge2_a": "If there is a path to the right, you should do the following:\n* Get any nectar or make any honey.\n* Turn right towards the side path.\n* Move to the end of the side path.\n* Turn right.\n\nIf you repeat the above actions twice, you will be ready to move back down the main path.\n\n**Only click for another hint if you want to see the full solution!**",
          "courseF_bee_functions_challenge2_b": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                      <mutation name=\"move and check\"></mutation>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"check nectar or honey\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_whileNectarAmount\">\n        <title name=\"ARG1\">nectarRemaining</title>\n        <title name=\"OP\">&gt;</title>\n        <title name=\"ARG2\">0</title>\n        <statement name=\"DO\">\n          <block type=\"maze_nectar\"/>\n        </statement>\n        <next>\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "courseF_bee_functions_challenge2_recursion_authored_hint": {
          "courseF_bee_functions8a_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "courseF_bee_functions8a_b": "Remember to build code inside of the function editor.\n\n"
        },
        "courseF_bee_fwp1_authored_hint": {
          "courseF_bee_fwp1_a": "Use `if` statements to make sure you're only getting nectar from a flower.",
          "courseF_bee_fwp1_b": "Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement."
        },
        "courseF_bee_fwp1_2018_authored_hint": {
          "courseF_bee_fwp1_a": "Use `if` statements to make sure you're only getting nectar from a flower.",
          "courseF_bee_fwp1_b": "Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement."
        },
        "courseF_bee_fwp2_authored_hint": {
          "courseF_bee_fwp2_a": "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)",
          "courseF_bee_fwp2_b": "Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built."
        },
        "courseF_bee_fwp2_2018_authored_hint": {
          "courseF_bee_fwp2_a": "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)",
          "courseF_bee_fwp2_b": "Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built."
        },
        "courseF_bee_fwp3_authored_hint": {
          "courseF_bee_fwp3_a": "Your function will run no matter which direction you're facing.",
          "courseF_bee_fwp3_b": "There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?",
          "courseF_bee_fwp3_c": "To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to `turn right`, `move forward` 2 times, then `turn right` again. OR, you need to `turn left`, `move forward` 2 times, then `turn left` again."
        },
        "courseF_bee_fwp3_2018_authored_hint": {
          "courseF_bee_fwp3_a": "Your function will run no matter which direction you're facing.",
          "courseF_bee_fwp3_b": "There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?",
          "courseF_bee_fwp3_c": "To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to `turn right`, `move forward` 2 times, then `turn right` again. OR, you need to `turn left`, `move forward` 2 times, then `turn left` again."
        },
        "courseF_bee_fwp4_authored_hint": {
          "courseF_bee_fwp4_a": "You will need to add a parameter and use the resulting variable in your loop.",
          "courseF_bee_fwp4_b": "The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar."
        },
        "courseF_bee_fwp4_2018_authored_hint": {
          "courseF_bee_fwp4_a": "You will need to add a parameter and use the resulting variable in your loop.",
          "courseF_bee_fwp4_b": "The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar."
        },
        "courseF_bee_fwp5_authored_hint": {
          "courseF_bee_fwp5_a": "Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.",
          "courseF_bee_fwp5_a_b": "Remember to turn between each function call."
        },
        "courseF_bee_fwp5_2018_authored_hint": {
          "courseF_bee_fwp5_a": "Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.",
          "courseF_bee_fwp5_a_b": "Remember to turn between each function call."
        },
        "courseF_bee_fwp6_authored_hint": {
          "courseF_bee_fwp6_a": "Which block automatically increments a variable that you could use as a parameter?",
          "courseF_bee_fwp6_b": "Try using a `for` loop to solve this puzzle."
        },
        "courseF_bee_fwp6_2018_authored_hint": {
          "courseF_bee_fwp6_a": "Which block automatically increments a variable that you could use as a parameter?",
          "courseF_bee_fwp6_b": "Try using a `for` loop to solve this puzzle."
        },
        "courseF_bee_fwp7_authored_hint": {
          "courseF_bee_fwp7_a": "You don't need a second parameter for this function, only a second `if` statement.",
          "courseF_bee_fwp7_b": "Add an `if` statement in your function so the bee checks for both honeycombs and flowers."
        },
        "courseF_bee_fwp7_2018_authored_hint": {
          "courseF_bee_fwp7_a": "You don't need a second parameter for this function, only a second `if` statement.",
          "courseF_bee_fwp7_b": "Add an `if` statement in your function so the bee checks for both honeycombs and flowers."
        },
        "courseF_bee_fwp8_authored_hint": {
          "courseF_bee_fwp8_a": "How could a `for` loop help in this puzzle?",
          "courseF_bee_fwp8_b": "Since the spiral gets smaller as you go in, your `for` loop should count down."
        },
        "courseF_bee_fwp8_2018_authored_hint": {
          "courseF_bee_fwp8_a": "How could a `for` loop help in this puzzle?",
          "courseF_bee_fwp8_b": "Since the spiral gets smaller as you go in, your `for` loop should count down."
        },
        "courseF_bee_fwp_challenge1_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "The main program should look something like this:\n\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "Look at how much corn is available to harvest in each space. Do you see the counter pattern? ",
          "courseF_bee_fwp_challenge1_b1": "The `length` parameter should be used to set the maximum value in the `for loop`.\n\nDon't forget to have the farmer move back to the main path after harvesting!",
          "courseF_bee_fwp_challenge1_c": "Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.\nInside this loop, you should move forward and pick all of the corn.\n\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.",
          "courseF_bee_fwp_challenge1_d2": "After the `for loop` you can just `move backward` **length times**.",
          "courseF_bee_fwp_challenge1_e": "**Here is the solution:**\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>\n"
        },
        "courseF_bee_fwp_challenge1_2018_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "The main program should look something like this:\n\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "Look at how much corn is available to harvest in each space. Do you see the counter pattern? ",
          "courseF_bee_fwp_challenge1_b1": "The `length` parameter should be used to set the maximum value in the `for loop`.\n\nDon't forget to have the farmer move back to the main path after harvesting!",
          "courseF_bee_fwp_challenge1_c": "Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.\nInside this loop, you should move forward and pick all of the corn.\n\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.",
          "courseF_bee_fwp_challenge1_d2": "After the `for loop` you can just `move backward` **length times**.",
          "courseF_bee_fwp_challenge1_e": "**Here is the solution:**\n\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>\n"
        },
        "courseF_bee_fwp_challenge2_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?\n\nAdd conditional statements to the function to check for corn, pumpkins, and lettuce.",
          "courseF_bee_fwp_challenge2_b": "Are you running out of `move forward` blocks?\nTry using a *second* `for loop` in your main program.",
          "courseF_bee_fwp_challenge2_c": "**Here is what your function should look like:**\n\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "**Here is what your main program should look like:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>\n"
        },
        "courseF_bee_fwp_challenge2_2018_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?\n\nAdd conditional statements to the function to check for corn, pumpkins, and lettuce.",
          "courseF_bee_fwp_challenge2_b": "Are you running out of `move forward` blocks?\nTry using a *second* `for loop` in your main program.",
          "courseF_bee_fwp_challenge2_c": "**Here is what your function should look like:**\n\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "**Here is what your main program should look like:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>\n"
        },
        "courseF_farmer_ramp11_authored_hint": {
          "courseF_farmer_ramp11_a": "If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.",
          "courseF_farmer_ramp11_b": "How can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type=\"harvester_lettuce\"/></xml> blocks?",
          "courseF_farmer_ramp11_c": "You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type=\"maze_moveForward\"/></xml> block, and you'll have it!)"
        },
        "courseF_farmer_ramp11_2018_authored_hint": {
          "courseF_farmer_ramp11_a": "If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.",
          "courseF_farmer_ramp11_b": "How can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type=\"harvester_lettuce\"/></xml> blocks?",
          "courseF_farmer_ramp11_c": "You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type=\"maze_moveForward\"/></xml> block, and you'll have it!)"
        },
        "courseF_maze_ramp1_authored_hint": {
          "courseF_maze_ramp1_a": "If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click \"Run\" again.",
          "courseF_maze_ramp1_b": "You don't need any extra blocks from the toolbox here!"
        },
        "courseF_maze_ramp13_authored_hint": {
          "courseF_maze_ramp13_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseF_maze_ramp13_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseF_maze_ramp13_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
          "courseF_maze_ramp13_d": "Once your loop is done, what do you have to do to move the final few squares? Attach these blocks after the loop."
        },
        "courseF_maze_ramp15_authored_hint": {
          "courseF_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseF_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over."
        },
        "courseF_maze_ramp1_2018_authored_hint": {
          "courseF_maze_ramp1_a": "If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click \"Run\" again.",
          "courseF_maze_ramp1_b": "You don't need any extra blocks from the toolbox here!"
        },
        "courseF_maze_ramp2_authored_hint": {
          "courseF_maze_ramp2_a": "To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type=\"when_run\"/></xml> block.",
          "courseF_maze_ramp2_b": "Make sure the <xml><block type=\"maze_moveForward\"/></xml> block is inside of the loop, so that it is repeated."
        },
        "courseF_maze_ramp2_2018_authored_hint": {
          "courseF_maze_ramp2_a": "To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type=\"when_run\"/></xml> block.",
          "courseF_maze_ramp2_b": "Make sure the <xml><block type=\"maze_moveForward\"/></xml> block is inside of the loop, so that it is repeated."
        },
        "courseF_maze_ramp4_authored_hint": {
          "courseF_maze_ramp4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseF_maze_ramp4_b": "To follow the path, move forward and turn one way, then move three times before turning the opposite way. Move forward one more time to reach the pig.",
          "courseF_maze_ramp4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_maze_ramp4_2018_authored_hint": {
          "courseF_maze_ramp4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "courseF_maze_ramp4_b": "To follow the path, move forward and turn one way, then move three times before turning the opposite way. Move forward one more time to reach the pig.",
          "courseF_maze_ramp4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
        },
        "courseF_maze_ramp5_authored_hint": {
          "courseF_maze_ramp5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseF_maze_ramp5_b": "There is more than one way to get to the pig.",
          "courseF_maze_ramp5_c": "Try using a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop for shorter code!"
        },
        "courseF_maze_ramp5_2018_authored_hint": {
          "courseF_maze_ramp5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
          "courseF_maze_ramp5_b": "There is more than one way to get to the pig.",
          "courseF_maze_ramp5_c": "Try using a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop for shorter code!"
        },
        "courseF_maze_ramp6_authored_hint": {
          "courseF_maze_ramp6_a": "There are two ways to solve this puzzle!",
          "courseF_maze_ramp6_b": "The bird starts facing a wall, so remember to turn before moving!",
          "courseF_maze_ramp6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseF_maze_ramp6_2018_authored_hint": {
          "courseF_maze_ramp6_a": "There are two ways to solve this puzzle!",
          "courseF_maze_ramp6_b": "The bird starts facing a wall, so remember to turn before moving!",
          "courseF_maze_ramp6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
        },
        "courseF_maze_ramp7_authored_hint": {
          "courseF_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
          "courseF_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
          "courseF_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
          "courseF_maze_ramp7_d": "There is more than one way to get to the pig. Which requires the least code?",
          "courseF_maze_ramp7_aa": "Look at this path...\n\n![](https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png)"
        },
        "courseF_playlab_brokenText_authored_hint": {
          "courseF_playlab_variables6c_a": "Under the “Input” section, use the `ask` block to get input from users."
        },
        "courseF_playlab_variables1a_authored_hint": {
          "courseF_playlab_variables1a_a": "You will want to replace the words “What should I shout?” in the green block with “Goal!”"
        },
        "courseF_playlab_variables1a_2018_authored_hint": {
          "courseF_playlab_variables1a_a": "You will want to replace the words “What should I shout?” in the green block with “Goal!”"
        },
        "courseF_playlab_variables2b_authored_hint": {
          "courseF_playlab_variables2b_a": "What do you think Kiki will say when you hit `Run`?"
        },
        "courseF_playlab_variables2b_2018_authored_hint": {
          "courseF_playlab_variables2b_a": "What do you think Kiki will say when you hit `Run`?"
        },
        "courseF_playlab_variables3b_authored_hint": {
          "courseF_playlab_variables3b_a": "The variable blocks are already in the workspace.  All you have to do is put them where they belong!"
        },
        "courseF_playlab_variables3bEdit_authored_hint": {
          "courseF_playlab_variables3b_a": "The variable blocks are already in the workspace.  All you have to do is put them where they belong!"
        },
        "courseF_playlab_variables3b_josh_authored_hint": {
          "courseF_playlab_variables3b_a": "There are two blocks with empty spaces: an `actor say` block, and a `join` block. Add the variable blocks there!"
        },
        "courseF_playlab_variables3b_josh_2018_authored_hint": {
          "courseF_playlab_variables3b_a": "There are two blocks with empty spaces: an `actor say` block, and a `join` block. Add the variable blocks there!"
        },
        "courseF_playlab_variables4b_authored_hint": {
          "courseF_playlab_variables4b_a": "You don’t need any more blocks from the toolbox here.",
          "courseF_playlab_variables4b_b": "Put the two `age` variables and one `name` variable where they make the most sense in the conversation."
        },
        "courseF_playlab_variables4b_2018_authored_hint": {
          "courseF_playlab_variables4b_a": "You don’t need any more blocks from the toolbox here.",
          "courseF_playlab_variables4b_b": "Put the two `age` variables and one `name` variable where they make the most sense in the conversation."
        },
        "courseF_playlab_variables5c_authored_hint": {
          "courseF_playlab_variables5c_a": "Find an `answer` variable block in the toolbox, under “Variables”.",
          "courseF_playlab_variables5c_b": "Test your code! Try entering “red”, and also other colors, to see what happens."
        },
        "courseF_playlab_variables5c_2018_authored_hint": {
          "courseF_playlab_variables5c_a": "Find an `answer` variable block in the toolbox, under “Variables”.",
          "courseF_playlab_variables5c_b": "Test your code! Try entering “red”, and also other colors, to see what happens."
        },
        "courseF_playlab_variables6c_authored_hint": {
          "courseF_playlab_variables6c_a": "Under the “Input” section, use the `ask` block to get input from users."
        },
        "courseF_playlab_variables6c_2018_authored_hint": {
          "courseF_playlab_variables6c_a": "Under the “Input” section, use the `ask` block to get input from users."
        },
        "courseF_playlab_variables7b_authored_hint": {
          "courseF_playlab_variables7b_a": "Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!",
          "courseF_playlab_variables7b_b": "Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen."
        },
        "courseF_playlab_variables7b_2018_authored_hint": {
          "courseF_playlab_variables7b_a": "Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!",
          "courseF_playlab_variables7b_b": "Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen."
        },
        "courseF_playlab_variables7c_authored_hint": {
          "courseF_playlab_variables7c_a": "Put the new `ask` block before your `if/else` statement so you can use it there in other stages."
        },
        "courseF_playlab_variables7c_2018_authored_hint": {
          "courseF_playlab_variables7c_a": "Put the new `ask` block before your `if/else` statement so you can use it there in other stages."
        },
        "courseF_playlab_variables8c_authored_hint": {
          "courseF_playlab_variables8c_a": "The `join` block goes into an `actor say` block, and lets you use your variables in larger sentences."
        },
        "courseF_playlab_variables8c_2018_authored_hint": {
          "courseF_playlab_variables8c_a": "The `join` block goes into an `actor say` block, and lets you use your variables in larger sentences."
        },
        "courseF_playlab_variables_challenge1_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "You will need additional blocks from the tool box to get the actors to talk.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "courseF_playlab_variables_challenge1_2018_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "You will need additional blocks from the tool box to get the actors to talk.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "courseF_playlab_variables_challenge2_authored_hint": {
          "courseF_playlab_variables_challenge2_a": "Add and subtract points to the `score` variable when sprites collide.",
          "courseF_playlab_variables_challenge2_b": "You can change how far you move your sprite each time one of the arrow keys is pressed.",
          "courseF_playlab_variables_challenge2_c": "**Solution:**\n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">1</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">4</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">8</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">2</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_playlab_variables_challenge2_2018_authored_hint": {
          "courseF_playlab_variables_challenge2_a": "Add and subtract points to the `score` variable when sprites collide.",
          "courseF_playlab_variables_challenge2_b": "You can change how far you move your sprite each time one of the arrow keys is pressed.",
          "courseF_playlab_variables_challenge2_c": "**Solution:**\n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">1</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">4</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">8</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">2</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_playlab_variables_challenge3_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "The actor knows what to say because it checks the current value of the `fortune` variable.\n\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.\n\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!",
          "courseF_playlab_variables_challenge3_d": "Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.\n\nDon't forget to change the instructions inside the `Ask a question` function so they still make sense!",
          "courseF_playlab_variables_challenge3_e": "When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?\n\nHave a friend try your app when it is finished!"
        },
        "coursea_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "If the bird isn't getting to the pig, make sure both of the blocks have been fully clicked together, then click \"Run\" again.",
          "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!"
        },
        "coursef_maze_ramp3_authored_hint": {
          "courseF_maze_ramp3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseF_maze_ramp3_b": "Use the step button to go through the program line-by-line. Where does something go wrong?"
        },
        "coursef_maze_ramp3_2018_authored_hint": {
          "courseF_maze_ramp3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n",
          "courseF_maze_ramp3_b": "Use the step button to go through the program line-by-line. Where does something go wrong?"
        },
        "drawings!_authored_hint": {
          "triangle_geometry_hint": "Remember: an equilateral triangle has three sides, with a 60 degree turn between each!",
          "repeat_pointer": "You have to draw a side and turn 3 times...what block can you use to run the same instructions many times?",
          "repeat_bottom_out": "Use a `repeat 3 times` block!"
        },
        "farmer-test-lb_authored_hint": {
          "hint_2": "Pointing 123"
        },
        "grade1_adventurer_loops10_authored_hint": {
          "grade1_adventurer_loops10_a": "You'll need three `repeat` loops to solve this puzzle."
        },
        "grade1_adventurer_loops2_authored_hint": {
          "grade1_adventurer_loops2_a": "Try using a `repeat` block to collect your gold."
        },
        "grade1_adventurer_loops3_authored_hint": {
          "grade1_adventurer_loops3_a": "Is something not right? Try using the step button to figure out where things go wrong."
        },
        "grade1_adventurer_loops4_authored_hint": {
          "grade1_adventurer_loops4_a": "Try using more than one loop to get the job done."
        },
        "grade1_adventurer_loops5_authored_hint": {
          "grade1_adventurer_loops5_a": "Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time."
        },
        "grade1_adventurer_loops6_authored_hint": {
          "grade1_adventurer_loops6_a": "If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out."
        },
        "grade1_adventurer_loops7_challenge_authored_hint": {
          "grade1_adventurer_loops7_challenge_a": "If you can't figure out where to put the repeat loops, program it out step-by-step and look for a pattern. ",
          "grade1_adventurer_loops7_challenge_b": "Does the code feel a little long?  You can make it much shorter by moving two of your `repeat` loops inside of another loop."
        },
        "grade1_adventurer_loops8_challenge_authored_hint": {
          "grade1_adventurer_loops8_challenge_a": "Can you find a pattern in the steps?  Where can you use a repeat?"
        },
        "grade1_adventurer_loops9_authored_hint": {
          "grade1_adventurer_loops9_a": "Does this seem too hard?  Break it up into 4 little problems to make it feel easier.\n"
        },
        "grade1_artist_loops1_authored_hint": {
          "grade1_artist_loops1_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block."
        },
        "grade1_artist_loops2_authored_hint": {
          "grade1_artist_loops2_a": "Remember to use a `repeat` loop for better code!"
        },
        "grade1_artist_loops4_authored_hint": {
          "grade1_artist_loops4_a": "Drag out a `repeat` loop, then put the other blocks inside of it. How many times do you need to repeat?"
        },
        "grade1_artist_loops6_authored_hint": {
          "grade1_artist_loops6_a": "This challenge uses FOUR loops, one right after another!",
          "grade1_artist_loops6_b": "Notice that every loop makes a stair pattern that travels in a different direction.\n\n![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)",
          "grade1_artist_loops6_c": "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
        },
        "grade1_artist_loops7a_authored_hint": {
          "artistLoopsK9_a": "This challenge uses FOUR loops, one right after another!",
          "artistLoopsK9_b": "Notice that every loop makes a stair pattern that travels in a different direction.\n\n![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)",
          "artistLoopsK9_c": "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
        },
        "grade1_artist_loops7b_authored_hint": {
          "grade1_artist_loops7b_a": "How many times should you repeat the pattern to make the ladder?"
        },
        "grade1_maze_sequence1_authored_hint": {
          "grade1_maze_sequence1_a": "This program is missing one block. Can you figure out which one?"
        },
        "grade1_maze_sequence10_authored_hint": {
          "grade1_maze_sequence10_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "grade1_maze_sequence2_authored_hint": {
          "grade1_maze_sequence2_a": "One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?"
        },
        "grade1_maze_sequence3_authored_hint": {
          "grade1_maze_sequence3_a": "Try adding one instruction at a time until you get to the pig."
        },
        "grade1_maze_sequence5_authored_hint": {
          "K2.0_sequence_5": "Your final code should have three movement blocks."
        },
        "grade1_maze_sequence6_authored_hint": {
          "K2.0_sequence_6_a": "There is 1 block that you need to add to move the bird to the pig."
        },
        "grade1_maze_sequence7_authored_hint": {
          "grade1_maze_sequence7a": "If you're stuck, try adding one block at a time until you solve the puzzle."
        },
        "grade1_maze_sequence8_authored_hint": {
          "grade1_maze_sequence8_a": "Stuck? Try tracing the bird's path with your finger.",
          "grade1_maze_sequence8_b": "The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )"
        },
        "grade1_maze_sequence9_authored_hint": {
          "grade1_maze_sequence9_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "grade1_maze_sequenceA_authored_hint": {
          "grade1_maze_sequence10_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "grade1_maze_sequenceB_authored_hint": {
          "grade1_maze_sequenceB_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "grade1_maze_sequenceC_authored_hint": {
          "grade1_maze_sequenceC_a": "If you're having trouble, try writing down the steps on a piece of paper first."
        },
        "grade2_CaringForNewPet_0_authored_hint": {
          "grade2_CaringForNewPet_0": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again."
        },
        "grade2_CaringForNewPet_1_authored_hint": {
          "2-3_Maze_1_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block."
        },
        "grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint": {
          "courseC_maze_programming3_a": "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        },
        "grade2_CaringForNewPet_3_authored_hint": {
          "hint1": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
          "hint2": "This path is a zig-zag. You need to move forward 3 times and turn 2 times.",
          "hint3": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
        },
        "grade2_CaringForNewPet_4_authored_hint": {
          "2-3_Maze_6_a": "There are two ways to solve this puzzle!"
        },
        "grade2_CaringForNewPet_5_authored_hint": {
          "grade2_CaringForNewPet_5_a": "If you can't quite see what you need to do, try saying the steps that your bird will take out loud one-by-one and see if they match the blocks in the workspace."
        },
        "grade2_CaringForNewPet_6_authored_hint": {
          "grade2_CaringForNewPet_6_a": "You don't have to code the whole solution at once!  Try running the code as you go to make sure it works at each step."
        },
        "grade2_CaringForNewPet_7D_authored_hint": {
          "grade2_CaringForNewPet_7D_a": "Don't forget to use the \"Step\" button to go through block by block and look for errors."
        },
        "grade2_MakeDogTag_1_authored_hint": {
          "2-3_Artist_1_new_a": "If you use the block to have me `move forward by 100 pixels`, I will draw a line automatically.",
          "2-3_Artist_1_new_b": "Having trouble turning the corner? Use the `turn right 90 degrees` block."
        },
        "grade2_MakeDogTag_2_authored_hint": {
          "2-3_Artist_2_new_a": "To create this window, just draw a square with 100 pixel sides."
        },
        "grade2_MakeDogTag_3_authored_hint": {
          "2-3_Artist_4_a": "To finish the rocket, just draw the triangle on top!"
        },
        "grade2_MakeDogTag_5_authored_hint": {
          "grade2_MakeDogTag_5a": "The artist is already facing the correct way to draw his first line.",
          "grade2_MakeDogTag_5b": "This diamond is really just a square that's standing on its corner.",
          "grade2_MakeDogTag_5c": "Since this diamond is also a square, be sure to turn 90 degrees at the corners."
        },
        "grade2_MakeDogTag_6_authored_hint": {
          "grade2_MakeDogTag_6a": "Every angle is either 45 or 90 degrees.",
          "grade2_MakeDogTag_6b": "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
        },
        "grade2_MakeDogTag_7_authored_hint": {
          "2-3_Artist_11_a": "The exterior angles on this triangle are 120 degrees each."
        },
        "grade2_MakeDogTag_9_authored_hint": {
          "2-3_Artist_Loops_New_11_a": "Remember that the code from the last puzzle was:\n\n![](https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png)",
          "2-3_Artist_Loops_New_11_b": "Your new turn should go at the **end** of the code inside the loop."
        },
        "grade2_PuppyLoops_10_authored_hint": {
          "2-3_Artist_Debugging_8_a": "How many times did my shape repeat?\n\nHow many times *should* the shape repeat?\n\nWhere can you change that in the program?"
        },
        "grade2_PuppyLoops_3_authored_hint": {
          "hint1": "This puzzle is very similar to the last one.",
          "hint2": "Use a `repeat 5 times` block to create the loop.",
          "hint3": "Place a `move forward` block inside the `repeat block`."
        },
        "grade2_PuppyLoops_5_authored_hint": {
          "hint1": "The best solution uses two `move forward` commands and one loop."
        },
        "grade2_PuppyLoops_6_authored_hint": {
          "2-3_Maze_16_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "2-3_Maze_16_b": "To put lots of blocks inside a `repeat` loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  \n\nConnect it all back to the `when run` block and you're good to go!"
        },
        "grade2_PuppyLoops_7_authored_hint": {
          "2-3_Maze_Loops_17_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "2-3_Maze_Loops_17_b": "Did the starting code get deleted?  Click `start over` to get it back!"
        },
        "grade2_PuppyLoops_8_authored_hint": {
          "2-3_Artist_Debugging_2_a": "Hint: Each whisker is 75 pixels long."
        },
        "grade2_PuppyLoops_9_authored_hint": {
          "2-3_Artist_Debugging_7_a": "What happens if you have the artist move or jump backward after he draws the first line?"
        },
        "grade2_collector_2_authored_hint": {
          "hint1": "You can use four `move forward` blocks or use the `repeat 4 times` block to make your program shorter."
        },
        "grade2_maze_intro4_authored_hint": {
          "hint_1": "Connect a \"move forward\" block to the bottom of the program."
        },
        "grade2_playlab_project_6_authored_hint": {
          "idea1": "*Need an idea?*\n\n**Who's there?** Make characters appear with random images, so no one knows who's showing up next.\n\n![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)",
          "idea2": "*Need an idea?*\n\n**Going on an Adventure** - Change the background, then have the characters talk about where they are now.\n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)",
          "idea3": "*Need an idea?*\n\n**Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen."
        },
        "grade2_puppy_loops2_authored_hint": {
          "hint1": "You can solve this puzzle with just three blocks, including `when run`.",
          "hint2": "Try putting the `move forward` block inside of a `repeat` block to create a loop.",
          "hint3": "You need to repeat the `move forward` command 5 times to solve this puzzle."
        },
        "grade2_puppy_loops3_authored_hint": {
          "hint1": "This puzzle is very similar to the last one.",
          "hint2": "Use a `repeat 5 times` block to create the loop.",
          "hint3": "Place a `move forward` block inside the `repeat block`."
        },
        "grade2_puppy_loops4_authored_hint": {
          "hint1": "Not all command blocks should be repeated.",
          "hint2": "Use two `repeat` blocks set to different numbers.",
          "hint3": "`Turn right` once between the two loops."
        },
        "grade2_puppy_loops5_authored_hint": {
          "hint1": "The best solution uses two `move forward` commands and one loop."
        },
        "grade2_puppy_loops6_authored_hint": {
          "2-3_Maze_16_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "2-3_Maze_16_b": "To put lots of blocks inside a `repeat` loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  \n\nConnect it all back to the `when run` block and you're good to go!"
        },
        "grade2_puppy_loops7_authored_hint": {
          "2-3_Maze_Loops_17_a": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in."
        },
        "grade3_ConditionalsElse_4_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "grade3_ConditionalsElse_5_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "grade3_ConditionalsElse_TeacherIDo_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "grade3_Conditionals_10 BAD_authored_hint": {
          "4-5_Bee_Nested_Loops_Rows_a": "Try treating this puzzle like a long rectangle where the bee needs to move forward, then turn left several times to complete the path."
        },
        "grade3_Conditionals_11_authored_hint": {
          "2-3_Bee_Conditionals_14_a": "Having a hard time figuring out how to get the blocks down?  Try treating the red flower exactly the same as a purple flower!",
          "2-3_Bee_Conditionals_14_b": "If the red flower were purple, could you figure out how to use an extra `repeat` loop to cut down on code?"
        },
        "grade3_Conditionals_12_authored_hint": {
          "2-3_Bee_Conditionals_15_a": "Remember: Purple flowers only have either 0 or 1 nectar and they can change each time you run the program."
        },
        "grade3_Conditionals_2_authored_hint": {
          "2-3_Bee_Conditionals_3_a": "The code will be shortest if you use a loop each time you move forward, another loop to gather nectar, and another one to make honey."
        },
        "grade3_Conditionals_4_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "Remember: Purple flowers change between 0 and 1 nectar when you run your program!"
        },
        "grade3_Conditionals_TeacherIDo_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "Remember: Purple flowers change between 0 and 1 nectar when you run your program!"
        },
        "grade3_Debugging_1_authored_hint": {
          "2-3_Bee_Debugging_1_a": "Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "grade3_Debugging_10_authored_hint": {
          "grade3_Debugging_10_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
          "grade3_Debugging_10_b": "Once you have the first loop the way you want it, what is left over in your code?",
          "grade3_Debugging_10_c": "Try wrapping the leftover loop around the rest of your completed code.  Does is work now?\n\nIf not, what is still going wrong?"
        },
        "grade3_Debugging_11_authored_hint": {
          "grade3_Debugging_11_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
          "grade3_Debugging_11_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?"
        },
        "grade3_Debugging_2_authored_hint": {
          "grade3_Debugging_2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "grade3_Debugging_2_b": "Do you see any patterns that could be made more simple using a `repeat` loop?"
        },
        "grade3_Debugging_3_authored_hint": {
          "grade3_Debugging_3_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
          "grade3_Debugging_3_b": "Do you see a pattern?  Try using nested loops to solve this puzzle."
        },
        "grade3_Debugging_4_authored_hint": {
          "grade3_Debugging_4_a": "Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?",
          "grade3_Debugging_4_b": "Try simplifying the code using nested loops."
        },
        "grade3_Debugging_8_authored_hint": {
          "grade3_Debugging_8_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
          "grade3_Debugging_8_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        },
        "grade3_Debugging_TeacherIDo_authored_hint": {
          "2-3_Bee_Debugging_4_a": "Is there any place where the bee does something that doesn't make sense? What happens when you change that block?"
        },
        "grade3_Loops_10_authored_hint": {
          "2-3_Bee_Loops_4_a": "You should end up with five blocks inside your loop."
        },
        "grade3_Loops_11_authored_hint": {
          "2-3_Bee_Loops_5_a": "If you can't spot the blocks to put inside `repeat` right away, start by coding out each move and look for a pattern."
        },
        "grade3_Loops_12_authored_hint": {
          "2-3_Bee_Loops_6_a": "If you can't tell what should go into the `repeat` loop, try dragging blocks out one by one and see if you can find a pattern.",
          "2-3_Bee_Loops_6_b": "There should be 6 blocks inside your `repeat` loop when you're done."
        },
        "grade3_Loops_4_authored_hint": {
          "2-3_Bee_Loops_3B_a": "You will need two different `repeat` loops, one after the other."
        },
        "grade3_Loops_5_authored_hint": {
          "2-3_Bee_Loops_7_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_7_b": "If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  "
        },
        "grade3_Loops_6_authored_hint": {
          "2-3_Bee_Loops_4A_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_4A_b": "The last piece of the program can be finished by writing code at the end of your program outside of your loop.",
          "2-3_Bee_Loops_4A_c": "If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a `repeat` loop at the end."
        },
        "grade3_Loops_8_authored_hint": {
          "2-3_Bee_Loops_2_a": "You should end up with four blocks inside your loop."
        },
        "grade3_Loops_9_authored_hint": {
          "2-3_Bee_Loops_3_a": "You should have 6 blocks inside your loop."
        },
        "grade3_RunningFarm_1_authored_hint": {
          "grade3_RunningFarm_1_a": "You will need to look for corn 5 times, using a repeat loop.",
          "grade3_RunningFarm_1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
        },
        "grade3_RunningFarm_10_authored_hint": {
          "grade3_RunningFarm_10_a": "This puzzle uses almost the exact same code as the last level, except you only need to repeat 4 times."
        },
        "grade3_RunningFarm_11a_authored_hint": {
          "grade3_RunningFarm_11a_a": "You shouldn't need the `while path ahead` loop this time."
        },
        "grade3_RunningFarm_2_authored_hint": {
          "grade3_RunningFarm_2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
          "grade3_RunningFarm_2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement."
        },
        "grade3_RunningFarm_3_authored_hint": {
          "grade3_RunningFarm_3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
          "grade3_RunningFarm_3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
        },
        "grade3_RunningFarm_4_authored_hint": {
          "grade3_RunningFarm_4_a": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered."
        },
        "grade3_RunningFarm_5_authored_hint": {
          "grade3_RunningFarm_5_a": "You will need to check for each type of crop that the farmer can pick.  Try using two `if/else` statements and one  `if` block."
        },
        "grade3_RunningFarm_6_authored_hint": {
          "grade3_RunningFarm_6_a": "Use a `while path ahead` loop to move the farmer down each piece of the spiral.",
          "grade3_RunningFarm_6_b": "You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program."
        },
        "grade3_RunningFarm_7_authored_hint": {
          "grade3_RunningFarm_7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)",
          "grade3_RunningFarm_7_b": "Try using `when path ahead` to keep the farmer moving the right number of steps.",
          "grade3_RunningFarm_7_c": "Use nested `if` statements and `while there is` loops to check each space for corn and lettuce, then pick only a single pumpkin at the end. "
        },
        "grade3_bee_Conditionals_new4_authored_hint": {
          "grade3_bee_Conditionals_new4_a": "Don't forget that you can use loops for shorter code!"
        },
        "grade3_bee_conditionals_new1a_authored_hint": {
          "grade3_bee_conditionals_new1a_a": "Be sure to use an `if` statement to check each space to see if it has a flower or nothing."
        },
        "grade3_bee_conditionals_new2a_authored_hint": {
          "grade3_bee_conditionals_new2a_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
          "grade3_bee_conditionals_new2a_b": "Use an `if` statement inside your loop to check each space. "
        },
        "grade3_bee_conditionals_new3a_authored_hint": {
          "grade3_bee_conditionals_new3a_a": "In this puzzle, you know that each square has either a flower or a honeycomb.  That means you can repeat your `if/else` conditional at each square."
        },
        "grade3_bee_conditionals_quantum1_authored_hint": {
          "grade3_bee_conditionals_quantum1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
        },
        "grade3_bee_conditionals_quantum2_authored_hint": {
          "grade3_bee_conditionals_quantum2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement."
        },
        "grade3_bee_conditionals_quantum3_authored_hint": {
          "grade3_bee_conditionals_quantum3": "Make sure to use an `if` statement to check for honeycomb beneath each cloud."
        },
        "grade3_bee_conditionals_quantum4_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        },
        "grade3_bee_conditionals_quantum5_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
          "grade3_bee_conditionals_quantum5_a": "This puzzle is tricky, because you can't check blank squares, nectar *and* honey with a single conditional."
        },
        "grade3_maze_loops1_authored_hint": {
          "grade3_maze_loops1_a": "Try using the \"Step\" button to find errors."
        },
        "grade3_maze_loops2_authored_hint": {
          "grade3_maze_loops2_a": "Try using this path through the maze.\n\n![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)",
          "grade3_maze_loops2_b": "If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.",
          "grade3_maze_loops2_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
        },
        "grade3_maze_loops2a_authored_hint": {
          "grade3_maze_loops2a_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop."
        },
        "grade3_maze_loops3_authored_hint": {
          "2-3_Maze_Loops_19_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
          "2-3_Maze_Loops_19_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
          "2-3_Maze_Loops_19_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
        },
        "grade3_maze_loops4_authored_hint": {
          "2-3_Maze_Loops_20_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used."
        },
        "grade3_maze_loops5_authored_hint": {
          "2-3_Maze_Loops_21_a": "If you are having trouble finding the stair-step pattern, try covering the blocked paths with your finger."
        },
        "grade3_robotFarmer_ConditionalsIntro_5_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_5a": "Try nesting a `while` loop inside of a `repeat` loop."
        },
        "grade3_robotFarmer_ConditionalsIntro_7_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_7_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
          "grade3_robotFarmer_ConditionalsIntro_7_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern."
        },
        "grade3_robotFarmer_ConditionalsIntro_8_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path."
        },
        "grade3_robotFarmer_ConditionalsIntro_9_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_9_a": "You are going to need to use more than one `while` loop.",
          "grade3_robotFarmer_ConditionalsIntro_9_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
          "grade3_robotFarmer_ConditionalsIntro_9_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
        },
        "grade4_arist_nested_loop_polygons1_authored_hint": {
          "4-5_Nested_Loops_7_a": "This design will loop 10 times over 360 degrees.\n\n**360 / 10 = ?**"
        },
        "grade4_arist_nested_loop_polygons2_authored_hint": {
          "4-5_Nested_Loops_8_a": "You will be looping this shape 6 times over 360 degrees.\n\n**360 / 6 = ?**"
        },
        "grade4_arist_nested_loop_triangles3_authored_hint": {
          "4-5_Nested_Loops_6_a": "Don't forget to make a turn after your inner loop.\n\nYou'll be looping 6 triangles over 360 degrees.\n\n**360 / 6 = ?**"
        },
        "grade4_arist_nested_loop_triangles6_authored_hint": {
          "4-5_Nested_Loops_12_a": "**360 / 36 = ?**"
        },
        "grade4_artist_functions1_authored_hint": {
          "2-3_Artist_Functions_1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
          "2-3_Artist_Functions_1_b": "It is okay to draw overlapping lines to make your glasses."
        },
        "grade4_artist_functions2_authored_hint": {
          "2-3_Artist_Functions_2_a": "Your program should:\n- Use function\n- Move forward 100 + 75 pixels\n- Use function"
        },
        "grade4_artist_functions2a_authored_hint": {
          "grade4_artist_functions2a_a": "To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times."
        },
        "grade4_artist_functions3a_authored_hint": {
          "grade4_artist_functions2a_a": "To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times."
        },
        "grade4_artist_functions3b_authored_hint": {
          "grade4_artist_functions2a_a": "To get around using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times."
        },
        "grade4_artist_functionsChallenge0_authored_hint": {
          "grade4_artist_functionsChallenge0_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
          "grade4_artist_functionsChallenge0_b": "After your first line of squares, you need to move the artist down and back before you start your second line of squares.",
          "grade4_artist_functionsChallenge0_c": "You should move the artist back a different number of pixels for even lines than for odd ones."
        },
        "grade4_artist_functions_challenge_authored_hint": {
          "Course_4_SCF_1_a": "Each hexagon has 40 pixel sides.",
          "Course_4_SCF_1_b": "There is a 120 pixel jump between each hexagon in each horizontal line.",
          "Course_4_SCF_1_c": "Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.",
          "Course_4_SCF_1_d": "Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your `shift down/forward` function. ",
          "Course_4_SCF_1_e": "**Solution:**\n\n![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)"
        },
        "grade4_artist_functions_challenge2_authored_hint": {
          "Course_4_SCF_1_a": "Each hexagon has 40 pixel sides.",
          "Course_4_SCF_1_b": "There is a 120 pixel jump between each hexagon in each horizontal line.",
          "Course_4_SCF_1_c": "Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.",
          "Course_4_SCF_1_d": "Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your `shift down/forward` function. ",
          "Course_4_SCF_1_e": "**Solution:**\n\n![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)"
        },
        "grade4_artist_functions_stars0_authored_hint": {
          "grade4_artist_functions_stars0_a": "To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.\n\nIf you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace."
        },
        "grade4_artist_functions_stars1_authored_hint": {
          "grade4_artist_functions_stars1_a": "Try using a function!"
        },
        "grade4_artist_functions_stars2_authored_hint": {
          "grade4_artist_functions_stars2_a": "Don't give up!  Remember what you have been learning.",
          "grade4_artist_functions_stars2_b": "Functions make it easy to call saved code at any time, not just from inside a loop!"
        },
        "grade4_artist_functions_stars3_authored_hint": {
          "hint1": "Don't give up!"
        },
        "grade4_artist_functions_windows0_authored_hint": {
          "grade4_artist_functions_windows0_a": "Focus only on making one window for now.  We'll create a function for it in the next puzzle.",
          "grade4_artist_functions_windows0_b": "Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times."
        },
        "grade4_artist_functions_windows2_authored_hint": {
          "grade4_artist_functions_windows2_a": "Try creating your function first then adding in windows one at a time.",
          "grade4_artist_functions_windows2_b": "You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows."
        },
        "grade4_artist_nestedLoops_challenge2_authored_hint": {
          "Course_4_Artist_11_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
          "Course_4_Artist_11_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. "
        },
        "grade4_artist_nested_loop_polygons1_authored_hint": {
          "4-5_Nested_Loops_7_a": "This design will loop 10 times over 360 degrees.\n\n**360 / 10 = ?**"
        },
        "grade4_artist_nested_loop_polygons2_authored_hint": {
          "4-5_Nested_Loops_8_a": "You will be looping this shape 6 times over 360 degrees.\n\n**360 / 6 = ?**"
        },
        "grade4_artist_nested_loop_triangles3_authored_hint": {
          "4-5_Nested_Loops_6_a": "Don't forget to make a turn after your inner loop.\n\nYou'll be looping 6 triangles over 360 degrees.\n\n**6 x ? = 360**"
        },
        "grade4_artist_nested_loop_triangles6_authored_hint": {
          "4-5_Nested_Loops_12_a": "**360 / 36 = ?**"
        },
        "grade4_bee_conditionals_new1a_authored_hint": {
          "grade4_bee_conditionals_new1a_a": "An `if` block will help you out in this puzzle."
        },
        "grade4_bee_conditionals_new2_authored_hint": {
          "grade4_bee_conditionals_new2_a": "The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side. ",
          "grade4_bee_conditionals_new2_b": "You can check every square for a flower using the `if` block, even if you already know there's not one there."
        },
        "grade4_bee_conditionals_new3b_authored_hint": {
          "grade4_bee_conditionals_new3b_a": "An `if/else` statement could really help you out here."
        },
        "grade4_bee_conditionals_quantum4_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "grade4_bee_conditionals_quantum5_authored_hint": {
          "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
        },
        "grade4_bee_functions1_authored_hint": {
          "grade4_bee_functions1_a": "There is more than one right answer to this puzzle."
        },
        "grade4_bee_functions10_authored_hint": {
          "grade4_bee_functions10_a": "You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower."
        },
        "grade4_bee_functions2_authored_hint": {
          "grade4_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower."
        },
        "grade4_bee_functions3_authored_hint": {
          "grade4_bee_functions3_a": "Your function for this puzzle only needs to collect nectar, it shouldn't have any `move forward` or `turn` blocks in it. "
        },
        "grade4_bee_functions4_authored_hint": {
          "grade4_bee_functions4_a": "Your function will travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program."
        },
        "grade4_bee_functions6_authored_hint": {
          "grade4_bee_functions6_a": "Edit the function so that it solves the puzzle without having to change the main program.",
          "grade4_bee_functions6_b": "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
        },
        "grade4_bee_functions7_authored_hint": {
          "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        },
        "grade4_bee_functions8_authored_hint": {
          "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
          "2-3_Bee_Functions_8_b": "Remember to build your code inside of the green function block.\n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)",
          "2-3_Bee_Functions_8_c": "This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back."
        },
        "grade4_bee_functions9_authored_hint": {
          "grade4_bee_functions9_a": "Your function will only need to collect nectar... but this time, you will need to use a `while` loop instead of a `repeat` loop.",
          "grade4_bee_functions9_b": "Use `while nectar > 0` to make sure you get all of the nectar."
        },
        "grade4_bee_nestedLoops1_authored_hint": {
          "grade4_bee_nestedLoops1_a": "If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see."
        },
        "grade4_bee_nestedLoops2_authored_hint": {
          "grade4_bee_nestedLoops2_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
          "grade4_bee_nestedLoops2_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle."
        },
        "grade4_bee_nestedLoops2a_authored_hint": {
          "grade4_bee_nestedLoops2a_a": "Try using nested `repeat` loops to solve this puzzle."
        },
        "grade4_bee_nestedLoops4_authored_hint": {
          "grade4_bee_nestedLoops4_a": "Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!",
          "grade4_bee_nestedLoops4_b": "You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.\n\nAltogether, you should be using 3 loops."
        },
        "grade4_bee_nestedLoops5_authored_hint": {
          "grade4_bee_nestedLoops5_a": "You will need 4 repeat blocks!"
        },
        "grade4_review_artist1_authored_hint": {
          "2-3_Artist_1_new_a": "If you use the block to have me `move forward by 100 pixels`, I will draw a line automatically.",
          "2-3_Artist_1_new_b": "Having trouble turning the corner? Use the `turn right 90 degrees` block."
        },
        "grade4_review_artist2_authored_hint": {
          "2-3_Artist_6_a": "To make those little angles, you have to turn *farther* each time than you did with the square.   ",
          "2-3_Artist_6_b": "Since I'm already facing to the right, it's easiest to start by moving forward, then make left turns to create the triangle.",
          "2-3_Artist_6_c": "Each side of the triangle is the same length as each side of the square...100 pixels!"
        },
        "grade4_review_bee1_authored_hint": {
          "2-3_Bee_Loops_3B_a": "You will need two different `repeat` loops, one after the other."
        },
        "grade4_review_bee2_authored_hint": {
          "2-3_Bee_Loops_3_a": "You should have 6 blocks inside your loop."
        },
        "grade4_review_bee3_authored_hint": {
          "2-3_Bee_Loops_4_a": "You should end up with five blocks inside your loop."
        },
        "grade5_artist_binary10_authored_hint": {
          "Course_4_Artist_Binary_Free_Play_2b_a": "This code uses two `for loops`. One counts up from 1 to 8, the other counts down from 8 to 1.",
          "Course_4_Artist_Binary_Free_Play_2b_b": "Each `for loop` has three repeats.  The first draws the leftmost set of 1s, the second draws the 0s in the middle and the third draws the 1s on the right.",
          "Course_4_Artist_Binary_Free_Play_2b_c": "In each repeat you need `counter` for 1s and `16-(2 x counter)` for 0s.",
          "Course_4_Artist_Binary_Free_Play_2b_d": "**Solution:**\n![solution](https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png)"
        },
        "grade5_artist_for_loops1_authored_hint": {
          "grade5_artist_for_loops1_a": "If you use this `for` loop, it will run just like a `repeat 3 times` loop.\n\n![](https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png)"
        },
        "grade5_artist_for_loops10_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "The largest polygon has 19 sides.",
          "Course_4_Artist_For_Loops_Challenge_b": "Each polygon is incomplete, with one side fewer than it should have."
        },
        "grade5_artist_for_loops1b_authored_hint": {
          "grade5_artist_for_loops1b_a": "Can you draw something like this:\n\n![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)"
        },
        "grade5_artist_for_loops2_authored_hint": {
          "grade5_artist_for_loops2_a": "Use `counter` for the length of your triangles inside your `repeat` loop.\n\n![](https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png)"
        },
        "grade5_artist_for_loops3_authored_hint": {
          "Course_4_Artist_For_Loops_3_a": "To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.\n\n![](https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png)"
        },
        "grade5_artist_for_loops4_authored_hint": {
          "Course_4_Artist_For_Loops_4_a": "**What is the smallest number you will need?  \nWhat is the largest number?  \nHow big is the increase each time?**\n\nThose are the questions you need to ask to fill in the blanks of the `for` loop."
        },
        "grade5_artist_for_loops5_authored_hint": {
          "grade5_artist_for_loops5_a": "You don't need the traditional repeat loop when making this spiral!"
        },
        "grade5_artist_for_loops7_authored_hint": {
          "grade5_artist_for_loops7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
          "grade5_artist_for_loops7_b": "Notice that this spiral turns right instead of left!"
        },
        "grade5_artist_for_loops8_authored_hint": {
          "Course_4_Artist_For_Loops_11_a": "The turn angle will change with each shape!  \n\nUse the math block to enter 360 divided by the number of sides the shape has to get the angle right. "
        },
        "grade5_artist_for_loops9_authored_hint": {
          "Course_4_Artist_For_Loops_11a_a": "360 divided by the number of sides a shape has is the number of degrees you'll need to turn. ",
          "Course_4_Artist_For_Loops_11a_b": "Each time, you will need to move forward by 10 times the length of the current number of sides. "
        },
        "grade5_artist_for_loopsfreeplay11_authored_hint": {
          "Course_4_Artist_For_Loops_inspire_a": "The foundation of this code is the same as the solution to the previous challenge puzzle...with a couple of changes.",
          "Course_4_Artist_For_Loops_inspire_b": "Try a `for` loop that goes from 3 to 10 with an increment of 1.",
          "Course_4_Artist_For_Loops_inspire_c": "There are two iterations of the same repeat loop inside the `for` loop, but the second repeat turns the opposite direction.",
          "Course_4_Artist_For_Loops_inspire_d": "**Solution:**  ![Solution](https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png) "
        },
        "grade5_artist_for_loopsfreeplay12_authored_hint": {
          "grade5_artist_for_loopsfreeplay12_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
          "grade5_artist_for_loopsfreeplay12_b": "The image in the drawing uses a turn of 61 degrees.",
          "grade5_artist_for_loopsfreeplay12_c": "Want to know how the sample image was done?\n\n![](https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png)"
        },
        "grade5_artist_functionparameters10_authored_hint": {
          "brush_width": "We set the brush width to 1, then the color to blue before we did anything else.",
          "double_loop": "Try putting a `for loop` inside of a `repeat` loop.",
          "specifics": "The `for loop` runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.\n        \nThe `set alpha` block uses division to fade the color as the counter gets higher.",
          "after": "When you're done with each \"petal\", be sure to `move forward` 20 pixels before you make a 60 degree rotation.",
          "solution": "**Solution**\n\n![](https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png)"
        },
        "grade5_artist_functionparameters8_authored_hint": {
          "NEW_Course_4_Artist_Params_13_a": "The length of sides for each shape is 7 times the number of sides it has."
        },
        "grade5_artist_functionparameters9_authored_hint": {
          "NEW_Course_4_Artist_Params_14_a": "It's okay to run the program a few times to figure out how the function works with different parameters.",
          "grade5_artist_functionparameters9_b": "You don't need to add any `move` or `turn` blocks to finish this code."
        },
        "grade5_artist_functionparameters9a_authored_hint": {
          "grade5_artist_functionparameters9a_a": "Did the code get so scrambled up that it's no longer recognizable?  Try clicking the \"Start over\" button in the upper righthand corner. ",
          "grade5_artist_functionparameters9a_b": "Your new `min` variable should go in the first slot in your `for` loop, inside the function."
        },
        "grade5_artist_functionparameters9b_authored_hint": {
          "grade5_artist_functionparameters9b_a": "If your function is correct, you shouldn't need to change it for this puzzle.",
          "grade5_artist_functionparameters9b_b": "The only thing you should need to do between function calls is change the color of the line."
        },
        "grade5_artist_functionparameters_6_authored_hint": {
          "grade5_artist_functionparameters_6_a": "Use a `for` loop to get the code as smooth as you can.",
          "grade5_artist_functionparameters_6_b": "Remember to **add** a parameter.  Don't remove the one that is already there!"
        },
        "grade5_artist_parameters_squares1a_authored_hint": {
          "grade5_artist_parameters_squares1a_a": "Remember, you need to turn 90 degrees to draw a square.",
          "grade5_artist_parameters_squares1a_b": "You only need to repeat as many times as the number of sides in a square."
        },
        "grade5_artist_parameters_squares2_authored_hint": {
          "grade5_artist_parameters_squares2_a": "This gets easier if you put it all in a `for` loop.",
          "grade5_artist_parameters_squares2_b": "Be sure to turn 90 degrees between each square!\n\n![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)"
        },
        "grade5_artist_parameters_squares2a_authored_hint": {
          "grade5_artist_parameters_squares2a_a": "You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!",
          "grade5_artist_parameters_squares2a_b": "When calling your function, use a `for loop` for the best possible code!"
        },
        "grade5_artist_parameters_stars1_authored_hint": {
          "hint1": "Don't give up!"
        },
        "grade5_artist_variables_freeplay10_authored_hint": {
          "Course_4_Artist_Vars_8_a": "If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher."
        },
        "grade5_artist_variables_freeplay15_authored_hint": {
          "Course_4_Artist_Inspire_a": "After you complete one square, try jumping forward half of it's length before turning and making another.",
          "Course_4_Artist_Inspire_b": "Each square and jump is repeated four times (using a left turn inbetween) to make a full pinwheel-like unit.",
          "Course_4_Artist_Inspire_c": "Each pinwheel is also repeated four times, with a right turn of **360/sides**.",
          "Course_4_Artist_Inspire_d": "**Solution:**\n![Blocks for solution](https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png)"
        },
        "grade5_artist_variables_octagons13_authored_hint": {
          "Course_4_Artist_Vars_13_a": "You need two repeat loops (one inside the other) both repeating `sides` times.",
          "Course_4_Artist_Vars_13_b": "The inner repeat loop draws an octagon (turning to the left).   \n\nAfterwards, you need to move forward and turn right only in the outer loop.",
          "Course_4_Artist_Vars_13_c": "To adjust the shape to stay the same size when the number of sides change, use the math block to divide the length in pixels by the number of sides."
        },
        "grade5_artist_variables_square7_authored_hint": {
          "Course_4_Artist_Vars_6_a": "To draw a regular polygon, turn **360/sides** each time."
        },
        "grade5_artist_variables_triangles1_authored_hint": {
          "grade5_artist_variables_triangles1_a": "To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.",
          "grade5_artist_variables_triangles1_b": "Use the `repeat` loop to make your code shorter.",
          "grade5_artist_variables_triangles1_c": "Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees."
        },
        "grade5_artist_variables_triangles1_2018_authored_hint": {
          "grade5_artist_variables_triangles1_a": "To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.",
          "grade5_artist_variables_triangles1_b": "Use the `repeat` loop to make your code shorter.",
          "grade5_artist_variables_triangles1_c": "Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees."
        },
        "grade5_bee_for_loops10_authored_hint": {
          "grade5_bee_for_loops10_a": "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
        },
        "grade5_bee_for_loops11_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_10a_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
          "NEW_Course_4_Bee_For_Loops_10a_b": "You'll need to have 2 repeats, one will use a math block."
        },
        "grade5_bee_for_loops3_authored_hint": {
          "grade5_bee_for_loops3_a": "Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. ",
          "grade5_bee_for_loops3_b": "Your `for` loop will need to count from 1 to 5 with an increment of 1."
        },
        "grade5_bee_for_loops4_authored_hint": {
          "grade5_bee_for_loops4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
          "grade5_bee_for_loops4_b": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
        },
        "grade5_bee_for_loops5_authored_hint": {
          "grade5_bee_for_loops5_a": "This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops."
        },
        "grade5_bee_for_loops6_authored_hint": {
          "grade5_bee_for_loops6_a": "Don't forget to use a `counter` variable inside your `repeat` loop."
        },
        "grade5_bee_for_loops7_authored_hint": {
          "grade5_bee_for_loops7_a": "Your `for` loop will need to count from 1 to 7 by 2."
        },
        "grade5_bee_for_loops8_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        },
        "grade5_bee_for_loops9_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_7_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?",
          "NEW_Course_4_Bee_For_Loops_7_b": "Remember: If your loop is counting up, the increment is added to your `counter` variable each time through."
        },
        "grade5_bee_parameters_new1_authored_hint": {
          "grade5_bee_parameters_new1_a": "Use `if` statements to make sure you're only getting nectar from a flower."
        },
        "grade5_bee_parameters_new2_authored_hint": {
          "grade5_bee_parameters_new2_a": "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)",
          "grade5_bee_parameters_new2_b": "Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built."
        },
        "grade5_bee_parameters_new3_authored_hint": {
          "grade5_bee_parameters_new3_a": "Your function will run no matter which direction you're facing."
        },
        "grade5_bee_parameters_new4_authored_hint": {
          "grade5_bee_parameters_new4_a": "You will need to add a parameter and use the resulting variable in your loop."
        },
        "grade5_bee_parameters_new5_authored_hint": {
          "grade5_bee_parameters_new5_a": "Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call."
        },
        "grade5_bee_parameters_new6_authored_hint": {
          "grade5_bee_parameters_new6_a": "Which block automatically increments a variable that you could use as a parameter?"
        },
        "grade5_bee_parameters_new7_authored_hint": {
          "grade5_bee_parameters_new7_a": "You don't need a second parameter for this function, only a second `if` statement."
        },
        "grade5_bee_parameters_new8a_authored_hint": {
          "grade5_bee_parameters_new8a_a": "This spiral can be simplified with a `for` loop."
        },
        "grade5_bee_parameters_new9a_authored_hint": {
          "grade5_bee_parameters_new9a_a": "A `for` loop can help you with this stair step pattern, too!",
          "grade5_bee_parameters_new9a_b": "For each stair, you'll need to call the function once, turn right, call the function again, then turn left."
        },
        "grade5_playlab_variables2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "Make sure to set the number for `dog_speed` to something larger than `cat_speed`."
        },
        "gradeK_sequence_4_authored_hint": {
          "gradeK_sequence_4_a": "Try writing down the steps on paper to find a solution!"
        },
        "gradek_adventurer_loops3_authored_hint": {
          "gradek_adventurer_loops3_a": "To change how far the adventurer goes, change the number of times that the loop runs.",
          "gradek_adventurer_loops3_b": "Don't forget that the adventurer needs to walk down and collect gold after she finishes the `repeat` loop!"
        },
        "gradek_adventurer_loops4_authored_hint": {
          "gradek_adventurer_loops4_a": "If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern."
        },
        "gradek_adventurer_loops4a_authored_hint": {
          "gradek_adventurer_loops4a_a": "Can't figure out what's wrong? Try running the code to see what happens."
        },
        "gradek_adventurer_loops5_authored_hint": {
          "gradek_adventurer_loops5_a": "If you can't figure out what comes next, try running the code to see where Laurel ends up."
        },
        "gradek_adventurer_loops6_authored_hint": {
          "gradek_adventurer_loops6_a": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and look for a pattern."
        },
        "gradek_adventurer_loops7_challenge_authored_hint": {
          "gradek_adventurer_loops7_challenge_a": "Does the code feel really long?  Try putting two of your `repeat` loops inside of another loop to make it much shorter!"
        },
        "gradek_adventurer_loops8_authored_hint": {
          "gradek_adventurer_loops8_a": "If you can't figure out where to put the loops, try writing the code out step-by-step and look for a pattern."
        },
        "gradek_adventurer_loops9_authored_hint": {
          "gradek_adventurer_loops9_a": "If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns."
        },
        "gradek_artist_loops1_authored_hint": {
          "gradek_artist_loops1_a": "Can't figure out how to draw a line?  Start attaching blocks to the `when run` block to see what happens."
        },
        "gradek_artist_loops2_authored_hint": {
          "gradek_artist_loops2_a": "Is something not quite right?  Use the \"Step\" button to see where things go wrong."
        },
        "gradek_artist_loops3_authored_hint": {
          "artistLoopsK2_a": "If you want the loop to repeat more than 4 times, you can change the number at the top of the block."
        },
        "gradek_artist_loops4_authored_hint": {
          "artistLoopsK3_a": "Try using what you've learned about repeat blocks to complete this puzzle!"
        },
        "gradek_artist_loops5_authored_hint": {
          "gradek_artist_loops5_a": "Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws."
        },
        "gradek_artist_loops6_authored_hint": {
          "gradek_artist_loops6_a": "Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern."
        },
        "gradek_artist_loops7_authored_hint": {
          "gradek_artist_loops7_a": "Try running the code to see what has been written for you.",
          "gradek_artist_loops7_b": "How would you loop the code that has been given to you?",
          "gradek_artist_loops7_c": "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
        },
        "gradek_artist_loops8_authored_hint": {
          "gradek_artist_loops8_a": "You don't have to delete everything!  Some of the code is good. Use it to build the rest of the stairs. "
        },
        "gradek_artist_loops9_authored_hint": {
          "artistLoopsKA_a": "Use the jump block to move forward without drawing a line."
        },
        "gradek_artist_loopsA_authored_hint": {
          "artistLoopsKB_a": "There should be 2 blocks inside of your loop to solve this puzzle."
        },
        "gradek_playlab_events1a_authored_hint": {
          "gradek_playlab_events1a_a": "Attach the `move up` block to the `when click` event so that the cat moves up when the \"up\" button is pressed."
        },
        "gradek_playlab_events1c_authored_hint": {
          "gradek_playlab_events1c_a": "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
        },
        "gradek_playlab_events2c_authored_hint": {
          "gradek_playlab_events2c_a": "drag this block out ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png) and connect it to ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png)"
        },
        "gradek_playlab_events3c_authored_hint": {
          "gradek_playlab_events3c_a": "Here is the event block that you will need to get Jorge to move right:\n\n![](https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png)",
          "gradek_playlab_events3c_b": "Here is the block you should connect to the `when right` event:\n\n![](https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png)"
        },
        "gradek_playlab_events4c_authored_hint": {
          "gradek_playlab_events4c_a": "Here are the event blocks that you will need to use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
        },
        "gradek_playlab_events5c_authored_hint": {
          "gradek_playlab_events5c_a": "Here is the event block that you would use to have Jorge do something when clicked:\n\n![](https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png)",
          "gradek_playlab_events5c_b": "Here is the block you would use to change the background:\n\n![](https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png)",
          "gradek_playlab_events5c_c": "Here is the block you would use to play a random sound:\n\n![](https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png)"
        },
        "harvester_Kahoot_authored_hint": {
          "courseE_farmer_functions1a_a": "Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?",
          "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
        },
        "harvey_tictactoe_authored_hint": {
          "harvey_tictactoe": "You can use `jump` blocks to move to other spaces."
        },
        "iceage_click_hello_authored_hint": {
          "iceage_click_hello_a": "Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle."
        },
        "iceage_click_hello_2018_authored_hint": {
          "iceage_click_hello_a": "Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle."
        },
        "iceage_free_play_authored_hint": {
          "iceage_free_play_a": "Can you make Sid and Manny have an Ice Crystal fight?  ",
          "iceage_free_play_b": "Make Granny chase Diego.  End the game as a win if she catches him.",
          "iceage_free_play_c": "Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times."
        },
        "iceage_free_play_2018_authored_hint": {
          "iceage_free_play_a": "Can you make Sid and Manny have an Ice Crystal fight?  ",
          "iceage_free_play_b": "Make Granny chase Diego.  End the game as a win if she catches him.",
          "iceage_free_play_c": "Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times."
        },
        "iceage_free_playcourseF_IceAge_11_authored_hint": {
          "iceage_free_play_a": "Can you make Sid and Manny have an Ice Crystal fight?  ",
          "iceage_free_play_b": "Make Granny chase Diego.  End the game as a win if she catches him.",
          "iceage_free_play_c": "Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times."
        },
        "iceage_hello1_authored_hint": {
          "iceage_hello1_a": "You only need to add one block to solve this puzzle.  Drag the `say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type \"Hello!\" inside."
        },
        "iceage_hello1_2018_authored_hint": {
          "iceage_hello1_a": "You only need to add one block to solve this puzzle.  Drag the `say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type \"Hello!\" inside."
        },
        "iceage_hello2_authored_hint": {
          "iceage_hello2_a": "To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. "
        },
        "iceage_hello2_2018_authored_hint": {
          "iceage_hello2_a": "To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. "
        },
        "iceage_move_events_authored_hint": {
          "iceage_move_events_a": "Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. "
        },
        "iceage_move_events_2018_authored_hint": {
          "iceage_move_events_a": "Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. "
        },
        "iceage_move_to_actor_authored_hint": {
          "iceage_move_to_actor_a": "For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.",
          "iceage_move_to_actor_b": "Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge."
        },
        "iceage_move_to_actor_2018_authored_hint": {
          "iceage_move_to_actor_a": "For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.",
          "iceage_move_to_actor_b": "Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge."
        },
        "iceage_move_to_flag_authored_hint": {
          "iceage_hello3_a": "Use the `move actor 1 right by 200 pixels` block to solve this puzzle."
        },
        "iceage_move_to_flag_2018_authored_hint": {
          "iceage_hello3_a": "Use the `move actor 1 right by 200 pixels` block to solve this puzzle."
        },
        "iceage_repeat_authored_hint": {
          "iceage_repeat_a": "Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle."
        },
        "iceage_repeat_2018_authored_hint": {
          "iceage_repeat_a": "Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle."
        },
        "iceage_sound_and_points_authored_hint": {
          "iceage_sound_and_points_a": "You will need to add two blocks beneath the `when actor 1 touches actor 2` event."
        },
        "iceage_sound_and_points_2018_authored_hint": {
          "iceage_sound_and_points_a": "You will need to add two blocks beneath the `when actor 1 touches actor 2` event."
        },
        "iceage_throw_hearts_authored_hint": {
          "iceage_throw_hearts_a": "When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!",
          "iceage_throw_hearts_b": "To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event."
        },
        "iceage_throw_hearts_2018_authored_hint": {
          "iceage_throw_hearts_a": "When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!",
          "iceage_throw_hearts_b": "To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event."
        },
        "iceage_warn_ice_age_authored_hint": {
          "iceage_warn_ice_age_a": "You should only have to add two blocks to get this puzzle where it needs to be. ",
          "iceage_warn_ice_age_b": "Add both new blocks beneath the `when run` event to have them happen immediately after the program starts."
        },
        "iceage_warn_ice_age_2018_authored_hint": {
          "iceage_warn_ice_age_a": "You should only have to add two blocks to get this puzzle where it needs to be. ",
          "iceage_warn_ice_age_b": "Add both new blocks beneath the `when run` event to have them happen immediately after the program starts."
        },
        "level 'grade3_Loops_10_authored_hint": {
          "2-3_Bee_Loops_4_a": "You should end up with five blocks inside your loop."
        },
        "level 'grade3_Loops_11_authored_hint": {
          "2-3_Bee_Loops_5_a": "If you can't spot the blocks to put inside `repeat` right away, start by coding out each move and look for a pattern."
        },
        "level 'grade3_Loops_12_authored_hint": {
          "2-3_Bee_Loops_6_a": "If you can't tell what should go into the `repeat` loop, try dragging blocks out one by one and see if you can find a pattern.",
          "2-3_Bee_Loops_6_b": "There should be 6 blocks inside your `repeat` loop when you're done."
        },
        "level 'grade3_Loops_4_authored_hint": {
          "2-3_Bee_Loops_3B_a": "You will need two different `repeat` loops, one after the other."
        },
        "level 'grade3_Loops_5_authored_hint": {
          "2-3_Bee_Loops_7_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_7_b": "If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  "
        },
        "level 'grade3_Loops_6_authored_hint": {
          "2-3_Bee_Loops_4A_a": "The first action will be a turn, rather than a move.",
          "2-3_Bee_Loops_4A_b": "The last piece of the program can be finished by writing code at the end of your program outside of your loop.",
          "2-3_Bee_Loops_4A_c": "If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a `repeat` loop at the end."
        },
        "level 'grade3_Loops_8_authored_hint": {
          "2-3_Bee_Loops_2_a": "You should end up with four blocks inside your loop."
        },
        "level 'grade3_Loops_9_authored_hint": {
          "2-3_Bee_Loops_3_a": "You should have 6 blocks inside your loop."
        },
        "playLabDebugVideo1_authored_hint": {
          "courseA_playLab_events2_a": "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
        },
        "sample3_authored_hint": {
          "sample3_a": "Try writing the code once and looping it seven times:\n\n![](https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif)"
        },
        "sample5_authored_hint": {
          "sample5_a": "Did you know that you can put as many blocks inside of a repeat loop as you want to?",
          "sample5_b": "The bee is looping these actions over and over again:\n- move forward\n- make honey\n- turn left\n- move forward\n- turn right"
        },
        "sample6_authored_hint": {
          "sample6_a": "Did you know that you can use more than one repeat loop in a puzzle?",
          "sample6_b": "Sometimes repeat loops have lots of blocks inside, and sometimes they might only have one!"
        }
      },
      "instructions": {
        "2-3 Artist 1 new_instruction": "Hi, I'm an artist. You can write code to make me draw almost anything. Use a few blocks to make me draw over the grey lines in the picture. (Each line is 100 pixels long)",
        "2-3 Artist 11_instruction": "Give the stop sign a border by making an octagon with 100 pixels sides. \n\n",
        "2-3 Artist 12_instruction": "Create a circle to finish the eyeball!\n\nIf the artist turns 1 degree with each loop, how many times do you need to repeat the code to draw a circle? 180? 360? 500?",
        "2-3 Artist 2 new_instruction": "This house has a half-finished wall. Each side is 100, but the half-finished wall is only 50. Complete the wall. ",
        "2-3 Artist 2_instruction": "This house has a half-finished wall. Each side is 100, but the half-finished wall is only 50. Complete the wall. ",
        "2-3 Artist 3.4_instruction": "The jump block moves the artist without drawing. Draw the dashed line using both the `jump forward` and `move forward` blocks. Each line is 50 pixels long.",
        "2-3 Artist 3_instruction": "This hat is 100 pixels high. Draw a hat that is 70 pixels less.",
        "2-3 Artist 3new_instruction": "The red hat is 100 pixels tall. Finish drawing a black hat that is 70 pixels shorter. \n(Note: The width of each hat is 50 pixels.)",
        "2-3 Artist 4_instruction": "Help me complete the house for this cat.",
        "2-3 Artist 5_instruction": "Replace this code with a \"repeat times\" block to draw the same house using only 3 blocks.",
        "2-3 Artist 6_instruction": "This house needs a roof! Draw the triangle.  Hint: all three sides are the same length.",
        "2-3 Artist 7_instruction": "Finish drawing the last set of windows on the school so that everyone in class can see outside. The sides of each square window pane are 25 pixels long. ",
        "2-3 Artist 8_instruction": "Complete the rooms for each of the animals by splitting the rectangle into 2 equal-sized squares. The rectangle is 200 pixels wide and 100 pixels tall. There are many different ways to solve this puzzle, so have some fun!",
        "2-3 Artist 9 NEW_instruction": "Finish this kite",
        "2-3 Artist 9 REPLACEMENT_instruction": "Finish drawing these stairs!",
        "2-3 Artist 9_instruction": "Finish this kite",
        "2-3 Artist Assessment 1_instruction": "Assessment: Finish drawing the last tooth. It is 25 pixels wide and 25 pixels tall.",
        "2-3 Artist Debugging 1_instruction": "This hat should only be 50 pixels wide.  Can you fix it?",
        "2-3 Artist Debugging 10_instruction": "The direction pad on my game controller is too narrow. \n\nCan you make it wider by 10 pixels?\n\nTry running the code first to see what's wrong.",
        "2-3 Artist Debugging 11_instruction": "My snowflake is falling apart!\n\nCan you figure out what's going wrong?",
        "2-3 Artist Debugging 12_instruction": "I'm supposed to add an ocean wave to this scene.  Can you help me?",
        "2-3 Artist Debugging 2_instruction": "This code for the cat's whiskers is wrong. \n\nFix this code to draw whiskers that are all the same length.",
        "2-3 Artist Debugging 3_instruction": "My boat has a hole! \n\nWhat do you need to fix to make the ends meet?",
        "2-3 Artist Debugging 4_instruction": "What is the image that we're trying to draw? Finish connecting the dots using the proper lines and angles.",
        "2-3 Artist Debugging 5_instruction": "The code that we have for the leg and foot is wrong. \n\nCan you fix it?",
        "2-3 Artist Debugging 6_instruction": "Looks like I'm sitting on a chair that’s missing a leg!\n\nEdit the code to draw the last leg.",
        "2-3 Artist Debugging 7_instruction": "Looks like the C in code is drawn backwards!\n\nCan you make it look like a C again?",
        "2-3 Artist Debugging 8_instruction": "My teacher says that I should finish what I start!\n\nHelp me finish my pinwheel. Can you figure out what's wrong?",
        "2-3 Artist Debugging 9_instruction": "Something is off!\n\nThe code for this stem is wrong. Can you figure out how to get the artist to trace the stem the right way?",
        "2-3 Artist Debugging Assessment 1_instruction": "Assessment: Why does this square end up being 75 pixels too small on each side?  \n\nWhere does the code go wrong?",
        "2-3 Artist Free Play_instruction": "Free-play! Draw anything you'd like.",
        "2-3 Artist Functions 1 a_instruction": "\"Me zombie artist. Me love drawing!\"  \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.",
        "2-3 Artist Functions 1_instruction": "\"Me zombie artist. Me love drawing!\"  \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.",
        "2-3 Artist Functions 10_instruction": "Freeplay: Here are two functions, one to draw a big gear and one to draw a small gear. Use them to draw the inside of a machine!",
        "2-3 Artist Functions 11 a_instruction": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares! Can you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
        "2-3 Artist Functions 11.5 a_instruction": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program 6 times, turning 60 degrees each time you loop?",
        "2-3 Artist Functions 11.5_instruction": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program 6 times, turning 60 degrees each time you loop?",
        "2-3 Artist Functions 11_instruction": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares! Can you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
        "2-3 Artist Functions 12 Mike_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 12 a_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 12_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 13_instruction": "We've provided you with four functions. Use them any way you like inside of one or more loops to make pictures that you can share with your friends. Press run to see an example.",
        "2-3 Artist Functions 2 a_instruction": "Use the small green `draw a square` block to call this new function and create the glasses. ",
        "2-3 Artist Functions 2_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
        "2-3 Artist Functions 3 a_instruction": "Edit the \"draw a square\" function to draw glasses with frames that are 115px on each side. \n\nThe squares are now 45 pixels apart.",
        "2-3 Artist Functions 3_instruction": "Edit the function to draw a square with a side length of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart.",
        "2-3 Artist Functions 4 a_instruction": "Now, put the function inside of a loop and add an extra turn to draw these three squares.",
        "2-3 Artist Functions 4_instruction": "Now, put the function inside of a loop to draw these three squares.",
        "2-3 Artist Functions 7_instruction": "Use the \"draw a house\" function to draw two houses using two different parameters. (Hint: the first house is 100 pixels).",
        "2-3 Artist Functions 9_instruction": "Freeplay: Here is a snowflake function. Experiment with it to create a winter scene! This is a free play level, so there is no puzzle to solve. Have fun!",
        "2-3 Artist Loops 1_instruction": "Can you make a hexagon with sides that are 100 pixels long to finish the cell? Remember, that means that you will only need to turn 60 degrees!",
        "2-3 Artist Loops 10_instruction": "What happens to the design when we make our final step forward half as long?",
        "2-3 Artist Loops 11_instruction": "Now let's put *another* loop around our whole creation!  Don't forget to add an angle at the end of the outer loop.",
        "2-3 Artist Loops 2_instruction": "Now use a repeat block to make the cell a shell.",
        "2-3 Artist Loops 4_instruction": "Want to see what happens when we repeat that shape over and over again using a loop?",
        "2-3 Artist Loops 5_instruction": "Now let's make a small change to the loop and see how different our picture becomes.",
        "2-3 Artist Loops 6_instruction": "Add one more move and another turn inside the loop and see how your design changes.",
        "2-3 Artist Loops 7_instruction": "We can use loops to make all kinds of polygons.  Can you create a rhombus inside this hexagon?",
        "2-3 Artist Loops 8_instruction": "Let's put both elements inside a loop.",
        "2-3 Artist Loops 9_instruction": "We're going to loop the same elements, but now we're going to add some distance between them.\nUse the same code as before, but add a step forward at the end of the outer loop.",
        "2-3 Artist Loops New 1_instruction": "Let's draw this robot's head! Can you make a square with sides that are 100 pixels?",
        "2-3 Artist Loops New 10_instruction": "Now let's connect a bunch of V's together in a loop.",
        "2-3 Artist Loops New 11_instruction": "Rebuild the code from the last puzzle, but this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24 times instead of 8.",
        "2-3 Artist Loops New 12_instruction": "Draw a diamond with sides of 100 pixels. ",
        "2-3 Artist Loops New 13_instruction": "We are going to start you with some code (in grey) to make one diamond. \n\nLoop the grey code to create a fun pattern!",
        "2-3 Artist Loops New 14_instruction": "Play around with the code for the diamond and see what other patterns you can make. Try changing how many degrees you turn and how many times you loop.",
        "2-3 Artist Loops New 15_instruction": "Now, draw anything you like!",
        "2-3 Artist Loops New 2_instruction": "Here is the same puzzle that we just solved, but this time, we can only use one `move forward` block and one `turn` block this time.\n\nCan you use a `repeat` to solve this puzzle?",
        "2-3 Artist Loops New 9_instruction": "Draw a simple V (where both sides are 50 pixels) to complete the arrow.",
        "2-3 Artist Match Hex Pic_instruction": "Match:  Help finish the Hexagon.",
        "2-3 Artist Match Rho Pic_instruction": "Match:  Finish the missing code.",
        "2-3 Artist Match Sq Pic_instruction": "Match: Complete the missing code",
        "2-3 Artist Match Tri pic_instruction": "Matching:  Fill in the missing code.",
        "2-3 Artist Nested Loops 1_instruction": "Put a `repeat` block around this whole stack of code to draw the pattern.",
        "2-3 Artist Nested Loops 10_instruction": "Loop this code 12 times to complete the pattern.",
        "2-3 Artist Nested Loops 11_instruction": "Loop this code 4 times to complete the pattern, turn 90 degrees after each circle.",
        "2-3 Artist Nested Loops 12_instruction": "Loop this code 12 times to complete the curls.",
        "2-3 Artist Nested Loops 2_instruction": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.",
        "2-3 Artist Nested Loops 3_instruction": "You'll need to loop the triangle 12 times to draw this pattern. \n\nDivide the number of degrees in a circle (360) by the number of shapes you're drawing (12) to figure out how far to turn after each shape.",
        "2-3 Artist Nested Loops 4_instruction": "Loop this diamond 12 times to draw a flower!\n\nNote: We'll use the same angle to loop 12 diamonds as we did for 12 triangles.  \nHow much do you need to turn after each shape?",
        "2-3 Artist Nested Loops 5_instruction": "Fill in this building's windows using a nested loop. \n\nThe windows are 20 pixels long and 20 pixels apart.",
        "2-3 Artist Nested Loops 6_instruction": "This dinosaur has 8 spikes running up its tail.\nEach spike is 30 pixels long. Loop the triangle 8 times, but make sure to jump forward after each one!",
        "2-3 Artist Nested Loops 7_instruction": "Loop this triangle 10 times to draw the sun. \n\nYou'll need to move and turn after each triangle. \n\nYou can figure out how much to turn by dividing the number of degrees in a circle by the number of triangles that make it up.",
        "2-3 Artist Nested Loops 8_instruction": "Now let's add some grass to our picture. \n\nEach tuft of grass is 50 pixels apart.",
        "2-3 Artist Nested Loops 9_instruction": "We'll finish this picture by adding our flower. \n\nLoop the diamond 12 times to draw the flower.",
        "2-3 Artist Nested Loops Free Play_instruction": "Free play, draw something cool with nested loops.",
        "2-3 Bee Conditionals 1_instruction": "Hi! I'm a bee. Help me get nectar from the flower.",
        "2-3 Bee Conditionals 10_instruction": "Purple flowers may have either 1 or 0 nectar. Be careful not to collect nectar from a purple flower if it doesn't have any.\n",
        "2-3 Bee Conditionals 11_instruction": "I wonder what's out there!\n\nHelp me fly around the yard and collect nectar only from the flowers that have some. ",
        "2-3 Bee Conditionals 12_instruction": "Help me find all of the nectar using as few blocks as possible!",
        "2-3 Bee Conditionals 13_instruction": "There's a lot happening here!\n\nUse what you've learned to collect all of the nectar and then make the honey.",
        "2-3 Bee Conditionals 14_instruction": "Let's put everything together!\n\nUse what you've learned to help me collect nectar only from flowers that have it, using as few blocks as possible.  Don't forget to make honey at the end.",
        "2-3 Bee Conditionals 15_instruction": "This stair step pattern should look familiar.  \n\nCan you collect nectar only from the flowers that have some, using as few blocks as possible?",
        "2-3 Bee Conditionals 2_instruction": "I'm a hungry bee! \nHelp me collect all of the nectar from the flowers using the fewest number of blocks.",
        "2-3 Bee Conditionals 3_instruction": "Look at all of that nectar!\n\nHelp me collect the nectar and make the honey using as few blocks as you can.  ",
        "2-3 Bee Conditionals 4_instruction": "Help me collect all of the nectar from the flowers and make all the honey.",
        "2-3 Bee Conditionals 5_instruction": "Be careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "2-3 Bee Conditionals 6_instruction": "Check this flower with an \"if\" block to see if there is any nectar available.",
        "2-3 Bee Conditionals 7_instruction": "Collect nectar from each flower only if it has any.",
        "2-3 Bee Conditionals 8_instruction": "This field has red and purple flowers. Red flowers have a known nectar amount, but purple flower nectar is unknown. Collect all the nectar.",
        "2-3 Bee Conditionals 9_instruction": "Collect all the nectar from each flower.",
        "2-3 Bee Conditionals Assessment 1_instruction": "Assessment: Collect all of the nectar. Be careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "2-3 Bee Debugging 1_instruction": "These blocks are really bugging me. Fix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 10_instruction": "This puzzle is making me loopy! \nFix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging 2_instruction": "Can you find the problem here?\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 3_instruction": "Ooh, this one stings!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 4_instruction": "These blocks are really bugging me. Fix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging 5_instruction": "That flower looks tasty! \n\nFix the error(s) to collect all of the nectar.  You can now use both run and step.",
        "2-3 Bee Debugging 6_instruction": "What a sweet challenge!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 7_instruction": "Fix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging 8_instruction": "So many beautiful flowers!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 9_instruction": "\"Bee\" patient with this one!\n\nYou will need to fix a couple of things in this program to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging Assessment 1_instruction": "Assessment:  Now it's time to show what you know!\n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Functions 1_instruction": "Functions are blocks of code that perform a task. Use the \"get 2 nectar\" function to collect the nectar from each flower.",
        "2-3 Bee Functions 10_instruction": "Purple flowers change between either 1 or 0 nectar each time you run the puzzle.   \n\nCreate a function that collects nectar only from purple flowers that have nectar.",
        "2-3 Bee Functions 2_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 5` function to get 5 nectars at a time.",
        "2-3 Bee Functions 3_instruction": "Collect all the nectar from each flower.",
        "2-3 Bee Functions 4_instruction": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the function to collect all of the nectar.",
        "2-3 Bee Functions 5_instruction": "There is now more nectar at the flowers. Edit the given function so that it collects 4 nectars and use it to collect all of the nectar from the flowers.",
        "2-3 Bee Functions 6_instruction": "Now use the same function to collect nectar from the three flowers.",
        "2-3 Bee Functions 7_instruction": "The flowers are now further away. Edit the given function and use it to collect all of the nectar from the flowers.",
        "2-3 Bee Functions 8_instruction": "Create your own function that gets 7 nectar, moves forward, and makes 7 honey. Use the function to collect nectar at each flower and make honey at each honeycomb.",
        "2-3 Bee Functions 9_instruction": "Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path.",
        "2-3 Bee Functions Assessment 1_instruction": "Assessment: Use the given function to collect nectar from each flower.",
        "2-3 Bee Functions Assessment 2_instruction": "Assessment: Create a function to turn, move forward and make 3 honey, then return the bee to where it started and turn back.",
        "2-3 Bee Loops 1_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "2-3 Bee Loops 10_instruction": "Can you use a while loop inside of two other loops to collect all of the nectar?",
        "2-3 Bee Loops 11_instruction": "Use while loops to collect all of the nectar from the flowers in this field.",
        "2-3 Bee Loops 12_instruction": "Use while loops to collect all of the nectar from the flowers in this field.",
        "2-3 Bee Loops 13_instruction": "Assessment: Collect all of the nectar using the fewest blocks possible.",
        "2-3 Bee Loops 1A_instruction": "Hi, I'm a bee. Can you help me collect the nectar from these flowers? ",
        "2-3 Bee Loops 2_instruction": "Collect all the nectar and make all of the honey using the fewest blocks possible.",
        "2-3 Bee Loops 2A_instruction": "This time, use a loop to gather all of the nectar.",
        "2-3 Bee Loops 3_instruction": "Collect nectar from each flower and make honey at each honeycomb using the fewest blocks possible.",
        "2-3 Bee Loops 3A_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "2-3 Bee Loops 3B_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "2-3 Bee Loops 4_instruction": "Such a busy bee!\n\nHelp bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "2-3 Bee Loops 4A_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "2-3 Bee Loops 5_instruction": "The shape of this path is different than the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "2-3 Bee Loops 6_instruction": "Can you find the quickest way for the bee to collect all of the nectar and make all of the honey?",
        "2-3 Bee Loops 7_instruction": "What a beautiful field of flowers!   Help the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?",
        "2-3 Bee Loops 8_instruction": "These purple flowers have different amount of nectar each time you run the puzzle. \n\nUse the `while nectar` loop to collect all of the nectar. \n\nThis loop will run as long as the condition is true, in this case `nectar > 0`.",
        "2-3 Bee Loops 9_instruction": "The while loop can perform the same action as an if statement in a loop. Add a while loop to this code to perform the same task.",
        "2-3 Bee Loops Assessment 1_instruction": "Assessment: Use a `while` loop to collect all of the nectar from these flowers.",
        "2-3 Maze 1_instruction": "Can you help me catch the naughty pig? Stack a couple of `move forward` blocks below the `when run` block and press \"Run\". ",
        "2-3 Maze 10_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze 11_instruction": "Get me to the flower I'm hungry! How many times do you have to repeat a block?",
        "2-3 Maze 12 (copy 1)_instruction": "Can you replace the previous answer with only two blocks? (Hint: Create a loop using a \"repeat times\" block.)",
        "2-3 Maze 12 (copy 2)_instruction": "Can you replace the previous answer with only two blocks? (Hint: Create a loop using a \"repeat times\" block.)",
        "2-3 Maze 12 (old)_instruction": "Get me to the pig, now with the Repeat times block!",
        "2-3 Maze 12 - One Move Block_instruction": "Get to the pig! But this time, you can only use one `move forward` block. Do you see any other blocks that could help you?",
        "2-3 Maze 12_instruction": "Can you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "2-3 Maze 13 (old)_instruction": "Get me to the pig, now with the Repeat until block!",
        "2-3 Maze 13_instruction": "Get me to the pig! You can only use one move forward block this time",
        "2-3 Maze 14 (old)_instruction": "Get me to the pig with the Repeat until block!",
        "2-3 Maze 14_instruction": "Get me to the sunflower! (Where is that \"repeat times\" block when I need it?)",
        "2-3 Maze 15 (old)_instruction": "Get me to the pig with the Repeat until block!",
        "2-3 Maze 15_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "2-3 Maze 16 (old)_instruction": "Get me to the pig with the Repeat until block!",
        "2-3 Maze 16 before_instruction": "Can you figure out the fastest way to get me to the pig?",
        "2-3 Maze 16_instruction": "Loops even work with more than one block inside!  Can you loop this sequence to get the zombie to the sunflower?",
        "2-3 Maze 2_instruction": "This pig is ruffling my feathers. Help me get to him!",
        "2-3 Maze 3_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or feathers will fly!",
        "2-3 Maze 4_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze 5_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze 6_instruction": "Keep calm and help me find the bad pig. Otherwise I might get angry!",
        "2-3 Maze 7_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze 8_instruction": "Get me to the pig!",
        "2-3 Maze 9_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze Loops 1_instruction": "Can you get me to the pig using 5 of the same kind of blocks?",
        "2-3 Maze Loops 17_instruction": "Use what you learned to get me to the sunflower!",
        "2-3 Maze Loops 18_instruction": "Get me to the sunflower using the fewest blocks possible!  \n\nTry using one `repeat` loop inside of another to cut down on the amount of code you need.",
        "2-3 Maze Loops 19_instruction": "Let's take this to another level! \nUse loops to get me to the sunflower with the fewest loops possible.",
        "2-3 Maze Loops 20_instruction": "Get me to the sunflower using the fewest number of blocks possible!",
        "2-3 Maze Loops 21_instruction": "Get me to the sunflower using the fewest blocks possible!",
        "2-3 Maze Loops Assessment 1_instruction": "Assessment:  Get me to the sunflower using only 5 blocks! ",
        "2-3 Maze sq1_instruction": "This pig is ruffling my feathers.  Help me find him!",
        "2-3 Maze sq10_instruction": "Get me to the pig! What blocks got repeated?",
        "2-3 Maze sq10v2_instruction": "Get me to the pig! What blocks got repeated?",
        "2-3 Maze sq2_instruction": "Trace the path and lead me to the silly pig.  Avoid the TNT or the feathers will fly!",
        "2-3 Maze sq3_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "2-3 Maze sq4_instruction": "Keep calm and help me find the bad pig. Otherwise I might get angry!",
        "2-3 Maze sq5_instruction": "Get me to the pig! How many times do you have to repeat a block?",
        "2-3 Maze sq6_instruction": "Can you replace the previous answer with only two blocks? (Hint: Create a loop using a \"repeat times\" block.)",
        "2-3 Maze sq7_instruction": "Get me to the green intruder using only three blocks.",
        "2-3 Maze sq8_instruction": "Get me to the pig! (Where is that \"repeat times\" block when I need it?)",
        "2-3 Maze sq9_instruction": "Create loops to get to the pig using less blocks.",
        "2-3 maze sq11_instruction": "Get me to the pig! What blocks got repeated?",
        "2-3 maze sq12_instruction": "Can you replace the previous answer with a loop by using a \"repeat times\" block?",
        "2-3 maze sq13_instruction": "Dear person. Me zombie. Must... get... to sunflower. Create loop with \"repeat until\" block.",
        "2-3 maze sq14_instruction": "Can you get to the sunflower using only four blocks?",
        "2-3 maze sq15_instruction": "Can you get to the sunflower using only five blocks?",
        "2-3 maze sq16_instruction": "Ok, this is similar, but slightly different. Can you do it in only five blocks?",
        "2-3_instruction": "Purple flowers may have either 1 or 0 nectar. Be careful not to collect nectar from a purple flower if it doesn't have any.",
        "2-3level1_instruction": "Help the bird catch the naughty pig by moving it forward",
        "20hr_farmer_stage9_1_instruction": "Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting. Move me to the pile of dirt and use the \"remove\" block to remove it.",
        "20hr_farmer_stage9_10_instruction": "I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it",
        "20hr_farmer_stage9_11_instruction": "It's still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in. Hint: use the dropdown menu of options on the \"if\" block.",
        "20hr_farmer_stage9_2_instruction": "Next, move me to the hole and fill it with TWO shovelfuls of dirt, using the \"fill\" block.",
        "20hr_farmer_stage9_3_instruction": "Move me to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible.",
        "20hr_farmer_stage9_4_instruction": "Can you help me remove all four piles of dirt? Hint: use a repeat block if you can.",
        "20hr_farmer_stage9_5_instruction": "Help me fill in all these holes with 5 shovelfuls of dirt. Hint: you can put a \"repeat\" block inside the \"while\" block.",
        "20hr_farmer_stage9_6_instruction": "Remove all the piles of dirt, using as few blocks as possible. The new options in the dropdown menu on the \"while\" block tell me if I'm standing on a pile or a hole.",
        "20hr_farmer_stage9_7_instruction": "Wow, I found a really deep hole! I don't know how many shovelfuls of dirt it needs. Can you write a program that fills it until the ground is even?",
        "20hr_farmer_stage9_8_instruction": "Help me fill in the hole at the end of the field, using as few blocks as possible.",
        "20hr_farmer_stage9_9_instruction": "Make me remove all these piles of dirt. Try to use as few blocks as possible. Hint: try using a \"while\" block.",
        "20hr_maze_stage2_1_instruction": "Can you help me to catch the naughty pig? Stack a couple of \"move forward\" blocks together and press \"Run\" to help me get there.",
        "20hr_maze_stage2_10_instruction": "Ok, try the new \"repeat until\" block - it will repeat until I reach the annoying pig.",
        "20hr_maze_stage2_11_instruction": "Ok, one last time for practice - can you solve this one using only 4 blocks?",
        "20hr_maze_stage2_12_instruction": "Dear person. Me zombie. Me hungry. Must... get... to sunflower... Can you get me there with only 5 blocks?",
        "20hr_maze_stage2_13_instruction": "Ok, this is similar, but slightly different. Can you do it in only 5 blocks?",
        "20hr_maze_stage2_14_instruction": "Use the new \"if\" block to let me decide when to turn. Hint: you only need one more block, but learn how we set it up so you can do it on your own next time.",
        "20hr_maze_stage2_15_instruction": "Ok, this is just like the last puzzle, but you need to remember how you used the \"if\" block and the \"repeat\" block together.",
        "20hr_maze_stage2_16_instruction": "Me want sunflower! Use an \"if\" block to get me there with the fewest number of blocks.",
        "20hr_maze_stage2_17_instruction": "Ok, let's do that again for practice - this isn't very different, but watch out for the chompers!",
        "20hr_maze_stage2_18_instruction": "The \"If-else\" blocks checks a condition, and then does one thing OR another. To get me to the sunflower try to use this new block.",
        "20hr_maze_stage2_19_instruction": "One more practice of the \"if-else\" block, can you get it right on your first try?",
        "20hr_maze_stage2_2_instruction": "This pig is ruffling my feathers. Help me to find him!",
        "20hr_maze_stage2_20_instruction": "Can you add just 3 blocks to help me solve a more complex maze? If you do it right, I can walk any curvy path no matter the length.",
        "20hr_maze_stage2_3_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly!",
        "20hr_maze_stage2_4_instruction": "Guide me to the green evilness! (Watch out for TNT)",
        "20hr_maze_stage2_5_instruction": "Keep calm and help me to find the bad pig. Otherwise I might get angry!",
        "20hr_maze_stage2_6_instruction": "There's a way I can get to the silly pig using only 2 blocks. Can you figure it out?",
        "20hr_maze_stage2_7_instruction": "Try to get me to the green intruder using only three blocks.",
        "20hr_maze_stage2_8_instruction": "Help me banish this bad piggy using the fewest number of blocks. Try using more than one \"repeat times\" block.",
        "20hr_maze_stage2_9_instruction": "When a block is grey, that means you can't delete it. Solve this puzzle using the \"repeat\" block that repeats 3 times. Try putting these 3 blocks inside the grey \"repeat\" block: move, move, turn.",
        "4-5 Artist 1_instruction": "Help me finish drawing my box. (Each line is 300 pixels long) ",
        "4-5 Artist 10_instruction": "Press \"Run\" to try the code. Then, repeat it enough times to complete the drawing. The colors will be different every time.",
        "4-5 Artist 11_instruction": "Complete the green lines. The lines are 300 pixels long and 15 pixels apart.",
        "4-5 Artist 2_instruction": "Loop this code using the `repeat` block to complete the square.",
        "4-5 Artist 3.5_instruction": "Try to figure out what happens if you run this code (or just press \"Run\" and try it). Next, repeat the code enough times to complete the drawing!",
        "4-5 Artist 3_instruction": "This rectangular flower bed has a perimeter of 600. The long side has a length of 200. Draw the rectangle using as few blocks as possible.",
        "4-5 Artist 4_instruction": "How many degrees are in a circle?  Loop the blocks to create a circle of colors.",
        "4-5 Artist 5_instruction": "What can we replace \"???\" with to make sure that the zombie completes this drawing using the loop provided?",
        "4-5 Artist 6_instruction": "This equilateral triangle has angles of 60, 60, and 60 degrees. Each side is 200 pixels. Complete the drawing.",
        "4-5 Artist 7_instruction": "This right triangle has angles of 30, 60, and 90 degrees. The slanted side's length (length of the hypotenuse) is 200 pixels. Complete the drawing.",
        "4-5 Artist 8_instruction": "The halfway line on a soccer field is perpendicular to the sidelines.   \nThis rectangle has a perimeter of 800 pixels total, and it is 240 pixels long. How tall is it?   \n\nDraw the bounds and the halfway line.",
        "4-5 Artist 9_instruction": "Draw the right half of this image so that the design is symmetrical. The triangles are equilateral and have sides that are 50 pixels long.",
        "4-5 Artist Assessment 1_instruction": "Assessment: Use a loop to draw the equilateral triangle. Each side is 300 pixels.",
        "4-5 Artist For Loops 1_instruction": "Put the numbers 1 through 10 into the width blocks and run the code.",
        "4-5 Artist For Loops 11_instruction": "Complete the \"for\" block so that it counts 0, 20, 40, 60, 80... 200.",
        "4-5 Artist For Loops 12_instruction": "What happens if you reverse the \"from\" and \"to\" numbers? Complete the \"for\" block so that it counts 200, 180, 160, 140, 120...0. ",
        "4-5 Artist For Loops 13_instruction": "This design got started without a \"for\" loop and is taking too many blocks!  Use a \"for\" block to complete the spiral.  Hint: the last line length is 250 pixels.",
        "4-5 Artist For Loops 14_instruction": "Someone started the code, but then realized there must be a quicker way! Use a \"for\" block to replace the blocks and complete the triangular spiral. (Hint: the last line length is 300 pixels.)",
        "4-5 Artist For Loops 15_instruction": "Someone started the code, but then realized there must be a quicker way! Use a \"for\" block to replace the blocks and complete the hexagonal spiral. (Hint: the last line length is 200 pixels.)",
        "4-5 Artist For Loops 2_instruction": "This is a \"for\" block. Instead of typing 1,2,3... 10, the \"for\" block can repeat the blocks inside it and count the numbers for you. Place the number 10 into the \"to\" section of the \"for\" block.",
        "4-5 Artist For Loops 3_instruction": "How can we count from 1 to 50? Edit the \"for\" block.",
        "4-5 Artist For Loops 4_instruction": "Complete the \"for\" block so that it counts from 1 to 10 by 1.",
        "4-5 Artist For Loops 6_instruction": "Draw squares with sides of 50, 60, 70, 80, and 90 pixels. You'll need to use the \"draw a square\" function five times.",
        "4-5 Artist For Loops 7_instruction": "Draw the same squares but use a \"count with\" block to change the sizes. Place the \"counter\" block in the \"draw a square\" function. Hint: It's in the Variables category.",
        "4-5 Artist For Loops 8_instruction": "Can you complete the program by placing the blocks inside a \"for\" block that counts from 10 to 200 by 10? You can find the \"for\" block in the Loops category.",
        "4-5 Artist For Loops 9_instruction": "These circles are size 5, 10, 15, 20, 25, 30, and 35. Draw the circles using a \"for\" block.",
        "4-5 Artist Free Draw 1_instruction": "Free Draw!  Draw whatever you are inspired to create.",
        "4-5 Artist Functions 1_instruction": "Use a repeat loop to draw this triangle.",
        "4-5 Artist Functions 10a_instruction": "Put this code into the 'draw a snowflake' function and replace the 50 with the parameter 'size'. The function is already called on to make a snowflake that is 100 pixels.",
        "4-5 Artist Functions 10b_instruction": "Use the 'draw a snowflake' function to create different size flakes.  Hint: the first snowflake is 25 in length and each snowflake is twice the size of the one before.",
        "4-5 Artist Functions 11_instruction": "This \"draw a hexagon\" function uses the \"draw a triangle\" function. Complete the hexagon function. (Hint: A hexagon has 6 sides, each 100 pixels long)",
        "4-5 Artist Functions 12_instruction": "Complete the 'draw waves' function.  Each wave is made up of one Upper wave and one Lower wave.   Hint: Draw 5 blue waves.",
        "4-5 Artist Functions 13 Free play_instruction": "Here are some functions to draw planets, stars, rockets, and robots. Use them any way you like to make pictures that you can share with your friends.",
        "4-5 Artist Functions 14 Free play_instruction": "Here, we've provided you with several functions.  Use them any way you like inside of one or more loops to make pictures that you can share with your friends. Click 'Run' to see an example.",
        "4-5 Artist Functions 15 Assessment_instruction": "Assessment:  Use the \"draw a square\" function to create the squares.  The squares are 50, 100, and 150 pixels.",
        "4-5 Artist Functions 2a_instruction": "Now put these blocks into a new function called \"draw a small triangle\" and call on it.",
        "4-5 Artist Functions 2b_instruction": "Now create a function called \"draw a small triangle\" using the provided blocks.",
        "4-5 Artist Functions 3_instruction": "Now create the functions \"draw a medium triangle\" and \"draw a large triangle\". The \"draw a small triangle\" function is done for you. The triangles have side lengths of 50 (small), 100 (medium), and 150 (large). ",
        "4-5 Artist Functions 4_instruction": "This new \"draw a triangle\" function has a parameter and can do the work of all three functions before. Draw the same triangles using this new function.",
        "4-5 Artist Functions 5_instruction": "Can you modify the \"draw a triangle\" function into a \"draw a square\" function to change the drawing?",
        "4-5 Artist Functions 6_instruction": "Use the \"draw a square\" and \"draw a triangle functions\" to draw a house. (Hint: The square's sides are 200 pixels)",
        "4-5 Artist Functions 6b_instruction": "Use the draw a square and triangle functions along with other blocks to create a house by adding them to the 'draw a house\" function and calling it.",
        "4-5 Artist Functions 7_instruction": "Use the \"draw a house\" function to draw houses that are 100 pixels and 50 pixels. The two houses are separated by 50 pixels.",
        "4-5 Artist Functions 8_instruction": "The \"draw a flower\" function has a parameter that allows you to set the stem height.  Set it to 200 and see what happens.",
        "4-5 Artist Functions 9_instruction": "Draw these 3 flowers. The first one's height is 100 and the next flower is always 50 pixels more than the height of the previous one. The flowers are also 100 pixels apart.",
        "4-5 Artist Patterns 1_instruction": "Draw this square using a loop.\n\nEach side is 20 pixels long.",
        "4-5 Artist Patterns 10_instruction": "This code draws two rows of hexagons - loop the whole thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120 pixels in your outermost loop to make sure the artist doesn't draw off the screen.\n",
        "4-5 Artist Patterns 11_instruction": "How many times do you need to loop this to draw a half circle? ",
        "4-5 Artist Patterns 12_instruction": "If you create another loop like this one, but turn left instead of right, what happens? \n\nCan you repeat all of that to draw this wave?",
        "4-5 Artist Patterns 13_instruction": "Now let's loop that whole thing four times to create this picture frame. Watch out for the corners - you can't just turn 90 degrees! \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these blocks of code will make an additional quarter circle for the corners?",
        "4-5 Artist Patterns 2_instruction": "If you place your square loop inside another loop, we call that a nested loop. What do you need to add as an outer loop to make sure all 15 squares line up next to each other?",
        "4-5 Artist Patterns 3_instruction": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
        "4-5 Artist Patterns 4_instruction": "This diamond has 50 pixel sides and angles of 120 and 60 degrees. Use a loop to draw it.",
        "4-5 Artist Patterns 5.5_instruction": "How many times do you need to repeat this block to draw the full grid of diamonds?",
        "4-5 Artist Patterns 5_instruction": "Repeat this code to make a row of 6 diamonds. \n\nNotice that we changed our diamond code to repeat 3 times instead of 2 - why do you think that is?\n",
        "4-5 Artist Patterns 6_instruction": "How many times do you need to repeat this block to draw the full grid of diamonds?",
        "4-5 Artist Patterns 7_instruction": "Let's modify the code from the last puzzle to make this more complex pattern. Notice how the diamonds overlap now, try changing the first \"jump backwards\" from 100 to 50 (half as far) - now how far should the artist go in the second \"jump backwards\"?",
        "4-5 Artist Patterns 8_instruction": "Use a loop to draw this hexagon with 40 pixel sides and 60 degree angles.",
        "4-5 Artist Patterns 9.5_instruction": "Let's loop this code to draw two rows of hexagons. Notice how our second row is shifted to the right.",
        "4-5 Artist Patterns 9_instruction": "Now repeat this code 3 times and draw the whole row. \n\nEach hexagon is 80 pixels wide from the furthest points left to right.",
        "4-5 Artist Patterns Free Play_instruction": "Free play - try your hand at making a pattern of your own!",
        "4-5 Bee Conditionals - FC Test_instruction": "The bee only wants nectar right now. Not all objects are flowers, so check underneath EVERY CLOUD to see if it is hiding a flower. If it is, then you can gather nectar.",
        "4-5 Bee Conditionals 1 (copy 1)_instruction": "The bee can't tell if this is a flower or a honeycomb. Gather nectar only from flowers, but first check if it is a flower or a honeycomb.",
        "4-5 Bee Conditionals 1_instruction": "This cloud is blocking my view! Check to see if there's a flower under the cloud, and only get nectar if there's a flower. Be careful, it can change!",
        "4-5 Bee Conditionals 2 (copy 1)_instruction": "The bee only wants nectar right now. Remember, not all objects are flowers, so check to gather nectar only at flowers.",
        "4-5 Bee Conditionals 2_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "4-5 Bee Conditionals 3_instruction": "Now I just want to make honey. Some of these clouds might have honeycombs under them. Be sure to check each cloud!",
        "4-5 Bee Conditionals 4 (copy 1)_instruction": "The unknown object is either a flower or a honeycomb. Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).",
        "4-5 Bee Conditionals 4_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).",
        "4-5 Bee Conditionals 5_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "4-5 Bee Conditionals 6 (copy 1)_instruction": "This purple flower may have either 3, 2, or 1 nectar. Here an if-else block is combined with another if-else block to create an if, else-if, else block. Complete the solution to collect the unknown amount of nectar.",
        "4-5 Bee Conditionals 6_instruction": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
        "4-5 Bee Conditionals 7_instruction": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
        "4-5 Bee Conditionals 8_instruction": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
        "4-5 Bee Conditionals Assessment 1_instruction": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. \n",
        "4-5 Bee Debugging 1_instruction": "These blocks are really bugging me. \n\nCan you fix them?",
        "4-5 Bee Debugging 10_instruction": "Find the errors and fix them.",
        "4-5 Bee Debugging 11_instruction": "Does this count correctly?",
        "4-5 Bee Debugging 2_instruction": "Help the bee get the nectar and make honey.",
        "4-5 Bee Debugging 3_instruction": "Find the errors and fix them.",
        "4-5 Bee Debugging 4_instruction": "These blocks don't work. What's the pattern?",
        "4-5 Bee Debugging 5_instruction": "Something isn't right here...",
        "4-5 Bee Debugging 6_instruction": "The purple flower has a different amount of nectar each time you run the puzzle. \n\nFix the blocks to get all of the nectar from the flower each time.",
        "4-5 Bee Debugging 7_instruction": "The function is missing something...",
        "4-5 Bee Debugging 8_instruction": "This function is fine, but it isn't used properly.",
        "4-5 Bee Debugging 9_instruction": "Why isn't the bee making enough honey?",
        "4-5 Bee Debugging Assessment 1_instruction": "Assessment: Fix the code.",
        "4-5 Bee Nested Loops 1_instruction": "Use a loop to collect all of the nectar.",
        "4-5 Bee Nested Loops 2_instruction": "Collect all of the nectar from each flower. Use a nested loop. ",
        "4-5 Bee Nested Loops 3_instruction": "Collect all of the nectar by putting the starter code inside another loop.",
        "4-5 Bee Nested Loops 4_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. \n\nUse a nested loop. ",
        "4-5 Bee Nested Loops 5_instruction": "Collect all of the nectar by creating a nested loop.",
        "4-5 Bee Nested Loops 6_instruction": "Collect all the nectar.",
        "4-5 Bee Nested Loops 7_instruction": "Put this loop inside another loop to create a nested loop and collect all of the nectar from the flowers.",
        "4-5 Bee Nested Loops 8_instruction": "Collect all of the nectar from these flowers by nesting a while loop. Replace the inner repeat times block with a while block. ",
        "4-5 Bee Nested Loops 9_instruction": "Collect all of the nectar from these flowers by nesting a while loop inside a repeat.",
        "4-5 Bee Nested Loops Assessment 1_instruction": "**Assessment:** Collect all of the nectar and make all of the honey using loops.",
        "4-5 Bee Nested Loops Rows_instruction": "Gather nectar from the rows of flowers! Use a nested loop.",
        "4-5 Maze 1 (copy 1)_instruction": "Dear person. Me zombie. Must... get... to sunflower.",
        "4-5 Maze 1_instruction": "Dear person. Me zombie. Must... get... to sunflower.",
        "4-5 Maze 10_instruction": "Can you get to the sunflower using only four blocks?",
        "4-5 Maze 11_instruction": "Can you get to the sunflower using only six blocks?",
        "4-5 Maze 12_instruction": "Ok, this is slightly different. Can you do it in only six blocks?",
        "4-5 Maze 13_instruction": "Get me to the pig!",
        "4-5 Maze 14_instruction": "Get me to the pig! Use the Repeat until block.",
        "4-5 Maze 2 (copy 1)_instruction": "Get the zombie to the sunflower, but avoid the chomper!",
        "4-5 Maze 2_instruction": "Get the zombie to the sunflower, but avoid the chomper!",
        "4-5 Maze 3 (copy 1)_instruction": "Must... get... to sunflower.",
        "4-5 Maze 3_instruction": "Must... get... to sunflower.",
        "4-5 Maze 4 (copy 1)_instruction": "Try the \"repeat\" block to use fewer blocks...",
        "4-5 Maze 4_instruction": "Use the \"repeat\" block to solve the puzzle quickly...",
        "4-5 Maze 5 (copy 1)_instruction": "Can you solve this puzzle using the fewest number of blocks possible?",
        "4-5 Maze 5_instruction": "Can you solve this puzzle using the fewest number of blocks possible?",
        "4-5 Maze 6 (copy 1)_instruction": "Can you solve this puzzle using the fewest number of blocks possible?",
        "4-5 Maze 6_instruction": "Get me to the sunflower using the fewest number of blocks possible!",
        "4-5 Maze 7_instruction": "Get the zombie to the sunflower quickly!  Can you solve the puzzle in fewer than 11 blocks?",
        "4-5 Maze 8_instruction": "Get the zombie to the sunflower using as few blocks as you can.  \n(Avoid the chompers!)",
        "4-5 Maze 9_instruction": "Now we have a new block called `repeat until`.  \nThis will let us keep looping commands until the zombie gets the sunflower.  \n\nUse the new `repeat until` block to solve this puzzle in as few commands as possible.",
        "4-5 Maze Assessment 1_instruction": "Assessment: Get to the sunflower using as few blocks as possible.",
        "4-5 Maze Conditionals 1_instruction": "Use the `repeat until` block to get the zombie to the sunflower.",
        "4-5 Maze Conditionals 10_instruction": "Can you add just 3 blocks to help the zombie solve a more complex maze? \n\nIf you do it right, he can walk any curvy path no matter the length!",
        "4-5 Maze Conditionals 2_instruction": "Use the `repeat until` block to get the zombie to the sunflower.",
        "4-5 Maze Conditionals 3_instruction": "Use the `if` block to help me decide when to turn. \n",
        "4-5 Maze Conditionals 4_instruction": "Ok, solve this one just like the last puzzle, but you need to remember how you used the `if` and `repeat until` blocks together.",
        "4-5 Maze Conditionals 5_instruction": "\"Me want sunflower!\"  \n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
        "4-5 Maze Conditionals 6_instruction": "\"Eat sunflower!\"\n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
        "4-5 Maze Conditionals 7_instruction": "The solution to this puzzle isn't very different, but watch out for the chompers!",
        "4-5 Maze Conditionals 8_instruction": "The `if/else` block checks a condition, and then does one thing OR another. \n\nUse this new block to get me to the sunflower.",
        "4-5 Maze Conditionals 9_instruction": "One more practice puzzle with the `if/else` block!\n\nTrace it with your finger to see if you can figure it out on your first try.",
        "4-5 Maze Conditionals Assessment 1_instruction": "**Assessment:** Use a `repeat until` and an `if/else` block to get me to the sunflower in as few blocks as possible.",
        "4-5 Nested Loops 1_instruction": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.",
        "4-5 Nested Loops 10_instruction": "Draw the last row of stars on this flag by looping the provided blocks. The stars are 50 pixels apart, but remember that the stars themselves are 30 pixels wide.",
        "4-5 Nested Loops 11_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.",
        "4-5 Nested Loops 12_instruction": "Can you draw these 36 triangles using a nested loop?",
        "4-5 Nested Loops 2_instruction": "Now nest this loop inside another loop to draw 10 triangles.  This is called a \"nested\" loop.  ",
        "4-5 Nested Loops 3_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "4-5 Nested Loops 5_instruction": "Loop the given code to create a windmill.",
        "4-5 Nested Loops 6_instruction": "Can you draw a hexagon by looping the triangle code?",
        "4-5 Nested Loops 7_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "4-5 Nested Loops 8_instruction": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "4-5 Nested Loops 9_instruction": "Draw the teeth in the alligator's mouth!",
        "4-5 Nested Loops Assessment 1_instruction": "Assessment: Use a nested loop to complete the design.",
        "4-5 While Loops 1_instruction": "Move me to the hole and fill it with two shovelfuls of dirt, using the `fill` block.",
        "4-5 While Loops 2_instruction": "Move me to the pile of dirt and remove it with 5 shovel scoops, using the `remove 1` block.",
        "4-5 While Loops 3_instruction": "Use as few blocks as possible to complete this puzzle!  \n\nMove me to the pile and remove all the dirt, then move to the hole and fill it completely.",
        "4-5 While Loops 4_instruction": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
        "4-5 While Loops 5_instruction": "Wow, now there are two deep holes! Can you write a program that fills them both until the ground is even?",
        "4-5 While Loops 6_instruction": "Wow, now there is a large pile of dirt! Can you write a program that removes all of it so the ground is even?",
        "4-5 While Loops 7_instruction": "Wow, now there are three piles of dirt! Can you write a program that removes each of them until the ground is even?",
        "4-5 While Loops 8_instruction": " There is a really deep hole and a really large pile of dirt.  How many shovelfuls of dirt need to be moved around to make the ground flat?",
        "4-5 While Loops Assessment 1_instruction": "There are a lot of holes and piles.  Help me to fill and remove them to make the ground flat.",
        "AB_Debug_PlayLab2_instruction": "Why doesn't this game do anything?\n\nCan you find any \"hidden\" bugs?  Some are easier than others.",
        "AlgPD DR Free Play_instruction": "Create a function based on your own word problem.",
        "Alien Defender_instruction": "Project Idea: Make a defender game in Play Lab!",
        "Alien Defender_2018_instruction": "Project Idea: Make a defender game in Play Lab!",
        "AllTheThings Applab - Turtle move with button_instruction": "Add a button that moves the turtle when clicked.  (Click to see full instructions)",
        "AllTheThings: Pixelation - Lesson 14 - Make the Letter A_instruction": "Make a 3x5 letter 'A'. The widget is setup with the incorrect dimensions. Your first task is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then start entering pixel data.",
        "AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4_instruction": "We start you out with the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.",
        "AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color_instruction": "We start you with the 4x2 image Maddie was creating, but we've left out the last two squares. Finish off the image by figuring out which two colors are missing and encode them.",
        "App Lab test_instruction": "test",
        "AppLab_test02_instruction": "One sentence summary of the activity. Click to view full instructions.",
        "Applab AllTheThings ResourcesTab AllResources_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "Applab AllTheThings ResourcesTab MapReference_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "Applab AllTheThings ResourcesTab ReferenceLinks_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "Applab allthethings onRecordEvent_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "Applab test_instruction": "This level is submittable. For testing only!",
        "Artist - Nested Loops 1_instruction": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.",
        "Artist - Nested Loops 10_instruction": "Draw the last row of stars on this flag by looping the provided blocks. The stars are 50 pixels apart, but remember that the stars themselves are 30 pixels wide.",
        "Artist - Nested Loops 11_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.",
        "Artist - Nested Loops 12_instruction": "Can you draw these 36 triangles using a nested loop?",
        "Artist - Nested Loops 2_instruction": "Now nest this loop inside another loop to draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles complete a 360 degree rotation.  ",
        "Artist - Nested Loops 3_instruction": "Create a sun by nesting the starter code in another loop. This is called a nested loop.\n",
        "Artist - Nested Loops 5_instruction": "Loop the given code to create a windmill.",
        "Artist - Nested Loops 6_instruction": "Can you draw a hexagon by looping the triangle code?",
        "Artist - Nested Loops 7_instruction": "Loop this design 10 times. How much do you have to turn each time you loop? (Hint: What is 360 divided by 10?)",
        "Artist - Nested Loops 8_instruction": "Loop this design 6 times. How much do you have to turn each time you loop? (Hint: What is 360 divided by 6?)",
        "Artist - Nested Loops 9_instruction": "Draw the teeth in the alligator's mouth!",
        "Artist - Nested Loops Assessment 1_instruction": "Use a nested loop to complete the design.",
        "Artist Inspiration_instruction": "Free Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n \nWant to know how our inspiration pattern was made? ",
        "Auto Open Function Editor_instruction": "You can call functions from inside other functions! Using your \"shape\" function as a base, create 3 house shapes each 20 pixels larger than the last starting at 50 pixels in length. Using a counter loop might be helpful. ",
        "Bee Recommended Blocks test_instruction": "Purple flowers may have either 1 or 0 nectar, but you don't know which one! Be careful not to collect nectar from a purple flower if it doesn't have any. Check if the nectar is equal to 1 by using the if block.",
        "Bergeron Robot Maze1_instruction": "Can you help me catch the naughty pig? Stack a couple of `move forward` blocks below the `when run` block and press \"Run\". ",
        "Big Game Animation 1 (copy 1)_instruction": "Now that you've learned to write simple linear functions, let's work on using them to add some movement to our game. Click play to see what your game can currently do (not much!), update any variables you like, and then click finish to move on.",
        "Big Game Animation 1_instruction": "Now that you've learned to write simple linear functions, let's work on using them to add some movement to our game. Click \"Run\" to see what your game can currently do (not much!), update any variables you like, and then click finish to move on.",
        "Big Game Animation 2 (copy 1)_instruction": "The function 'update-target' function takes the target's current x value, and returns an updated value. Complete the 'update-target' function so that it adds to the x value each time it is called. The more you add to x, the faster the target will go.",
        "Big Game Animation 2_instruction": "The update-target function takes the target's current x value, and returns an updated value. Complete the update-target function so that it adds to the x value each time it is called. The more you add to x, the faster the target will go.",
        "Big Game Animation 3_instruction": "The update-danger function should work just like update-target, except that the danger should move from the right side over towards the left. Complete update-danger to make the danger fly across the screen.",
        "Big Game Animation 4_instruction": "At this point in your game, your danger should run across the screen from right to left, and your target should run across from left to right. They don't ever come back on screen once they've left, but we'll take care of that later. Take a minute to make sure your game is working like you want it to, and then click \"Finish\" to move on.",
        "Big Game Booleans 1_instruction": "When you last worked on your game we got our target and danger sprites to fly across the screen, but they never come back. Click \"Run\" to see how your game is currently working, and then click finish and we'll work on making those sprites reappear on screen after they've left.",
        "Big Game Booleans 2_instruction": "Go to the Functions section of the toolbox and complete the safe-left? function so that it returns true if the sprite's x coordinate is greater than -50. If you're successful you should see the Danger go off the left side and then return on the right side.",
        "Big Game Booleans 3_instruction": "Now that you've got safe-left?, let's fill in safe-right? - it should take in a sprite's x coordinate and return true if that coordinate is less than 450. Once your safe-right? is complete you should see the Target go off the right side of the screen and return on the left.",
        "Big Game Booleans 4_instruction": "Complete the onscreen? function so that it checks whether both safe-left? and safe-right? are true.",
        "Big Game Booleans 5_instruction": "At this point your Danger should run across the screen from right to left, your Target should run across from left to right, and they should both return to the opposite side, repeatedly. Take a minute to make sure your game is working like you want it to, and then click \"Finish\" to move on.",
        "Big Game Collision 1 (copy 1)_instruction": "When you last worked on your game we got our target and danger sprites to fly across the screen, but they never come back. Click run to see how your game is currently working, and then click finish and we'll work on making those sprites reappear on screen after they've left.",
        "Big Game Collision 1_instruction": "At this point you've programmed a video game with a moving Target and Danger, both of which return to the screen once they've left, and a Player that responds to keyboard input. Click \"Run\" to see how your game is currently working, and then we'll dig into the final missing piece - collision detection!",
        "Big Game Collision 2_instruction": "To move the player up and down, we'll need to use a conditional block to figure out which key is pressed and respond accordingly. Computers read keypresses as numeric key codes - the up arrow is 38 and the down arrow is 40. You can lookup other key codes in your student workbook. Edit the 'update-player' function so that if moves the player up when the up arrow is pressed, or down when the down arrow is pressed.",
        "Big Game Collision 3_instruction": "Use the Distance Formula, so the distance function returns the distance between the player's center coordinates (px, py) and another sprite's center coordinates (cx, cy).",
        "Big Game Collision 4_instruction": "Complete the collide? function so that it returns true if the distance between two points is less than 100 pixels apart.",
        "Big Game Complete_instruction": "A demo of the completed CS in Algebra Big Game project",
        "Big Game Final_instruction": "You made it! At this point your game should be fully functioning, take some time to enjoy your new game and make any final tweaks to it. When you're happy with the final product, click Finish and you'll have an opportunity to share a link to your game. Good work!",
        "Big Game Player 1_instruction": "We're getting really close to a finished game! Last time you worked on your game, you used booleans to make your Target and Danger return to the screen once they've left. Click Run to see how your game looks right now, and then we'll get to making your Player move up and down.",
        "Big Game Player 2_instruction": "Edit the update-player function so the player moves up when the up arrow (keycode 38) is pressed, and moves down (keycode 40) when the down arrow is pressed.",
        "Big Game Testing_instruction": "A demo of the completed CS in Algebra Big Game project",
        "Big Game Vars 1 (copy 1)_instruction": "Let's get started on your Big Game! Here you'll see a whole bunch of placeholder code that you'll eventually replace with your own, but for now we're only going to worry about defining variables. Click \"Run\" to see what the game looks like with the default values.",
        "Big Game Vars 1_instruction": "Let's get started on your Big Game! Here you'll see a whole bunch of placeholder code that you'll eventually replace with your own, but for now we're only going to worry about defining variables. Click \"Run\" to see what the game looks like with the default values.",
        "Big Game Vars 2 (copy 1)_instruction": "The first step to making this game your own is to give it a good Title. Click edit on the 'title' and 'subtitle' variables and change them to something new.",
        "Big Game Vars 2_instruction": "The first step to making this game your own is to give it a good Title. Click edit on the title and subtitle variables and change them to something new.",
        "Big Game Vars 3 (copy 1)_instruction": "Now let's set the background for your new game. Edit the 'bg' variable and select a new background Image from the dropdown.",
        "Big Game Vars 3_instruction": "Now let's set the background for your new game. Edit the bg variable and select a new background Image from the dropdown.",
        "Big Game Vars 4 (copy 1)_instruction": "Awesome, now you can update the variables for your Player, Target, and Danger. Feel free to play with all of the variables at this point to make your game look like you'd like it to. Click 'finish' when you're done.",
        "Big Game Vars 4_instruction": "Awesome! Now you can update the variables for your Player, Target, and Danger. Feel free to play with all of the variables at this point to make your game look like you'd like it to. Click \"Finish\" when you're done.",
        "Brad Spooky House Copy_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Draw something awesome! Play with the pen width to see how different your drawings look!",
        "Brad Spooky House_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Draw something awesome! Play with the pen width to see how different your drawings look!",
        "Building a Foundation Assessment_instruction": "Build a three level pyramid, there are no other directions, so just play with the pieces until you get it!",
        "Busy Bee 2_instruction": "This bee has a lot of work to do! Do you notice any patterns that you can use to simplify your code?",
        "Busy Bee_instruction": "This bee has a lot of work to do! Do you notice any patterns that you can use to simplify your code?",
        "C3-Farmer While Loops 1_instruction": "Move me to the hole and fill it with two shovelfuls of dirt, using the \"fill\" block.",
        "C3-Farmer While Loops 2_instruction": "Move me to the pile of dirt and remove it with 5 shovel scoops, using the 'remove' block.",
        "C3-Farmer While Loops 3_instruction": "Move me to the pile and remove all of it, then move to the hole and fill it completely.  Hint:  Use as few blocks as possible.",
        "C3-Farmer While Loops 4_instruction": "Wow, I found a really deep hole! I don't know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.",
        "C3-Farmer While Loops 5_instruction": "Wow, now there are two deep holes! Can you write a program that fills them both until the ground is even?",
        "C3-Farmer While Loops 6_instruction": "Wow, now there is a large pile of dirt! Can you write a program that removes all of it so the ground is even?",
        "C3-Farmer While Loops 7_instruction": "Wow, now there are three piles of dirt! Can you write a program that removes each of them until the ground is even?",
        "C3-Farmer While Loops 8_instruction": " There is a really deep hole and a really large pile of dirt.  How many shovelfuls of dirt need to be moved around to make the ground flat?  Hint: Use the while loop for both.",
        "C3-Farmer While Loops Assessment 1_instruction": "There are a lot of holes and piles.  Help me to fill and remove them to make the ground flat.",
        "CDEF_debugging_flappy2_instruction": "Why doesn't this game work?",
        "CSD Hackathon Pt 1_instruction": "(Click to see full instructions)",
        "CSD Hackathon Pt 2_instruction": "(Click to see full instructions)",
        "CSD Hackathon Week 1_instruction": "(Click to see full instructions)",
        "CSD Hackathon Week 2_instruction": "(Click to see full instructions)",
        "CSD U3 Background Discuss_instruction": "Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.",
        "CSD U3 Background Experiment_instruction": "Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.",
        "CSD U3 Boolean Modify_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Boolean Modify_2018_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Boolean Predict_instruction": "What do you think this code will do when it is run? Predict what each console.log() command will print, then run the program to check your predictions.",
        "CSD U3 Boolean Predict_2018_instruction": "What do you think this code will do when it is run? Predict what each console.log() command will print, then run the program to check your predictions.",
        "CSD U3 Draw Loop Discuss_instruction": "Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.",
        "CSD U3 Draw Loop Experiment_instruction": "Try using some of the other shape functions you've learned in the draw loop. What happens when you use randomNumber() to generate some of the inputs?You'll want to stop and discuss with the class before moving on.",
        "CSD U3 Expressions calculator_instruction": "Add the numbers 1 through 10. Multiply the numbers 1 through 10. Check your answers with a neighbor.",
        "CSD U3 Frame Rate_instruction": "Slow down Gamelab Gary's animation with frameRate()",
        "CSD U3 Keypress Boolean-2018_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Keypress Boolean_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Keypress Boolean_2018_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Keypress Watchers_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 Keypress Watchers_2018_instruction": "Modify the code so that all of the console.log commands print true",
        "CSD U3 L5 Freeplay_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 L5 Freeplay_2018_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Mouse Input Bee 2_instruction": "Do this",
        "CSD U3 Mouse Input Bee 2_2018_instruction": "Do this",
        "CSD U3 Random Animation_instruction": "Use randomNumber() to animate Gary's mouth.",
        "CSD U3 Random Choice_instruction": "Use the randomNumber() block to generate either 0 or 1",
        "CSD U3 Random Color_instruction": "Could you use randomNumber() to pick random colors as well? Try setting one or more of the channels in the rgb block with a random number. What should the maximum value be?",
        "CSD U3 Random Intro_instruction": "What do you think this code will do when it is run? Make a prediction, then run this code 5 - 10 times, recording the output each time. Share your results with your neighbor.",
        "CSD U3 Random Min Max_instruction": "Using console.log() write a program that randomly returns a number in a range you define.",
        "CSD U3 Random Width Height_instruction": "Pick a shape block and use calls to randomNumber() in place of one or more of the parameters. Maker sure you run it a few times so you can see the effect of randomization.",
        "CSD U3 Simple Drawing - Animation 2_instruction": "Use randomNumber() on the x position and width of your cloud ellipses to introduce a bit of animation.",
        "CSD U3 Simple Drawing - Animation_instruction": "Use randomNumber() on the x position and width of your cloud ellipses to introduce a bit of animation.",
        "CSD U3 Simple Drawing - Background_instruction": "Put all of your code into a draw() loop and then add set the background to blue with the background() block.",
        "CSD U3 Simple Drawing - Personal Animation_instruction": "DO This",
        "CSD U3 Sprites intro sprites_instruction": "Do This",
        "CSD U3 Sprites intro sprites_2018 - Validation Test_instruction": "Do This",
        "CSD U3 Sprites intro sprites_2018_instruction": "Do This",
        "CSD U3 Variable Arithmetic pt2_instruction": "Predict: What two numbers will be displayed in the console?",
        "CSD U3 Variable Arithmetic_instruction": "Change the value \"size\" initialized to make a larger square.",
        "CSD U3 Variable Incrementation pt2_instruction": "Predict: What two numbers will be displayed in the console?",
        "CSD U3 Variable Incrementation_instruction": "Predict: What two numbers will be displayed in the console?",
        "CSD U3 Variables CHALLENGE gamelab gary_instruction": "Use variables to animate Game Lab Gary",
        "CSD U3 Variables Initialize_instruction": "Predict: What will get displayed in the console?",
        "CSD U3 Variables Intro_instruction": "Create your own variable ",
        "CSD U3 Variables Random_instruction": "Predict: What will get displayed in the console?",
        "CSD U3 Variables Reassign pt2_instruction": "Create and assign a new variable in a single line.",
        "CSD U3 Variables Reassign_instruction": "Predict: What will get displayed in the console?",
        "CSD U3 Variables Square Random Loop_instruction": "Test your predictions from the last level.",
        "CSD U3 Variables Square Random_instruction": "Change the value \"size\" initialized to make a larger square.",
        "CSD U3 Variables Square_instruction": "Change the value \"size\" initialized to make a larger square.",
        "CSD U3 Variables TEMPLATE square_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables change circle size_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables change circle size_2018_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables create and assign_instruction": "Create and assign size in a single line of code.",
        "CSD U3 Variables draw loop newVars_instruction": "Extend this project to create your own random art visualization with variables.",
        "CSD U3 Variables draw loop rgb_instruction": "Assign the variables x1 and y1 random values inside the draw loop and use them to control where the square is drawn.",
        "CSD U3 Variables draw loop xy_instruction": "Assign the variables x1 and y1 random values inside the draw loop and use them to control where the square is drawn.",
        "CSD U3 Variables eyeBrows_instruction": "Predict what will happen when you move the assignment of eyeSize inside the draw loop. Then try it out",
        "CSD U3 Variables make a big square_instruction": "Change the value of size multiple times. How does it change your drawing?",
        "CSD U3 Variables make a square_instruction": "Change the value of size multiple times. How does it change your drawing?",
        "CSD U3 Variables multiple assignments_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables naming rules v2-2018_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables naming rules v2_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables naming rules v2_2018_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables naming rules_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables random assignment_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables random draw loop_instruction": "Predict what will happen when you move the assignment of eyeSize inside the draw loop. Then try it out",
        "CSD U3 Variables random drawing exemplar_instruction": "Check out this example randomized drawing.",
        "CSD U3 Variables random with assignment_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables random with assignment_2018_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "CSD U3 Variables use value rect_instruction": "Predict: What will get displayed in the console?",
        "CSD U3 Variables write_instruction": "Use the write block to display the value of size",
        "CSD U3 Variables2 expressions in commands_instruction": "Use expressions inside a drawing command",
        "CSD U3 Variables2 expressions in variables_instruction": "Assign the value of each expression to a variable and console.log that variable.",
        "CSD U3 Variables2 expressions_instruction": "Use console.log to display the results of each expression. Then create your own.",
        "CSD U4 - Events Template_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "CSD U5 black white images pixelation 2_instruction": "Draw a smiley face (click here to see image)",
        "CSD U5 black white images pixelation 2_2018_instruction": "Draw a smiley face (click here to see image)",
        "CSD U5 black white images pixelation 3_instruction": "Change the width and height sliders to find the image (click here to see more)",
        "CSD U5 black white images pixelation 3_2018_instruction": "Change the width and height sliders to find the image (click here to see more)",
        "CSD U5 black white images pixelation 4_instruction": "Add eyebrows to the smiley face (click here to see the image)",
        "CSD U5 black white images pixelation 4_2018_instruction": "Add eyebrows to the smiley face (click here to see the image)",
        "CSD U5 black white images pixelation 5_instruction": "Draw anything you like",
        "CSD U5 black white images pixelation 5_2018_instruction": "Draw anything you like",
        "CSD U5 black white images pixelation_instruction": "Complete the X shape by typing 0s and 1s",
        "CSD U5 black white images pixelation_2018_instruction": "Complete the X shape by typing 0s and 1s",
        "CSDU4 - AppLab - 1_instruction": "Read the documentation for penColor() and penWidth() before using them to draw the blue square.",
        "CSDU4 - AppLab - 2_instruction": "Write a program that acts as a simple calculator. (click to see full instructions)",
        "CSDU4 - AppLab - 3_instruction": "Use console to check the ending value of num. (Click to see full instructions)",
        "CSDU4 - AppLab - 4_instruction": " Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)",
        "CSDU4 - Design Mode - 1_instruction": "Add a button that moves the turtle when clicked.  (Click to see full instructions)",
        "CSDU4 - Design Mode - 10_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSDU4 - Design Mode - 11_instruction": "Experiment with different event types and select the one that you think is best. (Click to see full instructions)",
        "CSDU4 - Design Mode - 12_instruction": "Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)",
        "CSDU4 - Design Mode - 16_instruction": "Add an event handler for the button using the \"Insert and show\" link in the Design Mode Events tab. (Click to see full instructions).",
        "CSDU4 - Design Mode - 17_instruction": "Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)",
        "CSDU4 - Design Mode - 18_instruction": "Fix the layout of the bullseye game. (Click to see full instructions)",
        "CSDU4 - Design Mode - 2_instruction": "Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.",
        "CSDU4 - Design Mode - 24_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "CSDU4 - Design Mode - 25_instruction": "Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)",
        "CSDU4 - Design Mode - 26_instruction": "Save the age and name of the user in variables (Click to see full instructions)",
        "CSDU4 - Design Mode - 27_instruction": "Output a message to the 'textArea' (Click to see full instructions)",
        "CSDU4 - Design Mode - 28_instruction": "Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)",
        "CSDU4 - Design Mode - 29_instruction": "Add a dropdown for their guess instead of promptNum (Click to see full instructions)",
        "CSDU4 - Design Mode - 30_instruction": "Show different die images for the random number generated. (Click to see full instructions)",
        "CSDU4 - Design Mode - 31_instruction": "Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)",
        "CSDU4 - Design Mode - 32_instruction": "Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)",
        "CSDU4 - Design Mode - 33_instruction": "Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)",
        "CSDU4 - Design Mode - 4_instruction": "Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)",
        "CSDU4 - Design Mode - 5_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "CSDU4 - Design Mode - 6_instruction": "Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)",
        "CSDU4 - Design Mode - 7_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "CSDU4 - Design Mode - 8_instruction": "Move the button to the middle of the screen. (Click to see full instructions)",
        "CSDU4 nameAgeTemplate_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "CSDU6 - Arrays - expressionsAsIndexes_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 - Arrays - indexPractice_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 - Arrays - length_instruction": "Use list.length to determine the length of each array. (Click to see full instructions)",
        "CSDU6 - Arrays - lengthMinus1_instruction": "Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)",
        "CSDU6 - for loop - color buttons with for_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 - for loop - color buttons_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 - for loop - why for_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 arrays rainbow_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 arrays random_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays select icons_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays select rainbow_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 arrays select rainbow_2018_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSDU6 arrays select random_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays select random_2018_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays select variable_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays select variable_2018_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSDU6 arrays variable_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSP Data Unit - Counting Multiple Things_instruction": "If you can count one thing you can count multiple things\n\nFind out how many people like something other than dogs and cats\n\nCount dogs\nCount cats\nCount total\nDo the math\n\nblank/ blank toal\n\nCan also use this to find percents from this\n\nx% are dog lovers",
        "CSP Data Unit -Counting Records - Easy Way_instruction": "ReadRecords with specific criteria \nfind the length of an array\n",
        "CSP Data Unit -Counting Records - Hard Way_instruction": "\n1. ReadRecords for all records\n2. Way to loop through and count\n",
        "CSP U4 - JSON Object Intro - Bad Way_instruction": "Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)",
        "CSP U4 - JSON Object Intro - Good Way_instruction": "Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) ",
        "CSP U4 - Objects - createObject_instruction": "Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) ",
        "CSP student contact info_instruction": "Please enter your email address.",
        "CSPU5 Add Screens to Chaser Game_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add a 2nd Screen_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "CSPU5 Add a 2nd Screen_2018_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "CSPU5 Add full screen image to bg of chaser game_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add full screen image to bg of chaser game_2018_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add game over screen_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add game over screen_2018_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add onEvent from Design Mode_instruction": "Add an event handler for the button using the \"Insert and show\" link in the Design Mode Events tab. (Click to see full instructions).",
        "CSPU5 Add onEvent from Design Mode_2018_instruction": "Add an event handler for the button using the \"Insert and show\" link in the Design Mode Events tab. (Click to see full instructions).",
        "CSPU5 Add welcome screen to chaser game_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Add welcome screen to chaser game_2018_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5 Adding Screens Template_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "CSPU5 Adding Screens Template_2018_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "CSPU5 Debugging Overlapping Objects and Screen Events_instruction": "Recreate the \"Chaser Game\" from the last lesson using Design Mode. (Click to see full instructions.)",
        "CSPU5 Debugging Overlapping Objects and Screen Events_2018_instruction": "Recreate the \"Chaser Game\" from the last lesson using Design Mode. (Click to see full instructions.)",
        "CSPU5 First Time Console.log_instruction": "Add a 3 console.log messages and test them out. (Click to see full instructions.)",
        "CSPU5 First Time Console.log_2018_instruction": "Add a 3 console.log messages and test them out. (Click to see full instructions.)",
        "CSPU5 Layering and Deleting in Design Mode_instruction": "Fix the layout of the bullseye game. (Click to see full instructions)",
        "CSPU5 Layering and Deleting in Design Mode_2018_instruction": "Fix the layout of the bullseye game. (Click to see full instructions)",
        "CSPU5 Project - Multi Screen App_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "CSPU5 Use Console.log to update IDs_instruction": "Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)",
        "CSPU5 Use setScreen for first time_instruction": "Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)",
        "CSPU5 Use setScreen for first time_2018_instruction": "Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)",
        "CSPU5_AddImageToChaserGame_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_AddImage_andMakeChaserGame_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_AddLabelToChaserGame_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_AddLabelToChaserGame_2018_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_Debugging predict unexpected behavior - two onEvents to one ID_instruction": "Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)",
        "CSPU5_Debugging predict unexpected behavior - two onEvents to one_2018_instruction": "Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)",
        "CSPU5_FinalizeChaserGame_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_Project - Multi Screen App_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "CSPU5_U3 - Arrays - Demo App_instruction": "Use the \"My Favorite Things\" app. How might this app be making use of an array? (Click to see full instructions)",
        "CSPU5_U3 - Arrays - Demo App_2018_instruction": "Use the \"My Favorite Things\" app. How might this app be making use of an array? (Click to see full instructions)",
        "CSPU5_U3 - Arrays - appendItem_instruction": "Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - appendItem_2018_instruction": "Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment_instruction": "Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment2_instruction": "Calculate the sum of three values stored in an array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment2_2018_instruction": "Calculate the sum of three values stored in an array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment3_instruction": "Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment3_2018_instruction": "Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - assignment_2018_instruction": "Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - createFirstArray_instruction": "Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - createFirstArray_2018_instruction": "Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - expressionsAsIndexes_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - expressionsAsIndexes_2018_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Counting Variable_instruction": "Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Counting Variable_2018_instruction": "Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Next_instruction": "Write code that allows the user to move forward through your list by clicking the \"Next\" button. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Next_2018_instruction": "Write code that allows the user to move forward through your list by clicking the \"Next\" button. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Prev_instruction": "Write code that allows the user to move backward through your list by clicking the \"Last\" button. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings Prev_2018_instruction": "Write code that allows the user to move backward through your list by clicking the \"Last\" button. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings addItem_instruction": "Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings addItem_2018_instruction": "Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings bounds_instruction": "Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings bounds_2018_instruction": "Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings createArray_instruction": "Create an array of words describing your favorite things. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings createArray_2018_instruction": "Create an array of words describing your favorite things. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings firstOutput_instruction": "Use setText to display the first item in the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings firstOutput_2018_instruction": "Use setText to display the first item in the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings giveIDs_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings giveIDs_2018_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings keepPlaying_instruction": "Make any other improvements you want! (Click to see full instructions)",
        "CSPU5_U3 - Arrays - favThings keepPlaying_2018_instruction": "Make any other improvements you want! (Click to see full instructions)",
        "CSPU5_U3 - Arrays - indexPractice_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - indexPractice_2018_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - insertingItems_instruction": "Insert items into an array to form a complete sentence. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - insertingItems_2018_instruction": "Insert items into an array to form a complete sentence. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - insertionErrors_instruction": "Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - insertionErrors_2018_instruction": "Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - introIndex_instruction": "Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - introIndex_2018_instruction": "Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - length_instruction": "Use list.length to determine the length of each array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - lengthMinus1_instruction": "Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - lengthMinus1_2018_instruction": "Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - length_2018_instruction": "Use list.length to determine the length of each array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - remove_instruction": "Remove items from an array to form a complete sentence. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - remove_2018_instruction": "Remove items from an array to form a complete sentence. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - stringsInArrays_instruction": "Write a sentence word by word by adding strings to an array. (Click to see full instructions)",
        "CSPU5_U3 - Arrays - stringsInArrays_2018_instruction": "Write a sentence word by word by adding strings to an array. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - 200dots_instruction": "Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - 200dots_2018_instruction": "Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - One Dot sprayPaint_instruction": "Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - One Dot sprayPaint_2018_instruction": "Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - appendToArray_instruction": "Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - appendToArray_2018_instruction": "Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - changeToMouseMove_instruction": "Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - changeToMouseMove_2018_instruction": "Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - clickToAdd_instruction": "Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - clickToAdd_2018_instruction": "Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - delete_instruction": "Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - delete_2018_instruction": "Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - draw at click point_instruction": "Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - draw at click point_2018_instruction": "Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - freePlay_instruction": "Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - freePlay_2018_instruction": "Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - introCanvas_instruction": "Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - introCanvas_2018_instruction": "Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - movementFunction fix Orig_instruction": "Modify the \"Original\" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - movementFunction fix Orig_2018_instruction": "Modify the \"Original\" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - movementFunction_instruction": "Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - movementFunction_2018_instruction": "Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawOriginal_instruction": "Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawOriginal_2018_instruction": "Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawRandom_instruction": "Set up a button and event handler for the random function. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawRandom2_instruction": "Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawRandom2_2018_instruction": "Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - redrawRandom_2018_instruction": "Set up a button and event handler for the random function. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - shiftKey_instruction": "Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - shiftKey_2018_instruction": "Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - sketch_instruction": "Write code that redraws your image using a sketch effect. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - sketch_2018_instruction": "Write code that redraws your image using a sketch effect. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - sprayPaint_instruction": "Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - sprayPaint_2018_instruction": "Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - transparentDots_instruction": "Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - transparentDots_2018_instruction": "Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)",
        "CSPU5_U3 - Canvas - usingOffsetXY_instruction": "Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)",
        "CSPU5_U3 - Canvas - usingOffsetXY_2018_instruction": "Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)",
        "CSPU5_U3 - Conditional Basics - 6_instruction": "Add a setText after the if statement to \"Nope. Guess again.\" (Click to see full instructions)",
        "CSPU5_U3 - Conditionals - Combine AND OR Simple_instruction": "Write an if statement that uses AND and OR to display \"Sleep in!\" if it's the weekend and the user is a teenager. (Click to see full instructions.",
        "CSPU5_U3 - Conditionals - Combine AND OR Simple_2018_instruction": "Write an if statement that uses AND and OR to display \"Sleep in!\" if it's the weekend and the user is a teenager. (Click to see full instructions.",
        "CSPU5_U3 - Conditionals - Combine AND OR and NOT_instruction": "Write an if statement that uses AND and OR to display \"Time to go to school!\" if it's not the weekend and the user is under 18. (Click to see full instructions.)",
        "CSPU5_U3 - Conditionals - Combine AND OR and NOT_2018_instruction": "Write an if statement that uses AND and OR to display \"Time to go to school!\" if it's not the weekend and the user is under 18. (Click to see full instructions.)",
        "CSPU5_U3 - Conditionals - Simple AND_instruction": "Write an if statement that uses AND to display \"You are a teenager.\" if the user enters an age between 13 and 19. (Click to see full instructions)",
        "CSPU5_U3 - Conditionals - Simple AND_2018_instruction": "Write an if statement that uses AND to display \"You are a teenager.\" if the user enters an age between 13 and 19. (Click to see full instructions)",
        "CSPU5_U3 - Conditionals - Simple OR_instruction": "Write an if statement that uses OR to display \"It's the weekend!\" if the user enters a weekend day at the prompt. (Click to see full instructions)",
        "CSPU5_U3 - Conditionals - Simple OR_2018_instruction": "Write an if statement that uses OR to display \"It's the weekend!\" if the user enters a weekend day at the prompt. (Click to see full instructions)",
        "CSPU5_U3 - Design Mode - Console Log_instruction": "Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)",
        "CSPU5_U3 - Design Mode - Layers and Delete_instruction": "Fix the layout of the bullseye game. (Click to see full instructions)",
        "CSPU5_U3 - Design Mode - Multi Screens 2_instruction": "Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)",
        "CSPU5_U3 - Design Mode - Multi Screens_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "CSPU5_U3 - Design Mode - WTF Console Log_instruction": "Add a 3 console.log messages and test them out. (Click to see full instructions.)",
        "CSPU5_U3 - Design Mode -Recreate Beyond Buttons_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "CSPU5_U3 - Design Mode 1_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "CSPU5_U3 - Design Mode 1_2018_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "CSPU5_U3 - Dice - Dropdown and Score_instruction": "Add guess and score to the Dice Game (Click to see full instructions)",
        "CSPU5_U3 - Dice - Dropdown with Strings_instruction": "Add a dropdown for difficulty level that prints the difficulty level in the console. (Click to see full instructions)",
        "CSPU5_U3 - Dice - If_instruction": "Show different die images for the random number generated. (Click to see full instructions)",
        "CSPU5_U3 - Dice - Nested_instruction": "Use nested if statements to make the scoring different for the different game levels. (Click to see full instructions)",
        "CSPU5_U3 - High Low - Debug_instruction": "Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)",
        "CSPU5_U3 - High Low - Debug_2018_instruction": "Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)",
        "CSPU5_U3 - High Low - Dropdown_instruction": "Add a dropdown for their guess instead of promptNum (Click to see full instructions)",
        "CSPU5_U3 - High Low - Else if_instruction": "Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)",
        "CSPU5_U3 - High Low - Else if_2018_instruction": "Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)",
        "CSPU5_U3 - High Low - Else_instruction": "Add an else statement so that the program will tell the user when they are right and when they are wrong. (Click to see full instructions)\n",
        "CSPU5_U3 - High Low - If_instruction": "Add code to the if statement that indicates the user guessed the secret number. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Add Image URLs_instruction": "Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)",
        "CSPU5_U3 - Keys - Add Image URLs_2018_instruction": "Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)",
        "CSPU5_U3 - Keys - Buttons and Keys_instruction": "Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Buttons and Keys_2018_instruction": "Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Demo App_instruction": "Play with the image scroller. Press the left and right arrows to progress through the images.",
        "CSPU5_U3 - Keys - Demo App_2018_instruction": "Play with the image scroller. Press the left and right arrows to progress through the images.",
        "CSPU5_U3 - Keys - Final Image Scroller_instruction": "Update the image scroller to respond to buttons and key presses. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Functions_instruction": "Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Functions_2018_instruction": "Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Key Up and Down_instruction": "Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Key Up and Down_2018_instruction": "Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Multiple Keys_instruction": "Play a different sound when the down arrow is pressed. (Click to see full instructions)",
        "CSPU5_U3 - Keys - Multiple Keys_2018_instruction": "Play a different sound when the down arrow is pressed. (Click to see full instructions)",
        "CSPU5_U3 - Loops -  Complex Condition_instruction": "Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops -  Complex Condition_2018_instruction": "Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 1_instruction": "Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 10_instruction": "Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.",
        "CSPU5_U3 - Loops - 10_2018_instruction": "Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.",
        "CSPU5_U3 - Loops - 11_instruction": "Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 11_2018_instruction": "Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 12_instruction": "Change the code so that it prints the string \"Hi\" 5 times. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 12_2018_instruction": "Change the code so that it prints the string \"Hi\" 5 times. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 14_instruction": "Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 14_2018_instruction": "Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 15_instruction": "Count the number of times the sum of the dice is 12. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 15_2018_instruction": "Count the number of times the sum of the dice is 12. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 1_2018_instruction": "Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 2_instruction": "Try creating an infinite loop using !=, > and <. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 2_2018_instruction": "Try creating an infinite loop using !=, > and <. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 3_instruction": "Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 3_2018_instruction": "Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 4_instruction": "Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 4_2018_instruction": "Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 5_instruction": "Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 5_2018_instruction": "Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 6_instruction": "Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 6_2018_instruction": "Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 7_instruction": "Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 7_2018_instruction": "Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 8_instruction": "Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 8_2018_instruction": "Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 9_instruction": " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)",
        "CSPU5_U3 - Loops - 9_2018_instruction": " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)",
        "CSPU5_U3 - Loops - Minus Minus_instruction": "Change the code to count down from 10 to 1. (Click to see full instructions)",
        "CSPU5_U3 - Loops - Minus Minus_2018_instruction": "Change the code to count down from 10 to 1. (Click to see full instructions)",
        "CSPU5_U3 - Loops - Plus Plus_instruction": "Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)",
        "CSPU5_U3 - Loops - Plus Plus_2018_instruction": "Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)",
        "CSPU5_U3 - Loops - Typing in Console_instruction": "Use console to check the ending value of num. (Click to see full instructions)",
        "CSPU5_U3 - Loops - Typing in Console_2018_instruction": "Use console to check the ending value of num. (Click to see full instructions)",
        "CSPU5_U3 - Loops - minus = operator_instruction": "Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)",
        "CSPU5_U3 - Loops - minus = operator_2018_instruction": "Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)",
        "CSPU5_U3 - Loops - plus and minus = operator_instruction": "Update the code to use the += operator. (Click to see full instructions)",
        "CSPU5_U3 - Loops - plus and minus = operator_2018_instruction": "Update the code to use the += operator. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Add 5_instruction": "Add 5 to all the values in an array (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Add 5_2018_instruction": "Add 5 to all the values in an array (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Counting Times_instruction": "Count the number of times 5 appears in an array. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Counting Times_2018_instruction": "Count the number of times 5 appears in an array. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Divid by 2_instruction": "Divide every value in the array by 2. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Divid by 2_2018_instruction": "Divide every value in the array by 2. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Find Min_instruction": "Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Find Min_2018_instruction": "Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - General Search Param_instruction": "Add a second parameter to the search function for the value to search for.  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - General Search Param_2018_instruction": "Add a second parameter to the search function for the value to search for.  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Intro For Loop_instruction": "Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Intro For Loop_2018_instruction": "Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Linear Search_instruction": "Visit every element in the array and display \"true\" if the value is a 5, and \"false\" otherwise. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Linear Search_2018_instruction": "Visit every element in the array and display \"true\" if the value is a 5, and \"false\" otherwise. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Loop Array If_instruction": "Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Loop Array If_2018_instruction": "Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2018_instruction": "Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter_instruction": "Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Make it a Function_instruction": "Move the code that searches the list for a 5 into a function called \"search\". (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Make it a Function_2018_instruction": "Move the code that searches the list for a 5 into a function called \"search\". (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Print Array_instruction": "Use a for loop to print out all the values in an array. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Print Array_2018_instruction": "Use a for loop to print out all the values in an array. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Printing Single True_instruction": "Process the array and display a single \"true\" if the array contains a 5 or a single \"false\" if it does not.  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Printing Single True_2018_instruction": "Process the array and display a single \"true\" if the array contains a 5 or a single \"false\" if it does not.  (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Search with Boolean Var_instruction": "Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)",
        "CSPU5_U3 - Loops And Arrays - Search with Boolean Var_2018_instruction": "Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)",
        "CSPU5_U3 - Movie Bot - Multiple If Sequences_instruction": "Add another set of if, else if, and else statements inside the question if statement to check for keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)",
        "CSPU5_U3 - Movie Bot - Nested Motivation_instruction": "Add a separate set of if statements to check for a \"?\" in the input. (Click to see full instructions)",
        "CSPU5_U3 - Movie Bot - When Multiple If Statements_instruction": "Add an if and else-if statement that checks for please and thank you. (Click to see full instructions)",
        "CSPU5_U3 - Movie Bot - toLowerCase_instruction": "Use the toLowerCase command to change all user input into lowercase letters after they enter it. (Click to see full instructions)",
        "CSPU5_U3 - Practice Create Performance Task_instruction": "Design and implement your practice Create Performance Task. (Click to see full instructions)",
        "CSPU5_U3 - Return Values - constrainTurtle_instruction": "Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - constrainTurtle_2018_instruction": "Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - debuggingConstrain_instruction": "Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - debuggingConstrain_2018_instruction": "Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - debuggingMaxVal_instruction": "Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - debuggingMaxVal_2018_instruction": "Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - useMinVal_instruction": "Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - useMinVal_2018_instruction": "Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - wrapTurtle_instruction": "Write wrap in this simple app to let the turtle \"wrap\" to the other side of the screen when it goes off.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - wrapTurtle_2018_instruction": "Write wrap in this simple app to let the turtle \"wrap\" to the other side of the screen when it goes off.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - writeMaxVal_instruction": "Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)",
        "CSPU5_U3 - Return Values - writeMaxVal_2018_instruction": "Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 1_instruction": "Use a while loop to \"flip a coin 10 times\" and write the values to the screen. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 1_2018_instruction": "Use a while loop to \"flip a coin 10 times\" and write the values to the screen. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2.1_instruction": "Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2.1_2018_instruction": "Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2.5_instruction": "Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2.5_2018_instruction": "Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2_instruction": "Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 2_2018_instruction": "Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 3_instruction": "Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)\n",
        "CSPU5_U3 - Simulation - 3_2018_instruction": "Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)\n",
        "CSPU5_U3 - Simulation - 4_instruction": "Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 4_2018_instruction": "Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 5_instruction": "Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 5_2018_instruction": "Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 6_instruction": "Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)",
        "CSPU5_U3 - Simulation - 6_2018_instruction": "Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)",
        "CSPU5_U3 - User Input - Save getText To Variable_instruction": "Save the age and name of the user in variables (Click to see full instructions)",
        "CSPU5_U3 - User Input - Save getText To Variable_2018_instruction": "Save the age and name of the user in variables (Click to see full instructions)",
        "CSPU5_U3 - Variables - Set to Expression with Other Variables_instruction": "Write an expression that calculates the player's total score and stores it in the totalScore variable. The calculation is: the player's points times lives divided by the total time. (click to see full instructions)",
        "CSPU5_U3 - Variables - Set to Expression with Other Variables_2018_instruction": "Write an expression that calculates the player's total score and stores it in the totalScore variable. The calculation is: the player's points times lives divided by the total time. (click to see full instructions)",
        "CSPU5_U3 - Variables - Set to Expression_instruction": "Test out the new expressions. (Click to see full instructions)",
        "CSPU5_U3 - Variables - Set to Expression_2018_instruction": "Test out the new expressions. (Click to see full instructions)",
        "CSPU5_U3 Digital Assistant Design_instruction": "Pick a topic for your Digital Assistant and create the basic layout with a text input and text area. (Click to show full instructions)",
        "CSPU5_U3 Digital Assistant Set Text_instruction": "Have your digital assistant repeat back what the user types and include a canned response. (Click to see full instructions)",
        "CSPU5_U3 Digital Assistant Target_instruction": "Try out a demo of the Digital Assistant!",
        "CSPU5_U3 full clicker demo_instruction": "Clicker game - Try it out!",
        "CSPU5_U3 full clicker demo_2018_instruction": "Clicker game - Try it out!",
        "CSPU5_U3- Variables - Create And Assign_instruction": "On one line add a variable called \"lives\" and assign it the value 3. Print it to the console. (Click to see full instructions)",
        "CSPU5_U3- Variables - Create And Assign_2018_instruction": "On one line add a variable called \"lives\" and assign it the value 3. Print it to the console. (Click to see full instructions)",
        "CSPU5_U3- Variables - Text Mode_instruction": "1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion",
        "CSPU5_U3- Variables - Text Mode_2018_instruction": "1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion",
        "CSPU5_U3-Design Mode-ID and Event Handler_instruction": "Add an event handler for the button using the \"Insert and show\" link in the Design Mode Events tab. (Click to see full instructions).",
        "CSPU5_U3-Design Mode-Image_instruction": "Recreate the \"Chaser Game\" from the last lesson using Design Mode. (Click to see full instructions.)",
        "CSPU5_U313 Two Buttons with Ids_instruction": "Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)",
        "CSPU5_U313 drag Two Buttons_instruction": "Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.",
        "CSPU5_U3L13 - Debug Id Problem_instruction": "Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging 1_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging 2_instruction": "Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging 3_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging 3_2018_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging IDs case sensitive_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "CSPU5_U3L13 - Debugging IDs case sensitive_2018_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "CSPU5_U3L13 - Project_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "CSPU5_U3L13 - Turtle Driver Project_instruction": "Create a \"turtle driver\" that includes buttons to move the turtle forward and turn it left and right. (Click to see full instructions)",
        "CSPU5_U3L13 - Turtle move with button_instruction": "Add a button that moves the turtle when clicked.  (Click to see full instructions)",
        "CSPU5_U3L13 eventsDetails_instruction": "Add an event handler to the button to move the turtle forward. (Click to see full instructions)",
        "CSPU5_U3L14 - Assigning Random Value_instruction": "Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)",
        "CSPU5_U3L14 - Assigning Random Value_2018_instruction": "Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)",
        "CSPU5_U3L14 - Mini Calculator embed_instruction": "You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.",
        "CSPU5_U3L14 - Mini Calculator embed_2018_instruction": "You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.",
        "CSPU5_U3L14 - User Input Division calculator_instruction": "Write a program that acts as a simple calculator. (click to see full instructions)",
        "CSPU5_U3L14 - User Input Division calculator_2018_instruction": "Write a program that acts as a simple calculator. (click to see full instructions)",
        "CSPU5_U3L14 - Variable ReAssignment pt2_instruction": "Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)",
        "CSPU5_U3L14 - Variable ReAssignment pt2_2018_instruction": "Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)",
        "CSPU5_U3L14 - concatenate simple_instruction": "Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)",
        "CSPU5_U3L14 - concatenate simple_2018_instruction": "Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge1_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge1_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge2_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge2_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge3_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge3_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge4_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge4_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge5_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge5_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge6_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L14 - moving memory challenge6_2018_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "CSPU5_U3L15 - Add reset button to UpDown app_instruction": "Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)",
        "CSPU5_U3L15 - Add reset button to UpDown app_2018_instruction": "Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)",
        "CSPU5_U3L15 - DEMO up down count practice app_instruction": "Try out the demo app (Click to see full instructions)",
        "CSPU5_U3L15 - DEMO up down count practice app_2018_instruction": "Try out the demo app (Click to see full instructions)",
        "CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_instruction": "Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_2018_instruction": "Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Debug if never triggers in UpDown app_instruction": "Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Debug if never triggers in UpDown app_2018_instruction": "Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Debugging Simple If-statements =v==_instruction": "Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Debugging Simple If-statements =v==_2018_instruction": "Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)",
        "CSPU5_U3L15 - Simple If-statements in UpDown App_instruction": "Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)",
        "CSPU5_U3L15 - Simple If-statements in UpDown App_2018_instruction": "Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)",
        "CSPU5_U3L15 - add code to make count down work_instruction": "Write code to make the down arrow work as expected. (Click to see full instructions)",
        "CSPU5_U3L15 - add code to make count down work_2018_instruction": "Write code to make the down arrow work as expected. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug forget to set text_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug forget to set text_2018_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug logic error wrong update_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug logic error wrong update_2018_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug var not created globally_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - count upDown bug var not created globally_2018_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "CSPU5_U3L15 - global var example count up_instruction": "Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).",
        "CSPU5_U3L15 - global var example count up_2018_instruction": "Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).",
        "CSPU5_U3L15 - mini clicker update score_instruction": "Add code to update the score when the apple is clicked. (Click to see full instructions)",
        "CSPU5_U3L15 - mini clicker update score_2018_instruction": "Add code to update the score when the apple is clicked. (Click to see full instructions)",
        "CSPU5_U3L15 - practice with setText_instruction": "Use setText to complete the click event handler for the down arrow. (Click to see full instructions)",
        "CSPU5_U3L15 - practice with setText_2018_instruction": "Use setText to complete the click event handler for the down arrow. (Click to see full instructions)",
        "CSPU5_U3L15 - variable scoping problem debugging_instruction": "See if you can figure out why the code is no longer working. (Click to see full instructions)",
        "CSPU5_U3L15 - variable scoping problem debugging_2018_instruction": "See if you can figure out why the code is no longer working. (Click to see full instructions)",
        "CSPU5_U3L15 click add lives_instruction": "Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)",
        "CSPU5_U3L15 click add lives_2018_instruction": "Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)",
        "CSPU5_U3L15 full clicker app_instruction": "Complete your clicker game! (Click to see full instructions)",
        "CSPU5_U3L15 full clicker app_2018_instruction": "Complete your clicker game! (Click to see full instructions)",
        "CSPU5_U3L16 - challenge say hi app_instruction": "Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)",
        "CSPU5_U3L16 - chaserApp_instruction": "Create your own \"Chaser Game.\" (Click to see full instructions)",
        "CSPU5_U3L16 - chooseImages_instruction": "Replace the image in your application with one of your own. (Click to see full instructions)",
        "CSPU5_U3L16 - doubleQuotes_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "CSPU5_U3L16 - doubleQuotes_2018_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "CSPU5_U3L16 - intro getText_instruction": "Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)",
        "CSPU5_U3L16 - intro getText_2018_instruction": "Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)",
        "CSPU5_U3L16 - introSetPosition_instruction": "Move the buttons to the bottom of the screen. (Click to see full instructions)",
        "CSPU5_U3L16 - introStrings_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "CSPU5_U3L16 - introStrings_2018_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "CSPU5_U3L16 - newEventTypes_instruction": "Experiment with different event types and select the one that you think is best. (Click to see full instructions)",
        "CSPU5_U3L16 - outputWithTextArea_instruction": "Output a message to the 'textArea' (Click to see full instructions)",
        "CSPU5_U3L16 - outputWithTextArea_2018_instruction": "Output a message to the 'textArea' (Click to see full instructions)",
        "CSPU5_U3L16 - setPosition to fixed location_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_U3L16 - setPosition to move button_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_U3L16 - setPosition to move button_2018_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_U3L16 - singleSetPosition_instruction": "Move the button to the middle of the screen. (Click to see full instructions)",
        "CSPU5_U3L16 - text labels_instruction": "Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)",
        "CSPU5_U3L16 - textInput getText write_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "CSPU5_U3L16 - textInput getText write_2018_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "CSPU5_U3L16 - toUpper_instruction": "Make the name of the user appear in uppercase (Click to see full instructions)",
        "CSPU5_U3L16 - toUpper_2018_instruction": "Make the name of the user appear in uppercase (Click to see full instructions)",
        "CSPU5_U3L16 - use images_instruction": "Use the image command to replace the text label in your program with an image. (Click to see full instructions)",
        "CSPU5_U3L16 Mad Lib Clear Input_instruction": "Clear the user's previous text when the Play Again button is clicked (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib Clear Input_2018_instruction": "Clear the user's previous text when the Play Again button is clicked (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib Demo_instruction": "Mad Libs Demo - Try it out!",
        "CSPU5_U3L16 Mad Lib Demo_2018_instruction": "Mad Libs Demo - Try it out!",
        "CSPU5_U3L16 Mad Lib Student Setup_instruction": "Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)",
        "CSPU5_U3L16 Mad Lib Student Setup_2018_instruction": "Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)",
        "CSPU5_U3L16 Mad Lib getText_instruction": "Before setting the text area with your Mad Libs outline, get the user's text and incorporate their responses. (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib getText_2018_instruction": "Before setting the text area with your Mad Libs outline, get the user's text and incorporate their responses. (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib setText_instruction": "When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user's input). (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib setText_2018_instruction": "When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user's input). (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib toUpper_instruction": "Apply the toUpperCase and toLowerCase string functions to the user's text. (Click to see full instructions) ",
        "CSPU5_U3L16 Mad Lib toUpper_2018_instruction": "Apply the toUpperCase and toLowerCase string functions to the user's text. (Click to see full instructions) ",
        "CSPU5_U3L18 comparison operators_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_U3L18 comparison operators_2018_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_U3L19 - fix the var name syntax error v2_instruction": "Fix the error and get it to print the value of both variables (Click to see full instructions)",
        "CSPU5_U3L19 - fix the var name syntax error v2_2018_instruction": "Fix the error and get it to print the value of both variables (Click to see full instructions)",
        "CSPU5_U3L19 - test reassignment of two vars_instruction": "Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)",
        "CSPU5_U3L19 - test reassignment of two vars_2018_instruction": "Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)",
        "CSPU5_U3L19 - three basic ops of variables_instruction": "Add another variable called \"lives\" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)",
        "CSPU5_U3L19 - three basic ops of variables_2018_instruction": "Add another variable called \"lives\" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)",
        "CSPU5_U3L19 - variable reassignment challenge pt2_instruction": "Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)",
        "CSPU5_U3L19 - variable reassignment challenge pt2_2018_instruction": "Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)",
        "CSPU5_U3L19 - write var and string with same name v2_instruction": "Fix the code so that the values of both variables print to the console. (Click to see full instructions)",
        "CSPU5_U3L19 - write var and string with same name v2_2018_instruction": "Fix the code so that the values of both variables print to the console. (Click to see full instructions)",
        "CSPU5_U3L23 Chatbot Conditionals 1_instruction": "Add if, else if, and else statements to detect the movie genres Comedy, Romance, Action, and Horror. (Click to see full instructions)",
        "CSPU5_U3L24 Chatbot Basic Conditionals_instruction": "Check out the project description for instructions. (Click to see full instructions.)",
        "CSPU5_U3L24 Nested Conditionals 1_instruction": "Change all of the boolean expressions to use includes instead of ==. (Click to see full instructions)",
        "CSPU5_U3L24 Nested Conditionals 2_instruction": "Nest your movie genre if statements inside the if statements to check for a ? in the input. ",
        "CSPU5_U3L24 introIncludes_instruction": "Practice using the includes command. (Click to see full instructions)",
        "CSPU5_U3L25 - drag out key event_instruction": "Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)",
        "CSPU5_U3L25 - drag out key event_2018_instruction": "Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)",
        "CSPU5_U3L25 - play sound when up key_instruction": "Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)",
        "CSPU5_U3L25 - play sound when up key_2018_instruction": "Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)",
        "CSPU5_U3L26 AND operator_instruction": "Update the genre and rating if statements to give only one movie suggestion at a time. (Click to see full instructions)",
        "CSPU5_U3L26 OR operator_instruction": "Update the if statement to use an OR to check for a \"?\" as well as who, what, where, when, why, how in the user input. (Click to see full instructions)",
        "CSPU5_addDescriptiveIDsToTurtleDriver_instruction": "Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)",
        "CSPU5_addDescriptiveIDsToTurtleDriver_2018_instruction": "Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)",
        "CSPU5_basic if - DIY secret number_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if - DIY secret number_2018_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if - check driving age_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if - check driving age_2018_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if - voting examle_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if-else - driving age_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_basic if-else - driving age_2018_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "CSPU5_clickerGame_v1_template_instruction": "Create your own \"Chaser App\". (Click to see full instructions)",
        "CSPU5_clickerGame_v1_template_2018_instruction": "Create your own \"Chaser App\". (Click to see full instructions)",
        "CSPU5_moveTurtleOnButtonClick_instruction": "Add an event handler to the button to move the turtle forward. (Click to see full instructions)",
        "CSPU5_moveTurtleOnButtonClick_2018_instruction": "Add an event handler to the button to move the turtle forward. (Click to see full instructions)",
        "CSPU5_playWithEventTypes_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "CSPU5_playWithEventTypes_2018_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "CSPU5_setPosition to fixed location_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_setPosition to fixed location_2018_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "CSPU5_turtleDriver_add2ndButton_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "CSPU5_turtleDriver_add2ndButton_2018_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "Calc Circles of Eval .1_instruction": "You’ll be writing a kind of code called Evaluation Blocks, because each block of code evaluates to a single value. Change the ??? in this code so that the block evaluates to 5.",
        "Calc Circles of Eval .2_instruction": "This Evaluation Block is a multiplication function which takes two numbers and returns the product of those numbers. Edit this block so that it multiplies 2 * 5",
        "Calc Circles of Eval .3_instruction": "Here's a function for addition which takes two numbers and returns their sum. Use this Addition Block to add 3 + 6.",
        "Calc Circles of Eval .4_instruction": "Here we've nested an Addition Block inside a Multiplication Block. Complete this code so it multiplies 3 by (4 + 1)",
        "Calc Circles of Eval 1_instruction": "Every mathematical operator (+, -, *, /, and so on) can be represented by an Evaluation Block in code. Change the Evaluation Block to match the expression.",
        "Calc Circles of Eval 2_instruction": "Use a Multiplication Block to complete this code.",
        "Calc Circles of Eval 3_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 4_instruction": "This code is missing a couple of Evaluation Blocks - make sure you put everything in the right order.",
        "Calc Circles of Eval 5_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 6_instruction": "Complete the Evaluation Blocks to match this expression.",
        "Calc Circles of Eval 7_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 8_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 9_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval Free Play_instruction": "Free Play: Try using the Evaluation Blocks to write some equations of your own. How does nesting the blocks in different ways impact their evaluation?",
        "Calc Define Funcs 1 (copy 1)_instruction": "Let's look at some more algebraic functions now. Here's a function translated from the simple algebraic function f(x) = x + 1. What would you expect this function to output if provided an input of 15?",
        "Calc Define Funcs 1_instruction": "Let's look at some more traditional algebraic functions now. Here's a function translated from the simple algebraic function f(x) = x + 1. What would you expect this function to output if provided an input of 15?",
        "Calc Define Funcs 2_instruction": "Write a function f that takes a parameter x and returns x - 10. Test your function using f(15).",
        "Calc Define Funcs 3_instruction": "We don't have to call our function f every time; create a function called times-ten that should take a parameter x and return x * 10. Once you've created the function, run times-ten(50).",
        "Calc Define Funcs 4_instruction": "Write a function called half that takes a number x and returns half that number. Once you've written the function, use it to calculate half(21)",
        "Calc Define Funcs 5 - multiply 1_instruction": "Oh no! We lost our multiply block! We'll have to create a function to multiply for us. To start off, write a function \"f\" that takes a parameter \"x\" and returns x*5. Test your function using f(3).",
        "Calc Design Recipe 1_instruction": "Let's use the Design Recipe to create a function called cube - this function should take in a Number and return that number to the power of 3. Make sure to write two example cases! When you're done, use your new function to calculate cube(7).",
        "Calc Design Recipe 2_instruction": "Your school is holding a bake sale, and you need to track the cost of making each cookie, the money paid, and the total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\n\nWrite the function cost, which takes in the number of cookies you intend to sell, and returns the cost of making those cookies.\n\nTest your function by calculating the cost of 42 cookies",
        "Calc Design Recipe 3_instruction": "Write the function sales which takes in the number of cookies sold, and produces the amount of money customers spent to buy those cookies (each cookie is sold at $1.50).\n\nTest your function by calculating the sales for 135 cookies",
        "Calc Design Recipe 4_instruction": "Using the two functions we just wrote, write the function profit, which takes in the number of cookies you sold, and gives you back the total profit you make from selling your cookies, accounting for the cost of baking them.\n\nTest your function by calculating the total profit for 15 cookies.",
        "Calc Free Play_instruction": "Free Play: Write functions and algorithms of your own design!",
        "Calc Rocket 1 (copy 1)_instruction": "In the last puzzle you wrote a contract for the function \"rocket-height\" that states it has a range of Number, domain of Number, and should return the height of the rocket traveling at 15 m/s after a given number of seconds. Let's write an example case now for the height of the rocket at 3 seconds.\n\n\n\n  \n\n",
        "Calc Rocket 1_instruction": "In the last puzzle you wrote a contract for the function rocket-height that states it has a range of Number, domain of Number, and should return the height of the rocket traveling at 15 m/s after a given number of seconds. Let's write an example case now for the height of the rocket at 3 seconds.",
        "Calc Rocket 2_instruction": "Great, let's do one more example before writing the function - what should the rocket height be after 30 seconds?",
        "Calc Vars 1.1_instruction": "Here we've set the age variable to 17 years. Can you write an expression that calculates age in days?",
        "Calc Vars 1_instruction": "Variables allow us to name values so that we can easily refer to them repeatedly throughout our programs. Here's a variable called age. Set its value to your age and click run.",
        "Calc Vars 2 (copy 1)_instruction": "Here we've set the \"age\" variable to 17 - can you write an expression that calculates \"age\" in months?",
        "Calc Vars 2.1_instruction": "Here's a new variable called age-in-months. Use the variable age to set age-in-months.",
        "Calc Vars 2_instruction": "Can you write an expression that calculates age in months?",
        "Calc Vars 3 (copy 1)_instruction": "Can you add to this code so that it calculates how many hours there are in \"age\" years?",
        "Calc Vars 3_instruction": "Can you add to this code so that it uses the \"age\" variable to calculate age in hours?",
        "Calc Vars 4_instruction": "We can also set variables by using other variables. Let's say you have a brother who is two years younger than you - can you set a new variable \"brother-age\" using your \"age\" variable?",
        "Choose Your Own Adventure_instruction": "You can do whatever you want in play lab! Here's an example of choose your own adventure story in play lab.",
        "Choose Your Own Adventure_2018_instruction": "You can do whatever you want in play lab! Here's an example of choose your own adventure story in play lab.",
        "Code Studio Puzzle Challenge 1 - Artist_instruction": "Draw the line. It is 200 pixels long. ",
        "Code Studio Puzzle Challenge 1 Artist1_instruction": "Draw the line. It is 200 pixels long. ",
        "Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction": "Move the Bee to the flower and get all of the nectar.",
        "Code Studio Puzzle Challenge 10 - Bee_instruction": "Move the Bee to the flower and get all of the nectar.",
        "Code Studio Puzzle Challenge 10b - Bee_instruction": "Move the Bee to the flowers and get all of the nectar at each.",
        "Code Studio Puzzle Challenge 11 - Artist_instruction": "Draw this line by using the variable \"length\". Each line segment is 75 pixels long.",
        "Code Studio Puzzle Challenge 11b - Artist_instruction": "Draw a square by using the variable length provided.",
        "Code Studio Puzzle Challenge 12 - Artist_instruction": "The code provided draws one triangle. Add to it to draw triangles in a hexagon pattern.",
        "Code Studio Puzzle Challenge 12a - Artist_instruction": "The code provided draws one triangle. Add to it to draw triangles in a hexagon pattern.",
        "Code Studio Puzzle Challenge 13 - Artist_instruction": "This is just like a \"for\" loop. Complete the code to draw six lines that grow from 50, 60, 70, 80, 90, to 100 pixels long. ",
        "Code Studio Puzzle Challenge 14 - Artist_instruction": "This is just like a \"for\" loop. Complete the loop to draw 4 squares that grow from 80, 100, 120, to 140 pixels. ",
        "Code Studio Puzzle Challenge 2 - Artist_instruction": "Now add a turn and another line. The lines are 200 pixels long.",
        "Code Studio Puzzle Challenge 3 - Artist_instruction": "Draw the square. Each side is 100 pixels long.",
        "Code Studio Puzzle Challenge 4 - Artist_instruction": "Draw the octagon. Each side is 100 pixels long.",
        "Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction": "Move the Bee to the flower and get the nectar.",
        "Code Studio Puzzle Challenge 5 - Bee_instruction": "Flowers contain a specific amount of nectar. Move the Bee to the flower and collect nectar with the get nectar block.",
        "Code Studio Puzzle Challenge 6 - Bee_instruction": "Honeycombs can hold a specific amount of honey. Get the nectar from the flower and make some honey.",
        "Code Studio Puzzle Challenge 7 - Bee_instruction": "Move the Bee to the flower and get the nectar.",
        "Code Studio Puzzle Challenge 8 - Bee_instruction": "The cloud could be hiding a flower or a honeycomb. Only get nectar from flowers. Only make honey at honeycombs.",
        "Code Studio Puzzle Challenge 9 - Bee_instruction": "The cloud could be hiding a flower or a honeycomb. Only get nectar from flowers. Only make honey at honeycombs.",
        "Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction": "Draw the line. Each segment is 100 pixels long. ",
        "Code Studio Puzzle Challenge Artist Screencast 2_instruction": "Complete the code to draw the line. Each segment is 100 pixels long. ",
        "Code Studio Puzzle Challenge Artist Screencast_instruction": "Draw the line. Each segment is 100 pixels long. ",
        "Code Studio Puzzle Challenge Bee Screencast_instruction": "Move the Bee to the flowers and get all of the nectar.",
        "Code Studio Puzzle Challenge Square - Artist_instruction": "Draw a square by using the variable length provided.",
        "Code Studio Puzzle Challenge Var - Artist_instruction": "Draw a line by using a variable \"length\" set to 180.",
        "Collector Demo_instruction": "Look at all this loot! Help me get as many coins as I can so I can improve my farm. I can only use 9 blocks though!",
        "Course 2 Bee Loops 1_instruction": "Hi, I'm a bee. Can you help me collect the nectar from these flowers? ",
        "Course 2 Bee Loops 13_instruction": "Assessment: Use the repeat block to collect all of the nectar.",
        "Course 2 Bee Loops 2_instruction": "Can you do the same task more easily with a loop?",
        "Course 2 Bee Loops 3_instruction": "Now use the new repeat block to collect all of the nectar and make all of the honey.",
        "Course 2 Bee Loops 3__instruction": "Can you use a loop to collect all that nectar?",
        "Course 2 Bee Loops 4_instruction": "What happens if you loop this sequence 3 times? Don't forget to make the honey at the end!",
        "Course 2 Maze Loops 1_instruction": "Can you get me to the pig using 5 blocks?",
        "Course 4 2_instruction": "The bee only wants nectar right now. Remember, not all objects are flowers, so check to gather nectar only at flowers.",
        "Course 4 Artist 1_instruction": "Help me draw a box. (Each line is 200 pixels long) ",
        "Course 4 Artist 10_instruction": "Click here to see the full instructions again!\n\nHere is the code for an interesting shape.  What happens when you repeat it multiple times, turning between each iteration?   Notice that the turns in this shape add up to 420 degrees, which means that when your artist is done drawing, it will be facing a different direction than when you started.  That new direction is exactly 60 degrees to the right of where you began.",
        "Course 4 Artist 11_instruction": "Now for a challenge!  Feel free to use trial and error. You are not expected to get the image perfect the first time.   Want to see more hints?  Click here!",
        "Course 4 Artist 12_instruction": "Want a second peek at the inspiration design or the hints?  Click here!\n\nOtherwise, make a design all your own!",
        "Course 4 Artist 13_instruction": "Still playing?  Here is a blank canvas where you can design anything you want!",
        "Course 4 Artist 2_instruction": "Can you use a loop to draw the greyed out square?  (Each side is 300px long)",
        "Course 4 Artist 20_instruction": "Still playing?  Here is a blank canvas where you can create whatever you want!",
        "Course 4 Artist 3_instruction": "Try to figure out what happens if you run this code (or press \"Run\" to test it). Then, repeat it enough times to complete the drawing.",
        "Course 4 Artist 4_instruction": "How many degrees are in a circle?  Fill in the repeat block with that number to create a circle of colors.",
        "Course 4 Artist 5_instruction": "Draw the other half of this design so it's symmetrical. The triangles are equilateral and are 50 pixels long. Hint: You may have to run the code several times to figure out all of the blocks that need to be added.",
        "Course 4 Artist 6_instruction": "Complete the code to draw these three, equilateral triangles.",
        "Course 4 Artist 7_instruction": "Now nest this loop inside another loop to draw 10 triangles. This is called a nested loop. Hint: All 10 triangles complete a 360 degree rotation.  ",
        "Course 4 Artist 8_instruction": "Draw this sun by looping this whole block of code multiple times.",
        "Course 4 Artist 8a_instruction": "Remember this shape?  Now we're going to let you build it without giving you any blocks to start!",
        "Course 4 Artist 9_instruction": "Loop this design 10 times and make sure to turn between each shape that's drawn. \n",
        "Course 4 Artist Binary 1_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  The artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\nRun this code to see how the artist uses binary to draw this pattern.",
        "Course 4 Artist Binary 1a_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  The artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\nRun this code to see how the artist uses binary to draw this pattern.",
        "Course 4 Artist Binary 2_instruction": "Which of these binary strings could you loop 8 times to draw this image?",
        "Course 4 Artist Binary 3_instruction": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
        "Course 4 Artist Binary 4_instruction": "Each binary string represents one row of this picture. Can you rearrange them so it draws a smiley face instead of a frowny face?",
        "Course 4 Artist Binary 5_instruction": "Which 6 digit binary string, repeated 11 times, will draw this image?",
        "Course 4 Artist Binary 6_instruction": "What is the shortest binary string that you can repeat to draw this image?",
        "Course 4 Artist Binary 7_instruction": "Finish this drawing.",
        "Course 4 Artist Binary Free Play 2_instruction": "Free Play: Here's a blank canvas for you to draw on.  Have fun!",
        "Course 4 Artist Binary Free Play 2a_instruction": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits?",
        "Course 4 Artist Binary Free Play 2b_instruction": "Click here to see hints.",
        "Course 4 Artist Binary Free Play_instruction": "Free Play: Draw whatever you like with binary!",
        "Course 4 Artist Binary pre1_instruction": "Use the blocks below to have the artist draw \"01010101\" in binary in the first row.",
        "Course 4 Artist Binary ryan_instruction": "Binary is a way of representing information using only two options.  Here, we're going to use the options \"off\" (represented by the number 0) and \"on\" (represented by the number 1).  \n\nWe've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.  Can you have the artist draw \"01010101\" in binary in the first row?",
        "Course 4 Artist For  Functions 10_instruction": "Let's Step it up a little, can you draw a Star shape using the \"Draw a Square Line\" function? Good luck!",
        "Course 4 Artist For  Functions 11_instruction": "Let's Step it up a little, can you draw a Star shape using the \"Draw a Square Line\" function? Good luck!",
        "Course 4 Artist For Loops 1_instruction": "Use a repeat block to draw this triangle that is 50 pixels wide.",
        "Course 4 Artist For Loops 10_instruction": "Free Play Time! Have fun drawing whatever you like with the blocks you have learned how to use",
        "Course 4 Artist For Loops 11_instruction": "Remember back in a previous stage when we used a variable to control the number of sides in a shape? We are going to do the same thing with the `counter` variable now. This pattern starts with a triangle and adds one side at a time until it draws a decagon (10 sides). Each side should be 100 pixels long. ",
        "Course 4 Artist For Loops 11a_instruction": "Let's put it all together!  Using your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.\n\nVery little of the code has been provided for you.",
        "Course 4 Artist For Loops 12_instruction": "That looked pretty cool, but now I'd like to draw each shape next to the last one. This time each side is 20 pixels. Use a jump block to jump forward 40 pixels after each shape. ",
        "Course 4 Artist For Loops 13_instruction": "Hmmm, those shapes are getting bigger every time! Didn't we already solve this problem with variables? How can we use the counter variable to make the sides smaller as there are more of them? Instead of moving forward by a set amount, try moving forward (100 / counter) pixels.",
        "Course 4 Artist For Loops 14_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect. Try using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "Course 4 Artist For Loops 15_instruction": "Free Play: Try making some drawings of your own using \"for loops\". We've added a few useful variables for you as well.",
        "Course 4 Artist For Loops 2_instruction": "I've put the code for drawing a triangle inside a for loop that counts from 50 to 100 by 10.  NOTE: Make sure you look at the code before you hit \"Run\".",
        "Course 4 Artist For Loops 3_instruction": "Use the last puzzle as a reference to complete this one.  The smallest triangle has 20 pixel sides, the largest has 200 pixel sides, and each triangle is 20 pixels larger than the last. ",
        "Course 4 Artist For Loops 4_instruction": "How would you modify what you've learned to draw these squares? They start at 15 pixels long, the largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
        "Course 4 Artist For Loops 5_instruction": "Good job on the last puzzle! Let's use that \"counter\" variable block again to draw this cool picture. ",
        "Course 4 Artist For Loops 6_instruction": "Free Play! Try using a for loop to draw a growing shape pattern of your own design.",
        "Course 4 Artist For Loops 6a_instruction": "Make three small changes to the code from the last level to get this!",
        "Course 4 Artist For Loops 7_instruction": "What happens if you remove the \"Repeat 3\" from this algorithm, keeping the \"move\" and \"turn\" blocks in the for loop? In this spiraling triangle, each side is 20 pixels longer than the last.",
        "Course 4 Artist For Loops 8_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n\nHint:  You need to remove something!",
        "Course 4 Artist For Loops 8a_instruction": "Just one little change to the code from the last image can create this image. Can you figure out what that change is?",
        "Course 4 Artist For Loops 9_instruction": "Can you make a spiral? Move forward from 1 to 75 pixels, increasing by 1 pixel each time.",
        "Course 4 Artist For Loops Challenge_instruction": "**Challenge:** Can you figure out how to use all of the things you've learned to create this image of polygons, all with 40 pixel sides?",
        "Course 4 Artist For Loops Challenge_a_instruction": "Can you figure out how to use all of the things you've learned to create this image?\n\nNeed a hint? Click here.",
        "Course 4 Artist For Loops inspire_instruction": "Free-Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNeed a hint? Click here.",
        "Course 4 Artist Functions 1_instruction": "Can you draw a square that is 100 pixels in length, using a loop?",
        "Course 4 Artist Functions 10_instruction": "Which block do you need to add to get the triangle to sit on top of the square?",
        "Course 4 Artist Functions 11_instruction": "Check out this code that draws a cube - can you move it into a function called \"Draw a Cube\"",
        "Course 4 Artist Functions 12.1_instruction": "Let's create a function called \"draw an octagon 20\" that draws an octagon where each side is 20 pixels long.",
        "Course 4 Artist Functions 12_instruction": "Loop square function to draw a line",
        "Course 4 Artist Functions 13.1_instruction": "Now, let's make a function called \"jump to upper right\" that moves the artist to the upper-right of the octagon that you just drew so we can finish this pattern.\n\nHint:  To get yourself to the upper-right corner, try jumping in a pattern that makes just 3/8 of the octagon.",
        "Course 4 Artist Functions 13_instruction": "Check it out we have a new function called \"draw a line of squares\". Feel free to take a look inside the function block to see how we built it. Click on \"Run\" when your are ready for the next puzzle.",
        "Course 4 Artist Functions 14.1_instruction": "Now, let's make a function called \"jump to upper right\" that moves the artist to the top-right of the octagon that you just drew so we can finish this pattern.",
        "Course 4 Artist Functions 14_instruction": "You're doing great! Let's use your new \"Draw a line of squares\" function to draw a Square shape. Remember each square is 40 pixels in length.",
        "Course 4 Artist Functions 15_instruction": "Let's Step it up a little, can you draw a star shape using the \"draw a line of squares\" function? Good luck! Hint: you may have to turn 144 degrees",
        "Course 4 Artist Functions 2_instruction": "Can you draw 3 squares 20 pixels apart from one another? Hint: each square is 100 pixels in size",
        "Course 4 Artist Functions 3_instruction": "Using the \"draw a square\" function block, can you draw this picture? Hint: each square is 120 pixels apart.\n",
        "Course 4 Artist Functions 4_instruction": "Are you ready to create your own \"Function Block\"? Click on the \"Functions\" block in the tool box, name it \"draw a triangle\", then create a triangle as you have done before with the Action and Loops blocks. Then click on the Save and Close in the upper right hand corner. Hint: Create a triangle that is 100 pixels in length. Good luck!",
        "Course 4 Artist Functions 5 OLD_instruction": "Let's try to use our two functions to draw a house - what needs to be fixed in this code to draw the house properly?",
        "Course 4 Artist Functions 5_instruction": "Using the \"draw a square\" function block, can you draw this picture? Hint: each square is 120 pixels apart.\n",
        "Course 4 Artist Functions 6_instruction": "Which block do you need to add to get the triangle to sit on top of the square?",
        "Course 4 Artist Functions 7_instruction": "Can you draw a line of squares using a Square function? Each square is 40 pixel's in length.",
        "Course 4 Artist Functions 8_instruction": "Are you getting the hang of how to use function blocks? Let's modify this square so that it is 200 pixels in size. Hint: click on \"edit\" to change the size of the \"draw a square\" function editor. Remember to click on \"save and close\" to get out of the function editor. ",
        "Course 4 Artist Functions 9_instruction": "We have given you most of the code to create a function. However there seems to be something missing. Can you make this function block complete?",
        "Course 4 Artist Functions Inspiration_instruction": "Click here to see the hints again.",
        "Course 4 Artist Functions challenge_instruction": "Click here to see the hints again.",
        "Course 4 Artist Functions inspire_instruction": "Click here to see the inspiration picture again.",
        "Course 4 Artist Inspire_instruction": "Want a second peek at the inspiration design or the hints?  Click here!\n\nOtherwise, make a design all your own!",
        "Course 4 Artist Params 1_instruction": "Let's edit a function that draws a square with 50 pixel sides",
        "Course 4 Artist Params 10_instruction": "You can call functions from inside other functions! Using your \"shape\" function as a base, create 3 house shapes each 20 pixels larger than the last starting at 50 pixels in length. Using a counter loop might be helpful. ",
        "Course 4 Artist Params 11_instruction": "How about a function called \"pinwheel\" that takes three parameters - \"sides,\" \"length\" and \"repeat.\" You can calculate how much to turn after each shape using the same math you used to figure out the turns for a shape of \"sides\". Can you recreate this picture? Here's a tip each shape is 100 pixel's in length.",
        "Course 4 Artist Params 12_instruction": "Use your \"pinwheel\" function to draw each of these shapes. The side length for each image is 50.",
        "Course 4 Artist Params 13_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Draw something awesome!",
        "Course 4 Artist Params 2_instruction": "That triangle function would be a whole lot more useful if it could draw triangles of different sizes. I've added a parameter for line length, but it doesn't do anything yet. Can you update the function so it uses the \"length\" parameter when it draws each side? The triangle sizes are 150 pixels, 75 pixels and 25 pixels.",
        "Course 4 Artist Params 3_instruction": "Awesome, can you draw each of these triangles with that new function? The first is 25 pixels long, the second is 50, and the third is 75. ",
        "Course 4 Artist Params 4_instruction": "Can you add a new function called square? It should also take a length parameter, just like the triangle. This time draw 3 squares 25, 50 and 75 pixels in length,100 pixels apart.",
        "Course 4 Artist Params 5_instruction": "Use both of your new functions to draw this picture. To make this easier you use a loop with a \"counter\" parameter. ",
        "Course 4 Artist Params 6_instruction": "Let's edit this \"draw a shape\" function. It already has a \"length\" parameter. Now, let's edit the function to also add a \"sides\" parameter. Remember the angle to turn for a given shape is 360 divided by the sides it has. Hint: lengths for each shape are the triangle is 100 pixels, the hexagon is 25 pixels and the square is 50 pixels. ",
        "Course 4 Artist Params 7_instruction": "Can you draw these shapes by filling in the \"???\" The square and triangle are 100 pixels in size while the hexagon is 75 pixels in size. ",
        "Course 4 Artist Params 8_instruction": "Can you figure out how to draw this shape? Here's a hint create a new function with 6 sides called a hexagon. ",
        "Course 4 Artist Params 9_instruction": "Do you remember when we used the counter loop but removed a loop within? Let's have some fun and use the \"draw a shape\" function with \"sides\" and \"length\" parameters. Can you re create these shapes? The square counter should be 5/100/5, the triangle counter should be 10/100/10 and the hexagon is 2/100/2.",
        "Course 4 Artist Var 9_instruction": "Here's the algorithm to draw a triangle, modify it so it uses the \"sides\" variable instead. Replace the number 3 with the \"sides\" variable. Hint: remember to use the \"set sides to\" block.",
        "Course 4 Artist Vars 1_instruction": "Let's draw an equilateral triangle. \n\nIt has to be exactly 100 pixels long on each side.",
        "Course 4 Artist Vars 10_instruction": "Here's an algorithm that draws a triangle out of smaller triangles. Can you modify it so that it uses the \"sides\" variable to draw each triangle? Look through the code, and every time you see the number 3, replace it with your \"sides\" variable. Remember to use the \"set sides\" block.",
        "Course 4 Artist Vars 11_instruction": "Here’s more complicated code using the same concepts from the last puzzle - what should you set the \"sides\" variable to in order to draw this picture made of squares?",
        "Course 4 Artist Vars 12_instruction": "Let's set the \"sides\" variable to 5. The more sides we add to this algorithm, the bigger this whole pattern gets! Notice that there is another variable called \"length\". We can now use that wherever we have a \"move forward.\" Set the \"length\" variable to 75 for this shape.",
        "Course 4 Artist Vars 13_instruction": "When a shape has lots of sides, each side needs to be shorter if you want the whole pattern to fit on the screen. \nLet's recreate the algorithm for this amazing pattern, but instead of manually setting the `length` variable, let's use a math block with the `sides` variable inside to make sure that each shape fits correctly. The perimeter of each polygon is 300 pixels.\nNeed some hints?  Click here.",
        "Course 4 Artist Vars 14_instruction": "Free Play: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.\n\nFor even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.",
        "Course 4 Artist Vars 2_instruction": "Instead of using \"move forward by 150,\" the \"move\" block is now referencing a variable called \"length.\" Can you set \"length\" to 150 to draw this new triangle?",
        "Course 4 Artist Vars 3_instruction": "Here's a loop that draws a square, but something's missing. Can you fix it so that it uses the variable \"length\" to figure out how long each side should be? ",
        "Course 4 Artist Vars 4_instruction": "Now I want to make a rectangle that is twice as tall as it is wide. We've got a variable called \"width\" that needs to be set to 100. Can you use the math blocks to complete the code?",
        "Course 4 Artist Vars 5_instruction": "Use the variable \"sides\" to control how many times this loop gets run.",
        "Course 4 Artist Vars 6_instruction": "Here’s some code that can draw any regular polygon. There’s a new variable called sides that is set to 4. Can you use the sides variable (along with the math block) to turn the right amount regardless of how many sides there are in the polygon?\n\nClick here to go back to the hint!",
        "Course 4 Artist Vars 7_instruction": "Use what you learned in the last puzzle to create this hexagon using the \"sides\" variable.\n\nSee how you could change just one value to draw a triangle,  square, pentagon, or octagon?",
        "Course 4 Artist Vars 8_instruction": "Free Play: Experiment with the number of sides this shape has. Can you change the algorithm so that the overall size of the shape stays the same, no matter how many sides it has? Hint: If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher.",
        "Course 4 Artist Vars 9_instruction": "Modify this algorithm so it uses the \"sides\" variable instead of a fixed number to draw a triangle. Don't forget to use the \"set sides to\" block.",
        "Course 4 Bee 1_instruction": "The bee can't tell what's under the cloud! \n\nUse the `if` block to check whether there is a flower under the cloud. \n\nGet nectar one time, ONLY if there is a flower.",
        "Course 4 Bee 2_instruction": "Use the \"if/else\" block to check each object to see if it's a flower or a honeycomb . If it's a flower, collect one nectar...otherwise, make one honey!",
        "Course 4 Bee 3_instruction": "The unknown object is either a flower or a honeycomb. This time, use the if/else block to collect one nectar if it is a flower, else make one honey (because then it would be a honeycomb).",
        "Course 4 Bee 4_instruction": "This purple flower may have either 3, 2, or 1 nectar. Here an if/else block is combined with another if/else block to create an \"if/else-if/else\" statement. Complete the solution to collect the unknown amount of nectar.",
        "Course 4 Bee 5_instruction": "This purple flower may have either 3, 2, or 1 nectar. Add an if-else block to create an if, else-if, else block. Complete the solution to collect the unknown amount of nectar.",
        "Course 4 Bee 6_instruction": "This purple flower may have either 3, 2, or 1 nectar. Create an if, else-if, else block to collect the unknown amount of nectar.",
        "Course 4 Bee 7_instruction": "Use everything you have learned so far to collect all the nectar. The purple flower may have either 3, 2, or 1 nectar.",
        "Course 4 Bee For Loops 1_instruction": "Use a loop to collect the nectar from each flower.",
        "Course 4 Bee For Loops 10_instruction": "If your loop is counting down, the increment is subtracted from your counter variable each loop. What should your increment be to collect 9, then 6, and then 3 nectar?",
        "Course 4 Bee For Loops 11_instruction": "What's wrong with this loop? See if you can fix it and make the bee collect all the nectar.",
        "Course 4 Bee For Loops 2_instruction": "Here's a new kind of loop, called the \"for\" loop. This particular for loop will count from 1 to 5 by 1, and run the contents of the loop each time it counts. Help the Bee get the nectar.",
        "Course 4 Bee For Loops 3_instruction": "You can solve this puzzle by using a for loop to count from 1 to 3 by 1. Now let's go get some nectar!",
        "Course 4 Bee For Loops 4_instruction": "Collect all of the nectar from these flowers. I wonder if there's an easier way to do this...",
        "Course 4 Bee For Loops 5_instruction": "Ah, the for loop makes this much easier! Using the \"counter\" variable from the for loop to loop the \"get nectar\" block the same number of times as the loop. Whew! That's a lot of loops. All the code you need it there, take a look at how it is put together then click on Run and see how it works. ",
        "Course 4 Bee For Loops 6_instruction": "You can also use a for loop to count down. Try gathering this nectar by counting down from 5 to 1 by 1.",
        "Course 4 Bee For Loops 7_instruction": "Use your for loop \"counter\" variable to control how far to move horizontally.",
        "Course 4 Bee For Loops 8_instruction": "Can you use the loop variable to control movement and nectar collection?",
        "Course 4 Bee For Loops 9_instruction": "The last number in your for loop is called the \"increment,\"  and each time the loop is run the counter variable changes by the increment. Try collecting these flowers using an increment of 2.",
        "Course 4 Bee Loops 5 NEW_instruction": "Here are three flowers. Can you find the pattern of instructions that you need to repeat 3 times to collect the nectar with the fewest number of blocks?",
        "Course 4 Bee Loops 5a NEW_instruction": "Now, use loops to help the bee collect all the nectar on its way to the honeycomb with as few blocks as possible.  When you get there, don't forget to make honey!",
        "Course 4 Bee Params 1_instruction": "Write a sequence to collect all of the nectar using `get 3 nectar` which turns, moves to collect the nectar, and then returns to the original location.",
        "Course 4 Bee Params 2_instruction": "Modify the \"get 3 nectar\" function so it makes me turn right instead of left to the flowers.",
        "Course 4 Bee Params 3 (copy 1)_instruction": "Now there are flowers on both sides! Maybe you can use a parameter so that the same function works for flowers on either side. I've added a parameter called \"direction\" to the function. If the \"direction\" parameter equals 0 I should turn left, if it's 1 I should turn right.",
        "Course 4 Bee Params 3_instruction": "Now there are flowers on both sides! We've added variables called \"left\" and \"right\" for you to use, and added a parameter called \"direction\" to \"get 3 nectar\". Edit \"get 3 nectar\" so that the bee turns the correct direction when the variables \"left\" or \"right\" are passed into the function.  ",
        "Course 4 Bee Params 4 (copy 1)_instruction": "Try using your new function to collect all of the flowers. Remember, 0 = left and 1 = right.",
        "Course 4 Bee Params 4 - Two WhenRun_instruction": "Try using your new function to collect all of the flowers. Remember to use the left and right variables.",
        "Course 4 Bee Params 4 backup_instruction": "Wouldn't it be nice if we could collect all of these nectars with the a single function? Try adding a new parameter to your function called \"nectars\" to control the amount of nectar to collect. You'll probably want to rename the function too!",
        "Course 4 Bee Params 4_instruction": "Try using your new function to collect nectar from all of the flowers. Remember to use the left and right variables.",
        "Course 4 Bee Params 5_instruction": "Let's start from scratch - can you create a new function called \"get 5 nectar\" with a direction parameter?",
        "Course 4 Bee Params 6 (copy 1)_instruction": "Try using your new function to collect all of this nectar.",
        "Course 4 Bee Params 6_instruction": "Wouldn't it be nice if we could collect all of these nectars with a single function? Try adding a new parameter to your function called \"nectar units\" to control the amount of nectar to collect. You'll probably want to rename the function too!",
        "Course 4 Bee Params 7 (copy 1)_instruction": "Try using your new function to collect all of this nectar.",
        "Course 4 Bee Params 7_instruction": "Try using your new function to collect all of this nectar.",
        "Course 4 Bee Params 8 Clone 2_instruction": "Oooh, now there's honey to deal with too! How could you update your function to either get nectar or make honey.",
        "Course 4 Bee Params 8 Clone_instruction": "Oooh, now there's honey to deal with too! How could you update your function to either get nectar or make honey.",
        "Course 4 Bee Params 8 clone 3_instruction": "Oooh, now there's honey to deal with too! How could you update your function to either get nectar or make honey.",
        "Course 4 Bee Params 8 new_instruction": "Oooh, now there's honey to deal with too! How could you update your function to either get nectar or make honey.",
        "Course 4 Bee Params 8_instruction": "Challenge: Now there's honey to deal with too! Rewrite your function to use both the number of honey units and the number of nectar units.  How would you use those numbers to decide what you should do?",
        "Course 4 Bee Params Ex_instruction": "Try using your new function to collect all of this nectar.",
        "Course 4 Binary 1_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the farmer to turn on the go from left to right, top to bottom, turning on the squares where the number has a zero. Run the code provided to see how the farmers uses binary to draw an image.",
        "Course 4 Binary 2_instruction": "What binary string could you loop 8 times to draw this image? Hint: the number \"1\" fills a hole.",
        "Course 4 Binary 3_instruction": "Can you draw this pattern by looping a single binary string?",
        "Course 4 Binary 5 (copy 1)_instruction": "Which binary string, repeated 10 times, will draw this image?",
        "Course 4 Binary 5_instruction": "Which binary string, repeated 10 times, will draw this image?",
        "Course 4 Binary 6 (copy 1)_instruction": "Which binary string, repeated 10 times, will draw this image?",
        "Course 4 Binary 6_instruction": "Which binary string, repeated 10 times, will draw this image?",
        "Course 4 Binary 7_instruction": "Which binary string, repeated 10 times, will draw this image?",
        "Course 4 Binary 8_instruction": "You can complete the most of this image by looping a 5 bit binary number - then you'll need one more 4 bit number to get the bottom right-hand corner.",
        "Course 4 EC 1a_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 1b_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 2a_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 2b_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 2c_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 2d_instruction": "No rules. No clues. Just the challenge!",
        "Course 4 EC 3_instruction": "Use what you learned in the previous level to draw an image like this. Note: The code becomes more simple if you incorporate parameters. ",
        "Course 4 EC 3a_instruction": "Extreme Challenge: No rules. No clues. Just the challenge!",
        "Course 4 Maze 1_instruction": "Get the angry bird to the pig!",
        "Course 4 Maze 2_instruction": "Avoid the TNT!",
        "Course 4 Maze 3_instruction": "Program the angry bird to get to the pig. ",
        "Course 4 Maze 4_instruction": "Try the \"repeat\" block to use fewer blocks when solving this puzzle...",
        "Course 4 Maze 5_instruction": "Can you solve this puzzle using the fewest number of blocks possible?",
        "Course 4 Maze 6_instruction": "Can you solve this puzzle using the fewest number of blocks possible?",
        "Course 4 Play Lab For Loops 2_instruction": "This time, let's try counting the odd numbers from 1 to 100.",
        "Course 4 Play Lab Params 1_instruction": "Here's a function called `jump` that causes your main character to jump up 100 pixels. Run the program and use the jump function to collect all of the flags by moving the dog with the arrow keys.",
        "Course 4 Play Lab Params 2_instruction": "Now we've got flags that are too high for our current jump! Let's use both the \"up\" and \"down\" arrows so that we can have multiple jump heights.  \n\nWe need to add a parameter to our jump function called \"height\".  The up arrow should cause the dog to jump 200 pixels and the down arrow should make it jump only 100 pixels. ",
        "Course 4 Play Lab Params 3_instruction": "We have added another parameter to the jump function so that we can use it with other actors. Each actor is represented by a number, starting from one. Edit the \"jump\" function so that it uses the \"actor\" parameter to make the correct character jump. ",
        "Course 4 Play Lab Params 4_instruction": "Here's a function called `patrol`. \n\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels.",
        "Course 4 Play Lab Params 5_instruction": "Edit the the \"patrol\" function to add an \"actor\" parameter, so that we can call it for each of the actors on the screen. Remember, the actors correspond to numbers 1, 2, and 3.",
        "Course 4 Play Lab Params 6_instruction": "Add another parameter called \"speed\" to the \"patrol\" function. Try using a \"set speed\" block with the new \"speed\" parameter to help Penguin get both flags before the other sprites even get one.",
        "Course 4 Play Lab Params 7_instruction": "Let's have some fun! Look at the code provided to see if you can figure out what each block does.  \nWhen you're done, use the arrow keys to control Dog and collect all of the flags.\nNOTE: You don't need to make any changes to the program",
        "Course 4 Play Lab Params 8_instruction": "Use the `when actor touches` block to send Dog back to the top-left ONLY if Dog touches any of the other actors.",
        "Course 4 Play Lab Params 9_instruction": "Here's our game from an earlier stage, but most of the code is hidden. There’s a new function `score_points.`\n\nEdit the function so that a new parameter called `points` can be added to `player_score`. \n\nThe variable `player_score` should increase each time Dog tags Cat with pie, and decrease each time that Cat tags Dog with a sandwich.\n\nNote: When you're done, click \"Run\" to play.  When Dog scores 6 points, you will move on to the next puzzle. ",
        "Course 4 Play Lab Vars 1_instruction": "This time you don't have to write any code, just hit \"Run\" to play the game! In this game, you're the dog who is trying to collect more flags than the cat. Use the down arrow to control the dog. Press \"Finish\" when you're done playing.",
        "Course 4 Play Lab Vars 2_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "Course 4 Play Lab Vars 3_instruction": "Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "Course 4 Play Lab Vars 4_instruction": "Now we're using a variable called \"height\" to control how high the dog can jump. Update the \"height\" variable so that the dog can jump high enough to reach all the flags.",
        "Course 4 Play Lab Vars 5_instruction": "Let's build a game! First we'll need a score. Rebuild the code that you saw in the last level to set the score to 10. ",
        "Course 4 Play Lab Vars 6 (copy 1)_instruction": "Cool, now we've got our score variable, but how are we going to make it useful? How about adding to your score variable each time you hit the enemy with a fireball? Use the \"when actor 2 touches anything\" event to trigger an update to your score when your fireballs hit the cat. You can increment the score by setting score = score + 1. Get your score up to 10 (going one at a time!) to pass the level.",
        "Course 4 Play Lab Vars 6_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "Course 4 Play Lab Vars 7_instruction": "Nice, now let's make sure this game isn't too easy to play. Any time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point. Start with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "Course 4 Play Lab Vars 8 (copy 1)_instruction": "Alright, one last thing for this game - let's set it up so the player can win (or lose). Use a forever loop to check the value of score - if score is ever greater that 20, make the enemy vanish. If the score is every less than 0, make the player vanish. Click \"Finish\" when the game works like you'd like it to.",
        "Course 4 Play Lab Vars 8_instruction": "Let's set up this game so the Dog can win (or lose). Use a forever loop to check the value of score - if score is ever greater that 20, make the enemy (the Cat) vanish. If the score is ever less than 0, make the player (the Dog) vanish. Click \"Finish\" when the game works like you'd like it to.",
        "Course 4 Play Lab Vars 9_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\nHint: scroll down to see all the commands in the workspace.",
        "Course 4 Play Lab Vars_instruction": "Alright, one last thing for this game - let's set it up so the player can win (or lose). Use a forever loop to check the value of score - if score is ever greater that 20, make the emeny vanish. If the score is every less than 0, make the player vanish.",
        "Course 4 Play Labs For Loops 1_instruction": "Let's make the dog speak every number from 1 to 100. Use a `for` loop and the counter block to speak the counter variable each time the loop is run.",
        "Course 4 Play Labs For Loops 2_instruction": "This time, help Olive the Cat count only the odd numbers from 1 to 101.",
        "Course 4 Play Labs For Loops 3_instruction": "If we count by larger numbers, we count even higher in the same amount of time. Try making Pirate Pegleg count from 10 up to 1000, adding 10 at a time.",
        "Course 4 Play Labs For Loops 4_instruction": "Changing the increment can be helpful, but we're still counting linearly (each number is the same distance from the last) What if I wanted to count exponentially? Without changing the settings in this for loop, can you count 1, 4, 9 , 16, 25... (counter squared)?",
        "Course 4 Play Labs For Loops 4a_instruction": "Now, let's blend the variables from Stage 7 together with your \"counter\" variable to make some magic happen.   \n\nIn this puzzle, Dog will count from 0 to 1000 by \"increment\".  Set the \"increment\" variable to 10 at the beginning of your code to see what happens.",
        "Course 4 Play Labs For Loops 5_instruction": "In the last stage we counted the square of each number. Try changing \"counter ^ 2\" to \"counter ^ 3\" to count the cube of each number (1, 8, 27, 64, 125, 216, 343…)",
        "Course 4 Play Labs For Loops 5a_instruction": "In this puzzle, Dog will be your time keeper.\n\nDog will count from 0 to 30 by \"increment\".  The \"increment\" variable will begin with a value of 1.\n\nCan you make it so that each time you click Dog, the increment increases by 2?  Click the forward arrow to run the for loop.\n\nRun the loop a couple of times, clicking Dog before each one.",
        "Course 4 Play Labs For Loops 6_instruction": "You may recall that a prime number is any whole number that is only divisible by itself and 1. Use the \"is_prime\" function to speak out only the prime numbers from 1 to 100.",
        "Course 4 Play Labs For Loops 6a_instruction": "Dog will still keep time by counting with our \"for loop\" by \"increment\", but this time, we will add The Wizard into the mix.  Can you change the code so that \"increment\" goes up by two each time The Wizard is clicked?\n\nWatch out!  The Wizard moves quickly!",
        "Course 4 Play Labs For Loops 7_instruction": "Could you use a for loop to help me speak the sequence 1, 4, 7, 10, 13, 16, 19, 22, 25?",
        "Course 4 Play Labs For Loops 7a_instruction": "Now we're getting somewhere!  What if we start counting how many times we can click The Wizard before Dog gets to 30?  \n\nFinish adding blocks to The Wizard so that every time he's clicked the variable \"clicked\" increases by one. You can ignore \"increment\" for now.\n\nDog will start counting when you click \"Run\".",
        "Course 4 Play Labs For Loops 8_instruction": "Now, help the actors move as they count.  \n\nDog should move and count by adding 2 (counter + 2) each time.  Cat will move and count by multiplying by 2 (counter * 2)  each time. Penguin will move and count to the power of 2 (counter ^ 2) each time.  Who will reach their flag first?",
        "Course 4 Playlab For Loop Freeplay_instruction": "Freeplay: Use everything you've learned so far to make a game that includes a `for` loop!",
        "Course 4 Playlab For Loops 4b_instruction": "Can you change the **increment** in one of the loops so that the race is a tie?",
        "Course 4 Playlab For Loops 5b_instruction": "Adjust the interval on these `for` loops so that the two characters end in the exact same place.",
        "Course 4 Playlab For Loops 6b_instruction": "Edit this `for` loop to create a game that's fun for you to play! \nPress \"Run\" and click Madame Unicorn as many times as you can.  Can you beat our score of 24? ",
        "Course 4 SCF 1_instruction": "Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "Course 4 SCF 1a_instruction": "Can you figure out how to collect all of this nectar with the fewest blocks possible?",
        "Course 4 SCF 1b_instruction": "Can you figure out how to collect all of this honey with the fewest blocks possible?",
        "Course 4 SCF 2_instruction": "Use what you learned in the previous level to draw an image like this. Note: The code becomes more simple if you incorporate parameters. ",
        "Course 4 SCF 3 Fail 1_instruction": "Can you figure out how to...",
        "Course 4 SCF 3 Fail 2_instruction": "Can you figure out how to...",
        "Course 4 SCF 3_instruction": "Use what you learned in the previous level to draw an image like this. Note: The code becomes more simple if you incorporate parameters. ",
        "Course 4 SCFL 1_instruction": "Solve this puzzle using the fewest number of blocks possible.",
        "Course 4 SCFL 1a_instruction": "Can you get Scrat to his acorn using as few blocks as possible?",
        "Course 4 SCFL 1b_instruction": "Can you get Scrat to his acorn using as few blocks as possible?",
        "Course 4 SCFL 2_instruction": "Solve this puzzle using the fewest number of blocks possible.",
        "Course 4 SCFL 3_instruction": "Can you figure out how to re-create this drawing?",
        "Course 4 SCFL 4_instruction": "Can you figure out how to re-create this drawing?",
        "Course 4 SCFL 5_instruction": "Can you figure out how to re-create this drawing?",
        "Course 4 SCFL 6_instruction": "Can you figure out how to re-create this drawing with a single loop?",
        "Course 4 SCFL 7_instruction": "The artist wants to catch some waves! Can you figure out how to re-create this drawing?",
        "Course 4 SCFP 1_instruction": "Create a function with parameters that allows the artist to jump backward and forward by x pixels, and also up and down by y pixels (using positive and negative numbers).",
        "Course 4 SCV 1_instruction": "Click here to view the instructions again.",
        "Course 4 SCV 2_instruction": "Click here to view the instructions again.",
        "Course 4 SCV 3_instruction": "Now for a game of tag!  Tag Cat to get 2 points. Tag Penguin to get 3 points.  Get exactly 10 points to win!\nBut be careful, when Cat and Penguin tag each other, they take points away.\n\nAdd the blocks necessary to make this game work the way it's been explained.  How will you get Dog to move in all directions using the arrow keys?  How will you add points when Dog tags Cat or Penguin?  How will you subtract points when Cat and Penguin touch?",
        "Course 4 SCV 4_instruction": "Solve this puzzle with the fewest number of blocks possible.",
        "Course 4 SCV 5_instruction": "Solve this puzzle with the fewest number of blocks possible.",
        "Course 4 SCV 6_instruction": "Click here to view the instructions again.",
        "Course 4 SCVP 1_instruction": "Create a function with parameters that allows the artist to jump backward and forward by x pixels, and also up and down by y pixels (using positive and negative numbers).",
        "Course 4 Variables Assessment_instruction": "Can you create this image using a variable for sides? Each line should be 50 pixels long.",
        "Course1BeePuzzle12_instruction": "Get three nectars and then make two honey",
        "Course1MazeAssessment1_instruction": "This is a test!\nMove one way, then another to get me to the pig",
        "Course1MazeAssessment2_instruction": "This is a test!\nMove one way, then another to get me to the pig.",
        "CourseF_PlayLab_vars1_instruction": "To play this game, you don't have to write any code, just hit \"Run\"! ",
        "CourseF_PlayLab_vars10_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\nHint: scroll down to see all the commands in the workspace.",
        "CourseF_PlayLab_vars2_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "CourseF_PlayLab_vars3_instruction": "Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "CourseF_PlayLab_vars4_instruction": "Now we're using a variable called \"height\" to control how high the dog can jump. Update the \"height\" variable so that the dog can jump high enough to reach all the flags.",
        "CourseF_PlayLab_vars5_instruction": "Let's build a game! First we'll need a score. Rebuild the code that you saw in the last level to set the score to 10. ",
        "CourseF_PlayLab_vars6_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "CourseF_PlayLab_vars7_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "CourseF_PlayLab_vars8_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "CourseF_PlayLab_vars9_instruction": "Nice, now let's make sure this game isn't too easy to play. Any time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point. Start with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "Crack Random Substitution_instruction": "Instructions",
        "Crack Random Substitution_2018_instruction": "Instructions",
        "Crack a Caesar Cipher_instruction": "Instructions",
        "Crack a Caesar Cipher_2018_instruction": "Instructions",
        "D_Frozen_nested3_instruction": "Let's spin that line of shapes around!",
        "D_Frozen_nested4_instruction": "Time to layer those shapes!",
        "D_Frozen_nested5_instruction": "Play with the snowflakes!",
        "D_Frozen_nested6_instruction": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
        "D_Frozen_nested7_instruction": "Now, turn around 180 degrees and draw the stair pattern again!",
        "D_Frozen_nested8_instruction": "Spin that shape around 5 or 6 times in a circle.",
        "D_Frozen_nested9_instruction": "Try playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "Dance Party 1-validated_instruction": "What do you think will happen when you click on the alien?  ",
        "Dance Party 1-validated_simple_instruction": "What do you think will happen when you click on the alien?  ",
        "Dance Party 2_instruction": "Change the behavior inside the `___ begins ___` block to make the alien start spinning around.",
        "Dance Party 2_simple_instruction": "Change the behavior inside the `___ begins ___` block to make the alien start spinning around.",
        "Dance Party 3 - Validated_instruction": "Create a new sprite called `alien2`, then make it do a different dance move when it's clicked.  ",
        "Dance Party 3 Ram_instruction": "Make the sprite do something different when you press the up arrow.",
        "Dance Party 3_instruction": "Create a new sprite called `alien2`, then make it do a different dance move when it's clicked.  ",
        "Dance Party 3_simple_instruction": "Create a new sprite called `alien2`, then make it do a different dance move when it's clicked.  ",
        "Dance Party 4 Validated_instruction": "Create a third sprite called `alien3` and get all of your aliens to stand in a line. ",
        "Dance Party 4_instruction": "Create a third sprite called `alien3` and get all of your aliens to stand in a line. ",
        "Dance Party 4_simple_instruction": "Create a third sprite called `alien3` and get all of your aliens to stand in a line. ",
        "Dance Party 5 - Validated_instruction": "Add code to change the color of each alien when it gets clicked.",
        "Dance Party 5_instruction": "Add code to change the color of each alien when it gets clicked.",
        "Dance Party 5_simple_instruction": "Add code to change the color of each alien when it gets clicked.",
        "Dance Party 6 - Validated_instruction": "Use the `stops everything` block to make each alien stop moving when it is clicked.",
        "Dance Party 6_instruction": "Use the `stops everything` block to make each alien stop moving when it is clicked.",
        "Dance Party 6_simple_instruction": "Use the `stops everything` block to make each alien stop moving when it is clicked.",
        "Dance Party 7 - Validated_instruction": "Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.",
        "Dance Party 7_instruction": "Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.",
        "Dance Party 7_simple_instruction": "Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.",
        "Dance Party Freeplay_instruction": "Now create your own alien disco!",
        "Dance Party Freeplay_simple_instruction": "Now create your own alien disco!",
        "Dance Party Predict_instruction": "What do you think will happen when you click on the alien?  ",
        "Dance Party Predict_simple_instruction": "What do you think will happen when you click on the alien?  ",
        "ECSPD Binary Odometer_instruction": "This is another resource you could use with your students.",
        "Eval Booleans 1_instruction": "Boolean operators (like >, <, =) allow us to compare different values, returning either true or false. Click \"Run\" to see how this expression evaluates.",
        "Eval Booleans 2_instruction": "Can you set the values so that this expression evaluates as true?",
        "Eval Booleans 3_instruction": "The string-length function returns the number of characters in a string (including spaces!) - make this code evaluate to true.",
        "Eval Booleans 4_instruction": "Here's an Evaluation Block called AND - it returns true if both of its parameters are true, otherwise it returns false. Edit the x variable so that this expression returns true.",
        "Eval Booleans 5_instruction": "This OR block returns true if either of its parameters is true. Otherwise, if both parameters are false it will return false. Set the y variable to a value that will cause this expression to return false.",
        "Eval Booleans 6_instruction": "Here's one more boolean block called NOT. This block flips true to false, or false to true. If you wrap this block of code in a NOT block, it should return true (because we are asking if the two expressions do NOT produce equal values).",
        "Eval Booleans Free Play_instruction": "Free Play: Try out some creations of your own using Booleans.",
        "Eval Booleans_instruction": "Booleans allow us to compare different values, returning \"true\" if the are equal, or \"false\" if they are not. What do you think this code will evaluate to?",
        "Eval Cond 1_instruction": "The cond block checks the boolean expressions in the left column, and as soon as it finds one that returns \"true\" it runs the corresponding code on the right. If none of the expressions evaluate to \"true,\" it runs the bottom block. Update the \"temperature\" variable so that this block returns \"It's just right.\"",
        "Eval Cond 2 (copy 1)_instruction": "This condition returns a different shape based on the value of the \"sides\" variable - change the value of \"sides\" so that the conditional returns a triangle.",
        "Eval Cond 2_instruction": "This condition returns a different shape based on the value of the \"sides\" variable - change the value of \"sides\" so that the conditional returns a triangle.",
        "Eval Cond 3 (copy 1)_instruction": "Can you write a conditional that checks the variable \"age\" and returns \"Old enough to vote and drive\" if age > 17, \"Old enough to drive\" if age is > 15, and \"Can't drive or vote\" if neither conditions is true. Hint: The first condition to return \"true\" wins - make sure you put your conditions in the right order.",
        "Eval Cond 3_instruction": "Can you write a conditional that checks the variable \"age\" and returns \"Old enough to vote and drive\" if age > 17, \"Old enough to drive\" if age is > 15, and \"Can't drive or vote\" if neither conditions is true. Hint: The first condition to return \"true\" wins - make sure you put your conditions in the right order.",
        "Eval Cond 4_instruction": "We can use the string=? function to make conditionals that respond to text input. Here's a function called green shape that takes a string for the type of shape. Complete the conditions so that the correct solid green shape is returned when the function is run with \"circle\", \"triangle\", \"square\", or \"rectangle\".",
        "Eval Cond 5_instruction": "Here's a similar function red shape with an additional variable for size. Complete the conditionals so the correct solid red image of a given size is drawn for \"circle\", \"triangle\", and \"star\".",
        "Eval Cond 6_instruction": "Write a function called food-critic, which takes in the name of a food and produces a String that says how you feel about that food. For example, (food-critic “pizza”) might evaluate to “delicious”, but (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two foods to review, but you can you write more if you like!  Don’t forget to add an “else” clause!\nOne example - and part of the definition -  has already been done for you!",
        "Eval Cond 7_instruction": "Free Play: Write a function called green-shape, which takes in the name of a shape and produces a solid green shape. Your function should work with at least “circle”, “star” and “rectangle”, but you can add other shapes if you like. You can choose the size of each shape. Don’t forget to add an “else” clause!\nOne example - and part of the definition -  has already been done for you!\n",
        "Eval Cond 8_instruction": "Free Play: Suppose you want to own a car at 21, or have your own business by 30. Write a function called life-goals, which takes in an age and produces a string that describes your life goals by then. Don’t forget to add an “else” clause!\n",
        "Eval Contracts 1_instruction": "Use the \"star\" function to produce a red star with a 60 pixel radius",
        "Eval Contracts 10A_instruction": "Alright let's complete this puzzle with a Green Square that is 175 pixels in size.",
        "Eval Contracts 11A_instruction": "Can you complete this puzzle to read \"Hello World\" in the banner?",
        "Eval Contracts 2_instruction": "Check out the \"rotate\" function - can you use it to rotate this 90 pixel green square by 45 degrees?",
        "Eval Contracts 3_instruction": "Try using the \"text\" function to write this teal text at size 40.",
        "Eval Contracts 4 A_instruction": "The \"scale\" function returns an image that is scaled either larger or smaller than the input image. Try scaling this circle by a factor of 10 - how is the resulting image different than if you'd just made a circle of that size in the first place?",
        "Eval Contracts 4_instruction": "The scale function returns an image that is either larger or smaller than the input image. Try scaling this circle by a factor of 10. How is the returned image different than if you'd just made a circle of that size in the first place?",
        "Eval Contracts 8A_instruction": "Can you complete this puzzle? The big-triangle is 200 pixels in size and purple?",
        "Eval Contracts A_instruction": "Use the star function to produce a solid red star with a 60 pixel radius",
        "Eval Contracts C_instruction": "Check out the rotate function - can you use it to rotate this 90 pixel green square by 45 degrees?",
        "Eval Contracts E_instruction": "Try using the text function to write \"Hello, world!\" in teal at size 40.",
        "Eval Contracts shrink_instruction": "Can you complete this image using the \"shrink\" function block? The radius is 20. ",
        "Eval Define Funcs 1_instruction": "Here's a new function called green-triangle that takes a single Number for size and produces a green triangle. Use the new function to create a 125 pixel green triangle.",
        "Eval Define Funcs 2_instruction": "Let's look inside that green-triangle function to see how it works. Can you modify it so that the green-triangle function always draws outlined green triangles?",
        "Eval Define Funcs 3_instruction": "Here's the start of another new function called purple-circle with a domain of one Number (the radius) and a range of Image. The body of the function is broken though - fix it and then make a purple circle with 150 pixel radius",
        "Eval Define Funcs 4_instruction": "Create a new function called aqua-star that has a Domain of a single Number for radius and returns an aqua star of the given radius. Run your new function with a radius of 75.",
        "Eval Define Funcs 5_instruction": "Let's use that aqua-star function to make a row of different sized stars. From left to right, the stars should have radii of 25, 50, and 75.",
        "Eval Define Funcs Test_instruction": "Here's the start of another new function called purple-circle with a domain of one Number (the radius) and a range of Image. The body of the function is broken though - fix it and then make a purple circle with 150 pixel radius",
        "Eval Defining Vars Free Play 1_instruction": "Free Play: We've provided a function that fills your screen with my-image. Change my-image to see what patterns you can make.",
        "Eval Design Recipe .1_instruction": "Here's a Design Recipe for a function called square-circle with domain Number String and range Image. Click Edit to write the function definition (you will see two examples provided).",
        "Eval Design Recipe 1 (copy 1)_instruction": "We're going to write a function that draws a solid rectangle of any color that is twice wide as it is high. Start with an example - draw a solid green rectangle that has a height on 100 pixels.",
        "Eval Design Recipe 1_instruction": "Alright, now given the Contract wide-rect: Number String -> Image, write an example - draw a solid green rectangle that has a height of 100 pixels.",
        "Eval Design Recipe 2 (copy 1)_instruction": "Let's do one more example before writing the function definition - this time draw a solid red rectangle with a height of 75 pixels.",
        "Eval Design Recipe 2_instruction": "Let's do one more example before writing the function definition - this time draw a solid red rectangle with a height of 75 pixels.",
        "Eval Design Recipe 3_instruction": "The Design Recipe for wide-rect already has a contract and one example. Can you write a second example and then complete the definition? The wide-rect function should produce a rectangle of given color that is twice as wide as it is high.",
        "Eval Design Recipe 4_instruction": "Use the Design Recipe to create a function starburst. When given a number of points and an outer radius, starburst returns a yellow radial star with given points, and an inner radius that is half the outer radius.",
        "Eval Design Recipe 5_instruction": "Using the Design Recipe, write a function striped-flag that takes two colors and produces a flag that is 250 pixels wide, 150 pixels tall, with three even horizontal stripes of given colors, in the order color2, color1, color2.",
        "Eval Design Recipe 6_instruction": "Write a function large-polygon that should output a solid polygon of given sides and color that takes up most of the window, regardless of the number of sides. To make sure that the polygon doesn't get too large as you increase the number of sides, side length should be inversely proportional to side number, with a length of (800/sides).",
        "Eval Design Recipe Free Play_instruction": "Free Play: Use the Design Recipe to create some functions of your own design",
        "Eval Free Play_instruction": "Free Play: Make art with code!",
        "Eval Strings Images .1_instruction": "So far we've only dealt with a single type of data, Numbers. Another type of data is a String, which is any combination of letters, numbers, or other characters wrapped in quotation marks. Run the String \"Hello, world!\" and see what happens.",
        "Eval Strings Images .2_instruction": "The string-append function takes two Strings and returns a single combined String. Add a String \"Universe\" to the second argument of string-append.",
        "Eval Strings Images 1_instruction": "The third type of data we're going to use is an Image. This star function takes in a Number and two Strings, and it evaluates to an Image. Use this function to make a solid red star with radius of 100.",
        "Eval Strings Images 2_instruction": "Free Play: Every Evaluation Block is color-coded to let you know which data type it returns and which types it needs for its parameters. The last parameter of the triangle function takes a String that controls its color - try some different colors to see what works.",
        "Eval Strings Images 3_instruction": "Some functions can only take a specific set of Strings, such as the second argument of this circle function, which controls its style. Draw this orange outline circle using the special String block with a dropdown to make sure you only use valid styles.",
        "Eval Strings Images 4_instruction": "Try using the rectangle block to draw this solid, red rectangle - it is 175 pixels wide and 100 pixels tall.",
        "Eval Strings Images 5_instruction": "Try using this new Evaluation Block called overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.",
        "Eval Strings Images 6_instruction": "Use the overlay block to place a 75 pixel radius yellow star on top of a 150 pixel long blue square.",
        "Eval Strings Images 7_instruction": "The offset block lets you move an image relative to where it would normally be placed. Use this block to offset the square by 100 pixels on the y-axis.",
        "Eval Strings Images 8_instruction": "Here's a different kind of star block - it's called radial-star and it allows you to draw stars with any number of points! Use it to create a 7 point solid orange star with an inner radius of 75 pixels and an outer radius of 175 pixels.",
        "Eval Strings Images Free Play_instruction": "Free Play: Explore the blocks available to create something interesting. Make sure to share your favorite creations.",
        "Farmer for Authored Hint testing_instruction": "Wow, I found a really deep hole! I don't know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.",
        "Farmer for TTS testing_instruction": "Wow, I found a really deep hole! I don't know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.",
        "Finalize Your Chaser Game v.1_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "Finalize Your Chaser Game v.1_2018_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "Find the Wizard_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Find the Wizard_2018_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Fish Tank 2-validated_instruction": "Change Dusty (the tumbleweed) to a fish.",
        "Fish Tank 2-validated_simple_instruction": "Change Dusty (the tumbleweed) to a fish.",
        "Fish Tank 3-validated Ram_instruction": "Change the fish's behavior so that it swims around the tank.",
        "Fish Tank 3-validated_instruction": "Change the fish's behavior so that it swims around the tank.",
        "Fish Tank 3-validated_simple_instruction": "Change the fish's behavior so that it swims around the tank.",
        "Fish Tank 4-validated_instruction": "Use the `set background color` block to make the background blue.",
        "Fish Tank 4-validated_simple_instruction": "Use the `set background color` block to make the background blue.",
        "Fish Tank 5-validated_instruction": "Our fish is getting a little lonely. Add another sprite to the fish tank.",
        "Fish Tank 5-validated_simple_instruction": "The fish wants a friend.   Add a new sprite.",
        "Fish Tank 6-validated_instruction": "Add a behavior to the fish's new friend.",
        "Fish Tank 6-validated_simple_instruction": "Add a behavior to the fish's new friend.",
        "Fish Tank 7-validated_instruction": "Use some new blocks from the toolbox to make your fish tank special!",
        "Fish Tank 7-validated_simple_instruction": "Use some new blocks from the toolbox to make your fish tank special!",
        "Food Fight_instruction": "You can make whatever you want in play lab! This is an example of a game you can make in play lab.",
        "FoodFight_instruction": "This is an example of a game you can make in play lab.",
        "FoodFight_2018_instruction": "This is an example of a game you can make in play lab.",
        "Frequency Analysis_instruction": "Test",
        "Function intro Ryan_instruction": "Use the `build bridge` function twice to make a path to the Redstone Torch.",
        "GLJ Drag and fall_instruction": "This Corgi has been a good boy! Drag this carrot to him as a special treat.",
        "GLJ Dragity_instruction": "This Corgi has been a good boy! Drag this carrot to him as a special treat.",
        "GLJ Flappy2_instruction": "Click to flap - don't touch the ground!",
        "GLJr_Behavior_1_instruction": "On your worksheet, write what you think the dog will do when you click \"Run.\"",
        "GLJr_Behavior_2_instruction": "Now you have some new blocks! Try them out and see how they work. On your worksheet, write down which ones you tried, and what they do.",
        "GLJr_Behavior_5_instruction": "Now we have two sprites! Use behaviors to make the dog jittery and make the cat wander",
        "GLJr_Behavior_6_instruction": "Let's try some more behaviors - make the dog run up and make the cat run right.",
        "GLJr_Forever_1_instruction": "On your worksheet, write what you think the dog will do when you click \"Run.\"",
        "GLJr_Forever_2_instruction": "Now you have some new blocks! Try them out and see how they work. On your worksheet, write down which ones you tried, and what they do.",
        "GLJr_Forever_5_instruction": "Now we have two sprites! Use a loop to make the dog jittery and make the cat wander",
        "Game Lab Workshop: Random_instruction": "Pick a shape block and use calls to randomNumber() in place of one or more of the parameters. Maker sure you run it a few times so you can see the effect of randomization.",
        "Geometric Pattern_instruction": "Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Geometric Sun_instruction": "Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Geometric Sun_2018_instruction": "Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Get To The Goal_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Grade 4 Example PlayLab Project #1_instruction": "Take a look at this project.  Do you see how it was made?",
        "Grade 4 Example PlayLab Project #2_instruction": "Take a look at this project.  Do you see how it was made?",
        "Guess The Number 2_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Guess The Number_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Guess The Number_2018_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Harvester Test_instruction": "It's harvest time! But I forgot what crop I planted at which tile. Please help me harvest all my crops, no matter how they were originally planted!",
        "Harvesting_instruction": "Uh oh, I lost my map and can't remember what I planted. Every sprout could grow up to be corn, beans, or pumpkins. Can you write some code to pick all the crops, no matter what they are?",
        "HoCAB_labyrinth1_instruction": "Use the arrow blocks to solve this maze!",
        "Infinity_catch_instruction": "Can you make Elsa (\"actor 2\") catch up with Anna by using the arrow keys?",
        "Infinity_finale_instruction": "Create anything you like and share it!",
        "Infinity_move_collide_instruction": "Hiro is \"actor 1\".  Move him right to Baymax, and play a sound when they touch.",
        "Infinity_move_directions_instruction": "Baymax is \"actor 2\".  Add Move blocks and then move Baymax using the arrows.  Make him touch the two other characters.",
        "Infinity_move_right_instruction": "Hiro is \"actor 1\".  Use the Move block to move Hiro right to touch Baymax.",
        "Infinity_repeat_instruction": "Use a \"repeat forever\" block to make Anna move up and down 400 pixels.",
        "Infinity_say_instruction": "Make Anna say \"Hi there.\" by using the Say block.",
        "Infinity_shoot_instruction": "Baymax is \"actor 2\".  Make Baymax throw a rocket at Hiro.",
        "Infinity_shoot_directions_instruction": "Hiro is \"actor 3\".  Make Hiro throw a projectile to each of the four characters.  Wait one second between each throw.",
        "Infinity_test_instruction": "This is a test Infinity level.",
        "Infinity_touch_faster_instruction": "Touch even more snowflakes!",
        "Infinity_touch_four_instruction": "Move Anna up, down left, and right to touch each of the four snowflakes.",
        "Infinity_touch_score_instruction": "Make Anna score a point when she touches a snowflake.  Then click \"Run\" and steer her to touch each snowflake once.",
        "Inspirational Artwork_instruction": "Free Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n \nWant to know how our inspiration pattern was made? ",
        "InspirationalArtwork_instruction": "If this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "InspirationalArtwork_2018_instruction": "If this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "Internet Simulator: Broadcast Mode_instruction": "Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!\n",
        "Internet Simulator: Broadcast_instruction": "Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!\n",
        "Internet Simulator: Broadcast_2018_instruction": "Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!\n",
        "Internet Simulator: DNS Mode_instruction": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
        "Internet Simulator: DNS_instruction": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
        "Internet Simulator: DNS_2018_instruction": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
        "Internet Simulator: Packets_instruction": "Develop a Protocol for Reliably Sending a Message.\n\nConstraints:\n- Packets may contain only 8 characters\n- Packets may drop with small probability\n- Packets may not arrive in order",
        "Internet Simulator: Packets_2018_instruction": "Develop a Protocol for Reliably Sending a Message.\n\nConstraints:\n- Packets may contain only 8 characters\n- Packets may drop with small probability\n- Packets may not arrive in order",
        "Internet Simulator: Routers_instruction": "Send messages with your classmates (Click to see full instructions)",
        "Internet Simulator: Routers_2018_instruction": "Send messages with your classmates (Click to see full instructions)",
        "Internet Simulator: Sending Binary Messages 1_instruction": "Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  ",
        "Internet Simulator: Sending Binary Messages_instruction": "Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  ",
        "Internet Simulator: Sending Binary Messages_2018_instruction": "Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  ",
        "Internet Simulator: Sending Numbers_instruction": "With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!",
        "Internet Simulator: Sending Numbers_2018_instruction": "With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!",
        "Internet Simulator: Sending Text_instruction": "Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!",
        "Internet Simulator: Sending Text_2018_instruction": "Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!",
        "Just for Testing_instruction": "Test instructions",
        "K-1 Artist 1 Assessment 1_instruction": "Draw a short line up and a long one to the right!",
        "K-1 Artist Loops 1_instruction": "Draw this line by moving East 4 times.",
        "K-1 Artist Loops 2_instruction": "Now, draw the same line using a loop.",
        "K-1 Artist Loops 3_instruction": "Can you loop these blocks to draw 6 lines?",
        "K-1 Artist Loops 4_instruction": "Could a loop help us draw the top of this castle?",
        "K-1 Artist Loops 5_instruction": "What can you loop 4 times to draw these stairs?",
        "K-1 Artist Loops 6_instruction": "This one needs two loops: one to go up the stairs and one to go down.",
        "K-1 Artist Loops 7_instruction": "Loops can help you finish this pattern.",
        "K-1 Artist Loops 8_instruction": "This staircase has longer steps.",
        "K-1 Artist Loops 9_instruction": "What is the easiest way to draw these stairs?",
        "K-1 Artist Loops Free Play_instruction": "Free play, draw something fun!",
        "K-1 Artist1 1_instruction": "Draw the foot of the man with one line",
        "K-1 Artist1 10_instruction": "Draw and Jump to make the dashed path to the treasure X",
        "K-1 Artist1 2_instruction": "Draw the whisker on the cat with two lines!",
        "K-1 Artist1 3_instruction": "Draw two lines east and two lines north to finish the house!",
        "K-1 Artist1 4_instruction": "Draw lines up, over, and down to complete the castle!",
        "K-1 Artist1 5.5_instruction": "Complete the third tower of the castle using short lines",
        "K-1 Artist1 5_instruction": "Draw the stem of this flower with two lines!",
        "K-1 Artist1 6_instruction": "Finish the picture by using a jump block!",
        "K-1 Artist1 7_instruction": "Use the jump block to move without drawing. Jump up and draw a line.",
        "K-1 Artist1 8_instruction": "Draw the dashed line by using both the jump and draw blocks",
        "K-1 Artist1 9_instruction": "Draw and Jump to make the dashed line",
        "K-1 Artist1 Assessment 1_instruction": "Draw the short and long lines!",
        "K-1 Artist1 Assessment 2_instruction": "Draw the short dashed lines!",
        "K-1 Artist2 1_instruction": "Draw a square below the triangle.",
        "K-1 Artist2 2_instruction": "Jump and draw a square next to the house.",
        "K-1 Artist2 3_instruction": "Draw a square above the other square",
        "K-1 Artist2 4_instruction": "Draw a rectangle to complete the bridge.",
        "K-1 Artist2 5_instruction": "Draw a rectangle to complete the bridge supports",
        "K-1 Artist2 6_instruction": "Draw two squares to make a rectangle!",
        "K-1 Artist2 Assessment1_instruction": "Assessment: Draw a square next to the other square.",
        "K-1 Artist2 Free Draw_instruction": "Draw anything!",
        "K-1 Artist2_7_instruction": "Draw a rectangle to give the dresser a top drawer!",
        "K-1 Bee 1_instruction": "Move me to the flower, get the nectar, then move me to the honeycomb, and make honey",
        "K-1 Bee 10_instruction": "Get four nectar and then make two honey!",
        "K-1 Bee 11.5_instruction": "Get four nectar to make four honey!",
        "K-1 Bee 11_instruction": "Get three nectar and then make one honey",
        "K-1 Bee 12_instruction": "Get three nectar and then make two honey!",
        "K-1 Bee 13_instruction": "Get three nectar and then make one honey!",
        "K-1 Bee 14_instruction": "Get me to the nectar, pick it up, get me to the honey, and make honey!",
        "K-1 Bee 15_instruction": "Get two nectar to make two honey!",
        "K-1 Bee 2_instruction": "Move me to the flower, get the nectar, then move me to the honeycomb, and make honey",
        "K-1 Bee 3_instruction": "Move me to the flower, get the nectar, then move me to the honeycomb, and make honey",
        "K-1 Bee 4_instruction": "Get two nectar and then make two honey!",
        "K-1 Bee 5_instruction": "Get three nectar and then make three honey!",
        "K-1 Bee 6_instruction": "Get two nectar and then make two honey!",
        "K-1 Bee 7_instruction": "Get three nectar and then make two honey!",
        "K-1 Bee 8_instruction": "Get two nectar and then make two honey!",
        "K-1 Bee 9_instruction": "Get two nectar and then make two honey!",
        "K-1 Bee Assessment 1_instruction": "Get nectar to make honey!",
        "K-1 Bee Assessment 2_instruction": "Get nectar to make honey!",
        "K-1 Bee Loops 1_instruction": "Get the nectar to make honey!",
        "K-1 Bee Loops 10_instruction": "Get all of the nectar and make all of the honey.",
        "K-1 Bee Loops 11_instruction": "Get all of the nectar and honey!",
        "K-1 Bee Loops 12_instruction": "Get all of the nectar and all of the honey.",
        "K-1 Bee Loops 2_instruction": "Use a `repeat` loop to move and then get the nectar and make honey!",
        "K-1 Bee Loops 3_instruction": "Use three `repeat` loops to get the nectar and make honey!",
        "K-1 Bee Loops 4_instruction": "Use `repeat` loops to get the nectar, make honey, and to move!",
        "K-1 Bee Loops 5_instruction": "Use `repeat` loops to get the nectar and honey!",
        "K-1 Bee Loops 6_instruction": "Use a `repeat` loop to get the nectar, get honey, and to move!",
        "K-1 Bee Loops 7_instruction": "Get the nectar and make honey!",
        "K-1 Bee Loops 8_instruction": "Get the nectar and make honey!",
        "K-1 Bee Loops 9_instruction": "Get the all the nectar and make all of the honey.",
        "K-1 Bee Loops Assessment 1_instruction": "Get nectar to make honey and use loops to move!",
        "K-1 Bee Loops Assessment 2_instruction": "Get nectar to make honey using loops!",
        "K-1 Bee Puzzle 12_instruction": "Get three nectars and then make two honey",
        "K-1 Building a Foundation Assessment_instruction": "Build a three level pyramid, there are no other directions, so just play with the pieces until you get it!",
        "K-1 Maze 10_instruction": "Go around the TNT to get me to the pig! ",
        "K-1 Maze 11_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly! Hint: He's South of me.",
        "K-1 Maze 2_instruction": "Move me East to get me to the pig!",
        "K-1 Maze 3_instruction": "Move me South to get me to the pig!",
        "K-1 Maze 4_instruction": "Move me North to get me to the pig!",
        "K-1 Maze 5_instruction": "Move me East to get me to the pig!",
        "K-1 Maze 6_instruction": "Move one way, then another to get me to the pig!",
        "K-1 Maze 7_instruction": "Move one way, then another to get me to the pig!",
        "K-1 Maze 8_instruction": "Move one way, then another to get me to the pig!",
        "K-1 Maze 9_instruction": "Move one way, then another to get me to the pig!",
        "K-1 Maze Assessment 1_instruction": "Assessment -- Get me to the pig!",
        "K-1 Maze Assessment 12_instruction": "Assessment Level",
        "K-1 Maze Assessment 13_instruction": "Assessment Level",
        "K-1 Maze Assessment 2_instruction": "Assessment -- Get me to the pig!",
        "K-1 Maze Loops 1_instruction": "Get me to the pig!",
        "K-1 Maze Loops 10_instruction": "Get me to the pig! Using the `repeat` loop will make it much easier.",
        "K-1 Maze Loops 11_instruction": "Get me to the pig!  \nThe `repeat` loop will make this easier.",
        "K-1 Maze Loops 12_instruction": "Get me to the pig! The `repeat` loop will make this easier.",
        "K-1 Maze Loops 2_instruction": "Use the `repeat` block to get me to the pig!",
        "K-1 Maze Loops 3_instruction": "Get me to the pig! Be sure to use `repeat` loops.",
        "K-1 Maze Loops 4_instruction": "Get me to the pig!",
        "K-1 Maze Loops 5_instruction": "Get me to the pig! Be sure to use `repeat` loops.",
        "K-1 Maze Loops 6_instruction": "Get me to the pig! Be sure to use `repeat` loops.",
        "K-1 Maze Loops 7_instruction": "Get me to the pig! Be sure to use `repeat` loops.",
        "K-1 Maze Loops 8_instruction": "Use `repeat` loops to get me to the pig.",
        "K-1 Maze Loops 9_instruction": "Get me to the pig!",
        "K-1 Maze Loops Assessment 1_instruction": "Look at all we've learned! Use a `repeat` loop to get me to the pig!",
        "K-1 Maze Loops Assessment 2_instruction": "Use `repeat` loops to get me to the pig!",
        "K-1 Maze Multi 14_instruction": "Assessment Level",
        "K-1 Maze Multi 15_instruction": "Assessment Level",
        "K-1 Maze Sequence Assessment 1_instruction": "Let's see what you've learned!\nMove one way, then another to get me to the pig.",
        "K-1 Maze Sequence Assessment 2_instruction": "Move one way, then another to get me to the pig.",
        "K-1 Maze debug Assessment 1_instruction": "Assessment -- Debug this level by rearranging and adding blocks to get me to the pig!",
        "K-1 artist 1 level 10_instruction": "Draw the dashed line by using both the jump and draw blocks",
        "K-1 artist 1 level 9_instruction": "Draw this using three lines",
        "K-1 maze debug 1_instruction": "Change the code to get me to the pig!",
        "K-1 maze debug 10_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "K-1 maze debug 11_instruction": "This is a test!\nDebug this level by rearranging and changing blocks to get me to the pig",
        "K-1 maze debug 2_instruction": "Figure out what is missing and then add blocks to get me to the pig!",
        "K-1 maze debug 3_instruction": "Something is not quite right. REMOVE blocks to get me to the pig!",
        "K-1 maze debug 4_instruction": "Run through these blocks and fix them! I think I might be going in the wrong direction.",
        "K-1 maze debug 5_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "K-1 maze debug 6_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "K-1 maze debug 7_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "K-1 maze debug 8_instruction": "Debug this level by rearranging and adding blocks to get me to the pig!",
        "K-1 maze debug 9_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "K2.0 sequence 1_instruction": "A bug! Fix the code to get me to the pig.",
        "K2.0 sequence 10_instruction": "Challenge: Move me around the TNT to get to the pig.",
        "K2.0 sequence 12_instruction": "Let's get that pig! ",
        "K2.0 sequence 2_instruction": "Fix the code to get me to the pig!",
        "K2.0 sequence 3_instruction": "Something is not quite right. REMOVE a block to get me to the pig!",
        "K2.0 sequence 4_instruction": "Time for a shorter puzzle!  Move one way, then another to get me to the pig.",
        "K2.0 sequence 4a_instruction": "Try this puzzle again from the start!",
        "K2.0 sequence 5_instruction": "Move one way, then another to get me to the pig!",
        "K2.0 sequence 6_instruction": "Figure out what is missing and then add blocks to get me to the pig!",
        "K2.0 sequence 7_instruction": "Solve this level and get me to the pig!",
        "K2.0 sequence 8_instruction": "Debug this level by adding blocks to get me to the pig!",
        "K2.0 sequence 9_instruction": "Challenge: Go around the TNT to get me to the pig! ",
        "K2.0 sequence FP_instruction": "Now figure out how to get the pig any way you can!",
        "K2.0 sequence pre_instruction": "Play with these blocks to see if you can get me to the pig!",
        "KIKI GLJ Test Response_instruction": "Look carefully at the code below.  What do you think the plane will do when you click \"Run\"?\n",
        "KTest1_instruction": "Can you make me move South once more to get to the pig?",
        "KTest2_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly!",
        "Kiki_StarWars_Test_3_instruction": "Text",
        "Kiki_StarWars_Test_4_instruction": "Text",
        "Kiki_StarWars_Test_5_instruction": "Text",
        "Kiki_StarWars_Test_5_Example_instruction": "Text",
        "LaurelDebugging4Video1_instruction": "Move Laurel around and get as much gold as you can!",
        "Limited Quantity of Blocks Test_instruction": "Get me to the pig by adding only one block",
        "Luigi's Pizza 1_instruction": "Welcome to Luigi's Pizza! To order a pizza, type the name of a topping into the cost function, and we'll return the price of that pizza. Try ordering a pepperoni pizza to start.",
        "Luigi's Pizza 2 (copy 1)_instruction": "Right now there are only four choices available at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional block in the \"cost\" function. Once you've added your toppings, test out the function to make sure it works.",
        "Luigi's Pizza 2_instruction": "Right now there are only four choices available at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional block in the cost function. Once you've added your toppings, test out the function to make sure it works.",
        "Luigi's Pizza 3 (copy 1)_instruction": "That's better, everyone loves more variety in their pizza toppings! But you still can't please everyone, and folks are coming in to order toppings that Luigi doesn't have. Instead of saying no to those people, could you update the \"else\" clause so that we charge them a premium for toppings that we don't normally offer?",
        "Luigi's Pizza 3_instruction": "That's better, everyone loves more variety in their pizza toppings! But you still can't please everyone, and folks are coming in to order toppings that Luigi doesn't have. Instead of saying no to those people, could you update the else clause so that we charge them a premium for toppings that we don't normally offer? Let's charge $10,000 for a topping we don't carry.",
        "Luigi's Pizza 4_instruction": "Free Play: What can you do to make Luigi's cost function even more useful?",
        "MC Agent Freeplay_instruction": "**Freeplay:**  Time to explore on your own!",
        "MC HOC 2016 Level 10_instruction": "It's time to make your own Minecraft! Spawn creatures and then make them do whatever you want. Have fun!",
        "MC HOC 2016 Level 2-2_instruction": "The chicken is frozen. Place `move` and `turn` blocks in the `when spawned` slot to get it to move.",
        "MC HOC 2016 Level 3_instruction": "Great, the chicken moved! But then she stopped. In games, chickens walk forever. Use a `forever do` loop to keep these chickens moving.\n",
        "MC HOC 2016 Level 4_instruction": "Now the chickens look weird moving the same way. Games use random moves to make things look real. Make the chickens `turn random`.",
        "MC HOC 2016 Level 5_instruction": "These cows are lost! Lead them to the grass with the `move a step toward` block in a `forever do` loop.",
        "MC HOC 2016 Level 6_instruction": "Now you make the zombies. Use the `spawn` block to make 3 zombies when night falls. Get them to move towards you. Survive until morning.",
        "MC HOC 2016 Level 8_instruction": "The path to your sheep is blocked by a stone wall. Luckily there is a Creeper here. Creepers explode after you touch them. Get the Creeper to explode the wall so you can reach your sheep!",
        "MC HOC 2016 New Drop_instruction": "In Minecraft, sheep drop wool. Place the `drop` block in `when used`, then walk over and use the sheep to drop an item.",
        "MC HOC 2016 New Spawn_instruction": "Now you can fill the world with what you want! Place`spawn` blocks under `when run` to spawn things when the game starts.",
        "MC HOC 2016 New Walk_instruction": "Let's explore our world! Move with the arrows, and press the space bar or tap the game board to use items. Use the door to get inside the house.",
        "MC HOC 2016 SCORE LEVEL_instruction": "Some games let you keep score. Play tag with these Iron Golems and use the `add 1 to score` block to give yourself a point when you tag them. Reach five points to win!",
        "MC HOC 2016 Village Test_instruction": "Oh no! Zombies have trapped you inside! Code the Iron Golem to chase and attack the zombies!",
        "MC_2017_Ryan_02_instruction": "Help the player get out by using loops to get the Agent to the pressure plate.",
        "MC_HOC_2017 Agent Test_instruction": "Click \"Run\" to move the player to the orange square inside of the house.",
        "MC_HOC_2017_01_instruction": "Click \"Run\" to move the player to the orange square inside of the house.",
        "MC_HOC_2017_01_Cole_instruction": "You need to collect all the tools on this journey. Move around using the **arrow keys**, and get to the chest on the path to win",
        "MC_HOC_2017_01_Kiki_instruction": "Click \"Run\" to move the player to the orange square inside of the house.",
        "MC_HOC_2017_01_RETRY_instruction": "Write code to get the Agent to the pressure plate, then press \"Run\" and use the arrow keys to move the player out of the house to collect the chest. ",
        "MC_HOC_2017_02_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_02_Cole_instruction": "Move the Agent to the pressure plate so that {currentPlayerName} can get to the map. ",
        "MC_HOC_2017_02_Kiki_instruction": "Get the Agent to the pressure plate, then get the player to the orange square.",
        "MC_HOC_2017_02_Will_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_03_Cole_instruction": "Code the Agent to open the gate. ",
        "MC_HOC_2017_03_Kiki_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_04_instruction": "Change the loop from the last puzzle to help the Agent make a path over the wider part of this river.",
        "MC_HOC_2017_04POINT5_Cole_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_04POINT5_RYAN_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_04_Cole_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_04_Kiki_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_05_instruction": "Use a function to help the Agent get to the pressure plate.",
        "MC_HOC_2017_05_Cole_instruction": "Get the player to the shovel.",
        "MC_HOC_2017_05_Josh_instruction": "Get the player to the shovel.",
        "MC_HOC_2017_05_Kiki_instruction": "Get the player to the orange square.",
        "MC_HOC_2017_06_Cole_instruction": "Fix this code to get the Agent to build a bridge across this river.",
        "MC_HOC_2017_06_Josh_instruction": "Fix this code to help the Agent build a bridge across this river.",
        "MC_HOC_2017_06_Kiki_instruction": "Fix this code to help the Agent build a bridge across this river.",
        "MC_HOC_2017_07_Cole_instruction": "Destroy the ice and get {currentPlayerName} to the Minecart.",
        "MC_HOC_2017_07_Kiki_instruction": "Use a function to clear the path to the orange square.",
        "MC_HOC_2017_07a_Kiki_instruction": "Clear the path to the orange square.",
        "MC_HOC_2017_08_Cole_instruction": "Change the provided function to work for this biome.",
        "MC_HOC_2017_08_Kiki_instruction": "Change the function to work for this puzzle.",
        "MC_HOC_2017_08_RY_instruction": "Use the functions to find a way across the lava.",
        "MC_HOC_2017_08_Will_instruction": "Use the functions to find a way across the lava.",
        "MC_HOC_2017_09_Cole_instruction": "Program the Agent to clear the player's path.",
        "MC_HOC_2017_09_Kiki_instruction": "Program the Agent to clear the player's path and get to the pressure plate.",
        "MC_HOC_2017_10_Cole_instruction": "Create a function to help you finish this minecart.",
        "MC_HOC_2017_10_Cole_old_instruction": "Create a function to help you finish this minecart.",
        "MC_HOC_2017_10_Kiki_instruction": "Create a function to help you finish this minecart.",
        "MC_HOC_2017_10_RETRY_instruction": "Use the functions to finish this minecart track.",
        "MC_HOC_2017_10_RYAN_instruction": "Create a function to help you finish this minecart.",
        "MC_HOC_2017_10_RYAN2_instruction": "Create a function to help you finish this minecart.",
        "MC_HOC_2017_13_Cole_instruction": "**Freeplay:**  Time to explore on your own!",
        "MC_HOC_2017_4.5v2_instruction": "Get the Agent to the pressure plate.",
        "MC_HOC_2017_Ali_instruction": "Use the functions to find a way across the lava.",
        "MC_HOC_2017_FP10x10_instruction": "**Freeplay:** Can you challenge yourself to collect all of the diamonds in this level? ",
        "MC_HOC_2017_FP10x10_RE_instruction": "**Freeplay:** Can you challenge yourself to collect all of the diamonds in this level? ",
        "MC_HOC_2017_FP20x20_instruction": "**Freeplay:**  Time to explore on your own!",
        "MC_HOC_2017_Ryan_03_instruction": "Now use loops to help The Agent build a bridge over the river by placing blocks in the water.",
        "MC_HOC_2017_Ryan_05_instruction": "Destroy these cacti so that the player can get to the goal.",
        "MC_HOC_Kiki_02_instruction": "Get The Agent to the pressure plate.",
        "MSM Big Game Empty_instruction": "All variables and functions are currently empty stubs. Each puzzle progression will be focused on defining and handful of them, and therefore adding functionality.",
        "MSM Big Game Vars 1 (copy 1)_instruction": "In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact",
        "MSM Big Game Vars 1_instruction": "In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact",
        "MSM Big Game Vars Backup_instruction": "In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact",
        "MSM Defining Vars 1 (copy 1)_instruction": "Write a program that produces a 50 pixel solid green triangle.",
        "MSM Defining Vars 1_instruction": "Write a program that produces a 50 pixel solid green triangle.",
        "MSM Defining Vars 2 (copy 1)_instruction": "If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called \"my-shape\" and put the code for a 50 pixel solid green triangle inside.",
        "MSM Defining Vars 2_instruction": "If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called my-shape and put the code for a 50 pixel solid green triangle inside.",
        "MSM Defining Vars 3 (copy 1)_instruction": "Take your \"my-shape\" variable and use it with this provided code to draw two identical green triangles.",
        "MSM Defining Vars 3_instruction": "Take your my-shape variable and use it with this provided code to draw two identical green triangles that are 50 pixels in size.",
        "MSM Defining Vars 4_instruction": "Edit your my-shape variable so that it draws 75 pixel solid red stars.",
        "MSM Play Lab Butterfly 1_instruction": "Help Sam stay on the screen so that you can always see at least a little piece of him. Using the arrow keys, see how far Sam can go to the left while still staying onscreen. You’ll find that Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill in the code to make Sam stay on the screen.",
        "MSM Play Lab Butterfly 2_instruction": "Now make Sam stay on the right side of the screen. You'll have to experiment to see how far he can go and still be partially visible on the screen.",
        "MSM Play Lab Butterfly 3_instruction": "Now, combine your work to make Sam stay on both sides of the screen.",
        "MSM Play Lab Game 2_instruction": "Variables can also be used to control the speed of players in a game. Set the player speed and the enemy speed and see how the movement changes. Speed can be between 2 and 12.",
        "Middle School Hackathon Pt 1_instruction": "(Click to see full instructions)",
        "Middle School Hackathon Pt 2_instruction": "(Click to see full instructions)",
        "Mike Pair Programming_instruction": "Here are the instructions",
        "Mike Test Bee Conditionals 1_instruction": "This cloud is blocking my view! Check to see if there's a flower under the cloud, and only get nectar if there's a flower. Be careful, it can change!",
        "Mike Test Bee Conditionals 2_instruction": "Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "MikeAssessment1_instruction": "Now do it right!",
        "MikeStar_instruction": "Draw this.",
        "MikeStarHard_instruction": "Draw this.",
        "MikeStarNested_instruction": "Draw this.",
        "MikeTest1_instruction": "Who knows what you should do?!?!",
        "MikeTest2_instruction": "Draw something!",
        "MikeTest3_instruction": "Build Something",
        "NEW Course 4 Artist Functions 1_instruction": "Can you draw a square that is 100 pixels in length, using a repeat loop?",
        "NEW Course 4 Artist Functions 10.1_instruction": "Use the functions from the previous puzzles to draw this pattern.",
        "NEW Course 4 Artist Functions 10_instruction": "Click \"edit\" to fill out the blocks in the function definition to make a 40 pixel square.",
        "NEW Course 4 Artist Functions 11_instruction": "Now we want to create a new function called `draw a line of squares` that draws six squares all in a row.  Can you build this function using this `draw a square 20` function that we created for you?",
        "NEW Course 4 Artist Functions 12_instruction": "Use the `draw a line of squares` function from the last puzzle to draw this pattern.",
        "NEW Course 4 Artist Functions 13_instruction": "Can you draw a star shape using the `draw a line of squares` function?  ",
        "NEW Course 4 Artist Functions 14_instruction": "Free-play time! ",
        "NEW Course 4 Artist Functions 2_instruction": "Can you draw 3 squares 20 pixels apart from one another? Each square is 100 pixels in size.",
        "NEW Course 4 Artist Functions 3_instruction": "Here is a new type of Block. It is called a `function` block. Click \"edit\" then fill it with the code for drawing a square with 100 pixel sides. \n\nWhen you're done editing the function, click \"Close\" to go back to your program.",
        "NEW Course 4 Artist Functions 4_instruction": "Use the `draw a square` function to draw this pattern.",
        "NEW Course 4 Artist Functions 5_instruction": "How did the \"draw a square\" block know what commands to run? Click on \"edit\" in the \"draw a square\" function block. The blocks in the function editor are the definition that make up \"draw a square.\" When you're done looking around, click \"Save and Close\" and then \"Run.\"",
        "NEW Course 4 Artist Functions 6_instruction": "Using the \"draw a square\" function block, can you draw this picture? Hint: each square is 20 pixels apart.\n",
        "NEW Course 4 Artist Functions 7_instruction": "Are you getting the hang of how to use function blocks? Let's modify this square so that it is 200 pixels in size. Click on \"edit\" to enter the `draw a square` function editor. Remember to click on \"Close\" to get out of the function editor. ",
        "NEW Course 4 Artist Functions 8_instruction": "We have created a new function for you called \"draw a triangle\".  Can you edit the function definition to draw a triangle with 100 pixel sides?",
        "NEW Course 4 Artist Functions 9_instruction": "Can you solve this by adding only one block?",
        "NEW Course 4 Artist Functions inspire_instruction": "Click here to see the inspiration picture again.",
        "NEW Course 4 Artist Params 1_instruction": "Let's define this function to draw a square with 50 pixel sides. Click \"edit\" to get started.",
        "NEW Course 4 Artist Params 10_instruction": "Create a `draw a hexagon` function block with a length parameter. This hexagon has sides that are 100 pixels in length. ",
        "NEW Course 4 Artist Params 11_instruction": "Can you figure out how to draw this shape? Edit the function to use the \"sides\" parameter.",
        "NEW Course 4 Artist Params 12_instruction": "Can you complete this drawing? The sides of all the shapes are 100 pixels long.",
        "NEW Course 4 Artist Params 12a_instruction": "This image is similar to the last. Can you use a `for` loop with your function to make this design?",
        "NEW Course 4 Artist Params 13_instruction": "Let's edit this \"draw a polygon\" function. It already has a \"sides\" parameter. Now, let's add a \"length\" parameter. \nThe perimeter of each shape is 200 pixels long. Do you remember the equation to make shapes the same size when they have a different number of sides?",
        "NEW Course 4 Artist Params 14_instruction": "Edit \"draw a spiral edge\" to use \"length\" and \"sides\" parameters, then recreate these shapes.",
        "NEW Course 4 Artist Params 15_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Draw something awesome! Play with the pen width to see how different your drawings look!",
        "NEW Course 4 Artist Params 2_instruction": "Create a `draw triangle` function from scratch that makes a triangle with  50 pixel sides.",
        "NEW Course 4 Artist Params 3_instruction": "Now let's use the function to draw 5 triangles in a row. Each triangle is 30 pixels apart.\n",
        "NEW Course 4 Artist Params 4_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "NEW Course 4 Artist Params 5_instruction": "Replace the `???` in the `length` parameter input block. The pentagon has 100 pixel sides. ",
        "NEW Course 4 Artist Params 6_instruction": "Fill in the \"length\" parameter to draw these shapes by replacing the \"???\" with the right numbers. The square and triangle have 100 pixels sides while each side of the hexagon is 75 pixels long.",
        "NEW Course 4 Artist Params 7_instruction": "Can you complete this drawing? The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides.",
        "NEW Course 4 Artist Params 8_instruction": "The code for this triangle function is broken. Can you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "NEW Course 4 Artist Params 9_instruction": "Click \"edit\" to fill in the function definition of \"draw a square\" and add a parameter. It should take a length parameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75 pixels in length, each 100 pixels apart.",
        "NEW Course 4 Artist Params inspire_instruction": "Free Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n \nWant to know how our inspiration pattern was made? ",
        "NEW Course 4 Artist Vars 1.5_instruction": "Take a look at the code, can you see how the \"set length\" block and \"length\" block works together? Click on \"Run\" to see it in action. ",
        "NEW Course 4 Artist Vars 12_instruction": "Now, recreate the algorithm from the last level and create a pentagon with sides of length 150.",
        "NEW Course 4 Artist Vars 2.5_instruction": "Take a look at the code, can you see how the \"set length\" block and \"length\" block works together? Click on \"Run\" to see it in action. ",
        "NEW Course 4 Artist Vars 2_instruction": "Drag a number block to both the `set length` block and the `repeat _ times` block to draw a set of 50 pixel triangles. ",
        "NEW Course 4 Artist Vars 4 5_instruction": "Awesome job on the last puzzle, let's try it again this time let's make this cool design with with 60 pixel hexagon's.",
        "NEW Course 4 Artist Vars 4_instruction": "Let's try it again! \n\nCan you set the `length` variable to 60 to make this cool design with hexagons?",
        "NEW Course 4 Artist Vars 6_instruction": "Draw this pattern of pentagons with 100 pixel sides by setting the right value for `length` and dropping the `length` variable into all of the the correct places. \n\nSee how you only have to set the value for `length` once, and the code uses the right value everywhere?",
        "NEW Course 4 Bee For Loops 1_instruction": "Use a loop to collect the nectar from each flower.",
        "NEW Course 4 Bee For Loops 10_instruction": "Use your for loop \"counter\" variable to control how far to move horizontally.",
        "NEW Course 4 Bee For Loops 10a_instruction": "Ready for a challenge?  Take what you've learned about loops and try to solve this problem. Remember: You may have to run through solutions multiple times before you figure out all of the steps.",
        "NEW Course 4 Bee For Loops 11_instruction": "Can you use the loop variable to control movement and nectar collection?",
        "NEW Course 4 Bee For Loops 2_instruction": "Add the code necessary to make sure the bee collects all the nectar. Look at how much code you need for this puzzle! (We'll learn a simpler way in the next puzzle.)",
        "NEW Course 4 Bee For Loops 3_instruction": "Ah, the \"for loop\" makes this much easier! All the code you need is here, take a look at how it is put together then click \"Run\" to see how it works. ",
        "NEW Course 4 Bee For Loops 4 4_instruction": "Now we need to move forward \"counter\" times, then get nectar \"counter\" times.  Can you use two \"repeat\" loops to solve this challenge?",
        "NEW Course 4 Bee For Loops 4_instruction": "Replace the ??? in the \"for loop\" with the largest amount of nectar the bee has to collect. ",
        "NEW Course 4 Bee For Loops 5 5_instruction": "Are you getting the hang of using the \"for loop\"? Let's help the bee get the rest of the nectar.",
        "NEW Course 4 Bee For Loops 5_instruction": "You can also use a \"for loop\" to count down. Try gathering this nectar by counting down from 5 to 1 by 1.",
        "NEW Course 4 Bee For Loops 6_instruction": "The last number in your for loop is called the \"increment\". Each time the loop is run, the counter variable changes by the value of the increment. Try collecting these flowers using an increment of 2.",
        "NEW Course 4 Bee For Loops 7_instruction": "Now, let's combine the \"counter\" variable with a math block! How can you use the \"counter\" variable to navigate this garden with the fewest number of blocks possible? What do you need to do to collect 3, 6, 9, 12, 15 nectar this time? The secret is in the \"counter\" variable!\n\nRemember: If your loop is counting up, the increment is added to your \"counter\" variable each time through.",
        "NEW Course 4 Bee For Loops 8_instruction": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
        "NEW Course 4 Bee For Loops 9_instruction": "If your loop is counting down, the increment is subtracted from your counter variable each loop. What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "NEW Course 4 Bee For Loops 95_instruction": "Take a look at each piece of the \"for loop\" that you have just created.  Can you figure out which numbers you need to double to solve this puzzle? Why does it work?",
        "NEW Course 4 Play Lab Params 11_instruction": "It's free play time! Have fun with all the blocks in your tool box. ",
        "NEW Course 4 Play Lab Params 5 5_instruction": "Let's try that again, but with less help. What do you need to edit this time to make the actors patrol?",
        "NEW Course 4 Play Lab Vars 4 5_instruction": "“What do you think this code will do? Press “Run” to see what happens.”",
        "NEW Course 4 Play Labs For Loops 7a_instruction": "Using what you learned so far, can you have Dinosaur take a step forward every time Penguin counts?",
        "NEW Course 4 Play Labs For Loops 8 Free Play_instruction": "It's Free Play time, have fun with all the blocks in your tool box. ",
        "NEW Course 4 Play Labs For Loops 8a_instruction": "Challenge: How would you use the \"for loop\" to get every actor to go around and say their actor number, then vanish from the screen? ",
        "NetSim Standalone Automatic DNS_instruction": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
        "NetSim Standalone Broadcast_instruction": "In this version of the Internet Simulator, you can connect to up to 5 other people in a room. When you send messages in the room, everyone receives them. What are some of the challenges of this system, and how might you solve them?\n",
        "NetSim Standalone Classroom Routers_instruction": "In this version of the Internet Simulator, everyone connects to a router and has a specific address. To send messages, you have to address your message to the specific address of the recipient, and the router will take care of delivering it to the right computer. If there are other routers created in your class, ask for the address of one of your classmates and send them a message! View the Log Router to see the path the messages have taken through the network.",
        "NetSim Standalone Freeplay_instruction": "In this configuration, most of the options are turned on, and you can play with them. Have fun!",
        "NetSim Standalone Manual DNS_instruction": "In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.",
        "NetSim Standalone Packets TCP_instruction": "Messages on the Internet can take many paths to get to their destination, and sometimes along the way the message gets dropped. In this version of the Internet Simulator, there is a 10% chance of a packet being dropped, multiple packets may take different paths to the destination, and the default max packet size is set to 6 additional characters. ",
        "NetSim Standalone Routers Addresses_instruction": "For this activity, connect to a router with the others in your group. Important note: The router will only properly route messages where the first 4 bits are the To: address and the second 4 bits are the From: address.\n\n[TODO: NetSim needs to support hierarchical addresses. For now, level is set up for 4 bit to and from addresses]",
        "NetSim Standalone SendAB_instruction": "You and your partner share a single wire that can only be in state A or state B. You can set the wire to either state at any time, and you can read the state of the wire at any time. Can you figure out a way to effectively communicate with just this system?",
        "NetSim Standalone Sending Numbers Ascii_instruction": "Now that you've transmitted information represented as decimal numbers, you can map those numbers to text characters to send text-based information back and forth. With a text-based protocol, you can easily represent and communicate all kinds of information. ",
        "NetSim Standalone Sending Numbers_instruction": "You and your partner can now reliably send messages back and forth without extra coordination! While you're always sending bits back and forth, you can also represent those bits as decimal numbers. What kinds of information can you represent with this system? ",
        "NetSim_AddressingMessages_instruction": "In this version of the simulator, you will connect to a Router instead of directly to another student. Enter an address in the \"To\" box to send a message to another student.",
        "NetSim_AutomaticDNS_instruction": "In this version of the simulator a DNS service is provided for you. Send a message in the form GET [hostname] to the DNS service at address 15 to get a student's address.",
        "NetSim_ManualDNS_instruction": "In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.",
        "NetSim_SendAB_instruction": "Connect to another student.  Each of you can set the value of the wire between you to \"A\" or \"B\".  See if you can send a complete message!",
        "NetSim_SendAscii_instruction": "In this version of the simulator, you can send numbers or ASCII characters to one another, one bit at a time.",
        "NetSim_SendBits_instruction": "Connect to another student.  You can now set your wire to \"0\" or \"1\".  Send a message to your partner!",
        "NetSim_SendNumbers_instruction": "In this version of the simulator, you can view the decimal representations of the binary you are sending.",
        "NetSim_SendingABTest_instruction": "This is Sarah's test of making a netsim level",
        "NetSim_Superuser_instruction": "You have loaded NetSim in superuser mode.",
        "NetSim_Variant1_instruction": "NetSim: Variant 1 allows students to manually work out the timing of sending bits back and forth.",
        "NetSim_Variant2_instruction": "NetSim: Variant 2: Students connect directly to one another and send entire packets back and forth, exploring systems of encoding data.",
        "NetSim_Variant3_instruction": "NetSim: Variant 3: Connects groups of 2-6 students with a router, and explores issues in routing and DNS",
        "New Artist Project_instruction": "Draw something awesome! Your code is saved as a project that you can return to at any time.",
        "New Basketball Project_instruction": "Create your own Basketball game. You can change all the rules. When you're done, click Finish to let friends try your game on their phones.",
        "New Bounce Project_instruction": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.",
        "New Course 4 Artist Functions Level 4_instruction": "Use the \"draw a square\" function to draw this pattern.",
        "New Gumball Project_instruction": "Create anything you like and share it!",
        "New Ice Age Project_instruction": "Create anything you like and share it!",
        "New Infinity Project_instruction": "Create anything you like and share it!",
        "New Minecraft Hero Project_instruction": "**Freeplay:**  Time to explore on your own!",
        "New Sports Project_instruction": "Create your own game! You're in charge here: you can change all the rules, mix and match sports, get creative! When you're done, click Finish to let friends try your game on their phones.",
        "Ninjacat Demo B (copy 1)_instruction": "\nLet’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja left, right and jump - try to catch the unicorn and avoid the dragon!\n\n\n\n  \n\n",
        "Ninjacat Demo B_instruction": "Let’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja up and down - try to catch the unicorn and avoid the dragon! When you think you've figured out how the game works, click \"Finish\"",
        "Ninjacat Demo No Animate_instruction": "Let’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja up and down - try to catch the unicorn and avoid the dragon! When you think you've figured out how the game works, click \"Finish\"",
        "October15 JoL 1_instruction": "Program the artist to design a face for your jack-o-lantern!",
        "October15 bat_instruction": "Freeplay: Here are some functions to play with.  Can you draw a bat?\n",
        "October15 ghost 1_instruction": "Give the ghost eyes, using the \"draw a circle\" function.",
        "October15 pumpkin 1_instruction": "Finish this jack-o-lantern by drawing the eyes and nose in any style you would like.",
        "October15 stars 1_instruction": "Use loops and the \"random integer\" block to fill the night sky with stars of different shapes and sizes.",
        "Overworld Avoid Monsters_instruction": "Running into a Creeper is a bad idea. Carefully move past the Creepers and reach the safety of your home.",
        "Overworld Avoid Monsters_2018_instruction": "Running into a Creeper is a bad idea. Carefully move past the Creepers and reach the safety of your home.",
        "Overworld Chop Tree - allthethings_instruction": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the “destroy block” command to chop it down.",
        "Overworld Chop Tree_instruction": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the “destroy block” command to chop it down.",
        "Overworld Chop Tree_2018_instruction": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the “destroy block” command to chop it down.",
        "Overworld Chop Trees_instruction": "We need to build a house before the sun goes down. Houses require a lot of wood. Cut down all 3 trees.",
        "Overworld Chop Trees_2018_instruction": "We need to build a house before the sun goes down. Houses require a lot of wood. Cut down all 3 trees.",
        "Overworld Free Play 20x20_instruction": "Congratulations! You've completed all our puzzles! Now mine, build, and create something unique by using everything you've learned so far.",
        "Overworld Free Play 20x20_2018_instruction": "Congratulations! You've completed all our puzzles! Now mine, build, and create something unique by using everything you've learned so far.",
        "Overworld House Frame Chosen_instruction": "Build the rest of your house from any material you'd like. The \"repeat\" command will come in handy.",
        "Overworld House Frame Chosen_2018_instruction": "Build the rest of your house from any material you'd like. The \"repeat\" command will come in handy.",
        "Overworld Move to Sheep_instruction": "Add a second `move forward` block to reach the sheep.",
        "Overworld Move to Sheep_2018_instruction": "Add a second `move forward` block to reach the sheep.",
        "Overworld Place Wall_instruction": "Every house starts with a wall. Build the first part of your house by putting the \"place\" and \"move forward\" commands inside the repeat loop.",
        "Overworld Place Wall_2018_instruction": "Every house starts with a wall. Build the first part of your house by putting the \"place\" and \"move forward\" commands inside the repeat loop.",
        "Overworld Plant Crops_instruction": "It’s good to plan ahead. Plant crops on both sides of the water so you don’t get hungry later on.",
        "Overworld Plant Crops_2018_instruction": "It’s good to plan ahead. Plant crops on both sides of the water so you don’t get hungry later on.",
        "Overworld Powered Minecart_instruction": "Great job! You’ve gathered lots of resources and built a modest home. Now lay rail from the edge of the map to the door of your house.",
        "Overworld Powered Minecart_2018_instruction": "Great job! You’ve gathered lots of resources and built a modest home. Now lay rail from the edge of the map to the door of your house.",
        "Overworld Shear Sheep_instruction": "Sheep-shearing time! Use the “shear” command to gather wool from both sheep.",
        "Overworld Shear Sheep_2018_instruction": "Sheep-shearing time! Use the “shear” command to gather wool from both sheep.",
        "PDAlg 13-16 Sam Extension Puzzle_instruction": "Add a second parameter to \"onscreen?\" for Sam's y coordinate and update the function so it keeps him safe on all four sides.",
        "PDAlg 17-20 Luigi Extension Puzzle_instruction": "Without modifying your existing \"cost\" function, create a new \"coupon\" function that takes a pizza topping and coupon code and returns the cost of a pizza with that topping. If the coupon code is correct (you get to decide what it is), apply a 30% discount to the pizza.",
        "PDAlg 8-12 Rocket Height Puzzle_instruction": "Let's write a \"rocket-height\" function with simple acceleration. Write a function that ensures the rocket is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.",
        "PDAlg 8-12 ex dr 1_instruction": "The definition in this Design Recipe doesn't match both examples. Test each example to see which is failing, and then fix the definition to match.",
        "PDAlg 8-12 ex dr 2_instruction": "This student has created two examples for the function \"apples\" but something's not quite right. How would you direct this student to correct their mistake?",
        "PDAlg Big Game History_instruction": "Now that you've played through a Big Game level you should see a new entry in your history. Click the Version History button and you should see at least one version. Each time you go back to a Big Game level you'll get a new record in your version history that you can revert back to.",
        "PDAlg Big Game Remix_instruction": "Here's your Big Game as you last left it. Try clicking the Remix button to spin off a new remix of your project.\n\nAny changes you make after you click Remix will be saved on your new remix and not on your main Big Game.",
        "PDAlg Design Recipe Delete_instruction": "Click the delete button to get rid of this function, then try creating and deleting a few of your own.",
        "PDAlg Design Recipe Examples_instruction": "The definition in this Design Recipe doesn't match both examples. Test each example to see which is failing, and then fix the definition to match.",
        "PDAlg Design Recipe Required_instruction": "Complete the Design Recipe for the \"eggs\" function, making sure to create and test your examples.",
        "PDAlg Updates Cond_instruction": "When you went to PD in the summer, the Conditional block that you were introduced to was black and allowed any data type to be used. This proved to be confusing, given that every other function we've seen always produces the same type of data. To help make conditionals clearer and more consistent we've replaced the single black block with a separate block for each data type.",
        "PDAlg Updates Errors_instruction": "Run the provided program and use the error messages to try and track down the bugs.",
        "PDAlg Updates Space_instruction": "Making use of limited programming space (especially on small screens) is challenging with a block based language. To help with this we've added a few features. Experiment with this provided code to see how the space can be manipulated to deal with larger programs.",
        "PDK5 Conditionals 1_instruction": "Purple flowers may have either 1 or 0 nectar, but you don't know which one! Be careful not to collect nectar from a purple flower if it doesn't have any. Check if the nectar is equal to 1 by using the if block.",
        "PDK5 Conditionals 2_instruction": "Try this puzzle that uses conditionals and loops together. Use the \"if\" block to decide when to turn. Hint: you only need one more block to complete this puzzle. ",
        "PDK5 Events 1_instruction": "So far all of the programs we've written are executed in order from top to bottom. In this puzzle, we'll use \"Events\" to respond to an action on demand. Make the octopus say \"Hello\" only when you click on the Octopus. ",
        "PDK5 Functions 1_instruction": "Hello. Me zombie artist. Me love drawing! Help me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels shorter than the square length.",
        "PDK5 Functions 2_instruction": "Functions let you define new blocks! We've moved the blocks to draw a square into a function called \"draw a square\". Can you use the \"draw a square\" function to create the glasses? The squares are 75 pixels apart.",
        "PDK5 Loops 1_instruction": "Instead of using 5 \"move forward\" blocks, use the \"repeat\" block with a \"move forward\" block inside of it. In computer science, this is called a \"loop.\" ",
        "PDK5 Loops 3_instruction": "Here's another puzzle to practice loops. What happens if you use the repeat block to run the code already provided on the workspace 4 times?",
        "PS - test - pixelation_instruction": "Complete the X shape by typing 0s and 1s",
        "PS FR test 7-25_instruction": "Here are your instructions for this free response.  ",
        "PS Log test - Define and use turnAround_instruction": "Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)",
        "PS copy 2-3 Bee Conditionals 5_instruction": "Be careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "PS predictive Applab level test_instruction": "Here are some instructions. ",
        "Pattern Bee 1_instruction": "What a strange field of goodies! I wonder if there's a pattern here...",
        "Pixelation - AllTheThings 4_instruction": "This pixelation level demonstrates the use of the `hide_encoding_controls` option.  Notice that the level displays the image data in hexadecimal and does not let you change it back to binary.",
        "Pixelation - AllTheThings 5_instruction": "This pixelation level demonstrates the use of the \"Hide sliders\" option.  Notice that the width and height sliders are not available, and the width and height fields are not editable.",
        "Pixelation - Lesson 14 - Fix bit offset v.2_instruction": "Something happened to the bits in this image! Find the error and fix it! Hint: a few extra bits were added. You should only need to remove some bits.",
        "Pixelation - Lesson 14 - Fix bit offset_instruction": "A single extra bit was inserted into the stream of bits that make up the C of the Code.org logo. That extra bit bumps all of the other bits down the line which makes the logo look messed up. Hunt down the extra bit and remove it to fix the Code.org logo.",
        "Pixelation - Lesson 14 - Fix bit offset_2018_instruction": "A single extra bit was inserted into the stream of bits that make up the C of the Code.org logo. That extra bit bumps all of the other bits down the line which makes the logo look messed up. Hunt down the extra bit and remove it to fix the Code.org logo.",
        "Pixelation - Lesson 14 - Fix the error_instruction": "Something happened to the bits in this image!  Find error and fix it!  Hint: a few extra bits were added.  You should only need to remove some bits.",
        "Pixelation - Lesson 14 - Make the Letter A_instruction": "Make a 3x5 letter 'A'. The widget is setup with the incorrect dimensions. Your first task is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then start entering pixel data.",
        "Pixelation - Lesson 14 - Make the Letter A_2018_instruction": "Make a 3x5 letter 'A'. The widget is setup with the incorrect dimensions. Your first task is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then start entering pixel data.",
        "Pixelation - Lesson 14 - Make your own B and W Image_instruction": "Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!",
        "Pixelation - Lesson 14 - Make your own B&W Image_instruction": "Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want.  Happy pixeling!",
        "Pixelation - Lesson 15 - Color Free Play_instruction": "Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.",
        "Pixelation - Lesson 15 - Color Shades 4x4_instruction": "We start you out with the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.",
        "Pixelation - Lesson 15 - Color Shades 4x4_2018_instruction": "We start you out with the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.",
        "Pixelation - Lesson 15 - Color Shades_instruction": "We start you out with the row of shades of red that Maddie created in the video. Experiment with 6-bit color by filling in the bottom row of the image with shades of a different color. Here is an example with some shades of blue. Try your own color!",
        "Pixelation - Lesson 15 - Color Shades_2018_instruction": "We start you out with the row of shades of red that Maddie created in the video. Experiment with 6-bit color by filling in the bottom row of the image with shades of a different color. Here is an example with some shades of blue. Try your own color!",
        "Pixelation - Lesson 15 - Complete 3-bit color_instruction": "We start you with the 4x2 image Maddie was creating, but we've left out the last two squares. Finish off the image by figuring out which two colors are missing and encode them.",
        "Pixelation - Lesson 15 - Complete 3-bit color_2018_instruction": "We start you with the 4x2 image Maddie was creating, but we've left out the last two squares. Finish off the image by figuring out which two colors are missing and encode them.",
        "Pixelation 2_instruction": "Something happened to the bits in this image!  Find error and fix it!",
        "Pixelation 4x4 Empty_instruction": "The width and height are now encoded in the pixel data. Can you figure out how to adjust the dimensions?",
        "Pixelation Bee_instruction": "This larger image of a bee encodes color with 12 bits per pixel, but viewing in hex makes it easier to see the color of each pixel. If you switch to binary mode - hold on to your hat - it's a lot of bits. Here's another mind-blowing thing to try: slide the bits per pixel up to 24 bits per pixel. What happens? Can you explain this behavior?",
        "Pixelation Bee_2018_instruction": "This larger image of a bee encodes color with 12 bits per pixel, but viewing in hex makes it easier to see the color of each pixel. If you switch to binary mode - hold on to your hat - it's a lot of bits. Here's another mind-blowing thing to try: slide the bits per pixel up to 24 bits per pixel. What happens? Can you explain this behavior?",
        "Pixelation Flappy_instruction": "Here is a bigger image at 9 bits per pixel. With 9 bits per pixel you can express 512 different colors. Click through to see the next image which is even more sophisticated, but easier to understand.",
        "Pixelation Flappy_2018_instruction": "Here is a bigger image at 9 bits per pixel. With 9 bits per pixel you can express 512 different colors. Click through to see the next image which is even more sophisticated, but easier to understand.",
        "Pizza on a Plate_instruction": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Planning Farmer_instruction": "What a strange field of goodies! I wonder if there's a pattern here...",
        "Planter Test_instruction": "Help me plant my fields!",
        "Play Lab Rocket 1_instruction": "A rocket blasts off, traveling at 15 meters per second... press \"Run\" to see how this word problem looks as an animation.",
        "Play Lab Rocket 2_instruction": "We've started the Design Recipe for rocket-height using the contract and examples you just wrote. Complete the function definition for rocket-height and run your animation.",
        "Play Lab Rocket 3_instruction": "Awesome, now can you update that function so that our rocket moves more quickly? Make sure to update the purpose statement, examples, and function definition to launch a rocket at 40 meters per second.",
        "Play Lab Rocket 4 (copy 1)_instruction": "Real rockets start off slowly and gain speed over time - let's make ours do the same! Write an exponential function that describes a rocket that travels at \"seconds\" squared meters per second.",
        "Play Lab Rocket 4_instruction": "Real rockets start off slowly and gain speed over time - so let's add some simple acceleration to ours! Can you write a function that describes a rocket that is at 10 meters at 1 second, 40 meters at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?",
        "Play Lab Rocket 5_instruction": "Much better, but let's write one more function with simple acceleration. This time the rocket should be 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.",
        "Play Lab Rocket Free Play_instruction": "Free Play: Experiment with your rocket-height function to make the rocket fly in different ways. Click \"Finish\" when you are done.",
        "Poorva copy U3L2 Using Simple Commands_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "Poorva-test_instruction": "Here are regular instructions for a level. There is nothing fancy going on here.",
        "Practice Create Performance Task_instruction": "Design and implement your practice Create Performance Task. (Click to see full instructions)",
        "Practice Create Performance Task_2018_instruction": "Design and implement your practice Create Performance Task. (Click to see full instructions)",
        "Project - Final Image Scroller_instruction": "Update the image scroller to respond to buttons and key presses. (Click to see full instructions)",
        "Project - Final Image Scroller_2018_instruction": "Update the image scroller to respond to buttons and key presses. (Click to see full instructions)",
        "Project - Finish your canvas app_instruction": "Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)",
        "Project - Make Your Own Clicker Game_instruction": "Complete your clicker game! (Click to see full instructions)",
        "Project - Your Own Multi Screen App_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "Project - Your Own Multi Screen App_2018_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "Prompt Test_instruction": "Build whatever you want. This is an example of a number-guessing game!",
        "Quantum Bee - Ryan_instruction": "These clouds are bugging me! Some of the clouds have flowers inside, and some don't. I should check each cloud, and only get nectar from the flowers.",
        "Quantum Bee_instruction": "Purple flowers may have either 1 or 0 nectar, but you don't know which one! Be careful not to collect nectar from a purple flower if it doesn't have any. Check if the nectar is equal to 1 by using the if block.",
        "Ram Spritelab Validation Test_instruction": "Press the up arrow",
        "Robot Doodle_instruction": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot Doodle_2018_instruction": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot Drawing_instruction": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot_instruction": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Rocket Height Course A_instruction": "Follow the Design Recipe to create a function rocket-height.",
        "Ryan - 4-5 Bee Conditionals 2_instruction": "The bee only wants nectar right now. Not all objects are flowers, so check underneath EVERY CLOUD to see if it is hiding a flower. If it is, then you can gather nectar.",
        "Ryan - Bee Conditionals_instruction": "The bee only wants nectar right now. Not all objects are flowers, so check underneath EVERY CLOUD to see if it is hiding a flower. If it is, then you can gather nectar.",
        "Ryan Doily Step 1_instruction": "Now we're going to draw a doily step by step. First, draw a square.",
        "Ryan Doily Step 2_instruction": "Now you need to turn and repeat it 20 times! How many degrees do you turn to get 360 after 20 iterations?",
        "Ryan Doily Step 3_instruction": "Now you need to turn and repeat it 20 times! How many degrees do you turn to get 360 after 20 iterations?",
        "Ryan Test Locked Blocks_instruction": "Here's a function called \"patrol.\" Edit it to move Cat up 400 pixels and then down 400 pixels.",
        "RyanTest3_instruction": "This level has shape-shifting turned on! Refresh to see different variants.",
        "SG Add Subgoals practice_instruction": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
        "SG U3L03 - draw rect function_instruction": "Write a function called drawRectangle().\n(Click to see full instructions)",
        "SG U3L03 - draw step_instruction": "Write the drawStep function. (Click to see full instructions)",
        "SG U3L03 Define and use turnAround_instruction": "Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)",
        "SG U3L03 Draw a T using turnAround_instruction": "Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)",
        "SG U3L03 Three Steps_instruction": "Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)",
        "SG U3L03 define turnRight and draw a rectangle_instruction": "Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)",
        "SG U3L03 draw diamond_instruction": "Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)",
        "SG U3L04 - 3 by 3 with functions_instruction": "Make the 3x3 square as efficiently as you can. (Click to see full instructions)",
        "SG U3L04 - snowflake_instruction": "Create the design by breaking it down into layers of functions. (Click to see full instructions)",
        "SG U3L06 - moveForwardwithParams_instruction": "Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)",
        "SG U3L06 Challenge 1 triangle_instruction": "Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)",
        "SG U3L06 Challenge 2 purple square_instruction": "Read the documentation for penColor() and penWidth() before using them to draw the blue square.",
        "SG U3L06 Challenge 3 fill pink_instruction": "Fill in the background of the screen with your favorite color. (Click to see full instructions)",
        "SG U3L06 Challenge 4 bullseye_instruction": "Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)",
        "SG U3L06 Challenge 5 overlapping circles_instruction": "This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven't gotten the hint yet: check out the documentation!",
        "SG U3L06 Challenge 6 squiggles_instruction": "Read the documentation for the \"arcLeft\" and \"arcRight\" commands and then draw the squiggles as shown. ",
        "SG U3L06 Challenge 7 smiley face_instruction": "Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)",
        "SG U3L06 Challenge 8 make your own_instruction": "Create a drawing of your own. (Click to see full instructions)",
        "SG U3L07 - Free Play Loops and Random_instruction": "Free Play! Use what you learned from loops and random to make your own little scene. Have fun.",
        "SG U3L07 - allSeaGrass_instruction": "Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)",
        "SG U3L07 - bubbles_instruction": "Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)",
        "SG U3L07 - createTriangleParam_instruction": "Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)",
        "SG U3L07 - fish_instruction": "Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)",
        "SG U3L07 - introSquare_instruction": "Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)",
        "SG U3L07 - loopsWithRandom_instruction": "Increase the number of iterations to fill the screen with white. (Click to see full instructions)",
        "SG U3L07 - randomDots1_instruction": "Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)",
        "SG U3L07 - randomSquare_instruction": "Draw the figure using a loop. (Click to see full instructions)",
        "SG U3L07 - seaGrass_instruction": "Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)",
        "SG U3L07 - seaStar_instruction": "Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)",
        "SG U3L07 - sunBeams_instruction": "Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)",
        "SG U3L07 - topDownDesign_instruction": "Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)",
        "SG U3L07 More Subgoals_instruction": "Read the documentation for penColor() and penWidth() before using them to draw the blue square.",
        "SG U3L08 - createTwoParamTriangle_instruction": "Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)",
        "SG U3L08 - digitalScene_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "SG U3L08 - drawSquareWithParam_instruction": "Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)",
        "SG U3L08 - fish_instruction": "Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)",
        "SG U3L08 - freePlay_instruction": "Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)",
        "SG U3L08 - individualCode_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "SG U3L08 - introUnderTheSea - recovery_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "SG U3L08 - introUnderTheSea_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "SG U3L08 - multiParamFish_instruction": "Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)",
        "SG U3L08 - paramsToStarfish_instruction": "Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)",
        "SG U3L08 - randomInput_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "SG U3L08 - seaGrass_instruction": "Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)",
        "SG U3L08 - squareTwoParams_instruction": "Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)",
        "SG U3L08 comments_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "SG U3L08 how to add comments_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "SG U3L2 Using Simple Commands part 1_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "SG U3L2 Using Simple Commands_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "SG U3L2_Add-subgoals_instruction": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
        "SG U3L2_Turtle3by3Grid_instruction": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
        "SG U3L2_TurtleSquare_right_instruction": "Draw a square to the front and to the right of the starting location. (Click to show full instructions)",
        "SGU3L07 - randomDots1_instruction": "Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)",
        "Sam the Butterfly 1 (copy 1)_instruction": "This butterfly is named Sam, and the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can see, Sam is free to walk around the yard, and the coordinates at the top of the screen update to tell you his location. Use the arrow keys to move sam around his yard. Help Sam collect all of the flags to move on.",
        "Sam the Butterfly 1_instruction": "This bat is named Sam, and the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can see, Sam is free to walk around the yard, and the coordinates at the top of the screen update to tell you his location. Click \"Run\" and then use the arrow keys to move Sam around his yard, making note of Sam's coordinates at different locations. Click \"Finish\" when you're ready to move on.",
        "Sam the Butterfly 2_instruction": "Sam's mom wants to make sure that she can always see at least a bit of him, so lets write some functions that help make sure he doesn't go too far out of the yard. Here's a function called safe-left? - it should take a Number for its domain that represents Sam's x-coordinates and return true if he's completely visible on screen. If your function works, Sam shouldn't be able to leave the yard from the left side.",
        "Sam the Butterfly 3_instruction": "In the last puzzle we kept Sam from leaving on the left, now let's do the same thing on the right. Complete the safe-right? function to make sure Sam can't go off the right side of the screen.",
        "Sam the Butterfly 4_instruction": "Huh, we can keep Sam from leaving on the left, or we can keep him from leaving on the right, but how can we keep him safe from leaving both directions? Try using the and block to program the function on-screen? to check if Sam is safe-left? and safe-right?",
        "Sam the Butterfly 5_instruction": "Free Play: Awesome, we've kept Sam safe on the left and right! Use this free play stage to experiment with your functions and further improve onscreen?",
        "Sam the Butterfly 6_instruction": "We've added a new parameter \"y\" to the \"on-screen?\" function. Update the function so that it checks that \"safe-left?\" AND \"safe-right?\" AND \"safe-up?\" are all true. When you've fixed the function, try going out of the yard from the left, right, and top sides.",
        "Sam the Butterfly 7_instruction": "Only one last direction to worry about! Create a \"safe-down?\" function and update the \"on-screen?\" function so that it checks up, down, left, and right.",
        "Sam the Butterfly Complete_instruction": "Only one last direction to worry about! Create a \"safe-down?\" function and update the \"on-screen?\" function so that it checks up, down, left, and right.",
        "SpecialFrozenLevel_instruction": "You've officially become a master artist! Create a winter wonderland.",
        "Standalone_Artist_1_instruction": "Welcome to Artist! First off, let's try to make a simple square using the turn right block and move forward block. Each side should be 100 pixels long.",
        "Standalone_Artist_2_instruction": "Draw this diamond with 120 and 60 degree angles and 150 pixel long sides.",
        "Standalone_Artist_3_instruction": "Can you draw this hexagon with 100 pixel sides and 60 degree turns?",
        "Standalone_Artist_4_instruction": "Now you've got a new block to play with, the loop. This will repeat a set of commands. What happens if you loop these commands 6 times?",
        "Standalone_Artist_5.5_instruction": "Notice how we simplified the diamond code by turning it into a loop. You can loop that whole sequence 12 times to draw the flower. Hint: You'll need to turn 30 degrees after your diamond loop so you don't keep drawing over the same diamond.",
        "Standalone_Artist_5_instruction": "How many times do you need to loop this diamond to draw the flower?",
        "Standalone_Artist_6_instruction": "Loop this hexagon code 6 times to create the design. How many degrees will you need to turn each time? Hint: divide the number of degrees in a circle by the number of times you are looping.",
        "Standalone_Artist_7_instruction": "A function is another programming tool to help you avoid repeating yourself. This function draws a flower, so you can use it any time you want to draw a flower. Use this and the new jump block to draw these flowers. Hint: The flowers are 150 pixels apart",
        "Standalone_Artist_8_instruction": "Here's a function called \"Draw a shape\" that we've programmed to draw hexagons. Run the code to see what it does and then experiment with the function to see what happens. Can you make it draw a pattern of squares, triangles, or octagons?",
        "Standalone_Artist_9_instruction": "Now go ahead and make whatever picture you'd like! You've even got an empty function that you can make do whatever you want!",
        "Standalone_Artist_v2_instruction": "Welcome to Artist! First off, let's try to make a simple square using the turn right block and move forward block. Each side should be 100 pixels long.",
        "StepIntro_instruction": "Here's how to use the \"Step\" button.",
        "Test Play Lab_instruction": "This is a test play lab level.",
        "Test embedded Blockly in instructions_instruction": "As a block element, we should be able to include XML representing a valid Blockly block or blocks.\n\n<xml>\n  <block type=\"draw_move_by_constant\">\n    <title name=\"DIR\">moveForward</title>\n    <title name=\"VALUE\">100</title>\n  </block>\n</xml>\n\nWe also support Blockly XML as an inline element like so: <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml>. The difference in input format being that this one is embedded within a paragraph, whereas the previous one is in a text block of its own. The difference in output is comparable.",
        "Test embedded K1 Blockly in instructions_instruction": "Use three `move west` blocks and one `pick corn` block to solve this puzzle.",
        "Test of comment block_instruction": "Drag out the subgoal label block you want.",
        "Testing Quantum Farmer_instruction": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
        "Text Compression 1_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.\n\n",
        "The Vigenere Cipher Widget_instruction": "Instructions",
        "The Vigenere Cipher Widget_2018_instruction": "Instructions",
        "The Vigenere Cipher_instruction": "Instructions",
        "Total Artist Clone Me_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Draw something awesome! Play with the pen width to see how different your drawings look!",
        "U1L10 NetSim numbers with decimal_instruction": "Invent and test a protocol for encoding and sending text messages. Your protocol must include the letters a-z, spaces, and common punctuation marks. You may add additional characters if you wish. See the worksheet handed out by your teacher for more detailed instructions!",
        "U1L11 NetSim numbers with Ascii_instruction": "Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!",
        "U1L13 Text Compression_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "U1L4 NetSim SendAB_instruction": "Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  ",
        "U1L8 NetSim numbers no decimal_instruction": "Default instructions",
        "U1L8 NetSim numbers with decimal_instruction": "With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!",
        "U2 Vigenere_instruction": "Test",
        "U2 frequency caesar_instruction": "Instructions",
        "U2 frequency random sub_instruction": "Instructions",
        "U2 vigenere cipher_instruction": "Instructions",
        "U2L04 - NetSim Routers with Addresses_instruction": "Send messages with your classmates (Click to see full instructions)",
        "U2L05 - NetSim - Packets and Building TCP_instruction": "Develop a Protocol for Reliably Sending a Message.\n\nConstraints:\n- Packets may contain only 6 characters\n- Packets may drop with small probability\n- Packets may not arrive in order",
        "U2L10 NetSim Automatic DNS_instruction": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
        "U2L10 NetSim Manual DNS_instruction": "In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.",
        "U2L14 frequency random_instruction": "Test",
        "U2L2 NetSim Hub Mode_instruction": "Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!\n",
        "U2L3 NetSim Hub Mode_instruction": "Use the Internet Simulator to test out your group's binary communication protocol for battleship. How short can you make the message and response?",
        "U2L4 NetSim Routers Addresses_instruction": "For this activity, connect to a router with the others in your group. Important note: The router will only properly route messages where the first 4 bits are the To: address and the second 4 bits are the From: address.\n\n[TODO: NetSim needs to support hierarchical addresses. For now, level is set up for 4 bit to and from addresses]",
        "U2L5 NetSim Classroom Internet_instruction": "For this activity, connect to a router with the others in your group. The Internet Simulator now provides a place for you to put the To and From addresses, so you don't have to type out the bits manually.\n\n",
        "U2L7 NetSim Need for Packets_instruction": "Transfer your favicon to a partner across a network in which the larger a packet grows, the more likely it is to be dropped.",
        "U3 - Arrays - Demo App_instruction": "Use the \"My Favorite Things\" app. How might this app be making use of an array? (Click to see full instructions)",
        "U3 - Arrays - appendItem_instruction": "Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)",
        "U3 - Arrays - assignment_instruction": "Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)",
        "U3 - Arrays - assignment2_instruction": "Calculate the sum of three values stored in an array. (Click to see full instructions)",
        "U3 - Arrays - assignment3_instruction": "Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)",
        "U3 - Arrays - createFirstArray_instruction": "Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)",
        "U3 - Arrays - expressionsAsIndexes_instruction": "Write a program that displays a randomly chosen color from the array. (Click to see full instructions)",
        "U3 - Arrays - favThings Counting Variable_instruction": "Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)",
        "U3 - Arrays - favThings Next_instruction": "Write code that allows the user to move forward through your list by clicking the \"Next\" button. (Click to see full instructions)",
        "U3 - Arrays - favThings Prev_instruction": "Write code that allows the user to move backward through your list by clicking the \"Last\" button. (Click to see full instructions)",
        "U3 - Arrays - favThings addItem_instruction": "Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)",
        "U3 - Arrays - favThings bounds_instruction": "Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)",
        "U3 - Arrays - favThings createArray_instruction": "Create an array of words describing your favorite things. (Click to see full instructions)",
        "U3 - Arrays - favThings firstOutput_instruction": "Use setText to display the first item in the array. (Click to see full instructions)",
        "U3 - Arrays - favThings giveIDs_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "U3 - Arrays - favThings keepPlaying_instruction": "Make any other improvements you want! (Click to see full instructions)",
        "U3 - Arrays - favThings template_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "U3 - Arrays - favThings template_2018_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "U3 - Arrays - globalVariableIndex_instruction": "Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)",
        "U3 - Arrays - indexPractice_instruction": "Write the contents of the array to the screen in numerical order. (Click to see full instructions)",
        "U3 - Arrays - insertingItems_instruction": "Insert items into an array to form a complete sentence. (Click to see full instructions)",
        "U3 - Arrays - insertionErrors_instruction": "Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)",
        "U3 - Arrays - introIndex_instruction": "Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)",
        "U3 - Arrays - length_instruction": "Use list.length to determine the length of each array. (Click to see full instructions)",
        "U3 - Arrays - lengthMinus1_instruction": "Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)",
        "U3 - Arrays - remove_instruction": "Remove items from an array to form a complete sentence. (Click to see full instructions)",
        "U3 - Arrays - stringsInArrays_instruction": "Write a sentence word by word by adding strings to an array. (Click to see full instructions)",
        "U3 - Canvas - 200dots_instruction": "Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)",
        "U3 - Canvas - One Dot sprayPaint_instruction": "Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)",
        "U3 - Canvas - appendToArray_instruction": "Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)",
        "U3 - Canvas - changeToMouseMove_instruction": "Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)",
        "U3 - Canvas - clickToAdd_instruction": "Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)",
        "U3 - Canvas - delete_instruction": "Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)",
        "U3 - Canvas - draw at click point_instruction": "Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)",
        "U3 - Canvas - freePlay_instruction": "Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)",
        "U3 - Canvas - introCanvas_instruction": "Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)",
        "U3 - Canvas - movementFunction fix Orig_instruction": "Modify the \"Original\" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)",
        "U3 - Canvas - movementFunction_instruction": "Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)",
        "U3 - Canvas - redrawOriginal_instruction": "Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)",
        "U3 - Canvas - redrawRandom_instruction": "Set up a button and event handler for the random function. (Click to see full instructions)",
        "U3 - Canvas - redrawRandom2_instruction": "Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)",
        "U3 - Canvas - shiftKey_instruction": "Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)",
        "U3 - Canvas - sketch_instruction": "Write code that redraws your image using a sketch effect. (Click to see full instructions)",
        "U3 - Canvas - sprayPaint_instruction": "Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)",
        "U3 - Canvas - transparentDots_instruction": "Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)",
        "U3 - Canvas - usingOffsetXY_instruction": "Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)",
        "U3 - Conditional Basics - 6_instruction": "Add a setText after the if statement to \"Nope. Guess again.\" (Click to see full instructions)",
        "U3 - Conditionals - Combine AND OR Simple_instruction": "Write an if statement that uses AND and OR to display \"Sleep in!\" if it's the weekend and the user is a teenager. (Click to see full instructions.",
        "U3 - Conditionals - Combine AND OR and NOT_instruction": "Write an if statement that uses AND and OR to display \"Time to go to school!\" if it's not the weekend and the user is under 18. (Click to see full instructions.)",
        "U3 - Conditionals - Combine AND and OR_instruction": "Write an if statement that uses AND and OR to display \"Time to go to school!\" if it's not the weekend and the user is under 18. (Click to see full instrucitons.",
        "U3 - Conditionals - Simple AND_instruction": "Write an if statement that uses AND to display \"You are a teenager.\" if the user enters an age between 13 and 19. (Click to see full instructions)",
        "U3 - Conditionals - Simple OR_instruction": "Write an if statement that uses OR to display \"It's the weekend!\" if the user enters a weekend day at the prompt. (Click to see full instructions)",
        "U3 - Conditionals - intoOr_instruction": "Add 2 if statements that use the OR operator. (Click to see full instructions)",
        "U3 - Conditionals - introAND_instruction": "Add 2 if statements that use the OR operator. (Click to see full instructions)",
        "U3 - Design Mode - Console Log_instruction": "Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)",
        "U3 - Design Mode - Layers and Delete_instruction": "Fix the layout of the bullseye game. (Click to see full instructions)",
        "U3 - Design Mode - Multi Screens 2_instruction": "Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)",
        "U3 - Design Mode - Multi Screens_instruction": "Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)",
        "U3 - Design Mode - Other Events_instruction": "Delete the button and make the image move to a random location when you click on it. (click to see detailed instructions)",
        "U3 - Design Mode - WTF Console Log_instruction": "Add a 3 console.log messages and test them out. (Click to see full instructions.)",
        "U3 - Design Mode -Recreate Beyond Buttons_instruction": "Recreate the game from the \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)",
        "U3 - Design Mode 1_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "U3 - Dice - Dropdown and Score_instruction": "Add guess and score to the Dice Game (Click to see full instructions)",
        "U3 - Dice - Dropdown with Strings_instruction": "Add a dropdown for difficulty level that prints the difficulty level in the console. (Click to see full instructions)",
        "U3 - Dice - If_instruction": "Show different die images for the random number generated. (Click to see full instructions)",
        "U3 - Dice - Nested_instruction": "Use nested if statements to make the scoring different for the different game levels. (Click to see full instructions)",
        "U3 - High Low - Debug_instruction": "Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)",
        "U3 - High Low - Dropdown_instruction": "Add a dropdown for their guess instead of promptNum (Click to see full instructions)",
        "U3 - High Low - Else if_instruction": "Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)",
        "U3 - High Low - Else_instruction": "Add an else statement so that the program will tell the user when they are right and when they are wrong. (Click to see full instructions)\n",
        "U3 - High Low - If_instruction": "Add code to the if statement that indicates the user guessed the secret number. (Click to see full instructions)",
        "U3 - Keys - Add Image URLs_instruction": "Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)",
        "U3 - Keys - Buttons and Keys_instruction": "Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)",
        "U3 - Keys - Demo App_instruction": "Play with the image scroller. Press the left and right arrows to progress through the images.",
        "U3 - Keys - Final Image Scroller_instruction": "Update the image scroller to respond to buttons and key presses. (Click to see full instructions)",
        "U3 - Keys - Functions_instruction": "Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)",
        "U3 - Keys - Key Up and Down_instruction": "Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)",
        "U3 - Keys - Multiple Keys_instruction": "Play a different sound when the down arrow is pressed. (Click to see full instructions)",
        "U3 - Keys - Practice Adding Images with URL_instruction": "Add image URLs to your image array. Test out the add button. Style your image scroller. (Click to see full instructions)",
        "U3 - Keys - Words to Images_instruction": "Add image URLs to your image array. Test out the add button. Style your image scroller. (Click to see full instructions)",
        "U3 - Loops -  9 Part 2_instruction": "Change the boolean expression for the while loop so that it will roll until both dice are greater than 3. (Click to see full instructions)",
        "U3 - Loops -  Complex Condition_instruction": "Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)",
        "U3 - Loops - 1_instruction": "Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)",
        "U3 - Loops - 10_instruction": "Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.",
        "U3 - Loops - 11_instruction": "Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)",
        "U3 - Loops - 12_instruction": "Change the code so that it prints the string \"Hi\" 5 times. (Click to see full instructions)",
        "U3 - Loops - 13_instruction": "Update the code to count up by 3 instead of 1. (Click to see full instructions)",
        "U3 - Loops - 14_instruction": "Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)",
        "U3 - Loops - 15_instruction": "Count the number of times the sum of the dice is 12. (Click to see full instructions)",
        "U3 - Loops - 16_instruction": "Find out how many times you have to roll to get the sum of 7 100 times (Click to see full instructions)",
        "U3 - Loops - 2_instruction": "Try creating an infinite loop using !=, > and <. (Click to see full instructions)",
        "U3 - Loops - 3_instruction": "Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)",
        "U3 - Loops - 4_instruction": " Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)",
        "U3 - Loops - 5_instruction": "Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)",
        "U3 - Loops - 6_instruction": "Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)",
        "U3 - Loops - 7_instruction": "Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)",
        "U3 - Loops - 8_instruction": "Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)",
        "U3 - Loops - 9_instruction": " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)",
        "U3 - Loops - Continue_instruction": " Use the Debug Commands to to make a list of all the values rolled before a 6. (Click to see full instructions)",
        "U3 - Loops - Minus Minus_instruction": "Change the code to count down from 10 to 1. (Click to see full instructions)",
        "U3 - Loops - Plus Plus_instruction": "Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)",
        "U3 - Loops - Typing in Console_instruction": "Use console to check the ending value of num. (Click to see full instructions)",
        "U3 - Loops - minus = operator_instruction": "Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)",
        "U3 - Loops - plus and minus = operator_instruction": "Update the code to use the += operator. (Click to see full instructions)",
        "U3 - Loops And Arrays - Add 5_instruction": "Add 5 to all the values in an array (Click to see full instructions)",
        "U3 - Loops And Arrays - Challenge 1_instruction": "Write a function that finds and returns the minimum value in an array.   (Click to see full instructions)",
        "U3 - Loops And Arrays - Challenge 2_instruction": "Write a function that finds and returns the minimum value in an array.   (Click to see full instructions)",
        "U3 - Loops And Arrays - Counting Times_instruction": "Count the number of times 5 appears in an array. (Click to see full instructions)",
        "U3 - Loops And Arrays - Divid by 2_instruction": "Divide every value in the array by 2. (Click to see full instructions)",
        "U3 - Loops And Arrays - Find Max_instruction": "Design a function that displays the smallest number in an array  (Click to see full instructions)",
        "U3 - Loops And Arrays - Find Min_instruction": "Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)",
        "U3 - Loops And Arrays - Functions that Return Value_instruction": "Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "U3 - Loops And Arrays - General Search Param_instruction": "Add a second parameter to the search function for the value to search for.  (Click to see full instructions)",
        "U3 - Loops And Arrays - Intro For Loop_instruction": "Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)",
        "U3 - Loops And Arrays - Linear Search_instruction": "Visit every element in the array and display \"true\" if the value is a 5, and \"false\" otherwise. (Click to see full instructions)",
        "U3 - Loops And Arrays - Loop Array If_instruction": "Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)",
        "U3 - Loops And Arrays - Make it a Function - add list parameter_instruction": "Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)",
        "U3 - Loops And Arrays - Make it a Function_instruction": "Move the code that searches the list for a 5 into a function called \"search\". (Click to see full instructions)",
        "U3 - Loops And Arrays - Multiple Returns_instruction": "Test out the return values of the findMax function.  (Click to see full instructions)",
        "U3 - Loops And Arrays - Print Array_instruction": "Use a for loop to print out all the values in an array. (Click to see full instructions)",
        "U3 - Loops And Arrays - Printing Single True_instruction": "Process the array and display a single \"true\" if the array contains a 5 or a single \"false\" if it does not.  (Click to see full instructions)",
        "U3 - Loops And Arrays - Return Index_instruction": "Make the search function return the index of the search value in the array. (Click to see full instructions)",
        "U3 - Loops And Arrays - Return Value_instruction": "Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)",
        "U3 - Loops And Arrays - Search and Remove_instruction": "Search for 5 in the array and remove it from the array. (Click to see full instructions)",
        "U3 - Loops And Arrays - Search with Boolean Var_instruction": "Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)",
        "U3 - Loops And Arrays - useFindMin_instruction": "Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "U3 - Movie Bot - Multiple If Sequences_instruction": "Add another set of if, else if, and else statements inside the question if statement to check for keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)",
        "U3 - Movie Bot - Nested Motivation_instruction": "Add a separate set of if statements to check for a \"?\" in the input. (Click to see full instructions)",
        "U3 - Movie Bot - When Multiple If Statements_instruction": "Add an if and else-if statement that checks for please and thank you. (Click to see full instructions)",
        "U3 - Movie Bot - toLowerCase_instruction": "Use the toLowerCase command to change all user input into lowercase letters after they enter it. (Click to see full instructions)",
        "U3 - Practice Create Performance Task_instruction": "Design and implement your practice Create Performance Task. (Click to see full instructions)",
        "U3 - Read Record - 1.2_instruction": "Console.log the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U3 - Read Record - 1.5_instruction": "Console.log the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U3 - Read Record - 1.6_instruction": "Console.log the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U3 - Read Record - 1_instruction": "Console.log the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U3 - Read Record - 2_instruction": "Change the table name so that the records are read from the new table.(Click to see full instructions)\n",
        "U3 - Read Record - 3_instruction": "Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)\n",
        "U3 - Read Record - 4.1_instruction": "Print out each record return from the readRecords call individually. (Click to see full instructions)\n",
        "U3 - Read Record - 4_instruction": "Print out each record return from the readRecords call individually. (Click to see full instructions)\n",
        "U3 - Read Record - 5 and half_instruction": "Print out the name of each movie in the records return from the readRecords call. (Click to see full instructions)\n",
        "U3 - Read Record - 5_instruction": "Print out the name of each movie in the records return from the readRecords call. (Click to see full instructions)\n",
        "U3 - Return Values - constrainTurtle_instruction": "Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)",
        "U3 - Return Values - debuggingConstrain_instruction": "Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)",
        "U3 - Return Values - debuggingMaxVal_instruction": "Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)",
        "U3 - Return Values - debuggingReturns_instruction": "Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)",
        "U3 - Return Values - increase1_instruction": "Call the increase function within moveForward, write, and console.log.  (Click to see full instructions)",
        "U3 - Return Values - increase2_instruction": "Change the increase function to return 3 times the input value. (Click to see full instructions)",
        "U3 - Return Values - min1_instruction": "Test out the return values of the findMax function.  (Click to see full instructions)",
        "U3 - Return Values - useFindMin_instruction": "Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "U3 - Return Values - useMinVal_instruction": "Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)",
        "U3 - Return Values - wrapTurtle_instruction": "Write wrap in this simple app to let the turtle \"wrap\" to the other side of the screen when it goes off.  (Click to see full instructions)",
        "U3 - Return Values - writeMaxVal_instruction": "Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)",
        "U3 - Search Terms - 1_instruction": "Create an array of all the movies made in 2008 and print it out. (Click to see full instructions)\n",
        "U3 - Search Terms - 2_instruction": "Print out all the movies with year 2008 using the readRecords search terms. (Click to see full instructions)\n",
        "U3 - Search Terms - 3_instruction": "Print whether or not there are movies matching the search criteria (Click to see full instructions)\n",
        "U3 - Search Terms - 4_instruction": "Print whether or not there are movies matching the search criteria (Click to see full instructions)\n",
        "U3 - Search Terms - 5_instruction": "Print out the cities that are in California or have a population of 2,000,000. (Click to see full instructions)\n",
        "U3 - Search Terms - 6_instruction": "Print out the cities that are in California or have a population of 2,000,000. (Click to see full instructions)\n",
        "U3 - Simple Drawing - Comments_instruction": "Do this",
        "U3 - Simple Drawing - Ellipse and No Fill_instruction": "Do this",
        "U3 - Simple Drawing - Fill_instruction": "Do This",
        "U3 - Simple Drawing - No Fill_instruction": "Do this",
        "U3 - Simple Drawing - Order of Blocks_instruction": "Do this",
        "U3 - Simple Drawing - Oval_instruction": "Do This",
        "U3 - Simple Drawing - Personal Drawing_instruction": "DO This",
        "U3 - Simple Drawing - Rectangle Width and Height_instruction": "Do This",
        "U3 - Simple Drawing - Rectangle_instruction": "Do This",
        "U3 - Simple Drawing - Road Ellipse_instruction": "Do This",
        "U3 - Simple Drawing - Road Rects and Color_instruction": "Do This",
        "U3 - Simple Drawing - Simple Shape Drawing_instruction": "Do This",
        "U3 - Simple Drawing - Stroke and Stroke Weight_instruction": "Do this",
        "U3 - Simple Drawing - X and Y values_instruction": "Do This",
        "U3 - Simple Drawing - regular polygon_instruction": "Do this",
        "U3 - Simple Drawing - text_instruction": "Do This",
        "U3 - Simulation - 1_instruction": "Use a while loop to \"flip a coin 10 times\" and write the values to the screen. (Click to see full instructions)",
        "U3 - Simulation - 2.1_instruction": "Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)",
        "U3 - Simulation - 2.5_instruction": "Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)",
        "U3 - Simulation - 2_instruction": "Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)",
        "U3 - Simulation - 3_instruction": "Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)\n",
        "U3 - Simulation - 4_instruction": "Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)",
        "U3 - Simulation - 5_instruction": "Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)",
        "U3 - Simulation - 6_instruction": "Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)",
        "U3 - Simulation - App_instruction": "Change your code to run the full simulation with 10,000 coins. What was your longest streak of heads? (Click to see full instructions)",
        "U3 - Simulation - Template_instruction": "Use a while loop to \"flip 10 coins\" and write them to the screen. (Click to see full instructions)",
        "U3 - Simulation - Template_2018_instruction": "Use a while loop to \"flip 10 coins\" and write them to the screen. (Click to see full instructions)",
        "U3 - Sprites - Intro Sprites_instruction": "Do This",
        "U3 - Sprites and Mod - Create  and Draw Sprite_instruction": "Do This",
        "U3 - Sprites and Mod - Mouse Width and Height_instruction": "Do this",
        "U3 - Sprites and Mod - Mouse X and Y_instruction": "Do this",
        "U3 - Sprites and Mod - Rand Around Mouse_instruction": "Do this",
        "U3 - Sprites and Mod - Rand Shape Color_instruction": "Do This",
        "U3 - Sprites and Mod - Shape Color_instruction": "Do This",
        "U3 - Sprites and Mod - Wrap Many Squares_instruction": "Do This",
        "U3 - Sprites and Mod - X and Y Prop_instruction": "Do This",
        "U3 - Sprites and Mod - two sprites_instruction": "Do This",
        "U3 - User Input - Save getText To Variable_instruction": "Save the age and name of the user in variables (Click to see full instructions)",
        "U3 - User Input - Saving After Input_instruction": "Save the age of the user in a variable using getText() (Click to see full instructions)",
        "U3 - User Input and String -  Concat_instruction": "Output a message about age in a Text Area (Click to see full instructions)",
        "U3 - Variables - Clicker Game_instruction": "Create your improved Chaser-Game here. (Click to see full instructions)",
        "U3 - Variables - Debug Scope_instruction": "Why isn't the value of foo changing correctly? Make a guess. (Click to see full instructions)",
        "U3 - Variables - Debugging with Turtle_instruction": "Use your new debugging techniques to get the code to run correctly (Click to see full instructions)",
        "U3 - Variables - Decrement_instruction": "Decrement the value of the variable. (Click to see full instructions)",
        "U3 - Variables - Identify Variables_instruction": "Identify the values printing in the terminal with console.log statements. (Click to see full instructions)",
        "U3 - Variables - Increment_instruction": "Use the console.log debugging technique to see what is happening in this example. Add another variable and increment its value. (Click to see full instructions)",
        "U3 - Variables - Incrementing Variables_instruction": "Create a repeat loop for the repeated code and use increment to recreate the original program with less lines of code! (Click to see full instructions)",
        "U3 - Variables - Read Using Turtle_instruction": "Create a second set of variables for x and y position. Move turtle to that new location. (Click to see full instructions)",
        "U3 - Variables - Reassigning Variables with Console.log_instruction": "Add another reassignment statement at the end of the code to change the value of the variable at second time. (Click to see full instructions)",
        "U3 - Variables - Set to Expression with Other Variables and Turtle_instruction": "(click to see full instructions)",
        "U3 - Variables - Set to Expression with Other Variables_instruction": "Write an expression that calculates the player's total score and stores it in the totalScore variable. The calculation is: the player's points times lives divided by the total time. (click to see full instructions)",
        "U3 - Variables - Set to Expression with Turtle_instruction": "(click to see full)",
        "U3 - Variables - Set to Expression_instruction": "Test out the new expressions. (Click to see full instructions)",
        "U3 - images - bee free play_instruction": "Do this",
        "U3 Digital Assistant Design_instruction": "Pick a topic for your Digital Assistant and create the basic layout with a text input and text area. (Click to show full instructions)",
        "U3 Digital Assistant Set Text_instruction": "Have your digital assistant repeat back what the user types and include a canned response. (Click to see full instructions)",
        "U3 Digital Assistant Target - Mehal_instruction": "Try out a demo of the Digital Assistant!",
        "U3 Digital Assistant Target_instruction": "Try out a demo of the Digital Assistant!",
        "U3 Digital Assistant Template_instruction": "This is a project template!",
        "U3 Digital_instruction": "Choose a specialization topic for your digital assistant. Create a basic digital assistant that takes the user's input and displays back a default response.",
        "U3 Variables consolelog_instruction": "Use the write block to display the value of size",
        "U3 Variables flower example_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "U3 Variables gray square_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "U3 Variables make a square_instruction": "Change the value of size multiple times. How does it change your drawing?",
        "U3 Variables misconceptions try it_instruction": "Test out your predictions from the previous level.",
        "U3 Variables randomize your square_instruction": "Change the value of petalSize multiple times. How does it change your drawing?",
        "U3 Variables write_instruction": "Use the write block to display the value of size",
        "U3 full clicker demo_instruction": "Clicker game - Try it out!",
        "U3 mehal's clone_instruction": "Try out a demo of the Digital Assistant!",
        "U3- Variables - Assign Random For Turtle Draw_instruction": "Try writing the same code in text mode.",
        "U3- Variables - Changing the Value_instruction": "Update the value of 'turnAmount' before each moveForward so the turtle turns a different amount each time. (Click to see full instructions)",
        "U3- Variables - Create And Assign_instruction": "On one line add a variable called \"lives\" and assign it the value 3. Print it to the console. (Click to see full instructions)",
        "U3- Variables - Text Mode_instruction": "1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion",
        "U3-Design Mode-ID and Event Handler_instruction": "Add an event handler for the button using the \"Insert and show\" link in the Design Mode Events tab. (Click to see full instructions).",
        "U3-Design Mode-ID_instruction": "Using the Design Mode Events change the button ID and update the code to match. (Click to see detail instructions).",
        "U3-Design Mode-Image_instruction": "Recreate the \"Chaser Game\" from the last lesson using Design Mode. (Click to see full instructions.)",
        "U313 Two Buttons with Ids_instruction": "Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)",
        "U313 drag Two Buttons_instruction": "Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.",
        "U313 eventsDetails_instruction": "Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.",
        "U3L03 - draw rect function_instruction": "Write a function called drawRectangle().\n(Click to see full instructions)",
        "U3L03 - draw rect function_2018_instruction": "Write a function called drawRectangle().\n(Click to see full instructions)",
        "U3L03 - draw step_instruction": "Write the drawStep function. (Click to see full instructions)",
        "U3L03 - draw step_2018_instruction": "Write the drawStep function. (Click to see full instructions)",
        "U3L03 Creating Procedures 1_instruction": "Write the turnAround() function and use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif",
        "U3L03 Define and use turnAround_instruction": "Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)",
        "U3L03 Define and use turnAround_2018_instruction": "Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)",
        "U3L03 Draw a T using turnAround_instruction": "Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)",
        "U3L03 Draw a T using turnAround_2018_instruction": "Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)",
        "U3L03 Three Steps_instruction": "Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)",
        "U3L03 Three Steps_2018_instruction": "Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)",
        "U3L03 choose your own drawing_instruction": "Now choose your own!  Pick one of the three drawings shown here and attempt to create it on your own, making smart decisions about how to break the problem down into re-usable functions.  You will review your work with a peer using \"procedures peer review rubric.\"  Check it for the requirements.  GIF: U3L3-ProceduresChooseOne.png",
        "U3L03 define turnRight and draw a rectangle_instruction": "Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)",
        "U3L03 define turnRight and draw a rectangle_2018_instruction": "Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)",
        "U3L03 draw diamond_instruction": "Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)",
        "U3L03 draw diamond_2018_instruction": "Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)",
        "U3L04 - 3 by 3 with functions_instruction": "Make the 3x3 square as efficiently as you can. (Click to see full instructions)",
        "U3L04 - 3 by 3 with functions_2018_instruction": "Make the 3x3 square as efficiently as you can. (Click to see full instructions)",
        "U3L04 - snowflake_instruction": "Create the design by breaking it down into layers of functions. (Click to see full instructions)",
        "U3L04 - snowflake_2018_instruction": "Create the design by breaking it down into layers of functions. (Click to see full instructions)",
        "U3L04 choose your own drawing_instruction": "Now choose your own!  Pick one of the three drawings shown here and attempt to create it on your own, making smart decisions about how to break the problem down into re-usable functions.  You will review your work with a peer using \"procedures peer review rubric.\"  Check it for the requirements.",
        "U3L04 diamond solution_instruction": "Study this solution to the drawDiamond problem.  Notice that the whole program starts by calling drawDiamond() at the top.  The program then follows a chain of function calls.  You can trace what's happening in the code to see the functions reused.  It's also easy to read because the function names describe the expected behavior.",
        "U3L05_3x3GridEfficiencyChallenge_instruction": "Let's revisit the 3x3 grid problem you did a few lessons ago.  This time the challenge is to program the solution \"as efficiently as possible.\"  Now that you know how to write functions, it should be easier to break the problem down, and your code should be easier to read and debug.  See the rubric for more details about requirements and expectations.",
        "U3L05_draw3x3GridEfficiently_instruction": "Draw a 3x3 grid above and to the right of the turtle. Try to do so with the fewest number of commands possible. NOTE: This is a very challenging problem.  You may need to play with it for a while and tweak it.  You might also consider using pencil and paper to sketch your ideas.",
        "U3L06 - moveForwardwithParams_instruction": "Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)",
        "U3L06 - moveForwardwithParams_2018_instruction": "Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)",
        "U3L06 Challenge 1 triangle_instruction": "Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)",
        "U3L06 Challenge 1 triangle_2018_instruction": "Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)",
        "U3L06 Challenge 2 purple square_instruction": "Read the documentation for penColor() and penWidth() before using them to draw the blue square.",
        "U3L06 Challenge 2 purple square_2018_instruction": "Read the documentation for penColor() and penWidth() before using them to draw the blue square.",
        "U3L06 Challenge 3 fill pink_instruction": "Fill in the background of the screen with your favorite color. (Click to see full instructions)",
        "U3L06 Challenge 3 fill pink_2018_instruction": "Fill in the background of the screen with your favorite color. (Click to see full instructions)",
        "U3L06 Challenge 4 bullseye_instruction": "Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)",
        "U3L06 Challenge 4 bullseye_2018_instruction": "Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)",
        "U3L06 Challenge 5 overlapping circles_instruction": "This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven't gotten the hint yet: check out the documentation!",
        "U3L06 Challenge 5 overlapping circles_2018_instruction": "This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven't gotten the hint yet: check out the documentation!",
        "U3L06 Challenge 6 squiggles_instruction": "Read the documentation for the \"arcLeft\" and \"arcRight\" commands and then draw the squiggles as shown. ",
        "U3L06 Challenge 6 squiggles_2018_instruction": "Read the documentation for the \"arcLeft\" and \"arcRight\" commands and then draw the squiggles as shown. ",
        "U3L06 Challenge 7 smiley face_instruction": "Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)",
        "U3L06 Challenge 7 smiley face_2018_instruction": "Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)",
        "U3L06 Challenge 8 make your own_instruction": "Create a drawing of your own. (Click to see full instructions)",
        "U3L06 Challenge 8 make your own_2018_instruction": "Create a drawing of your own. (Click to see full instructions)",
        "U3L07 - Free Play Loops and Random_instruction": "Free Play! Use what you learned from loops and random to make your own little scene. Have fun.",
        "U3L07 - Free Play Loops and Random_2018_instruction": "Free Play! Use what you learned from loops and random to make your own little scene. Have fun.",
        "U3L07 - Starry Night Starter Code_instruction": "You are going to use loops and random numbers to generate an image of starry night sky similar to one shown here.  We have given you some starter code to generate the ground and sky (just two giant dots), you will add code to this project to make the stars, grass, and moon.  All of the effects are clever applications of turtle dots, lines, and colors.  To get started, follow the series of steps suggested in the accompanying worksheet. ",
        "U3L07 - allSeaGrass_instruction": "Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)",
        "U3L07 - allSeaGrass_2018_instruction": "Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)",
        "U3L07 - bubbles_instruction": "Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)",
        "U3L07 - bubbles_2018_instruction": "Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)",
        "U3L07 - callingFunctionsInLoops_instruction": "Call the function within the loop to complete the figure. (Click to see full instructions)",
        "U3L07 - createTriangleParam_instruction": "Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)",
        "U3L07 - createTriangleParam_2018_instruction": "Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)",
        "U3L07 - fish_instruction": "Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)",
        "U3L07 - fish_2018_instruction": "Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)",
        "U3L07 - introSquare_instruction": "Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)",
        "U3L07 - introSquare_2018_instruction": "Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)",
        "U3L07 - loopsWithRandom_instruction": "Increase the number of iterations to fill the screen with white. (Click to see full instructions)",
        "U3L07 - loopsWithRandom_2018_instruction": "Increase the number of iterations to fill the screen with white. (Click to see full instructions)",
        "U3L07 - randomDots1_instruction": "Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)",
        "U3L07 - randomDots1_2018_instruction": "Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)",
        "U3L07 - randomSquare_instruction": "Draw the figure using a loop. (Click to see full instructions)",
        "U3L07 - randomSquare_2018_instruction": "Draw the figure using a loop. (Click to see full instructions)",
        "U3L07 - seaGrass_instruction": "Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)",
        "U3L07 - seaGrass_2018_instruction": "Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)",
        "U3L07 - seaStar_instruction": "Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)",
        "U3L07 - seaStar_2018_instruction": "Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)",
        "U3L07 - sunBeams_instruction": "Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)",
        "U3L07 - sunBeams_2018_instruction": "Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)",
        "U3L07 - topDownDesign_instruction": "Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)",
        "U3L07 - topDownDesign_2018_instruction": "Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)",
        "U3L08 - Enchantment Under the Sea_instruction": "You have been provided with starter code for an “Under the Sea” scene which includes three functions, one each for the starfish, seagrass, and fish. Create versions of these functions which accept parameters to allow you to add more variation to your scene.  The student worksheet provides more details and guidance.",
        "U3L08 - createTwoParamTriangle_instruction": "Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)",
        "U3L08 - createTwoParamTriangle_2018_instruction": "Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)",
        "U3L08 - digitalScene_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "U3L08 - digitalScene_2018_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "U3L08 - drawSquareWithParam - for video_instruction": "Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)",
        "U3L08 - drawSquareWithParam_instruction": "Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)",
        "U3L08 - drawSquareWithParam_2018_instruction": "Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)",
        "U3L08 - drawSquaresWithParams_instruction": "Write drawSmallSquare() to draw a 25px square. (Click to see full instructions)",
        "U3L08 - fish_instruction": "Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)",
        "U3L08 - fish_2018_instruction": "Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)",
        "U3L08 - freePlay_instruction": "Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)",
        "U3L08 - freePlay_2018_instruction": "Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)",
        "U3L08 - individualCode_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "U3L08 - individualCode_2018_instruction": "Create the functions you were assigned as part of your digital scene. (Click to see full instructions)",
        "U3L08 - introUnderTheSea with comments_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "U3L08 - introUnderTheSea_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "U3L08 - introUnderTheSea_2018_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "U3L08 - multiParamFish_instruction": "Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)",
        "U3L08 - multiParamFish_2018_instruction": "Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)",
        "U3L08 - multipleLayersofParams_instruction": "Call drawPlusSign() to complete the image. (Click to see full instructions)",
        "U3L08 - paramsToStarfish_instruction": "Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)",
        "U3L08 - paramsToStarfish_2018_instruction": "Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)",
        "U3L08 - randomInput_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "U3L08 - randomInput_2018_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "U3L08 - seaGrass_instruction": "Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)",
        "U3L08 - seaGrass_2018_instruction": "Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)",
        "U3L08 - squareTwoParams_instruction": "Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)",
        "U3L08 - squareTwoParams_2018_instruction": "Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)",
        "U3L08 - starFish_instruction": "Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)",
        "U3L08 - triangleTwoParams_instruction": "Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)",
        "U3L08 how to add comments_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "U3L08 how to add comments_2018_instruction": "Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)",
        "U3L1 - Simulation - Template_instruction": "Use a while loop to \"flip 10 coins\" and write them to the screen. (Click to see full instructions)",
        "U3L12 Chaser Template_instruction": "This is a project template!",
        "U3L13 - Button with ID_instruction": "Drag a button out onto the screen and set its text to \"Go forth!\".  Run the program to make sure you can see the button.",
        "U3L13 - Debug Id Problem_instruction": "Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)",
        "U3L13 - Debug Id plus logic problem_instruction": "The last problem was an example of syntax error.  App Lab did not understand which object it should be listening to for a \"click\" event so it showed an error message in the console to let you know.  Another kind of error is a logical error - the program is valid, but it's not doing what you want it to do.\n\nThis program has 2 errors. A (tricky) syntax error and logical error.  Find them, fix them, and make the program work as expected.",
        "U3L13 - Debugging 1_instruction": "Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)",
        "U3L13 - Debugging 2_instruction": "Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)",
        "U3L13 - Debugging 3_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "U3L13 - Project_instruction": "Create your multi-screen app. (Click to see full instructions.)",
        "U3L13 - Turtle Driver Project_instruction": "Create a \"turtle driver\" that includes buttons to move the turtle forward and turn it left and right. (Click to see full instructions)",
        "U3L13 - Turtle move with button_instruction": "Add a button that moves the turtle when clicked.  (Click to see full instructions)",
        "U3L13 eventsDetails_instruction": "Add an event handler to the button to move the turtle forward. (Click to see full instructions)",
        "U3L14 - Assigning Random Value_instruction": "Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)",
        "U3L14 - Mini Calculator embed_instruction": "You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.",
        "U3L14 - Unfortunate Events Free Play_instruction": "Follow the \"Unfortunate Events\" Worksheet and enter your code here to experiment.  We've pre-loaded the code you need to start.",
        "U3L14 - User Input Division calculator_instruction": "Write a program that acts as a simple calculator. (click to see full instructions)",
        "U3L14 - Variable ReAssignment pt2_instruction": "Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)",
        "U3L14 - concatenate simple_instruction": "Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)",
        "U3L14 - moving memory challenge1_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L14 - moving memory challenge2_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L14 - moving memory challenge3_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L14 - moving memory challenge4_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L14 - moving memory challenge5_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L14 - moving memory challenge6_instruction": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
        "U3L15 - Add reset button to UpDown app_instruction": "Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)",
        "U3L15 - DEMO up down count practice app_instruction": "Try out the demo app (Click to see full instructions)",
        "U3L15 - Debug forget to update var on reset in UpDown app_instruction": "Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)",
        "U3L15 - Debug if never triggers in UpDown app_instruction": "Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)",
        "U3L15 - Debugging Simple If-statements =v==_instruction": "Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)",
        "U3L15 - Simple If-statements in UpDown App_instruction": "Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)",
        "U3L15 - add code to make count down work_instruction": "Write code to make the down arrow work as expected. (Click to see full instructions)",
        "U3L15 - clicker update score_instruction": "Add code to update the score when the apple is clicked. (Click to see full instructions)",
        "U3L15 - count upDown bug forget to set text_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "U3L15 - count upDown bug logic error wrong update_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "U3L15 - count upDown bug var not created globally_instruction": "Find the bug in the program and fix it. (Click to see full instructions)",
        "U3L15 - global var example count up_instruction": "Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).",
        "U3L15 - mini clicker update score_instruction": "Add code to update the score when the apple is clicked. (Click to see full instructions)",
        "U3L15 - practice with setText_instruction": "Use setText to complete the click event handler for the down arrow. (Click to see full instructions)",
        "U3L15 - variable scoping problem debugging_instruction": "See if you can figure out why the code is no longer working. (Click to see full instructions)",
        "U3L15 click add lives_instruction": "Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)",
        "U3L15 full clicker app_instruction": "Complete your clicker game! (Click to see full instructions)",
        "U3L16 - challenge say hi app_instruction": "Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)",
        "U3L16 - chaserApp_instruction": "Create your own \"Chaser Game.\" (Click to see full instructions)",
        "U3L16 - chooseImages_instruction": "Replace the image in your application with one of your own. (Click to see full instructions)",
        "U3L16 - doubleQuotes_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "U3L16 - hideAndShow_instruction": "Introducing textInput, getText and write.  First run the starter code several times.  Try to change what's written to the screen when the button is clicked. Then use getText to write to the screen what the user entered in the text box. GIF: U3L16 - useGetText.gif",
        "U3L16 - hideAndShowPractice_instruction": "You are given some starting code that puts an image and two buttons on the screen.  The image is initially hidden. Add two new event handlers: one for each button, that when clicked hide and show the image.",
        "U3L16 - image and text labels_instruction": "Introducing the setPosition command!  Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "U3L16 - images and text labels_instruction": "Introducing objects other than buttons! - textLabels and images.  First try replacing your button with a textLabel.  Will the text respond to events just like the button?  Try connecting an event handler to it.  We've started you out with code similar to the result of the last level, you can copy your code from that level into here if you prefer. ",
        "U3L16 - images_instruction": "Introducing Images.  Try replacing the textLabel with an image..  Will the image respond to events just like the button?  Try connecting an event handler to it.  We've started you out with code similar to the result of the last level, you can copy your code from that level into here if you prefer. ",
        "U3L16 - intro getText_instruction": "Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)",
        "U3L16 - introSetPosition_instruction": "Move the buttons to the bottom of the screen. (Click to see full instructions)",
        "U3L16 - introStrings_instruction": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
        "U3L16 - nameAgeTemplate_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "U3L16 - nameAgeTemplate_2018_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "U3L16 - newEventTypes_instruction": "Experiment with different event types and select the one that you think is best. (Click to see full instructions)",
        "U3L16 - outputWithTextArea_instruction": "Output a message to the 'textArea' (Click to see full instructions)",
        "U3L16 - projectTemplate_instruction": "Create your own \"Chaser App\". (Click to see full instructions)",
        "U3L16 - quick double click_instruction": "Mini-Project.  The Quick Double-Click game.  In this simple game an object (an image) moves around, or pops up randomly on the screen, as the user clicks it.  The goal of our game will be to try to double-click the object before it moves.  Part of the challenge (and fun) here is creating this app from scratch.  You can look back at your previous work for examples, but it's fun to create something from scratch, too.  Try it!  For more details see the Activity guide for this lesson.",
        "U3L16 - setPosition to move button_instruction": "Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.",
        "U3L16 - setPositionMoveButton_instruction": "Use setPositon to moveButton",
        "U3L16 - setupMoveToRandom_instruction": "Modify the code so that the turtle moves to a random screen location when the button is clicked. (Click to see full instructions)",
        "U3L16 - singleSetPosition_instruction": "Move the button to the middle of the screen. (Click to see full instructions)",
        "U3L16 - stringsVsNumbers_instruction": "Run the program to see how strings and numbers behave with different arithmetic operators. (Click to see full instructions)",
        "U3L16 - text labels_instruction": "Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)",
        "U3L16 - textInput getText write_instruction": "Add an Text Input box for the name and age. (Click to see full instructions)",
        "U3L16 - toUpper_instruction": "Make the name of the user appear in uppercase (Click to see full instructions)",
        "U3L16 - use images_instruction": "Use the image command to replace the text label in your program with an image. (Click to see full instructions)",
        "U3L16 Mad Lib Clear Input_instruction": "Clear the user's previous text when the Play Again button is clicked (Click to see full instructions) ",
        "U3L16 Mad Lib Demo_instruction": "Mad Libs Demo - Try it out!",
        "U3L16 Mad Lib Student Setup_instruction": "Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)",
        "U3L16 Mad Lib getText_instruction": "Before setting the text area with your Mad Libs outline, get the user's text and incorporate their responses. (Click to see full instructions) ",
        "U3L16 Mad Lib setText_instruction": "When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user's input). (Click to see full instructions) ",
        "U3L16 Mad Lib toUpper_instruction": "Apply the toUpperCase and toLowerCase string functions to the user's text. (Click to see full instructions) ",
        "U3L17 - getAndSetKeyValue_instruction": "Create an image like app. (Click to see full instructions)",
        "U3L17 - getKeyValue_instruction": "Run the program several times to observe how the setKeyValue commands now always arrive in order. (Click to see full instructions)",
        "U3L17 - introCallbacks_instruction": "Run the program several times to observe how the setKeyValue commands now always arrive in order. (Click to see full instructions)",
        "U3L17 - introKeyValue_instruction": "Explore your key value pairs with the Data Viewer. (Click to see full instructions)",
        "U3L17 - readKeyValue_instruction": "Explore your key value pairs with the Data Viewer. (Click to see full instructions)",
        "U3L17 - setKeyValue_instruction": "Create and update your key value pairs using setKeyValue. (Click to see full instructions)",
        "U3L17 - twoSetKeyValue_instruction": "Run the program several times to observe how often setKeyValue commands arrive out of order. (Click to see full instructions)",
        "U3L18 comparison operators_instruction": "Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "U3L18 comparison operators_for_video_instruction": "Use `console.log` to print out the different boolean expressions below to see what information they return. (Click to see full instructions)",
        "U3L19 - Clicker Game Freeplay Area_instruction": "Use this App Lab area to improve your clicker game.  You should start by copy/pasting the code from your old game here.  We're showing a more full set of blocks in the toolbox - some of the things you might not have used yet.  Feel free to explore then and experiment if you want to.  Everything else you need should be shown.  Have fun!",
        "U3L19 - DEMO up down count practice app_instruction": "Try out the demo app (Click to see full instructions)",
        "U3L19 - Debugging with consoleLog_instruction": "Add console.log() statements to find out the value of a and b after the first reassignment statement a = b; (Click to see full instructions)",
        "U3L19 - Simple If-statements in UpDown App_instruction": "Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)",
        "U3L19 - Target Clicker App_instruction": "Investigate the new elements of the 'chaser-game'",
        "U3L19 - do concatenate string with var_instruction": "We've given you a piece of code from the previous screen.  Try changing the value assigned to foo to see the string change. \nDo this: \n1. Try changing the value assigned to foo to see the string change. \n2. By only modifying the lines of code that were given to you, try to get the output to say: “The value of foo is: 9.  And isn’t that fine.” \n",
        "U3L19 - fix the var name syntax error v2_instruction": "Fix the error and get it to print the value of both variables (Click to see full instructions)",
        "U3L19 - fix the var name syntax error_instruction": "Fix the error and get it to print the value of both variables (Click to see full instructions)",
        "U3L19 - global var example count up_instruction": "Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).",
        "U3L19 - practice with setText_instruction": "Add another button that changes the text to the value of a new variable. (Click to see full instructions)",
        "U3L19 - test reassignment of two vars_instruction": "Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)",
        "U3L19 - three basic ops of variables_instruction": "Add another variable called \"lives\" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)",
        "U3L19 - try out console log_instruction": "Try out console.log.  Do this: replace the statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run the program and you should see the output show up in the console area below the workspace.  Then try adding a few more console.log statements.  Display some text.  Make another variable and display that.  \nThe app screen will be blank -- that's the point.  With console.log you can test output behind the scenes in a way the user cannot see.  \n\n\nGIF: U3L19-useconsolelog.gif",
        "U3L19 - up down count practice app_instruction": "Set up the down button to decrease the value of count by 1 each time it is clicked. (Click to see full instructions)",
        "U3L19 - updating variables pt1_instruction": "This app is only SLIGHTLY different from the previous one, but much more dynamic.  See if you can figure out how and why the count is going up.  Once you've figured it out then you should be able to DO THIS: add a button to the app that when clicked makes the count go down, and updates the label.  When you're done the app should work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif",
        "U3L19 - variable reassignment challenge pt2_instruction": "Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)",
        "U3L19 - variable reassignment part 1_instruction": "Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)",
        "U3L19 - variable scope problem 2_instruction": "What is happening with foo? Play with the level to try to figure it out. (Click to see full instructions)",
        "U3L19 - variable scoping problem debugging_instruction": "See if you can figure out why the code is no longer work. (Click to see full instructions)",
        "U3L19 - write var and string with same name v2_instruction": "Fix the code so that the values of both variables print to the console. (Click to see full instructions)",
        "U3L19 - write var and string with same name_instruction": "Fix the code so that the value of both variables prints to the console. (Click to see full instructions)",
        "U3L2 Using Simple Commands (no tooltips)_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "U3L2 Using Simple Commands_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "U3L2 Using Simple Commands_2018_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "U3L23 Chatbot Conditionals 1_instruction": "Add if, else if, and else statements to detect the movie genres Comedy, Romance, Action, and Horror. (Click to see full instructions)",
        "U3L23 Chatbot Intro 1a_instruction": "Store the user's input inside a variable and log it to the console.",
        "U3L23 Chatbot Intro 2_instruction": "Use string concatenation to store the user's input and assistant's answer into the conversation variable using the format \"User: <input><bot name>: <default response>\" . Log the conversation to the console.",
        "U3L23 Chatbot Intro 2a_instruction": "Display the conversation onto the \"text_area\" element. Optional: clear the user's input after every \"change\" event.",
        "U3L23 Chatbot Intro 3_instruction": "Add newline characters \"\\n\" to separate the user's input and the computer's response.",
        "U3L23 Chatbot Intro 4_instruction": "Use this level to make your chatbot look and work better!",
        "U3L23 Chatbot Intro_instruction": "Choose a specialization topic for your digital assistant. Create a basic digital assistant that takes the user's input and displays back a default response.",
        "U3L23 Digital Assistant 2_instruction": "Add the response \"I don't know.\" after each of the user's inputs.",
        "U3L23 Digital Assistant 3_instruction": "Add the response \"I don't know.\" after each of the user's inputs.",
        "U3L23 Digital Assistant 4_instruction": "Display the user's input and the digital assistant's response on different lines.",
        "U3L23 Digital Assistant 5_instruction": "Start the user's command with the phrase \"User:\" and the digital assistant's response with the phrase \"Bot:\"",
        "U3L23 Digital Assistant 6_instruction": "When the user hits Run, display the text \"I'm a generic digital assistant. Ask me anything!\"",
        "U3L24 Basic String Parsing 1_instruction": "Use the function \"userInput.indexOf(<food>)\" to check if the strings \"pizza\" or \"soup\" are anywhere in the user's response.",
        "U3L24 Chatbot Basic Conditionals_instruction": "Check out the project description for instructions. (Click to see full instructions.)",
        "U3L24 Chatbot Conditionals 2_instruction": "Adjust the \"if\" block to make the bot respond \"I don't know that color.\" if the user types anything besides \"blue\"",
        "U3L24 Chatbot Conditionals 3_instruction": "Adjust the \"if/else\" block to make the bot respond to the colors blue, red, and green, and to two additional colors.",
        "U3L24 Chatbot Keyword Record_instruction": "Use the next level to record your digital assistant's keywords/phrases.",
        "U3L24 Chatbot Nested Conditionals_instruction": "Add a chained conditional with at least 3 \"else if\" statements to your personal assistant.",
        "U3L24 Nested Conditionals 1_instruction": "Change all of the boolean expressions to use includes instead of ==. (Click to see full instructions)",
        "U3L24 Nested Conditionals 2_instruction": "Nest your movie genre if statements inside the if statements to check for a ? in the input. ",
        "U3L24 Nested Conditionals Bugs 2_instruction": "Fix the problem with the code so that all the conditions can be reached. (Click to see full instructions)",
        "U3L24 Nested Conditionals Bugs 3_instruction": "Fix the bugs that still exist in this program. Prove that the program works correctly.",
        "U3L24 Nested Conditionals Bugs_instruction": "Expose the bugs in this problem by typing inputs into the user-input box. Track which inputs cause unexpected outputs.",
        "U3L24 introIncludes_instruction": "Practice using the includes command. (Click to see full instructions)",
        "U3L25 - drag out key event_instruction": "Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)",
        "U3L25 - play sound when up key_instruction": "Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)",
        "U3L25 Chatbot Strings_instruction": "1. Adjust your digital assistant to evaluate inputs the same way whether the inputs are capitalized or lowercase. 2. If a user asks \"What is <phrase>?\", where <phrase> is an input your digital assistant does not recognize, make your digital assistant respond \"I don't know what <phrase> is.\"",
        "U3L25 String Parsing 1_instruction": "Given the string \"Wisdom begins with wonder.\" what is the index of the following characters W, t, w, ., d, and k? Confirm your expectation using the string.indexOf() function.",
        "U3L25 String Parsing 2_instruction": "Use str.length to find the length of the strings “Hello World”, “Computer science rocks!\", and “I promise to do my homework every day.”",
        "U3L25 String Parsing 3_instruction": "Write a password length checker that writes “yes” to the console if a string has a length greater than 10, or “no” if it is less than or equal to 10.  Test your function using two strings, one that will satisfy each conditional option.",
        "U3L25 String Parsing 4_instruction": "You are given the string \"Wisdom begins with wonder.\" Use the string.substring(begin, end) function to print \"begin\" and \"nder\" to the console.",
        "U3L25 String Parsing 5_instruction": "Fill in the function, findBeginNder() to get the strings \"begin\" and \"nder\" from a sentence no matter where in the sentence they exist.\nPrint the strings and their index to the console. ",
        "U3L25 String Parsing 6_instruction": "Write a function that takes a name (first last) and reorders it (last, first).",
        "U3L25 String Parsing 7_instruction": "You are given the string “The earth has music for those who listen.” Manipulate it using the functions str.toUpperCase() and str.toLowerCase().",
        "U3L26 AND operator_instruction": "Update the genre and rating if statements to give only one movie suggestion at a time. (Click to see full instructions)",
        "U3L26 Chatbot Compound Conditionals_instruction": "Update your digital assistant to include at least one each of AND, OR, and NOT",
        "U3L26 Chatbot Final_instruction": "Update your digital assistant to include at least one each of AND, OR, and NOT",
        "U3L26 Compound Logic_instruction": "Write a conditional statement that detects if a command contains all the phrases \"2000\" \"animated\" and \"G-rated.\" If all these phrases are detected, make Movie Bot respond \"The top grossing animated and G-rated film in the 2000 decade was Finding Nemo.\"",
        "U3L26 NOT operator_instruction": "Write a conditional statement that detects if a command does not contain the phrase \"bad.\" If \"bad\" is not detected, make Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry, I don't know about bad movies.\" ",
        "U3L26 OR operator_instruction": "Update the if statement to use an OR to check for a \"?\" as well as who, what, where, when, why, how in the user input. (Click to see full instructions)",
        "U3L27 Chatbot Final_instruction": "Make your digital assistant awesome and when you are finished, ask one of your classmates to test it for you using the activity guide. As you add features to your digital assistant, track them on the next level.",
        "U3L2_Turtle3by3Grid_instruction": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
        "U3L2_Turtle3by3Grid_2018_instruction": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
        "U3L2_TurtleSquare_right_instruction": "Draw a square to the front and to the right of the starting location. (Click to show full instructions)",
        "U3L2_TurtleSquare_right_2018_instruction": "Draw a square to the front and to the right of the starting location. (Click to show full instructions)",
        "U4 - Add Row By Hand_instruction": "Add a new record to your table in the Data Viewer. (Click to see full instructions)",
        "U4 - Add Row By Hand_2018_instruction": "Add a new record to your table in the Data Viewer. (Click to see full instructions)",
        "U4 - Charts - Export Data_instruction": "Export the data from the “ages” table as a CSV file, then remix this app and import the CSV file. (Click to see full instructions)",
        "U4 - Charts - Export Data_2018_instruction": "Export the data from the “ages” table as a CSV file, then remix this app and import the CSV file. (Click to see full instructions)",
        "U4 - Charts - Import Data 1_instruction": "Download the CSV file we’ve provided, and then use the data viewer to import the data from the file into the “mytable” table. (Click to see full instructions)",
        "U4 - Charts - Import Data 1_2018_instruction": "Download the CSV file we’ve provided, and then use the data viewer to import the data from the file into the “mytable” table. (Click to see full instructions)",
        "U4 - Charts - Import Data 2_instruction": "Call readRecords on “mytable” and print each record to the console. (Click to see full instructions)",
        "U4 - Charts - Import Data 2_2018_instruction": "Call readRecords on “mytable” and print each record to the console. (Click to see full instructions)",
        "U4 - Charts - Line Chart 1_instruction": "Create a line chart showing the change in popularity of “#tbt” over time. (Click to see full instructions)",
        "U4 - Charts - Line Chart 1_2018_instruction": "Create a line chart showing the change in popularity of “#tbt” over time. (Click to see full instructions)",
        "U4 - Charts - Line Chart 2_instruction": "Add a second line to your chart to show the change in popularity of both “#tbt” and “#nofilter” at the same time. (Click to see full instructions)",
        "U4 - Charts - Line Chart 2_2018_instruction": "Add a second line to your chart to show the change in popularity of both “#tbt” and “#nofilter” at the same time. (Click to see full instructions)",
        "U4 - Charts - Line Chart Template_instruction": "This is a template.",
        "U4 - Charts - Line Chart Template_2018_instruction": "This is a template.",
        "U4 - Charts - Remixing Apps with Data_instruction": "Run this app and see what it prints to the console. Then remix the app and run the remixed version to see what happened to the data. (Click to see full instructions)",
        "U4 - Charts - Remixing Apps with Data_2018_instruction": "Run this app and see what it prints to the console. Then remix the app and run the remixed version to see what happened to the data. (Click to see full instructions)",
        "U4 - Charts - Scatter Chart_instruction": "Create a scatter plot of the “rottenTomatoes” table, using the new table and column names. (Click to see full instructions)",
        "U4 - Charts - Scatter Chart_2018_instruction": "Create a scatter plot of the “rottenTomatoes” table, using the new table and column names. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords 1_instruction": "Use the drawChartFromRecords block to create a scatter plot from the table in the database. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords 1_2018_instruction": "Use the drawChartFromRecords block to create a scatter plot from the table in the database. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords Options 1_instruction": "Add a title to your chart and change the colors of your lines using the options parameter of drawChartFromRecords. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords Options 1_2018_instruction": "Add a title to your chart and change the colors of your lines using the options parameter of drawChartFromRecords. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords Options 2_instruction": "Look through the drawChartFromRecords API and choose some more options to customize. (Click to see full instructions)",
        "U4 - Charts - drawChartFromRecords Options 2_2018_instruction": "Look through the drawChartFromRecords API and choose some more options to customize. (Click to see full instructions)",
        "U4 - Charts - drawChartsFromRecords 1_instruction": "Add screen element, pull out drawCharts block, run the program!",
        "U4 - CreateRecord - 1_instruction": "Add a createRecord command and run the program. (Click to see full instructions)",
        "U4 - CreateRecord - 1_2018_instruction": "Add a createRecord command and run the program. (Click to see full instructions)",
        "U4 - CreateRecord - 2.5_instruction": "Change the table name in createRecord then check the Data Viewer to see the new table. (Click to see  full instructions)",
        "U4 - CreateRecord - 2.5_2018_instruction": "Change the table name in createRecord then check the Data Viewer to see the new table. (Click to see  full instructions)",
        "U4 - CreateRecord - 2_instruction": "Change the name from \"Alice\" to something else in the createRecord command.  Run the program and use the Data Viewer to see the changes to your table. (Click to see full instructions)",
        "U4 - CreateRecord - 2_2018_instruction": "Change the name from \"Alice\" to something else in the createRecord command.  Run the program and use the Data Viewer to see the changes to your table. (Click to see full instructions)",
        "U4 - CreateRecord - 3_instruction": "Use createRecord to add the song object as a record to a table. (Click to see full instructions)",
        "U4 - CreateRecord - 3_2018_instruction": "Use createRecord to add the song object as a record to a table. (Click to see full instructions)",
        "U4 - CreateRecord - 4_instruction": "Run the program. Verify the song object was added to the database. Note the callback function now displays the copy of the record sent back back by the database. (Click to see full instructions)",
        "U4 - CreateRecord - 4_2018_instruction": "Run the program. Verify the song object was added to the database. Note the callback function now displays the copy of the record sent back back by the database. (Click to see full instructions)",
        "U4 - CreateRecord - 5_instruction": "Add a property to the JavaScript object, then run the program.  View the data table and see how changing the object affects the data table. (Click to see full instructions)",
        "U4 - CreateRecord - 5_2018_instruction": "Add a property to the JavaScript object, then run the program.  View the data table and see how changing the object affects the data table. (Click to see full instructions)",
        "U4 - Edit Data Table by Hand_instruction": "View the data table and click edit next to each row.  Add the artists names for each song by hand. (Click to see full instructions)",
        "U4 - Edit Data Table by Hand_2018_instruction": "View the data table and click edit next to each row.  Add the artists names for each song by hand. (Click to see full instructions)",
        "U4 - Exploring Data Tools - Template_instruction": "Use createRecord to add the song object as a record to a table. (Click to see full instructions)",
        "U4 - Exploring Data Tools - Template_2018_instruction": "Use createRecord to add the song object as a record to a table. (Click to see full instructions)",
        "U4 - Objects - accessingPropertiesInArray_instruction": "Access the properties of the objects stored in an array. (Click to see full instructions)",
        "U4 - Objects - accessingPropertiesInArray_2018_instruction": "Access the properties of the objects stored in an array. (Click to see full instructions)",
        "U4 - Objects - arraysOfObjects_instruction": "Create an array called \"students\" and add all 5 student objects to the array. (Click to see full instructions)",
        "U4 - Objects - arraysOfObjects_2018_instruction": "Create an array called \"students\" and add all 5 student objects to the array. (Click to see full instructions)",
        "U4 - Objects - createContactObject_instruction": "Construct a new object from the user inputs, and append it to your array. (Click to see full instructions)",
        "U4 - Objects - createContactObject_2018_instruction": "Construct a new object from the user inputs, and append it to your array. (Click to see full instructions)",
        "U4 - Objects - createContactsData_instruction": "Add values to the three contact objects provided in the starter code. (Click to see full instructions)",
        "U4 - Objects - createContactsData_2018_instruction": "Add values to the three contact objects provided in the starter code. (Click to see full instructions)",
        "U4 - Objects - createDotNotation_instruction": "Create a student Object yourself. Add properties to your object one at a time using dot notation. (Click to see full instructions)",
        "U4 - Objects - createDotNotation_2018_instruction": "Create a student Object yourself. Add properties to your object one at a time using dot notation. (Click to see full instructions)",
        "U4 - Objects - createObject_instruction": "Create an object with at least 3 properties and display it in the Debug Console. (Click to see full instructions) ",
        "U4 - Objects - dotNotation_instruction": "Use dot notation to display individual properties of the object. (Click to see full instructions)",
        "U4 - Objects - dotNotation_2018_instruction": "Use dot notation to display individual properties of the object. (Click to see full instructions)",
        "U4 - Objects - eventHandlersToSwitchScreen_instruction": "Attach event handlers to the \"Add Contact\" and \"Go Back\" buttons that allow the user to switch screens. (Click to see full instructions)",
        "U4 - Objects - eventParameter_instruction": "Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)",
        "U4 - Objects - eventParameter_2018_instruction": "Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)",
        "U4 - Objects - exemplarContactsApp_instruction": "Use the Contacts app and then add a contact of your own. (Click to see full instructions)",
        "U4 - Objects - exemplarContactsApp_2018_instruction": "Use the Contacts app and then add a contact of your own. (Click to see full instructions)",
        "U4 - Objects - loopingArray_instruction": "Loop over your array of students and print the name of every students. (Click to see full instructions)",
        "U4 - Objects - loopingArray2_instruction": "Loop over your array of students and print the name and grade of every student. (Click to see full instructions)",
        "U4 - Objects - loopingCompoundConditions_instruction": "Loop over the array of students and display the information of students who are present and in the 11th grade. (Click to see full instructions)",
        "U4 - Objects - loopingConditions_instruction": "Loop over your array of student objects and display the names of every student who is present in class. (Click to see full instructions)",
        "U4 - Objects - pullValues_instruction": "Create an event handler for the \"Save Contact\" button that displays the contents of the 4 text input fields in the console. (Click to see full instructions)",
        "U4 - Objects - pullValues_2018_instruction": "Create an event handler for the \"Save Contact\" button that displays the contents of the 4 text input fields in the console. (Click to see full instructions)",
        "U4 - Objects - readStarterCode_instruction": "Familiarize yourself with the starter code and UI elements provided. (Click to see full instructions)",
        "U4 - Objects - readStarterCode_2018_instruction": "Familiarize yourself with the starter code and UI elements provided. (Click to see full instructions)",
        "U4 - Objects - resetIndexAndShow_instruction": "Add code to your event handler for the \"Save Contact\" button so that when a new contact is added, the inputs are cleared, the screen is switched, and the correct contact is shown. (Click to see full instructions)",
        "U4 - Objects - resetIndexAndShow_2018_instruction": "Add code to your event handler for the \"Save Contact\" button so that when a new contact is added, the inputs are cleared, the screen is switched, and the correct contact is shown. (Click to see full instructions)",
        "U4 - Objects - showContact1_instruction": "Add code to the showCurrentContact function to show the name of the contact stored at the currentIndex of your array. (Click to see full instructions)",
        "U4 - Objects - showContact1_2018_instruction": "Add code to the showCurrentContact function to show the name of the contact stored at the currentIndex of your array. (Click to see full instructions)",
        "U4 - Objects - showContact2_instruction": "Add the phone number and birthday text to your text area. (Click to see full instructions)",
        "U4 - Objects - showContact2_2018_instruction": "Add the phone number and birthday text to your text area. (Click to see full instructions)",
        "U4 - Objects - showContact3_instruction": "Display the image information for each contact. (Click to see full instructions)",
        "U4 - Objects - showContact3_2018_instruction": "Display the image information for each contact. (Click to see full instructions)",
        "U4 - Objects - showSampleImage_instruction": "Attach an event handler to the image URL text input so that the user can confirm their image will work as expected. (Click to see full instructions)",
        "U4 - Objects - showSampleImage_2018_instruction": "Attach an event handler to the image URL text input so that the user can confirm their image will work as expected. (Click to see full instructions)",
        "U4 - Objects - writeWrap_instruction": "Use the wrap function to prevent currentIndex from leaving the bounds of your array. (Click to see full instructions)",
        "U4 - Read Record - 1.2_instruction": "Place a console.log command below the readRecords command. (Click to see full instructions)\n",
        "U4 - Read Record - 1.2_2018_instruction": "Place a console.log command below the readRecords command. (Click to see full instructions)\n",
        "U4 - Read Record - 1.3_instruction": "Add a console.log command inside the callback function. (Click to see full instructions)\n",
        "U4 - Read Record - 1.3_2018_instruction": "Add a console.log command inside the callback function. (Click to see full instructions)\n",
        "U4 - Read Record - 1_instruction": "Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U4 - Read Record - 1_2018_instruction": "Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U4 - Read Record - 2_instruction": "Change the table name so that the records are read from the new table. (Click to see full instructions)\n",
        "U4 - Read Record - 2_2018_instruction": "Change the table name so that the records are read from the new table. (Click to see full instructions)\n",
        "U4 - Read Record - 3_instruction": "Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)\n",
        "U4 - Read Record - 3_2018_instruction": "Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)\n",
        "U4 - Read Record - 4.1_instruction": "Use indexes and dot notation to reference values in the response from the database. (Click to see full instructions)\n",
        "U4 - Read Record - 4.1_2018_instruction": "Use indexes and dot notation to reference values in the response from the database. (Click to see full instructions)\n",
        "U4 - Read Record - 4_instruction": "Print out each record return from the readRecords call individually. (Click to see full instructions)\n",
        "U4 - Read Record - 5_instruction": "Using a for loop, display the title of each movie in your database. (Click to see full instructions)\n",
        "U4 - Read Record - 5_2018_instruction": "Using a for loop, display the title of each movie in your database. (Click to see full instructions)\n",
        "U4 - Read Record - part 1 - template_instruction": "Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U4 - Read Record - part 1 - template_2018_instruction": "Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)\n",
        "U4 - ReadRecords - Contacts App 1_instruction": "Use readRecords to copy the data in your database into your \"contacts\" global variable and call showCurrentContact. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 1_2018_instruction": "Use readRecords to copy the data in your database into your \"contacts\" global variable and call showCurrentContact. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 2_instruction": "Create a function called refreshLocalData. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 2_2018_instruction": "Create a function called refreshLocalData. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 3_instruction": "Add a call to \"refreshLocalData\" to the callback function of the createRecord you use to add a new contact to your database. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 3_2018_instruction": "Add a call to \"refreshLocalData\" to the callback function of the createRecord you use to add a new contact to your database. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 4_instruction": "Create a \"Delete\" button. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 4_2018_instruction": "Create a \"Delete\" button. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 5 make delete work_instruction": "Create an event handler for the \"Delete\" button you created. (Click to see full instructions)",
        "U4 - ReadRecords - Contacts App 5 make delete work_2018_instruction": "Create an event handler for the \"Delete\" button you created. (Click to see full instructions)",
        "U4 - add createRecord to contacts App_instruction": "Add code to your contacts app so that newly-added contacts are saved in a table. (Click to see full instructions)",
        "U4 - add createRecord to contacts App_2018_instruction": "Add code to your contacts app so that newly-added contacts are saved in a table. (Click to see full instructions)",
        "U4 - debug column names are case sensitive_instruction": "Change song.title to song.Title (capital T).  And run the program.  Check the data table  (Click to see full instructions)",
        "U4 - debug column names are case sensitive_2018_instruction": "Change song.title to song.Title (capital T).  And run the program.  Check the data table  (Click to see full instructions)",
        "U4 - deleteRecords 0_instruction": "Use the deleteRecord command with default values. Verify the record was deleted. (Click for full instructions).",
        "U4 - deleteRecords 0_2018_instruction": "Use the deleteRecord command with default values. Verify the record was deleted. (Click for full instructions).",
        "U4 - deleteRecords 1_instruction": "Find the id of \"Little Bunny Foo Foo\" in the data table \"mySongs\".  Use the deleteRecord command to delete it.  See what happens when you try to delete an ID a second time. (Click for full Instructions).",
        "U4 - deleteRecords 1_2018_instruction": "Find the id of \"Little Bunny Foo Foo\" in the data table \"mySongs\".  Use the deleteRecord command to delete it.  See what happens when you try to delete an ID a second time. (Click for full Instructions).",
        "U4 - deleteRecords 2 delete object_instruction": "Use the song object to delete multiple objects in the database by changing only the \"id\" property. (Click for full Instructions).",
        "U4 - deleteRecords 2 delete object_2018_instruction": "Use the song object to delete multiple objects in the database by changing only the \"id\" property. (Click for full Instructions).",
        "U4 - deleteRecords 2_instruction": "Using the data viewer, find the id of a a record you want to delete. Use the deleteRecord command to delete it. (Click for full instructions).",
        "U4 - fix contacts by hand in data table_instruction": "Use the data viewer to add rows to the data table.  Add the original hard-coded contacts from your app to the database. (Click to see full instructions)",
        "U4 - fix contacts by hand in data table_2018_instruction": "Use the data viewer to add rows to the data table.  Add the original hard-coded contacts from your app to the database. (Click to see full instructions)",
        "U4 - last stage test adding contcts_instruction": "Confirm that new contacts you add are saved to the database.  Verify that after restarting your app, the contacts you added no longer show in the app, but still exist in the database. (Click to see full instructions)",
        "U4 - last stage test adding contcts_2018_instruction": "Confirm that new contacts you add are saved to the database.  Verify that after restarting your app, the contacts you added no longer show in the app, but still exist in the database. (Click to see full instructions)",
        "U4 Model App_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "U4 Model App_2018_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "U4 Model Design 1_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "U4 Model Design 1_2018_instruction": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
        "U4 vigenere cipher 2_instruction": "Instructions",
        "U4L02 - Objects - Template1_instruction": "Template",
        "U4L02 - Objects - Template1_2018_instruction": "Template",
        "U4L02 - Objects - createObject_instruction": "Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) ",
        "U4L02 - Objects - eventParameter_instruction": "Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)",
        "U4L06 Data Storage 1_instruction": "Fill in your name instead of \"Enter Your Name\", run the app and click the button. Run it multiple times with different names! Watch the console and use the ‘View Data” button to see how the table is updated. As you play around make sure you can explain the purpose of each of the circled parts of the diagram.\n\n",
        "U4L06 Data Storage 2_instruction": "The app is a continuation of the previous one we started. Add a text label to collect the users name and use that as the data input for the record.\n\nRun the app and click the button multiple times and see what happens. Is there a problem you notice? ",
        "U4L06 Data Storage 3_instruction": "We want to improve the user experience. Once they have submitted their data for storage, it would be nice to clear the textbox.  Update your app to clear the textbox after the data is stored.",
        "U4L06 Data Storage 4_instruction": "Add a label and drop down box, to your app and save the data to your JSON object and add it to your table. Make sure to reset the dropdown after the data is stored.",
        "U4L06 Data Storage 5_instruction": "Add a couple radio buttons or checkboxes to our app. Then find a way to collect the data from those. ",
        "U4L06 Data Storage 6_instruction": " Use one of the getTime() and getUserId() blocks to collect additional data. ",
        "U4L06 Data Storage 7_instruction": "Add a second screen to the sample app we have been building to capture an image from a user. Return to screen 1 after the JSON object has been stored in the table.",
        "U4L15 Read Data 1_instruction": "Run the level and see what happens. Then edit the code to make it print a different column of information.",
        "U4L15 Read Data 2_instruction": "Student should create a sentence which puts together all the pieces from a record.\n\n<<Name>> is <<Age>> years old and like <<Food>>",
        "U4L15 Read Data 3_instruction": "Print the sentence using the first JSON object in the array\n\n",
        "U4L15 Read Data 4_instruction": "\nUse a random record from the list of records to display your sentence.",
        "U5 if-else-if movie example_instruction": "Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)",
        "U5 if-else-if movie example_2018_instruction": "Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)",
        "U6 - Final Project - Project Level_instruction": "Build your final project here. (Click to see full instructions)",
        "U6 - Final Project - Project Level_2018_instruction": "Build your final project here. (Click to see full instructions)",
        "U6 - updateRecord - Callback Success Parameter_instruction": "Add an if-else block inside the callback function for updateRecord. (Click to see full instructions)",
        "U6 - updateRecord - Callback Success Parameter_2018_instruction": "Add an if-else block inside the callback function for updateRecord. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Edit UI_instruction": "Set up the UI elements needed to edit contacts. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Edit UI_2018_instruction": "Set up the UI elements needed to edit contacts. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Edit event handler_instruction": "Write event handlers for the Edit Contacts UI elements. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Edit event handler_2018_instruction": "Write event handlers for the Edit Contacts UI elements. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Save edited contact_instruction": "Use updateRecord to store the user's edits in the database. (Click to see full instructions)",
        "U6 - updateRecord - Contacts - Save edited contact_2018_instruction": "Use updateRecord to store the user's edits in the database. (Click to see full instructions)",
        "U6 - updateRecord - Default Block_instruction": "Use updateRecord to change the record for \"Eye of the Tiger.\" (Click to see full instructions)",
        "U6 - updateRecord - Default Block_2018_instruction": "Use updateRecord to change the record for \"Eye of the Tiger.\" (Click to see full instructions)",
        "U6 - updateRecord - Update Nonexistent Record_instruction": "Force updateRecord to fail by changing the ID of songToUpdate. (Click to see full instructions)",
        "U6 - updateRecord - Update Nonexistent Record_2018_instruction": "Force updateRecord to fail by changing the ID of songToUpdate. (Click to see full instructions)",
        "Underground Avoiding Lava_instruction": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An \"if\" command will come in handy here. Add a \"move forward\" command in the correct place to mine these blocks.",
        "Underground Avoiding Lava_2018_instruction": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An \"if\" command will come in handy here. Add a \"move forward\" command in the correct place to mine these blocks.",
        "Underground If Statements_instruction": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone over any lava you uncover.",
        "Underground If Statements_2018_instruction": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone over any lava you uncover.",
        "Underground Iron_instruction": "Walking into molten lava is a bad idea. Place cobblestone to create a bridge, then mine at least two of the iron blocks.",
        "Underground Iron_2018_instruction": "Walking into molten lava is a bad idea. Place cobblestone to create a bridge, then mine at least two of the iron blocks.",
        "Underground Mining Coal_instruction": "You’ll find the most valuable resources underground, but it can get dark. Place at least 2 torches and mine at least 2 coal.",
        "Underground Mining Coal_2018_instruction": "You’ll find the most valuable resources underground, but it can get dark. Place at least 2 torches and mine at least 2 coal.",
        "Unicorn Tag_instruction": "Take a look at this project.  Do you see how it was made?",
        "Valentine_artist2_01_instruction": "Program the artist to draw some grass for the Love Bug.",
        "Valentine_artist_01_instruction": "Help the artist finish his llama heart.",
        "Valentine_playlab_01_instruction": "Program Kiki (Actor 1) to move left and right when the left and right arrows are pressed. When Kiki is clicked, she should throw hearts towards her friends. ",
        "Vigenere_instruction": "Test",
        "Virtual Pet 1 Predict_instruction": "What do you think will happen when you click on the alien?  ",
        "Virtual Pet 1 Predict_simple_instruction": "What do you think will happen when you click on the alien?  ",
        "Virtual Pet 1_instruction": "What do you think will happen if you press \"Run\" and then click on her?",
        "Virtual Pet 1_simple_instruction": "What do you think will happen if you press \"Run\" and then click on her?",
        "Virtual Pet 2 - Validated (Ram)_instruction": "Create an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2 - Validated_instruction": "Create an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2_instruction": "Create an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2_simple_instruction": "Create an **event** so that when Geraldine touches the dirt, her color changes to brown.",
        "Virtual Pet 2_simple_clone_instruction": "Create an **event** so that when Geraldine touches the dirt, her color changes to brown.",
        "Virtual Pet 3_instruction": "Add a new soap sprite to the screen.  Can you make it so that when the giraffe and the soap touch, the giraffe goes back to its normal color?",
        "Virtual Pet 3_simple_instruction": "Add a new soap sprite to the screen.  Can you make it so that when the giraffe and the soap touch, the giraffe goes back to its normal color?",
        "Virtual Pet 4_instruction": "Add a behavior to your soap to make it draggable, then drag it over to clean the giraffe!",
        "Virtual Pet 4_simple_instruction": "Add a behavior to your soap to make it draggable, then drag it over to clean the giraffe!",
        "Virtual Pet 5 - Validated_instruction": "Add actions to each event so that when the giraffe collides with each sprite, it shrinks by 5.",
        "Virtual Pet 5_instruction": "Add actions to each event so that when the giraffe collides with each sprite, it shrinks by 5.",
        "Virtual Pet 5_simple_instruction": "Add actions to each event so that when the giraffe collides with each sprite, it shrinks by 5.",
        "Virtual Pet 6_instruction": "Add an apple that returns the giraffe back to regular size when they touch.",
        "Virtual Pet 6_simple_instruction": "Add an apple that returns the giraffe back to regular size when they touch.",
        "Virtual Pet Freeplay_instruction": "Freeplay: What more can you make your giraffe do? ",
        "Virtual Pet Freeplay_simple_instruction": "Freeplay: What more can you make your giraffe do? ",
        "WhileAdventure_instruction": "Our adventurer wants to collect coins. Can you help her grab as many as she can using only one remove 1 block?",
        "Widget: Black and White Pixelation_instruction": "Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!",
        "Widget: Black and White Pixelation_2018_instruction": "Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!",
        "Widget: Color Pixelation_instruction": "Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.",
        "Widget: Color Pixelation_2018_instruction": "Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.",
        "Widget: Text Compression_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "Widget: Text Compression_2018_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "XML Scratchpad_instruction": "Using this test level to grab xml for unit tests",
        "aE1_instruction": "You chose to make a square napkin! \n\nTo finish, draw a square with 20 pixel sides. ",
        "aE2_instruction": "If you place your square loop inside another loop, we call that a nested loop. What do you need to add as an outer loop to make sure all 14 napkins line up next to each other?",
        "aE3_instruction": "We've got to have a tablecloth!  \n\nTake your row of 14 napkins and sew 14 of those together with another **outer loop** to make a cover for our table.",
        "aE3alternate_instruction": "Alternate",
        "aE3alternateB_instruction": "Alternate",
        "aE4_instruction": "Alternate",
        "aE5_instruction": "Example of puzzle using highest difficulty level shape.",
        "aE6_instruction": "How many times do you need to loop this to draw half  of a circle? ",
        "aE7_instruction": "If you create another loop like this one, but turn left instead of right, what happens? \n\nCan you repeat all of that to draw this wave?",
        "aE8_instruction": "Now let's loop that whole thing four times to create this picture frame. Watch out for the corners - you can't just turn 90 degrees! \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these blocks of code will make an additional quarter circle for the corners?",
        "aEfreeplay_instruction": "Free Play!",
        "allHallows2017_instruction": "Trap the Code.org employees in the crayon box by drawing a square with 320 pixel sides!",
        "allthethings data blocks test_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings design mode elements_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings level dataTables_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction": "Do This",
        "allthethings_moviebot_instruction": "This level cloned from \"U3 Digital Assistant Target\"",
        "allthethings_template_backed1_instruction": "Backed by a template #1. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script). ",
        "allthethings_template_backed2_instruction": "Backed by a template #2. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings_ttscsp_instruction": "Debug the program by fixing the logical error within the program. (Click to see full instructions)",
        "artistDebugVideo1_instruction": "Use the `repeat` loop to add waves to the water.",
        "artistFunctionsVideo1_instruction": "Follow the instructions to make your own function.",
        "artistLoopsK1_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "artistLoopsK2_instruction": "Now, use a `repeat` loop to draw this line five times!",
        "artistLoopsK2gradek_artist_loops3_instruction": "Now, use a `repeat` loop to draw this line five times!",
        "artistLoopsK3_instruction": "Draw a line eight steps long. This will become the land for our kingdom!",
        "artistLoopsK4_instruction": "Now we need a castle with a draw bridge.  Fix the code so that the bridge lays straight instead of falling down.",
        "artistLoopsK5_instruction": "Now we need to fix the top of the castle. Can you loop the code three times?",
        "artistLoopsK6_instruction": "Someone is stuck in the tower!  Fix the stairs to set them free. ",
        "artistLoopsK7_instruction": "This tower is lovely, what is downstairs? Build another staircase to find out! ",
        "artistLoopsK8_instruction": "Wow! There's a garden over there!  Help fix these stairs so I can get to it.",
        "artistLoopsK9_instruction": "**Challenge:**  Lovely! Let's take a walk around the garden.",
        "artistLoopsKA_instruction": "These stones are in the wrong place.  Help me move them so I don't fall in!",
        "artistLoopsKB_instruction": "Look!  It's a theater.  Help me set up the chairs so we can all see the stage. ",
        "artistLoopsKFP_instruction": "Picture time!  Use what you have learned to draw a picture of what you think the Artist saw on stage.",
        "asteroids_instruction": "This Corgi has been a good boy! Drag this carrot to him as a special treat.",
        "beeDebugVideo1_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "behavior bash mary_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me 2_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me Ram_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me joshl_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me nk_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me tanya_instruction": "Clone this level and make your own blocks!",
        "behaviors clone me_instruction": "Clone this level and make your own blocks!",
        "behaviors pet test 123 copy_instruction": "When Daisy gets a carrot, she gets excited. Use the **\"when touches\"** event and the \"add behavior\" block to make Daisy do something fun when she gets the carrot.",
        "behaviors pet test 123_instruction": "When Daisy gets a carrot, she gets excited. Use the **\"when touches\"** event and the \"add behavior\" block to make Daisy do something fun when she gets the carrot.",
        "behaviors pet test 2_instruction": "When Daisy gets a carrot, she gets excited. Use the **\"when touches\"** event and the \"add behavior\" block to make Daisy do something fun when she gets the carrot.",
        "behaviors pet test 3_instruction": "**It's time to make your own virtual pet!** You can change whatever code you want to to make your own pet. Here are some ideas:\n* Can you make your pet start a new behavior when you click on it?\n* Can you make your pet run away when you drag the vacuum to it?\n* Can you add other animal friends to your pet's area? ",
        "behaviors pet test_instruction": "Last time, you practiced using \"behaviors\" to make a sprite do something forever. This time, we will use behaviors to make a virtual pet. \n\nThis dog's name is Daisy. Daisy LOVES to snack on carrots. Add the \"drag and drop\" behavior to the carrot so you can move it to her.",
        "behaviors_caley_instruction": "Clone this level and make your own blocks!",
        "ben's first level_instruction": "Clone this level and make your own blocks!",
        "birdsDebugVideo1_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or feathers will fly!",
        "bounce_1_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the paddle using the left arrow to reach the finish target.",
        "bounce_10_instruction": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice.",
        "bounce_10_2018_instruction": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice.",
        "bounce_10_basketball_instruction": "Now there is a goal at the top! Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses hand\" blocks to make a game. See how many points you can score before your opponent scores twice.",
        "bounce_10_sports_instruction": "Now there is a goal at the top! Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses hand\" blocks to make a game. See how many points you can score before your opponent scores twice!",
        "bounce_11_instruction": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.",
        "bounce_11_2018_instruction": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.",
        "bounce_11_basketball_instruction": "You can now attach blocks to the \"when run\" block. You have to attach the new \"throw new ball\" block in more than one place. Also, try changing the scene or the speed of the hand and the ball and see how many points you can score before your opponent scores twice!",
        "bounce_11_sports_instruction": "You can now attach blocks to the \"when run\" block. You have to attach the new \"throw new ball\" block in more than one place. Also, try changing the scene or the speed of the hand and the ball and see how many points you can score before your opponent scores twice!",
        "bounce_12_instruction": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.",
        "bounce_12_2018_instruction": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.",
        "bounce_12_basketball_instruction": "Create your own Basketball game. You can change all the rules. When you're done, click Finish to let friends try your game on their phones.",
        "bounce_12_sports_instruction": "Create your own game! You're in charge here: you can change all the rules, mix and match sports, get creative! When you're done, click Finish to let friends try your game on their phones.",
        "bounce_1_2018_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the paddle using the left arrow to reach the finish target.",
        "bounce_1_basketball_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the hand using the left arrow to reach the finish target.",
        "bounce_1_sports_instruction": "Get to the flag! Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the flag.",
        "bounce_2_instruction": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets.",
        "bounce_2_2018_instruction": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets.",
        "bounce_2_basketball_instruction": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the hand to reach both finish targets.",
        "bounce_2_sports_instruction": "There are two flags now! Attach a block to the \"when left arrow\" and \"when right arrow\" blocks to make your player move in two directions.",
        "bounce_3_instruction": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top.",
        "bounce_3_2018_instruction": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top.",
        "bounce_4_instruction": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.",
        "bounce_4_2018_instruction": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.",
        "bounce_5_instruction": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target.",
        "bounce_5_2018_instruction": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target.",
        "bounce_5_basketball_instruction": "We're going to send a ball flying down towards the hand. Attach a block to the \"when ball hits hand\" block to ensure the ball reaches the flag.",
        "bounce_5_sports_instruction": "The hockey puck is going to fly down toward the player! Attach a block to the \"when ball hits player\" block to hit the flag.",
        "bounce_6_instruction": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
        "bounce_6_2018_instruction": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
        "bounce_6_basketball_instruction": "Now the flag is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
        "bounce_6_sports_instruction": "Now the flag is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
        "bounce_7_instruction": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target.",
        "bounce_7_2018_instruction": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target.",
        "bounce_7_basketball_instruction": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the flag.",
        "bounce_7_sports_instruction": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the flag.",
        "brendan behaviors clone_instruction": "Clone this level and make your own blocks!",
        "brendan hackathon level_instruction": "these are the instructions for my level.  you should do this level and have a good time.",
        "clone me mary_instruction": "Clone this level and make your own blocks!",
        "collector example_instruction": "Put these blocks in order to collect all of the gold and solve the puzzle.",
        "collectorDebugVideo2_instruction": "Put these blocks in order to collect all of the gold and solve the puzzle.",
        "collectorSkinVideo1_instruction": "Collect all four piles to pass this level.",
        "collectorSkinVideo2_instruction": "Collect one pile of gold to pass this level.",
        "comment_intro_maze_2018_instruction": "Use the new `comment` block to leave yourself quick reminders.",
        "conditionals_forvideo_harvester_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "conditionals_forvideo_playlab_instruction": "Score as many points as you can!",
        "course1_artist_loops_challenge1_instruction": "You can use a loop to draw many lines in a row.\n\nCan you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!",
        "course1_artist_loops_challenge2_instruction": "Let's play a game! Draw as many X's as you can! Can you get 3 in a row?",
        "course1_artist_loops_challenge3_instruction": "\"Can you help me make two bird houses?\"",
        "course1_artist_loops_challenge4_instruction": "\"It's time to toss the dice! Can you help me draw these?\"",
        "course1_collector_loops_challenge1_instruction": "\"Can you help me spot some bugs? I know which way I want to go, but I'm not sure how many steps to take.\"",
        "course1_collector_loops_challenge2_instruction": "This time you can only use one of each arrow block. Get all of the treasure! ",
        "course1_collector_loops_challenge3_instruction": "This time you can only use one of each arrow block. Get all of the treasure! ",
        "course1_collector_loops_challenge4_instruction": "Let's get the treasure! Help me across each row then come back to start the next row. Can you find a pattern?",
        "course1_maze_debugging_challenge1_instruction": "Debug this level. Remove the extra blocks and add the missing blocks. Get the bird to the pig!",
        "course1_maze_debugging_challenge2_instruction": "Debug this level. These are the right blocks, but they're in the wrong order!",
        "course1_maze_seq_challenge1_instruction": "\"Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly!\"",
        "course1_maze_seq_challenge2_instruction": "You can only move up to four times in each direction. Can you find a path before you run out of blocks?",
        "course1_playlab_events_challenge1_instruction": "\"Where are my friends hiding? Can you write code to show the rest of my friends?\"",
        "course1_playlab_events_challenge2_instruction": "\"Let's have a party! Give my friends something to do when you click or tap them.\"",
        "course2_artist_nestedLoops_challenge1_instruction": "Can you figure out how to make a picture like this?",
        "course2_artist_nestedLoops_challenge2_instruction": "Can you figure out how to make a picture like this?",
        "course2_artist_prog_challenge1_instruction": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun. The shortest possible solution is 6 blocks, but use as many as you like!",
        "course2_artist_prog_challenge2_instruction": "*Help me paint the yellow lines on this road!*",
        "course2_bee_conditionals_challenge1_instruction": "Collect all of the nectar or make all the honey.",
        "course2_bee_conditionals_challenge2_instruction": "Collect all of the nectar or make all the honey.",
        "course2_collector_loops_challenge2_instruction": "Get all of the treasure!",
        "course2_collector_prog_challenge1_instruction": "Look carefully! Can you collect all *10* pieces of treasure?",
        "course2_collector_prog_challenge2_instruction": "There are 20 pieces of treasure to be found. Collect at least half to finish this challenge!",
        "course2_harvester_loops_challenge1_instruction": "Collect all of the corn.",
        "course2_harvester_loops_challenge2_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "course2_maze_loops_challenge1_instruction": "Now Scrat wants to try using loops to find his acorn! ",
        "course2_maze_programming_challenge1_instruction": "*\"The pig is hiding! Can you help me find a way around?\"*",
        "course2_maze_programming_challenge2_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "course2_maze_seq_challenge1_instruction": "Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly!",
        "course2_maze_seq_challenge2_instruction": "You can only move up to four times in each direction. Can you find a path before you run out of blocks?",
        "course2_playlab_stage17_1_instruction": "Can you make Jorge the Dog (actor 1) say \"Hi\"?",
        "course2_playlab_stage17_10_instruction": "Add blocks to the `when run` event to change the background and the speed of Waddles.\n\nPlay the game and move Waddles with the arrows until you score.",
        "course2_playlab_stage17_11_instruction": "Create your own story. When you're done, click Finish to let friends try your story on their phones.",
        "course2_playlab_stage17_2_instruction": "Can you make Jorge (actor 1) say something, then have Olive the Cat (actor 2) say something?",
        "course2_playlab_stage17_3_instruction": "Can you write a program to make Jorge (actor 1) move toward Olive the Cat?",
        "course2_playlab_stage17_4_instruction": "Can you write a program that makes Jorge (actor 1) move to Olive the Cat, and have Olive say \"Hello\" when Jorge reaches her?",
        "course2_playlab_stage17_5_instruction": "Can you write a program to make Octavia say \"Hi\" when she is clicked?",
        "course2_playlab_stage17_6_instruction": "Now, write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets!",
        "course2_playlab_stage17_7_instruction": "The `repeat forever` block allows you to run code over and over forever. Can you attach blocks to move Chomp the Dino (actor 2) up and down forever?",
        "course2_playlab_stage17_8_instruction": "Can you have Waddles (actor 1) say \"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \n\nWhen you're done, play the game to make that happen.",
        "course2_playlab_stage17_9_instruction": "Can you add a block to score a point when Waddles runs into Octavia (actor 3)? \nPlay the game and move Waddles with the arrows until you score!",
        "course3_artist_concept_challenge1_instruction": "Feel free to use trial and error. You are not expected to get the image perfect the first time.   Want to see more hints?  Click here!",
        "course3_artist_functions_challenge1_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "course3_artist_functions_challenge2_instruction": "Try this code to see how it works, then make the program your own!",
        "course3_bee_debugging_challenge1_instruction": "Watch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "course3_bee_functions_challenge1_instruction": "You are on your own for this challenge. This could \"bee\" harder than it looks!",
        "course3_bee_functions_challenge2_instruction": "You are on your own for this challenge!",
        "course3_bee_functions_challenge3_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
        "course3_bee_functions_challenge4_instruction": "Use everything you have learned to complete this puzzle!",
        "course3_collector_debugging_challenge2_instruction": "Are you an expert of nested loops? Use what you have learned so far to collect all of the treasure!",
        "course3_farmer_condLoops_challenge1_instruction": "Turn right at the pumpkins. Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
        "course3_farmer_condLoops_challenge2_instruction": "Collect everything to complete the level.",
        "course3_farmer_until_challenge2_instruction": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
        "course3_maze_debugging_challenge1_instruction": "*\"Am I just going around in circles?\"*",
        "course3_maze_debugging_challenge2_instruction": "*\"If I turn too often, I might get dizzy! Help me reach the acorn with only four `turn` commands.\"*",
        "course3_maze_until_challenge1_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "course3_playLab_challenge1_instruction": "Something should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "course3_playlab_challenge2_instruction": "Can you figure out how this \"Fortune Teller\" app works? Click `MORE` to see your challenges.",
        "course3_playlab_stage16_1_instruction": "Can you make this dog say \"hello world\"?",
        "course3_playlab_stage16_2_instruction": "Can you make the dog say something and then have the cat say something afterwards?",
        "course3_playlab_stage16_3_instruction": "Can you write a program to make this dog move to the cat?",
        "course3_playlab_stage16_4_instruction": "Can you write a program that makes the dog move to the cat, and have the cat say \"hello\" when the dog reaches him?",
        "course3_playlab_stage16_5_instruction": "Can you add a block to make the octopus happy?",
        "course3_playlab_stage16_6_instruction": "Create your own story. When you're done, click Finish to let friends try your story on their phones.",
        "course3_playlab_stage17_1_instruction": "Can you write a program to make the octopus say \"hello\" when it is clicked?",
        "course3_playlab_stage17_2_instruction": "Can you write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets?",
        "course3_playlab_stage17_3_instruction": "The \"repeat forever\" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?",
        "course3_playlab_stage17_4_instruction": "Can you have Waddles say \"Ouch!\" and play a \"hit\" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?",
        "course3_playlab_stage17_5_instruction": "Can you add a block to score a point when Waddles runs into the octopus, and then move him with the arrows until you score?",
        "course3_playlab_stage17_6_instruction": "Can you add blocks to change the background and the speed of Waddles, and then move him with the arrows until you score?",
        "course3_playlab_stage17_7_instruction": "Create your own story. When you're done, click Finish to let friends try your story on their phones.",
        "course4_artist_binary_challenge1_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "course4_artist_binary_challenge2_instruction": "Are you persistent enough to restore this logo back to normal?",
        "course4_artist_concept_challenge2_instruction": "Create five pinwheel designs using the code below.",
        "course4_artist_functions_challenge2_instruction": "Try this code to see how it works, then make the program your own!",
        "course4_artist_fwp_challenge1_instruction": "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)",
        "course4_artist_variables_challenge1_instruction": "You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "course4_artist_variables_challenge2_instruction": "You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "course4_bee_for_challenge1_instruction": "Use this for loop to collect all of the nectar. There are a few actions that you will want to repeat 'counter' times.",
        "course4_bee_fwp_challenge1_instruction": "Use one `for loop` in a function to collect all of the corn. The same `for loop` can count to different maximum values by using the `length` parameter.",
        "course4_bee_fwp_challenge2_instruction": "Use one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` can count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.",
        "course4_collector_nested_loops_challenge2_instruction": "Help the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "course4_harvester_nested_loops_challenge1_instruction": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
        "course4_playlab_variables_challenge1_instruction": "Use these blocks to make the actors share a knock-knock joke. Change the setup and punchline to tell your own joke!",
        "course4_playlab_variables_challenge3_instruction": "Can you figure out how this \"Fortune Teller\" app works? Click `MORE` to see your challenges.",
        "courseA_artist_loops1_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "courseA_artist_loops10_instruction": "Help me put down stones so I don't fall in!",
        "courseA_artist_loops10_2018_instruction": "Help me put down stones so I don't fall in!",
        "courseA_artist_loops11_instruction": "Help me build steps to watch the ship sail away.",
        "courseA_artist_loops11_2018_instruction": "Help me build steps to watch the ship sail away.",
        "courseA_artist_loops12_instruction": "The artist saw something funny in the distance.  Draw what you think he saw.",
        "courseA_artist_loops12_2018_instruction": "The artist saw something funny in the distance.  Draw what you think he saw.",
        "courseA_artist_loops1_2018_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "courseA_artist_loops2_instruction": "Help the artist draw this line two times forward.",
        "courseA_artist_loops2_2018_instruction": "Help the artist draw this line two times forward.",
        "courseA_artist_loops3_instruction": "Draw a line forward five times.",
        "courseA_artist_loops3_2018_instruction": "Draw a line forward five times.",
        "courseA_artist_loops4_instruction": "Now, use a `repeat` loop to draw this line five times!",
        "courseA_artist_loops4_2018_instruction": "Now, use a `repeat` loop to draw this line five times!",
        "courseA_artist_loops5_instruction": "Draw a line seven steps long. This will become our horizon.",
        "courseA_artist_loops5_2018_instruction": "Draw a line seven steps long. This will become our horizon.",
        "courseA_artist_loops6_instruction": "Let's put a nice hill in the back.",
        "courseA_artist_loops6_2018_instruction": "Let's put a nice hill in the back.",
        "courseA_artist_loops7_instruction": "Use the `repeat` loop to add waves to the water.",
        "courseA_artist_loops7_2018_instruction": "Use the `repeat` loop to add waves to the water.",
        "courseA_artist_loops7_forVideo_instruction": "Use the `repeat` loop to add waves to the water.",
        "courseA_artist_loops8_instruction": "We need a ladder up to the boat.",
        "courseA_artist_loops8_2018_instruction": "We need a ladder up to the boat.",
        "courseA_artist_loops9_instruction": "Challenge: Fix the stairs.",
        "courseA_artist_loops9_2018_instruction": "Challenge: Fix the stairs.",
        "courseA_artist_loops_challenge1_instruction": "Can you draw a house? Make it look just the way you like it!",
        "courseA_artist_loops_challenge1_2018_instruction": "Can you draw a house? Make it look just the way you like it!",
        "courseA_artist_loops_challenge2_instruction": "\"Can you help me make two bird houses?\"",
        "courseA_artist_loops_challenge2a_instruction": "*\"Help me get these three tents set up!\"*",
        "courseA_artist_loops_challenge2a_2018_instruction": "*\"Help me get these three tents set up!\"*",
        "courseA_artist_loops_challenge3_instruction": "Let's play a game! Draw as many X's as you can! Can you get 3 in a row?",
        "courseA_bee_seq1_instruction": "Play with these blocks to help the bee get *one* nectar.",
        "courseA_bee_seq10_instruction": "Try it by yourself! Get all the nectar.",
        "courseA_bee_seq11_instruction": "Get all the nectar.",
        "courseA_bee_seq12_instruction": "Play with these blocks to help the bee get *one* nectar.",
        "courseA_bee_seq13_instruction": "Use three `Move West` blocks and one `Get Nectar` block.",
        "courseA_bee_seq14_instruction": "Use three `Move North` blocks and one `Get Nectar` block.",
        "courseA_bee_seq2_instruction": "Help the bee get the nectar!",
        "courseA_bee_seq3_instruction": "Find the bug and fix it!",
        "courseA_bee_seq4_instruction": "Try it yourself!",
        "courseA_bee_seq5_instruction": "Try it yourself!",
        "courseA_bee_seq6_instruction": "Now the bee needs to get nectar from two flowers!",
        "courseA_bee_seq7_instruction": "Add two blocks to finish this puzzle!",
        "courseA_bee_seq8_instruction": "Make sure to get nectar from every flower!",
        "courseA_bee_seq9_instruction": "Make sure to get nectar from every flower!",
        "courseA_collector_loops1_instruction": "Move Laurel around and get as much treasure as you can!",
        "courseA_collector_loops10_instruction": "Help Laurel get all of the treasure along this path.",
        "courseA_collector_loops10_2018_instruction": "Help Laurel get all of the treasure along this path.",
        "courseA_collector_loops11_instruction": "Help Laurel get all of the treasure from this cave.",
        "courseA_collector_loops11_2018_instruction": "Help Laurel get all of the treasure from this cave.",
        "courseA_collector_loops12_instruction": "*\"Eureka!  Get as much treasure as you can!\"*",
        "courseA_collector_loops12_2018_instruction": "*\"Eureka!  Get as much treasure as you can!\"*",
        "courseA_collector_loops1_2018_instruction": "Move Laurel around and get as much treasure as you can!",
        "courseA_collector_loops2_instruction": "Get all three piles to pass this level.",
        "courseA_collector_loops2_2018_instruction": "Get all three piles to pass this level.",
        "courseA_collector_loops4_instruction": "Fix Laurel's path to get all of this treasure.",
        "courseA_collector_loops4_2018_instruction": "Fix Laurel's path to get all of this treasure.",
        "courseA_collector_loops5_instruction": "Use what you learned to get all of the treasure.",
        "courseA_collector_loops5_2018_instruction": "Use what you learned to get all of the treasure.",
        "courseA_collector_loops6_instruction": "Add blocks to this code to get all of the treasure.",
        "courseA_collector_loops6_2018_instruction": "Add blocks to this code to get all of the treasure.",
        "courseA_collector_loops7_instruction": "What should you add to this code to get all of the treasure?",
        "courseA_collector_loops7_2018_instruction": "What should you add to this code to get all of the treasure?",
        "courseA_collector_loops8_instruction": "Write code to get all of this treasure.",
        "courseA_collector_loops8_2018_instruction": "Write code to get all of this treasure.",
        "courseA_collector_loops9_instruction": "**Challenge:** The treasure goes all the way up these stairs!  Write the code to help Laurel get it all.",
        "courseA_collector_loops9_2018_instruction": "**Challenge:** The treasure goes all the way up these stairs!  Write the code to help Laurel get it all.",
        "courseA_collector_loops_challenge1_instruction": "*\"Can you help me spot some bugs?\"*",
        "courseA_collector_loops_challenge1_2018_instruction": "*\"Can you help me spot some bugs?\"*",
        "courseA_collector_loops_challenge2_instruction": "Get all of the treasure! ",
        "courseA_collector_loops_challenge2kp_instruction": "Collect at least **3** pieces of treasure to pass this level.",
        "courseA_collector_loops_challenge2kp_2018_instruction": "Collect at least **3** pieces of treasure to pass this level.",
        "courseA_collector_preLoops1_instruction": "This is Laurel the Adventurer! \n\nPress \"Run\" to see her walk up to the treasure and grab it.",
        "courseA_collector_preLoops2_instruction": "Great!  Now you get to add code yourself!  \n\nSnap a `get treasure` block to the bottom of the program and click \"Run\".",
        "courseA_collector_preLoops3_instruction": "Snap two `E -->` blocks and one `get treasure` block to the bottom of the program, then click \"Run\".",
        "courseA_collector_preLoops4_instruction": "Can you figure out how to solve this puzzle?",
        "courseA_collector_preLoops5_instruction": "Get 1 of these 2 gems to solve this puzzle.",
        "courseA_collector_preLoops6_instruction": "Get both pieces of treasure to solve this puzzle.",
        "courseA_collector_preLoops7_instruction": "Get all three piles to pass this level.",
        "courseA_forVideoTest_artist_instruction": "Use the `repeat` loop to add waves to the water.",
        "courseA_harvester_forVideo_instruction": "Can you pick all the corn using only **one** move block?",
        "courseA_harvester_loops1_instruction": "Help the harvester pick all the corn!",
        "courseA_harvester_loops10_instruction": "Help the harvester pick all five ears of corn!",
        "courseA_harvester_loops11_instruction": "Try one more on your own! ",
        "courseA_harvester_loops2_instruction": "Make sure to pick all the corn!",
        "courseA_harvester_loops3_instruction": "Can you pick all the corn using only **one** move block?",
        "courseA_harvester_loops4_instruction": "Can you help the harvester find the bug in her code?",
        "courseA_harvester_loops5_instruction": "Try it yourself! Can you pick the corn at the end too?",
        "courseA_harvester_loops5a_instruction": "Look at all this corn! Can you pick it all by yourself?",
        "courseA_harvester_loops5b_instruction": "Can you change your code to make the harvester pick all the corn?",
        "courseA_harvester_loops6_instruction": "You will need **one** `Move South` block and **one** `Move West` block.",
        "courseA_harvester_loops7_instruction": "Try it on your own! ",
        "courseA_harvester_loops8_instruction": "This is the same puzzle, but now you have to repeat **three** times!",
        "courseA_harvester_loops9_instruction": "Can you figure out how to pick all the corn?",
        "courseA_harvester_seq1_instruction": "Play with these blocks to help the harvester pick the piece of corn.",
        "courseA_harvester_seq10_instruction": "Make sure to pick all the corn!",
        "courseA_harvester_seq11_instruction": "Try it by yourself! Pick all the corn.",
        "courseA_harvester_seq12_instruction": "Pick all the corn.",
        "courseA_harvester_seq13_instruction": "Play with these blocks to help the harvester pick corn.",
        "courseA_harvester_seq2_instruction": "Use three `move west` blocks and one `pick corn` block to solve this puzzle.",
        "courseA_harvester_seq3_instruction": "Use three `Move North` blocks and one `Pick Corn` block.",
        "courseA_harvester_seq4_instruction": "Add one block to help the harvester pick the corn.",
        "courseA_harvester_seq5_instruction": "Find the bug and fix it!",
        "courseA_harvester_seq6_instruction": "Try it yourself!",
        "courseA_harvester_seq7_instruction": "Try it yourself!",
        "courseA_harvester_seq8_instruction": "Now the harvester needs to pick corn two times!",
        "courseA_harvester_seq9_instruction": "Add two blocks to finish this puzzle!",
        "courseA_maze_ramp2_2018_instruction": "Snap all blocks together to finish your code, then click \"Run\".",
        "courseA_maze_ramp2a_2018_instruction": "Snap all blocks together to finish your code, then click \"Run\".",
        "courseA_maze_ramp3_2018_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseA_maze_ramp3a_2018_instruction": "Add a `North` block to the bottom of the other blocks to finish this code, then click \"▶ Run\".",
        "courseA_maze_ramp3b_2018_instruction": "Add a `North` block to the bottom of the other blocks to finish this code, then click \"Run\".",
        "courseA_maze_ramp4_2018_instruction": "Avoid TNT or feathers will fly!",
        "courseA_maze_ramp4a_2018_instruction": "Can you figure out which block you need to add to the bottom of the other blocks to finish this code?",
        "courseA_maze_ramp5_2018_instruction": "Avoid the TNT.",
        "courseA_maze_ramp5a_2018_instruction": "Get the bird to the pig!",
        "courseA_maze_seq1_instruction": "Get the bird to the bad pig!",
        "courseA_maze_seq10_instruction": "Challenge: Go around the TNT to get the bird to the pig! ",
        "courseA_maze_seq10_2018_instruction": "Challenge: Avoid the TNT to get the bird to the pig! ",
        "courseA_maze_seq11_instruction": "Move one way, then another to get the bird to the pig.",
        "courseA_maze_seq11_2018_instruction": "Move one way, then another to get the bird to the pig.",
        "courseA_maze_seq12_instruction": "Get that pig! ",
        "courseA_maze_seq12_2018_instruction": "Get that pig! ",
        "courseA_maze_seq13_instruction": "Get the pig any way you can!",
        "courseA_maze_seq13_2018_instruction": "Get the pig any way you can!",
        "courseA_maze_seq1_2018_instruction": "Get the bird to the bad pig!",
        "courseA_maze_seq2_instruction": "Fix the code to get the bird to the pig.",
        "courseA_maze_seq2_2018_instruction": "Fix the code to get the bird to the pig.",
        "courseA_maze_seq3_instruction": "Fix the code to get the bird to the pig!",
        "courseA_maze_seq3_2018_instruction": "Fix the code to get the bird to the pig!",
        "courseA_maze_seq4_instruction": "REMOVE a block to get the bird to the pig!",
        "courseA_maze_seq4_2018_instruction": "REMOVE a block to get the bird to the pig!",
        "courseA_maze_seq4a_instruction": "Get the bird to the pig using the fewest possible blocks.",
        "courseA_maze_seq5_instruction": "Try this one yourself from the beginning.",
        "courseA_maze_seq5_2018_instruction": "Give this one a try.",
        "courseA_maze_seq5a_2018_instruction": "What can you add to the end of this code to get the bird to the pig?",
        "courseA_maze_seq6_instruction": "Move one way, then another to get the bird to the pig!",
        "courseA_maze_seq6_2018_instruction": "Move one way, then another to get the bird to the pig!",
        "courseA_maze_seq7_instruction": "Figure out what is missing and then add blocks to get the bird to the pig!",
        "courseA_maze_seq7_2018_instruction": "Figure out what is missing and then add blocks to get the bird to the pig!",
        "courseA_maze_seq8_instruction": "Solve this level and get the bird to the pig!",
        "courseA_maze_seq8_2018_instruction": "Solve this level and get the bird to the pig!",
        "courseA_maze_seq9_instruction": "Debug this level by adding blocks to get the bird to the pig!",
        "courseA_maze_seq9_2018_instruction": "Debug this level by adding blocks to get the bird to the pig!",
        "courseA_maze_seq_challenge1_instruction": "Something is wrong here. Help fix the code to get the bird to the pig!",
        "courseA_maze_seq_challenge1_2018_instruction": "Something is wrong here. Help fix the code to get the bird to the pig!",
        "courseA_maze_seq_challenge2_instruction": "Trace the path to lead the bird to the pig. Avoid TNT or feathers will fly!",
        "courseA_maze_seq_challenge2_2018_instruction": "Trace the path to lead the bird to the pig. Avoid TNT or feathers will fly!",
        "courseA_playLab_events1_instruction": "This is a Play Lab level.  Move blocks to the workspace and see what happens!",
        "courseA_playLab_events1_2018_instruction": "This is a Play Lab level.  Move blocks to the workspace and see what happens!",
        "courseA_playLab_events2_instruction": "Jorge the Dog wants to say \"Hi there.\"  Can you help him?",
        "courseA_playLab_events2_2018_instruction": "Jorge the Dog wants to say \"Hi there.\"  Can you help him?",
        "courseA_playLab_events3_instruction": "Connect the `move left` block to the `when left` event block that is already in the workspace.",
        "courseA_playLab_events3_2018_instruction": "Connect the `move left` block to the `when left` event block that is already in the workspace.",
        "courseA_playLab_events4_instruction": "Add blocks for moving right when the `right` button is clicked.",
        "courseA_playLab_events4_2018_instruction": "Add another event block to get Jorge to move right when the `right` button is clicked.",
        "courseA_playLab_events5_instruction": "Add events to have Jorge move up and down when the `up` and `down` buttons are pressed.",
        "courseA_playLab_events5_2018_instruction": "Add events to have Jorge move up and down when the `up` and `down` buttons are pressed.",
        "courseA_playLab_events6_instruction": "Make this more interesting by changing the background and playing a random sound when Jorge is clicked.",
        "courseA_playLab_events6_2018_instruction": "Make this more interesting by changing the background and playing a random sound when Jorge is clicked.",
        "courseA_playLab_events7_instruction": "Add anything you want to this game.  Can you make the dinosaur disappear when Jorge runs into him?",
        "courseA_playLab_events7_2018_instruction": "*Freeplay:* Add anything you want to this game.",
        "courseA_playlab_events_challenge1_instruction": "Can you write code to show the rest of my friends? The hints will help you do this project step-by-step.",
        "courseA_playlab_events_challenge1_2018_instruction": "Can you write code to show the rest of my friends? The hints will help you do this project step-by-step.",
        "courseA_playlab_events_challenge2_instruction": "Give everyone something to do when you click on them.",
        "courseA_playlab_events_challenge2_2018_instruction": "Give everyone something to do when you click on them.",
        "courseA_playlab_events_challengeClone_instruction": "Where are my friends hiding? Can you write code to show the rest of my friends?",
        "courseA_toMakeLoopsVideo_Collector_instruction": "Loops let you do whatever is inside over and over again!",
        "courseA_video_events_instruction": "Need a better playlab/events combo",
        "courseA_video_events_2018_instruction": "Need a better playlab/events combo",
        "courseB_Scrat_ramp1_2018_instruction": "For this puzzle, snap the blocks together and press \"▶ Run\"!",
        "courseB_Scrat_ramp2_2018_instruction": "Snap all blocks together to finish your code, then click \"▶ Run\".",
        "courseB_Scrat_ramp3a_2018_instruction": "Add a `North` block to the bottom of the other blocks to finish this code, then click \"▶ Run\".",
        "courseB_Scrat_ramp3b_2018_instruction": "Drag the extra block back to the toolbox to throw it away.\n\n",
        "courseB_Scrat_ramp4a_2018_instruction": "Can you figure out which block you need to add to the bottom of the other blocks to finish this code?",
        "courseB_Scrat_ramp5a_2018_instruction": "Get the bird to the pig!",
        "courseB_artist_loops1_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "courseB_artist_loops10_instruction": "Use what you have learned to draw a picture of what you think the artist saw when he got home.",
        "courseB_artist_loops10_2018_instruction": "Use what you have learned to draw a picture of what you think the artist saw when he got home.",
        "courseB_artist_loops1_2018_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "courseB_artist_loops2_instruction": "The Artist is trying to draw a line **6** times, but can't get it right.  Can you help?",
        "courseB_artist_loops2_2018_instruction": "The Artist is trying to draw a line **6** times, but can't get it right.  Can you help?",
        "courseB_artist_loops3_instruction": "Help the artist draw a line 7 times to make a garden wall.",
        "courseB_artist_loops3_2018_instruction": "Help the artist draw a line 7 times to make a garden wall.",
        "courseB_artist_loops4_instruction": "Now we need to get the soil ready to plant. Find the bugs in the code and help the artist prepare the ground. ",
        "courseB_artist_loops4_2018_instruction": "Now we need to get the soil ready to plant. Find the bugs in the code and help the artist prepare the ground. ",
        "courseB_artist_loops5_instruction": "Time to fix the stairs!  Repeat this pattern **5** times so the artist can reach the top of the bushes.",
        "courseB_artist_loops5_2018_instruction": "Time to fix the stairs!  Repeat this pattern **5** times so the artist can reach the top of the bushes.",
        "courseB_artist_loops6_instruction": "Climb the vine and see where it goes?",
        "courseB_artist_loops6_2018_instruction": "Climb the vine and see where it goes?",
        "courseB_artist_loops7_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "courseB_artist_loops7_2018_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "courseB_artist_loops8_instruction": "Time to head home. Can you fix this ladder using only one block to help the artist get down?",
        "courseB_artist_loops8_2018_instruction": "Time to head home. Can you fix this ladder using only one block to help the artist get down?",
        "courseB_artist_loops9_instruction": "Let's take the short way home, over the pond. Can you help the artist stay on the stones?",
        "courseB_artist_loops9_2018_instruction": "Let's take the short way home, over the pond. Can you help the artist stay on the stones?",
        "courseB_artist_loops_challenge1_instruction": "\"It's time to toss the dice! Can you help me draw these?\"",
        "courseB_artist_loops_challenge1_2018_instruction": "\"It's time to toss the dice! Can you help me draw these?\"",
        "courseB_artist_loops_challenge2_instruction": "Draw as many X's as you can. Can you get 3 in a row?",
        "courseB_artist_loops_challenge2_2018_instruction": "Draw as many X's as you can. Can you get 3 in a row?",
        "courseB_collector_loops1_instruction": "This is Laurel the Adventurer!  Can you move her around and get treasure?",
        "courseB_collector_loops10_instruction": "Help Laurel get all of the treasure from this cave.",
        "courseB_collector_loops10_2018_instruction": "Help Laurel get all of the treasure from this cave.",
        "courseB_collector_loops11_instruction": "Eureka!  Get as much treasure as you can!",
        "courseB_collector_loops11_2018_instruction": "Eureka!  Get as much treasure as you can!",
        "courseB_collector_loops1_2018_instruction": "Get at least one piece of treasure without mistakes to pass!",
        "courseB_collector_loops2_instruction": "Get all four piles to pass this level.",
        "courseB_collector_loops2_2018_instruction": "Get all four piles to pass this level.",
        "courseB_collector_loops3_instruction": "How can Laurel get all five piles of treasure using only one `E -->` block?",
        "courseB_collector_loops3_2018_instruction": "How can Laurel get all five piles of treasure using only one `E -->` block?",
        "courseB_collector_loops3_predict1_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "courseB_collector_loops4_instruction": "Fix Laurel's path to get all of this treasure!",
        "courseB_collector_loops4_2018_instruction": "Fix Laurel's path to get all of this treasure!",
        "courseB_collector_loops5_instruction": "Add to the code from the last puzzle to get all of the treasure. ",
        "courseB_collector_loops5_2018_instruction": "Add to the code from the last puzzle to get all of the treasure. ",
        "courseB_collector_loops6_instruction": "Figure out the code to help Laurel get all of the treasure!",
        "courseB_collector_loops6_2018_instruction": "Figure out the code to help Laurel get all of the treasure!",
        "courseB_collector_loops7_instruction": "Write the code to get all of this treasure.",
        "courseB_collector_loops7_2018_instruction": "Write the code to get all of this treasure.",
        "courseB_collector_loops8_instruction": "**Challenge:** The treasure goes all the way down these stairs!  Write the code to help Laurel get it all.",
        "courseB_collector_loops8_2018_instruction": "**Challenge:** The treasure goes all the way down these stairs!  Write the code to help Laurel get it all.",
        "courseB_collector_loops9_instruction": "*\"Help me get the treasure from this deep valley.\"*",
        "courseB_collector_loops9_2018_instruction": "*\"Help me get the treasure from this deep valley.\"*",
        "courseB_collector_loops_challenge1_instruction": "This time you have limited blocks. Get all of the treasure! ",
        "courseB_collector_loops_challenge1_2018_instruction": "This time you have limited blocks. Get all of the treasure! ",
        "courseB_collector_loops_challenge2_instruction": "Let's get the treasure! Help me across each row then come back to start the next row. Can you find a pattern?",
        "courseB_collector_loops_challenge2_2018_instruction": "Let's get the treasure! Help me across each row then come back to start the next row. Can you find a pattern?",
        "courseB_collector_loops_challenge2a_instruction": "Help Laurel get at least **5** pieces of treasure to finish this puzzle.",
        "courseB_collector_loops_challenge2a_2018_instruction": "Help Laurel get at least **5** pieces of treasure to finish this puzzle.",
        "courseB_collector_loops_challenge`_instruction": "This time you can only use one of each arrow block. Get all of the treasure! ",
        "courseB_collector_prog1_instruction": "This is Laurel the Adventurer!  Can you move her around and get gold?",
        "courseB_collector_prog2_instruction": "Four piles of gold!  Collect all four.",
        "courseB_collector_prog3_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "courseB_iceage_loops1_instruction": "Help Scrat across the ice to get to the acorn!",
        "courseB_iceage_loops10_instruction": "Help Scrat get all the way over to the acorn!",
        "courseB_iceage_loops11_instruction": "Help Scrat get to the acorn!",
        "courseB_iceage_loops11_forVideo_instruction": "Help Scrat get to the acorn!",
        "courseB_iceage_loops12_instruction": "Get to the acorn any way you can!",
        "courseB_iceage_loops2_instruction": "Use two different move blocks to get to the acorn!",
        "courseB_iceage_loops3_instruction": "Can you get to the acorn with just one `W` block?",
        "courseB_iceage_loops4_instruction": "Add one more block to get Scrat all the way to the acorn!",
        "courseB_iceage_loops5_instruction": "Can you add one more loop to get to the acorn?",
        "courseB_iceage_loops6_instruction": "Can you add a loop to get to the acorn?",
        "courseB_iceage_loops7_instruction": "Scrat really wants that acorn! ",
        "courseB_iceage_loops8_instruction": "Can you fix this code? ",
        "courseB_iceage_loops9_instruction": "The acorn is so far away! Can you use loops to help Scrat get there?",
        "courseB_maze_seq1_instruction": "Play with these blocks to see what they make the bird do! \n\nGet the bird to the pig to complete the level.",
        "courseB_maze_seq10_instruction": "Fix the bugs to get the bird to the pig.",
        "courseB_maze_seq10_2018_instruction": "Fix the bugs to get Scrat to the acorn.",
        "courseB_maze_seq11_instruction": "It's all you!  Get the bird to the pig.",
        "courseB_maze_seq11_2018_instruction": "It's all you!  Get Scrat to the acorn.",
        "courseB_maze_seq12_instruction": "Now get that pig any way you can!",
        "courseB_maze_seq12_2018_instruction": "Now get that acorn any way you can!",
        "courseB_maze_seq1_2018_instruction": "Play with these blocks to see what they make Scrat do! \n\nGet Scrat to the acorn to complete the level.",
        "courseB_maze_seq2_instruction": "*\"A bug! Fix the code to get me to the pig.\"*",
        "courseB_maze_seq2_2018_instruction": "A bug! Fix the code to get Scrat to the acorn!",
        "courseB_maze_seq3_instruction": "\"Fix the code to get me to the pig!\"",
        "courseB_maze_seq4_instruction": "Add 2 blocks to get the bird to the pig.",
        "courseB_maze_seq4_2018_instruction": "Use **2** movement blocks to get the Scrat to the acorn.",
        "courseB_maze_seq5_instruction": "Now try this puzzle from the start!",
        "courseB_maze_seq5_2018_instruction": "This puzzle is a little tricky!",
        "courseB_maze_seq6_instruction": "Move one way, then another to get the bird to the pig!",
        "courseB_maze_seq6_2018_instruction": "Move one way, then another to get Scrat to the acorn!",
        "courseB_maze_seq7_instruction": "Figure out what is missing and then add blocks to get the bird to the pig!",
        "courseB_maze_seq7_2018_instruction": "Figure out what is missing and then add blocks to get Scrat to the acorn!",
        "courseB_maze_seq8_instruction": "Your turn!  What do you need to do to get the bird to the pig?",
        "courseB_maze_seq8_2018_instruction": "Your turn!  What do you need to do to get Scrat to the acorn?",
        "courseB_maze_seq9_instruction": "Challenge: Move around the TNT to get the bird to the pig.",
        "courseB_maze_seq9_2018_instruction": "Challenge: Move around the broken ice to get Scrat to the acorn.",
        "courseB_maze_seq9_challenge1_instruction": "*Where's that pig hiding now?*",
        "courseB_maze_seqCold_instruction": "Challenge: Debug this level by adding blocks to get the bird to the pig!",
        "courseB_maze_seqOld_instruction": "Go around the TNT to get the bird to the pig! ",
        "courseB_maze_seq_challenge1_instruction": "Can you find a path before you run out of blocks?",
        "courseB_maze_seq_challenge1_2018_instruction": "Can you find a path before you run out of blocks?",
        "courseB_maze_seq_challenge2_instruction": "Debug this level. These are the right blocks, but they're in the wrong order!",
        "courseB_maze_seq_challenge2_2018_instruction": "Debug this level. These are the right blocks, but they're in the wrong order!",
        "courseB_playLab_events1_instruction": "See if you can figure out what each block does.",
        "courseB_playLab_events1_2018_instruction": "See if you can figure out what each block does.",
        "courseB_playlab_events2_instruction": "Have Daisy the Dragon say something when you click \"Run\".",
        "courseB_playlab_events2_2018_instruction": "Have Daisy the Dragon say something when you click \"Run\".",
        "courseB_playlab_events3_instruction": "Use an event to make Daisy the Dragon switch to a random mood when you click on her.",
        "courseB_playlab_events3_2018_instruction": "Use an event to make Daisy the Dragon switch to a random mood when you click on her.",
        "courseB_playlab_events4_instruction": "Knight time!  Add an event so that the knight moves toward the dragon when the left arrow is clicked.",
        "courseB_playlab_events4_2018_instruction": "Get the dragon to finish this level!",
        "courseB_playlab_events5_instruction": "Now add an event so that the knight runs away from the dragon when you press the right arrow.",
        "courseB_playlab_events5_2018_instruction": "Add an event so that the knight runs away from the dragon when you press the right arrow.",
        "courseB_playlab_events6_instruction": "Help your knight get all of the flags!\n\nTo do this, you'll need to add events to help the knight move up, down, left, and right.",
        "courseB_playlab_events6_2018_instruction": "Help your knight get all of the flags!\n\nTo do this, you'll need to add events to help the knight move up, down, left, and right.",
        "courseB_playlab_events7_instruction": "Make this game fun by setting the knight to vanish when he runs into the dragon on his way to get the flags!  Play a sound when they collide to make it feel more real.",
        "courseB_playlab_events8_instruction": "Use your imagination. What can you do to make this game more fun?",
        "courseB_playlab_eventsFP_instruction": "Use your imagination. What can you do to make this game more fun?",
        "courseB_playlab_eventsFP_2018_instruction": "**Free play:** Use your imagination. What can you do to make this game more fun?",
        "courseB_playlab_eventsToolbox_instruction": "Finish by playing a sound and making the knight vanish when he runs into the dragon!",
        "courseB_playlab_events_challenge1_instruction": "Make the animals move down when you press ▼. ",
        "courseB_playlab_events_challenge1_2018_instruction": "Make the animals move down when you press ▼. ",
        "courseB_playlab_events_challenge2_instruction": "Make the animals disappear when you click on them.",
        "courseB_playlab_events_challenge2_2018_instruction": "Make the animals disappear when you click on them.",
        "courseB_playlab_events_challenge2_embed_instruction": "Here is your finished game!",
        "courseB_playlab_events_challenge2_template_instruction": "Let's make the animals disappear when you click on them! You can also add sounds and score points to create a fun game of Animal Tag!",
        "courseB_playlab_events_challenge2_template_2018_instruction": "Let's make the animals disappear when you click on them! You can also add sounds and score points to create a fun game of Animal Tag!",
        "courseB_scrat_forVideo_instruction": "Get the acorn!",
        "courseB_starWars_prog1_instruction": "\"Go get the scrap metal, BB-8!\"",
        "courseB_starWars_prog10_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog10_2018_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog11_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog11_2018_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog1_2018_instruction": "\"Go get the scrap metal, BB-8!\"",
        "courseB_starWars_prog2_instruction": "Get all the metal.",
        "courseB_starWars_prog2_2018_instruction": "Get all the metal.",
        "courseB_starWars_prog3_instruction": "Get all the scrap metal",
        "courseB_starWars_prog3_2018_instruction": "Get all the scrap metal",
        "courseB_starWars_prog4_instruction": "Get all the scrap metal",
        "courseB_starWars_prog4_2018_instruction": "Get all the scrap metal",
        "courseB_starWars_prog5_instruction": "Get the scrap metal",
        "courseB_starWars_prog5_2018_instruction": "Get the scrap metal",
        "courseB_starWars_prog6_instruction": "Get all the scrap metal",
        "courseB_starWars_prog6_2018_instruction": "Get all the scrap metal",
        "courseB_starWars_prog7_instruction": "Go get it!",
        "courseB_starWars_prog7_2018_instruction": "Go get it!",
        "courseB_starWars_prog8_instruction": "**Challenge:** Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog8_2018_instruction": "**Challenge:** Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog9_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseB_starWars_prog9_2018_instruction": "Help BB-8 gather the glowing scrap metal",
        "courseC_PlayLab_events1_instruction": "Make Jorge the Dog (actor 1) say \"Hi there.\"",
        "courseC_PlayLab_events1_2018_instruction": "Make Jorge the Dog (actor 1) say \"Hi there.\"",
        "courseC_PlayLab_events2_instruction": "Can you make Jorge the Dog (actor 1) say something, then have Olive the Cat (actor 2) say something afterward?",
        "courseC_PlayLab_events2_2018_instruction": "Can you make Jorge the Dog (actor 1) say something, then have Olive the Cat (actor 2) say something afterward?",
        "courseC_PlayLab_events3_instruction": "Can you write a program to make Jorge (actor 1) move toward Olive the Cat?",
        "courseC_PlayLab_events3_2018_instruction": "Can you write a program to make Jorge (actor 1) move toward Olive the Cat?",
        "courseC_PlayLab_events4_instruction": "Can you write a program that makes Jorge (actor 1) move to Olive the Cat, and have Olive say \"Hi there.\" when Jorge reaches her?",
        "courseC_PlayLab_events4_2018_instruction": "Can you write a program that makes Jorge (actor 1) move to Olive the Cat, and have Olive say \"Hi there.\" when Jorge reaches her?",
        "courseC_PlayLab_events5_instruction": "Can you write a program to make Octavia the Octopus say \"What's new?\" when she is clicked?",
        "courseC_PlayLab_events5_2018_instruction": "Can you write a program to make Octavia the Octopus say \"What's new?\" when she is clicked?",
        "courseC_PlayLab_events6_instruction": "Now, write a program to make Waddles the Penguin move around using the up / down / left / right keys to hit all of the targets!",
        "courseC_PlayLab_events6_2018_instruction": "Now, write a program to make Waddles the Penguin move around using the up / down / left / right keys to hit all of the targets!",
        "courseC_PlayLab_events7_instruction": "The `repeat forever` block allows you to run code over and over forever.  Use this block to move Chomp the Dino (actor 2) up and down by 400 pixels forever.",
        "courseC_PlayLab_events7_2018_instruction": "The `repeat forever` block allows you to run code over and over forever.  Use this block to move Chomp the Dino (actor 2) up and down by 400 pixels forever.",
        "courseC_PlayLab_events8_instruction": "Can you have Waddles (actor 1) play a \"hit\" sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game to make that happen.",
        "courseC_PlayLab_events8_2018_instruction": "Can you have Waddles (actor 1) play a \"hit\" sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game to make that happen.",
        "courseC_PlayLab_events9_instruction": "Can you add a block to score a point when Waddles the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game and move Waddles with the arrows until you score!",
        "courseC_PlayLab_events9_2018_instruction": "Can you add a block to score a point when Waddles the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game and move Waddles with the arrows until you score!",
        "courseC_PlayLab_eventsA_instruction": "Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.\n\nPlay the game and move Waddles with the arrows until you score.",
        "courseC_PlayLab_eventsA_2018_instruction": "Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.\n\nPlay the game and move Waddles with the arrows until you score.",
        "courseC_PlayLab_eventsFP_instruction": "Create your own story. When you're done, click \"Finish\" to share with friends. See story ideas in the hints.",
        "courseC_PlayLab_eventsFP_2018_instruction": "Create your own story. When you're done, click \"Finish\" to share with friends. See story ideas in the hints.",
        "courseC_PlayLab_events_challenge1_instruction": "Use a new block to make Waddles automatically move back to the start when he runs into the Dinosaur and when he scores a point. \nPlay the game and move Waddles with the arrows until you score enough points.",
        "courseC_PlayLab_events_challenge1_2018_instruction": "Use a new block to make Waddles automatically move back to the start when he runs into the Dinosaur and when he scores a point. \nPlay the game and move Waddles with the arrows until you score enough points.",
        "courseC_PlayLab_events_challenge1_xy_blocks_instruction": "Here is a new block that is somewhat complicated. Use it to move Waddles back to the start when he runs into the Dinosaur and when he scores a point. This will make your game more challenging and fun!\n\nPlay the game and move Waddles with the arrows until you score enough points.",
        "courseC_artist_loop1_instruction": "Let's add some pizazz!",
        "courseC_artist_loop1_2018_instruction": "Let's add some pizazz with a `set pattern` block.",
        "courseC_artist_loops1_instruction": "*\"Zombie.  Draw!\"*\n\nThe zombie wants to draw a line from where he is to the garden of sunflowers.  Can you help him?  \n*(The garden is 250 pixels away)*  ",
        "courseC_artist_loops1a_instruction": "Get the artist to the center of the play area, then draw a bird using a sticker. ",
        "courseC_artist_loops1a_2018_instruction": "Get the artist to the center of the play area, then draw a bird using a sticker. ",
        "courseC_artist_loops2_instruction": "Now that the zombie knows his way, help him dig holes along the path to plant more flowers!",
        "courseC_artist_loops2a_instruction": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
        "courseC_artist_loops2a_2018_instruction": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
        "courseC_artist_loops3_instruction": "Excellent!  Now that the flowers have sprouted, help the zombie place a friend every 50 pixels to guard over them until they are grown.",
        "courseC_artist_loops3a_instruction": "Now add a bat!",
        "courseC_artist_loops3a_2018_instruction": "Now add a bat!",
        "courseC_artist_loops4_instruction": "The zombie has found an empty farm!  Can you help him bring it to life by stamping animal stickers every 100 pixels around the border?",
        "courseC_artist_loops4a_instruction": "Try jumping forward by 75 pixels.",
        "courseC_artist_loops4a_2018_instruction": "Try jumping forward by 75 pixels.",
        "courseC_artist_loops5_instruction": "Great!  Now it's time to make a fence inside to keep the animals out.   \n\n",
        "courseC_artist_loops5a_instruction": "Try new stickers!",
        "courseC_artist_loops5a_2018_instruction": "Try new stickers!",
        "courseC_artist_loops5b_instruction": "Try adding lines!",
        "courseC_artist_loops5b_2018_instruction": "Try adding lines!",
        "courseC_artist_loops6_instruction": "What should the zombie put inside of the garden?  \n\n\n",
        "courseC_artist_loops6a_instruction": "Add another sticker!",
        "courseC_artist_loops6a_2018_instruction": "Add another sticker!",
        "courseC_artist_loops7a_instruction": "Play with the loops and angles.",
        "courseC_artist_loops7a_2018_instruction": "Play with the loops and angles.",
        "courseC_artist_loops8a_instruction": "Now try something on your own!",
        "courseC_artist_loops8a_2018_instruction": "Now try something on your own!",
        "courseC_artist_loopsPre1a_instruction": "Time to spin that line around!",
        "courseC_artist_loopsPre1a_2018_instruction": "Time to spin that line around!",
        "courseC_artist_loopsPrePre1a_instruction": "Get the artist to the center of the play area, then draw a line. ",
        "courseC_artist_loopsPrePre1a_2018_instruction": "Get the artist to the center of the play area, then draw a line. ",
        "courseC_artist_loopsTemplate_instruction": "Excellent!  Now that the flowers have sprouted, help the zombie place a friend every 50 pixels to guard over them until they are grown.",
        "courseC_artist_loopsTemplateA_instruction": "Get the artist to the center of the play area, then draw a bird using a sticker. ",
        "courseC_artist_loopsTemplateA_2018_instruction": "Get the artist to the center of the play area, then draw a bird using a sticker. ",
        "courseC_artist_prog1_instruction": "Play with the blocks in the toolbox to see what they do!",
        "courseC_artist_prog1_2018_instruction": "Play with the blocks in the toolbox to see what they do!",
        "courseC_artist_prog2_instruction": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
        "courseC_artist_prog2_2018_instruction": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
        "courseC_artist_prog3_instruction": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "courseC_artist_prog3_2018_instruction": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "courseC_artist_prog4_instruction": "Finish Starla's rocket so she can chase her pet.",
        "courseC_artist_prog4_2018_instruction": "Finish Starla's rocket so she can chase her pet.",
        "courseC_artist_prog5_instruction": "Finish this tag by drawing a rectangle around the outside.\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "courseC_artist_prog5_2018_instruction": "Finish this tag by drawing a rectangle around the outside.\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "courseC_artist_prog6_instruction": "Draw this diamond with 200 pixel sides.",
        "courseC_artist_prog6_2018_instruction": "Draw this diamond with 200 pixel sides.",
        "courseC_artist_prog7_instruction": "**Challenge:** This tag is a special one!  Can you figure out how to draw the outline?",
        "courseC_artist_prog7_2018_instruction": "**Challenge:** This tag is a special one!  Can you figure out how to draw the outline?",
        "courseC_artist_prog8_instruction": "One more tag.  This is a triangle for Pi.\n(Each side is 150 pixels)",
        "courseC_artist_prog8_2018_instruction": "One more tag.  This is a triangle for Pi.\n(Each side is 150 pixels)",
        "courseC_artist_prog_challenge1-doghouse_instruction": "Let's build a dog house for Jorge!",
        "courseC_artist_prog_challenge1_instruction": "Draw rooms for each of the animals. ",
        "courseC_artist_prog_challenge1_2018_instruction": "Draw rooms for each of the animals. ",
        "courseC_artist_prog_challenge2_instruction": "*Help me paint the yellow lines on this road!*",
        "courseC_artist_prog_challenge2a_instruction": "*\"Help me paint the yellow lines on this road!\"*",
        "courseC_artist_prog_challenge2a_2018_instruction": "*\"Help me paint the yellow lines on this road!\"*",
        "courseC_collector_loops_challenge2_instruction": "Get at least **5** pieces of treasure!",
        "courseC_collector_loops_challenge2_2018_instruction": "Get at least **5** pieces of treasure!",
        "courseC_collector_prog1_instruction": "Play around with the blocks to see if you can help Laurel collect some treasure.",
        "courseC_collector_prog1_2018_instruction": "Play around with the blocks to see if you can help Laurel collect some treasure.",
        "courseC_collector_prog2_instruction": "Move Laurel to the treasure, then use `collect` to pick it up.",
        "courseC_collector_prog2_2018_instruction": "Move Laurel to the treasure, then use `collect` to pick it up.",
        "courseC_collector_prog3_instruction": "Order these blocks to collect the treasure and solve the puzzle.",
        "courseC_collector_prog3_2018_instruction": "Order these blocks to collect the treasure and solve the puzzle.",
        "courseC_collector_prog4_instruction": "Put these blocks in order to collect all of the treasure and solve the puzzle.",
        "courseC_collector_prog4_2018_instruction": "Put these blocks in order to collect all of the treasure and solve the puzzle.",
        "courseC_collector_prog5_instruction": "These blocks are in the wrong order. Can you fix them?",
        "courseC_collector_prog5_2018_instruction": "These blocks are in the wrong order. Can you fix them?",
        "courseC_collector_prog6_instruction": "Reorder the blocks to collect all of the treasure.",
        "courseC_collector_prog6_2018_instruction": "Reorder the blocks to collect all of the treasure.",
        "courseC_collector_prog7_instruction": "Use blocks from the toolbox to collect all of the treasure.",
        "courseC_collector_prog7_2018_instruction": "Use blocks from the toolbox to collect all of the treasure.",
        "courseC_collector_prog8_instruction": "*\"Keep up the good work! Help me collect all of the treasure.\"*",
        "courseC_collector_prog8_2018_instruction": "*\"Keep up the good work! Help me collect all of the treasure.\"*",
        "courseC_collector_prog9_instruction": "*\"Let's get all of the treasure!\"*",
        "courseC_collector_prog9_2018_instruction": "*\"Let's get all of the treasure!\"*",
        "courseC_collector_progA_instruction": "Help Laurel collect all of the treasure.",
        "courseC_collector_progB_instruction": "Collect as many coins as you can to finish the stage!",
        "courseC_collector_prog_challenge1_instruction": "Look carefully! Can you collect all **10** pieces of treasure?",
        "courseC_collector_prog_challenge1_2018_instruction": "Look carefully! Can you collect all **10** pieces of treasure?",
        "courseC_collector_prog_challenge2_instruction": "Collect at least **10** pieces of treasure to finish this challenge!",
        "courseC_collector_prog_challenge2_2018_instruction": "Collect at least **10** pieces of treasure to finish this challenge!",
        "courseC_flappy_embed_events_instruction": "Here's an example of a game that you're about to create yourself! Play through it one or two times to get an idea of what you are about to make.",
        "courseC_flappy_events1_instruction": "Attach the `flap normal amount` block to the `when click` event, then press \"Run\".    Click or tap on the play space to move Flappy to the target.",
        "courseC_flappy_events10_instruction": "Create your own Flappy game! ",
        "courseC_flappy_events10_2018_instruction": "Create your own Flappy game! ",
        "courseC_flappy_events1_2018_instruction": "Attach the `flap normal amount` block to the `when click` event, then press \"Run\".    Click or tap on the play space to move Flappy to the target.",
        "courseC_flappy_events2_instruction": "Try adding a block that sets the level speed when the \"Run\" button is pressed.  Play the game and flap to the target to continue.",
        "courseC_flappy_events2_2018_instruction": "Try adding a block that sets the level speed when the \"Run\" button is pressed.  Play the game and flap to the target to continue.",
        "courseC_flappy_events3_instruction": "Attach the `end game` block to the `when hit the ground` event.   Play the game and crash the bird into the ground to continue.",
        "courseC_flappy_events3_2018_instruction": "Attach the `end game` block to the `when hit the ground` event.   Play the game and crash the bird into the ground to continue.",
        "courseC_flappy_events4_instruction": "Attach a block to the `when hit an obstacle` event so that the game ends when Flappy crashes into the first set of pipes.",
        "courseC_flappy_events4_2018_instruction": "Attach a block to the `when hit an obstacle` event so that the game ends when Flappy crashes into the first set of pipes.",
        "courseC_flappy_events5_instruction": "Add a block to the `when pass an obstacle` event, then press \"Run\" to score a point by flying Flappy through the first set of pipes.",
        "courseC_flappy_events5_2018_instruction": "Add a block to the `when pass an obstacle` event, then press \"Run\" to score a point by flying Flappy through the first set of pipes.",
        "courseC_flappy_events6_instruction": "See if you can still score a point after making Flappy flap either a smaller or larger amount each time you click.",
        "courseC_flappy_events6_2018_instruction": "See if you can still score a point after making Flappy flap either a smaller or larger amount each time you click.",
        "courseC_flappy_events7_instruction": "Next, try changing the scene by attaching a block to the `when run` event.",
        "courseC_flappy_events7_2018_instruction": "Next, try changing the scene by attaching a block to the `when run` event.",
        "courseC_flappy_events8_instruction": "Try setting a **random** scene when other events happen...for example, when passing an obstacle.",
        "courseC_flappy_events8_2018_instruction": "Try setting a **random** scene when other events happen...for example, when passing an obstacle.",
        "courseC_flappy_events9_instruction": "To mix things up, instead of ending the game when Flappy hits an obstacle, try setting the score back to 0.",
        "courseC_flappy_events9_2018_instruction": "To mix things up, instead of ending the game when Flappy hits an obstacle, try setting the score back to 0.",
        "courseC_harvester_loops1_instruction": "Use loops to pick all of the pumpkins.",
        "courseC_harvester_loops10_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops10_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops11_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops11_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops1_2018_instruction": "Use loops to pick all of the pumpkins.",
        "courseC_harvester_loops2_instruction": "Can you combine two different loops to move toward the pumpkins, then collect them all?",
        "courseC_harvester_loops2_2018_instruction": "Can you combine two different loops to move toward the pumpkins, then collect them all?",
        "courseC_harvester_loops3_instruction": "Collect all of the pumpkins.",
        "courseC_harvester_loops3_2018_instruction": "Collect all of the pumpkins.",
        "courseC_harvester_loops4_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops4_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops5_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops5_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops6_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops6_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops7_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops7_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops8_instruction": "**Challenge:** Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops8_2018_instruction": "**Challenge:** Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops9_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops9_2018_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops_challenge1_instruction": "Collect all of the corn.",
        "courseC_harvester_loops_challenge1a_instruction": "Collect all of the corn.",
        "courseC_harvester_loops_challenge1a_2018_instruction": "Collect all of the corn.",
        "courseC_harvester_loops_challenge2_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "courseC_harvester_loops_challenge2_2018_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "courseC_harvester_loops_forVid_instruction": "Collect all of the corn, all of the lettuce, and all of the pumpkins.",
        "courseC_maze_debugging1_instruction": "Fix the code to help get Scrat get to the acorn.",
        "courseC_maze_debugging10_instruction": "Debug this level by rearranging and changing blocks to get me to the pig!",
        "courseC_maze_debugging1_2018_instruction": "Fix the code to help get Scrat get to the acorn.",
        "courseC_maze_debugging2_instruction": "Use your debugging skills to get Scrat to the acorn.",
        "courseC_maze_debugging2_2018_instruction": "Use your debugging skills to get Scrat to the acorn.",
        "courseC_maze_debugging3_instruction": "Remove blocks to get Scrat to the acorn!",
        "courseC_maze_debugging3_2018_instruction": "Remove blocks to get Scrat to the acorn!",
        "courseC_maze_debugging4_instruction": "Someone has their directions mixed up! Can you help?",
        "courseC_maze_debugging4_2018_instruction": "Someone has their directions mixed up! Can you help?",
        "courseC_maze_debugging5_instruction": "Debug this level by rearranging and changing blocks.",
        "courseC_maze_debugging5_2018_instruction": "Debug this level by rearranging and changing blocks.",
        "courseC_maze_debugging6_instruction": "Figure out what is wrong and get Scrat to the acorn.",
        "courseC_maze_debugging6_2018_instruction": "Figure out what is wrong and get Scrat to the acorn.",
        "courseC_maze_debugging7_instruction": "**Challenge:** Debug this level by rearranging, adding, and deleting blocks.",
        "courseC_maze_debugging7_2018_instruction": "**Challenge:** Debug this level by rearranging, adding, and deleting blocks.",
        "courseC_maze_debugging8_instruction": "Debug this level to get Scrat to the acorn.",
        "courseC_maze_debugging9_instruction": "Debug this level to get Scrat to the acorn.",
        "courseC_maze_debugging9_2018_instruction": "Debug this level to get Scrat to the acorn.",
        "courseC_maze_debugging_challenge1_instruction": "Help Scrat decide which way to turn to get to the acorn.",
        "courseC_maze_debugging_challenge1_2018_instruction": "Help Scrat decide which way to turn to get to the acorn.",
        "courseC_maze_debugging_challenge2_instruction": "Help Scrat reach the acorn with only four `turn` commands.",
        "courseC_maze_debugging_challenge2_2018_instruction": "Help Scrat reach the acorn with only four `turn` commands.",
        "courseC_maze_loops1_instruction": "Can you get the bird to the pig?",
        "courseC_maze_loops10_instruction": "You are doing great! Keep it up!",
        "courseC_maze_loops11_instruction": "You are almost there! This time, choose any path you like!",
        "courseC_maze_loops2_instruction": "Can you get the bird to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "courseC_maze_loops3_instruction": "Solve this puzzle by creating a loop!",
        "courseC_maze_loops4_instruction": "In this puzzle, two `repeat` loops will help you get the bird to the pig with the fewest number of blocks!",
        "courseC_maze_loops5_instruction": "*\"Get me to the pig as quickly as possible!\"*",
        "courseC_maze_loops6_instruction": "Loops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_maze_loops7_instruction": "Use what you learned in other puzzles!",
        "courseC_maze_loops8_instruction": "Challenge: Combine ideas from the last few puzzles to complete this level.",
        "courseC_maze_loops9_instruction": "You are doing great! Keep it up!",
        "courseC_maze_loops_challenge1_instruction": "Now Scrat wants to try using loops to find his acorn! ",
        "courseC_maze_loops_challenge1a_instruction": "Now Scrat wants to try using loops to find his acorn! ",
        "courseC_maze_loops_challenge1a_2018_instruction": "Now Scrat wants to try using loops to find his acorn! ",
        "courseC_maze_loops_challenge2_instruction": "Let's hunt for treasure - using loops! Help the collector by debugging this code. Get all of the treasure!",
        "courseC_maze_programming1_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseC_maze_programming1_2018_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseC_maze_programming2_instruction": "Drag an extra `move forward` block out of the toolbox to finish your code.",
        "courseC_maze_programming2_2018_instruction": "Drag an extra `move forward` block out of the toolbox to finish your code.",
        "courseC_maze_programming3_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseC_maze_programming3_2018_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseC_maze_programming4_instruction": "Avoid TNT or feathers will fly!",
        "courseC_maze_programming4_2018_instruction": "Avoid TNT or feathers will fly!",
        "courseC_maze_programming5_instruction": "Avoid the TNT.",
        "courseC_maze_programming5_2018_instruction": "Avoid the TNT.",
        "courseC_maze_programming6_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseC_maze_programming6_2018_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseC_maze_programming7_instruction": "**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
        "courseC_maze_programming7_2018_instruction": "**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
        "courseC_maze_programming8_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_2018_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_predict1_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_predict1_2018_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming9_instruction": "*\"Now, help me sneak up on the pig any way you want to!\"*",
        "courseC_maze_programming9_2018_instruction": "*\"Now, help me sneak up on the pig any way you want to!\"*",
        "courseC_maze_programming_challenge1_instruction": "The pig is hiding, and the goal is to find it. ",
        "courseC_maze_programming_challenge1_2018_instruction": "The pig is hiding, and the goal is to find it. ",
        "courseC_maze_programming_challenge2_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "courseC_maze_programming_challenge2_2018_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "courseC_playLab_embedded_instruction": "Here's a game for you to play! To win, use your arrow keys to get the penguin to run into the octopus.\n\nOnce you are done, you will learn how to make this game!",
        "courseC_puppy_loops10_instruction": "You are doing great! Keep it up!",
        "courseC_puppy_loops11_instruction": "You are almost there! This time, choose any path you like!",
        "courseC_puppy_loops8_instruction": "Challenge: Combine ideas from the last few puzzles to complete this level.",
        "courseC_puppy_loops8courseC_maze_loops8_instruction": "Challenge: Combine ideas from the last few puzzles to complete this level.",
        "courseC_puppy_loops9_instruction": "You are doing great! Keep it up!",
        "courseC_starWars_loops1_instruction": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
        "courseC_starWars_loops10_instruction": "You are doing great! Keep it up!",
        "courseC_starWars_loops10_2018_instruction": "You are doing great! Keep it up!",
        "courseC_starWars_loops10_predict2_instruction": "You are doing great! Keep it up!",
        "courseC_starWars_loops10_predict2_2018_instruction": "You are doing great! Keep it up!",
        "courseC_starWars_loops11_instruction": "You are almost there! This time, choose any path you like!",
        "courseC_starWars_loops11_2018_instruction": "You are almost there! This time, choose any path you like!",
        "courseC_starWars_loops1_2018_instruction": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
        "courseC_starWars_loops1_predict1_instruction": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
        "courseC_starWars_loops1_predict1_2018_instruction": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
        "courseC_starWars_loops2_instruction": "To get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
        "courseC_starWars_loops2_2018_instruction": "To get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
        "courseC_starWars_loops4_instruction": "In this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
        "courseC_starWars_loops4_2018_instruction": "In this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
        "courseC_starWars_loops5_instruction": "Get BB-8 to pick up all the scrap metal as quickly as possible!",
        "courseC_starWars_loops5_2018_instruction": "Get BB-8 to pick up all the scrap metal as quickly as possible!",
        "courseC_starWars_loops6_instruction": "Loops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_starWars_loops6_2018_instruction": "Loops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_starWars_loops7_instruction": "Can you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
        "courseC_starWars_loops7_2018_instruction": "Can you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
        "courseC_starWars_loops9_instruction": "Use what you have learned to pick up all of the scrap metal!",
        "courseC_starWars_loops9_2018_instruction": "Use what you have learned to pick up all of the scrap metal!",
        "courseD_Frozen_nested1_instruction": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
        "courseD_Frozen_nested2_instruction": "Now take your shape and draw two or three in a row!",
        "courseD_Frozen_nested3_instruction": "Let's spin that line of shapes around!",
        "courseD_Frozen_nested4_instruction": "Time to layer those shapes!",
        "courseD_Frozen_nested5_instruction": "Play with the snowflakes!",
        "courseD_Frozen_nested6_instruction": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
        "courseD_Frozen_nested7_instruction": "Now, turn around 180 degrees and draw the stair pattern again!",
        "courseD_Frozen_nested8_instruction": "Spin that shape around 5 or 6 times in a circle.",
        "courseD_Frozen_nested9_instruction": "Try playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "courseD_artist_1_2018_instruction": "Draw a hexagon with **50** pixel long sides.  \n",
        "courseD_artist_2_2018_instruction": "Now, turn right by **60** degrees, then draw a straight line **150** pixels long and jump back to the center of the play area.\n",
        "courseD_artist_3_2018_instruction": "Nest all of the code inside of another `repeat` loop and run it a total of **6** times. ",
        "courseD_artist_4_2018_instruction": "Add a tiny shape to the end of your line!",
        "courseD_artist_5_2018_instruction": "Play with the snowflakes!",
        "courseD_artist_6_2018_instruction": "Try changing your long 150 pixel line into 6 short lines of **25** pixels, with little turns at the end.\n",
        "courseD_artist_7_2018_instruction": "Now, turn around 180 degrees and draw the stair pattern again!",
        "courseD_artist_8_2018_instruction": "Spin that shape around 5 or 6 times in a circle.",
        "courseD_artist_9_2018_instruction": "Try playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "courseD_artist_binary1_instruction": "Use the blocks below to have the artist draw \"01010101\" in binary in the first row.",
        "courseD_artist_binary1_2018_instruction": "Use the blocks below to have the artist draw \"01010101\" in binary in the first row.",
        "courseD_artist_binary2_instruction": "Run this code to see how the artist uses binary to draw this pattern.",
        "courseD_artist_binary2_2018_instruction": "Run this code to see how the artist uses binary to draw this pattern.",
        "courseD_artist_binary3_instruction": "Which of the binary strings below could you loop 8 times to draw this image?",
        "courseD_artist_binary3_2018_instruction": "Which of the binary strings below could you loop 8 times to draw this image?",
        "courseD_artist_binary4_instruction": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
        "courseD_artist_binary4_2018_instruction": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
        "courseD_artist_binary5_instruction": "Each binary string below represents one row of this picture. \n\nCan you rearrange them so it draws a smiley face instead of a frown?",
        "courseD_artist_binary5_2018_instruction": "Each binary string below represents one row of this picture. \n\nCan you rearrange them so it draws a smiley face instead of a frown?",
        "courseD_artist_binary6_instruction": "Which 6 digit binary string, repeated 11 times, will draw this image?",
        "courseD_artist_binary6_2018_instruction": "Which 6 digit binary string, repeated 11 times, will draw this image?",
        "courseD_artist_binary7_instruction": "What is the shortest binary string that you can repeat to draw this image?",
        "courseD_artist_binary7_2018_instruction": "What is the shortest binary string that you can repeat to draw this image?",
        "courseD_artist_binary8_instruction": "Finish the code to create this drawing.",
        "courseD_artist_binary8_2018_instruction": "Finish the code to create this drawing.",
        "courseD_artist_binary8_predict1_instruction": "Finish the code to create this drawing.",
        "courseD_artist_binary8_predict1_2018_instruction": "Finish the code to create this drawing.",
        "courseD_artist_binaryFP_instruction": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits!",
        "courseD_artist_binaryFP8_instruction": "**Free Play:**  Draw whatever you want in binary! ",
        "courseD_artist_binaryFP_2018_instruction": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits!",
        "courseD_artist_binary_challenge0_instruction": "Try using nested loops to complete this drawing.",
        "courseD_artist_binary_challenge1_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "courseD_artist_binary_challenge1_2018_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "courseD_artist_binary_challenge2_instruction": "Are you persistent enough to restore this logo back to normal?",
        "courseD_artist_binary_challenge2_2018_instruction": "Are you persistent enough to restore this logo back to normal?",
        "courseD_artist_binary_challenge3_instruction": "Are you persistent enough to restore this logo back to normal?",
        "courseD_artist_embed_frozen_instruction": "Press Run to see a snowflake design!",
        "courseD_artist_embed_frozen2_instruction": "Press Run to see a snowflake design.",
        "courseD_artist_functions10_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.",
        "courseD_artist_functions2_instruction": "This time, use the `draw a square` function to create the glasses. \n",
        "courseD_artist_functions3_instruction": "You can make this drawing by adding a repeat block.",
        "courseD_artist_functions4_instruction": "Now that you can draw a star, try drawing four stars!",
        "courseD_artist_functions5_instruction": "Draw only those three stars to finish this puzzle.",
        "courseD_artist_functions6_instruction": "Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseD_artist_functions7_instruction": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
        "courseD_artist_functions8_instruction": "Challenge: Create as many functions as you think you need to make this drawing of 50 pixel squares.",
        "courseD_artist_functions9_instruction": "Create this image using only the blocks provided.",
        "courseD_artist_nestedLoops1_instruction": "Draw a triangle to kickstart this stage.  \n(Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)",
        "courseD_artist_nestedLoops10_instruction": "Take the squares from before, but this time only make 7 of them, and lay them out in a row.",
        "courseD_artist_nestedLoops10_2018_instruction": "Take the squares from before, but this time only make 7 of them, and lay them out in a row.",
        "courseD_artist_nestedLoops1_2018_instruction": "Draw a triangle to kickstart this stage.  \n(Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)",
        "courseD_artist_nestedLoops1a_instruction": "Now loop the triangle 6 times. ",
        "courseD_artist_nestedLoops1a_2018_instruction": "Now loop the triangle 6 times. ",
        "courseD_artist_nestedLoops2_instruction": "This time, complete the puzzle with the fewest number of blocks possible.",
        "courseD_artist_nestedLoops2_2018_instruction": "This time, complete the puzzle with the fewest number of blocks possible.",
        "courseD_artist_nestedLoops3_instruction": "Use your new skills to quickly draw the last row of windows for this building.\n\nThe windows are 20 pixel squares, each 20 pixels apart.",
        "courseD_artist_nestedLoops3_2018_instruction": "Use your new skills to quickly draw the last row of windows for this building.\n\nThe windows are 20 pixel squares, each 20 pixels apart.",
        "courseD_artist_nestedLoops4_instruction": "Great!  Do the same thing with these circles.",
        "courseD_artist_nestedLoops4_2018_instruction": "Great!  Do the same thing with these circles.",
        "courseD_artist_nestedLoops5_instruction": "What happens if you also turn 90 degrees between circles?",
        "courseD_artist_nestedLoops5_2018_instruction": "What happens if you also turn 90 degrees between circles?",
        "courseD_artist_nestedLoops6_instruction": "Edit blocks within your existing code to make this image.",
        "courseD_artist_nestedLoops7_instruction": "Use what you've learned to make this drawing.",
        "courseD_artist_nestedLoops7_2018_instruction": "Use what you've learned to make this drawing.",
        "courseD_artist_nestedLoops8_instruction": "Using what you have learned in the last couple of puzzles, build this image from the beginning.",
        "courseD_artist_nestedLoops8_2018_instruction": "Using what you have learned in the last couple of puzzles, build this image from the beginning.",
        "courseD_artist_nestedLoops9_instruction": "**Challenge:** Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoops9_2018_instruction": "**Challenge:** Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoops9_predict1_instruction": "**Challenge:** Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoops9_predict1_2018_instruction": "**Challenge:** Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoopsFP_instruction": "Now it's your turn.  Take the skills you have learned and make something that you love!",
        "courseD_artist_nestedLoopsFP_2018_instruction": "Now it's your turn.  Take the skills you have learned and make something that you love!",
        "courseD_artist_nestedLoopsPre1_instruction": "Create a triangle to kickstart this stage.",
        "courseD_artist_nestedLoops_challenge1_instruction": "Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoops_challenge1_2018_instruction": "Can you figure out how to make a picture like this?",
        "courseD_artist_nestedLoops_challenge2_instruction": "Fix the code to make this picture!",
        "courseD_artist_nestedLoops_challenge2_2018_instruction": "Fix the code to make this picture!",
        "courseD_artist_project1_instruction": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
        "courseD_artist_project1_2018_instruction": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
        "courseD_artist_project1a_instruction": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
        "courseD_artist_project1a_2018_instruction": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
        "courseD_artist_project2_instruction": "Now take your shape and draw two or three in a row!",
        "courseD_artist_project2_2018_instruction": "Now take your shape and draw two or three in a row!",
        "courseD_artist_project2a_instruction": "Now, turn around 180 degrees and draw the stair pattern again!",
        "courseD_artist_project2a_2018_instruction": "Now, turn around 180 degrees and draw the stair pattern again!",
        "courseD_artist_project3_instruction": "Let's spin that line of shapes around!",
        "courseD_artist_project3_2018_instruction": "Let's spin that line of shapes around!",
        "courseD_artist_project3a_instruction": "Spin that shape around 5 or 6 times in a circle.",
        "courseD_artist_project3a_2018_instruction": "Spin that shape around 5 or 6 times in a circle.",
        "courseD_artist_project4_instruction": "Time to layer those shapes!",
        "courseD_artist_project4_2018_instruction": "Time to layer those shapes!",
        "courseD_artist_project4a_instruction": "Try playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "courseD_artist_project4a_2018_instruction": "Try playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "courseD_artist_project5_instruction": "Play with the snowflakes!",
        "courseD_artist_project5_2018_instruction": "Play with the snowflakes!",
        "courseD_artist_project_embedded_instruction": "Here's what you will soon be making!",
        "courseD_artist_ramp11_instruction": "Now make a square using Artist!",
        "courseD_artist_ramp12_instruction": "Use what you've learned to draw this triangle inside of a square.",
        "courseD_bee_conditionals1_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals10_instruction": "Collect all of the nectar and make all of the honey.",
        "courseD_bee_conditionals10_2018_instruction": "Collect all of the nectar and make all of the honey.",
        "courseD_bee_conditionals1_predict1_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals1_predict1_2018_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals2_instruction": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  ",
        "courseD_bee_conditionals2_2018_instruction": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  ",
        "courseD_bee_conditionals2_test_instruction": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  ",
        "courseD_bee_conditionals3_instruction": "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "courseD_bee_conditionals3_2018_instruction": "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "courseD_bee_conditionals4_instruction": "Get all of the nectar using as few blocks as possible.",
        "courseD_bee_conditionals4_2018_instruction": "Get all of the nectar using as few blocks as possible.",
        "courseD_bee_conditionals5_instruction": "Collect all of the nectar using as few blocks as possible",
        "courseD_bee_conditionals5_2018_instruction": "Collect all of the nectar using as few blocks as possible",
        "courseD_bee_conditionals6_instruction": "Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
        "courseD_bee_conditionals6_2018_instruction": "Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
        "courseD_bee_conditionals7_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseD_bee_conditionals7_2018_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseD_bee_conditionals7_predict2_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseD_bee_conditionals7_predict2_2018_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseD_bee_conditionals8_instruction": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "courseD_bee_conditionals8_2018_instruction": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "courseD_bee_conditionals9_instruction": "Collect all of the nectar or make all the honey.",
        "courseD_bee_conditionals9_2018_instruction": "Collect all of the nectar or make all the honey.",
        "courseD_bee_conditionals_challenge1_instruction": "Collect all the nectar and make all the honey.",
        "courseD_bee_conditionals_challenge1_2018_instruction": "Collect all the nectar and make all the honey.",
        "courseD_bee_conditionals_challenge2_instruction": "Collect all of the nectar and make all the honey.",
        "courseD_bee_conditionals_challenge2_2018_instruction": "Collect all of the nectar and make all the honey.",
        "courseD_bee_conditionals_challenge3_instruction": "Collect all of the nectar or make all the honey.",
        "courseD_bee_debugging1_instruction": "Fix the error(s) to collect all of the nectar.",
        "courseD_bee_debugging2_instruction": "Fix the error(s) to collect all of the nectar.",
        "courseD_bee_debugging3_instruction": "Fix the error(s) to collect all of the nectar and make all of the honey.",
        "courseD_bee_debugging4_instruction": "Fix the error(s) to make all of the honey.",
        "courseD_bee_debugging5_instruction": "Challenge: All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_bee_debugging6_instruction": "Challenge:  Fix the errors to collect all of the nectar and make all of the honey.",
        "courseD_bee_debugging9_instruction": "Help the bee fix the code to get all the nectar.",
        "courseD_bee_debugging_challenge1_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "courseD_bee_debugging_challenge1_2018_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "courseD_bee_debugging_challenge1a_instruction": "Watch how the bee gets the nectar. Use the same pattern to help the bee make all the honey.",
        "courseD_bee_debugging_challenge2_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of honey?",
        "courseD_bee_nestedLoops1_instruction": "Help the bee collect all of the nectar.",
        "courseD_bee_nestedLoops1_2018_instruction": "Help the bee collect all of the nectar.",
        "courseD_bee_nestedLoops1a_instruction": "Help the bee collect all of the nectar.",
        "courseD_bee_nestedLoops1a_2018_instruction": "Help the bee collect all of the nectar.",
        "courseD_bee_nestedLoops2_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_2018_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_predict1_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_predict1_2018_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops3_instruction": "Collect all of the nectar from each flower.",
        "courseD_bee_nestedLoops5_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops6_instruction": "Make all of the nectar.",
        "courseD_bee_nestedLoops6_2018_instruction": "Get the zombie to the sunflower using only the blocks available.",
        "courseD_bee_nestedLoops7_instruction": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
        "courseD_bee_nestedLoops7_2018_instruction": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
        "courseD_bee_nestedLoops8_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops8_2018_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops9_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_2018_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_predict2_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_predict2_2018_instruction": "Make all of the honey.",
        "courseD_bee_nested_loops_challenge1_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_bee_nested_loops_challenge2_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_bounce_embed_endgame_instruction": "Use the left and right arrows to move the paddle. See how many points you can get before your opponent scores twice!",
        "courseD_bounce_embedded_instruction": "Write Instructions Here",
        "courseD_bounce_events1_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the flag.",
        "courseD_bounce_events10_instruction": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice.",
        "courseD_bounce_events10s_instruction": "Attach the `score point` block to the `when ball in goal` event and the `score opponent point` block to the `when ball misses hand` event to make a game. ",
        "courseD_bounce_events10s_2018_instruction": "Attach the `score point` block to the `when ball in goal` event and the `score opponent point` block to the `when ball misses hand` event to make a game. ",
        "courseD_bounce_events11_instruction": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.",
        "courseD_bounce_events11s_instruction": "Attach the `throw new ball` block in all of the places where the game needs a new ball. ",
        "courseD_bounce_events11s_2018_instruction": "Attach the `throw new ball` block in all of the places where the game needs a new ball. ",
        "courseD_bounce_events12_instruction": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.",
        "courseD_bounce_events12s_instruction": "Make this game your own. You can change all the visuals and the rules. When you're done, click \"Finish\" to let friends try your game on their phones.",
        "courseD_bounce_events12s_2018_instruction": "Make this game your own. You can change all the visuals and the rules. When you're done, click \"Finish\" to let friends try your game on their phones.",
        "courseD_bounce_events1s_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the net.",
        "courseD_bounce_events1s_2018_instruction": "Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the net.",
        "courseD_bounce_events2_instruction": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets.",
        "courseD_bounce_events2s_instruction": "Now, attach a block to the `when right event` so that the hand can get to both baskets.",
        "courseD_bounce_events2s_2018_instruction": "Now, attach a block to the `when right event` so that the hand can get to both baskets.",
        "courseD_bounce_events3_instruction": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top.",
        "courseD_bounce_events3s_instruction": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top.",
        "courseD_bounce_events4_instruction": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.",
        "courseD_bounce_events4s_instruction": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.",
        "courseD_bounce_events5_instruction": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target.",
        "courseD_bounce_events5s_instruction": "Attach a block to the `when ball hits hand` event to ensure the ball reaches the basket.",
        "courseD_bounce_events5s_2018_instruction": "Attach a block to the `when ball hits hand` event to ensure the ball reaches the basket.",
        "courseD_bounce_events6_instruction": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
        "courseD_bounce_events6s_instruction": "Attach code to make the ball bounce when it hits the wall so you can solve this puzzle.",
        "courseD_bounce_events6s_2018_instruction": "Attach code to make the ball bounce when it hits the wall so you can solve this puzzle.",
        "courseD_bounce_events7_instruction": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target.",
        "courseD_bounce_events7s_instruction": "Attach sound blocks to make the net swish when you hit the basket and have the whistle blow when the ball misses your hand. Bounce the ball until it hits the finish target.",
        "courseD_bounce_events7s_2018_instruction": "Attach sound blocks to make the net swish when you hit the basket and have the whistle blow when the ball misses your hand. Bounce the ball until it hits the finish target.",
        "courseD_collector_debugging1_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging1_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging1a_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging1a_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2a_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2a_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3a_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3a_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4a_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4a_2018_instruction": "Fix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging5_instruction": "All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5_2018_instruction": "All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5a_instruction": "All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5a_2018_instruction": "All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging6_instruction": "Challenge: Use your debugging skills to fix the errors and collect all of the treasure.",
        "courseD_collector_debugging6_2018_instruction": "Challenge: Use your debugging skills to fix the errors and collect all of the treasure.",
        "courseD_collector_debugging6a_instruction": "Challenge: Use the code in the work area to get at least **6** pieces of treasure!",
        "courseD_collector_debugging6a_2018_instruction": "Challenge: Use the code in the work area to get at least **6** pieces of treasure!",
        "courseD_collector_debugging7_instruction": "Challenge: All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging_challenge2_instruction": "Are you an expert at nested loops? Use what you have learned so far to collect all the treasure!",
        "courseD_collector_debugging_challenge2_2018_instruction": "Are you an expert at nested loops? Use what you have learned so far to collect all the treasure!",
        "courseD_collector_nested_loops_challenge2_instruction": "Help the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "courseD_collector_nested_loops_challenge2_2018_instruction": "Help the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "courseD_collector_nested_loops_challenge2a_instruction": "Help Laurel collect at least two piles of treasure.",
        "courseD_collector_ramp10_instruction": "Help Laurel collect all of the treasure.",
        "courseD_collector_ramp8_instruction": "Help Laurel collect all of the treasure.",
        "courseD_collector_ramp9_instruction": "Help Laurel collect all of the treasure.",
        "courseD_collector_until_challenge1_instruction": "Are you an expert of nested loops? Use what you have learned so far to collect all of the treasure!",
        "courseD_debugging_1_instruction": "Fix the error(s) to collect all of the nectar.",
        "courseD_debugging_2_instruction": "Fix the error(s) to collect all of the nectar.",
        "courseD_debugging_3_instruction": "Fix the error(s) to collect all of the nectar and make all of the honey.",
        "courseD_debugging_4_instruction": "Fix the error(s) to make all of the honey.",
        "courseD_debugging_5_instruction": "Challenge: All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_debugging_6_instruction": "Challenge:  Fix the errors to collect all of the nectar and make all of the honey.",
        "courseD_farmer_condLoops1_instruction": "Use conditionals to make sure that you pick corn only when it's there.",
        "courseD_farmer_condLoops1_2018_instruction": "Use conditionals to make sure that you pick corn only when it's there.",
        "courseD_farmer_condLoops2_instruction": "Help the harvester collect both corn and lettuce from the field.",
        "courseD_farmer_condLoops2_2018_instruction": "Help the harvester collect both corn and lettuce from the field.",
        "courseD_farmer_condLoops3_instruction": "*\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"*",
        "courseD_farmer_condLoops3_2018_instruction": "*\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"*",
        "courseD_farmer_condLoops4_instruction": "Help the harvester pick all of the lettuce in each cluster before moving on to the next bunch.",
        "courseD_farmer_condLoops4_2018_instruction": "Help the harvester pick all of the lettuce in each cluster before moving on to the next bunch.",
        "courseD_farmer_condLoops4a_instruction": "Help the farmer pick all of the lettuce in each cluster before moving on to the next bunch.",
        "courseD_farmer_condLoops5_instruction": "Collect all of the corn and lettuce, then grab the pumpkin at the end.",
        "courseD_farmer_condLoops5_2018_instruction": "Collect all of the corn and lettuce, then grab the pumpkin at the end.",
        "courseD_farmer_condLoops6_instruction": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "courseD_farmer_condLoops6_2018_instruction": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "courseD_farmer_condLoops7_instruction": "Challenge: Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops7_2018_instruction": "Challenge: Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops8_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops8_2018_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_2018_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_predict1_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_predict1_2018_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops_challenge1_instruction": "Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
        "courseD_farmer_condLoops_challenge1_2018_instruction": "Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
        "courseD_farmer_condLoops_challenge2_instruction": "Collect everything to complete the level.",
        "courseD_farmer_condLoops_challenge2_2018_instruction": "Collect everything to complete the level.",
        "courseD_farmer_condLoops_challenge2_clone_instruction": "Collect everything to complete the level.",
        "courseD_farmer_conditionals1_instruction": "Move to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_conditionals10_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_conditionals2_instruction": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
        "courseD_farmer_conditionals3_instruction": "Use as few blocks as possible to solve this puzzle.",
        "courseD_farmer_conditionals4_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_conditionals5_instruction": "Help me remove all of this dirt. ",
        "courseD_farmer_conditionals6_instruction": "Use the `while` loop to easily fill all of the holes.",
        "courseD_farmer_conditionals7_instruction": "Fill in the hole at the end of each of these paths.",
        "courseD_farmer_conditionals8_instruction": "Challenge: Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_conditionals9_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_until_challenge2_instruction": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
        "courseD_farmer_until_challenge2_2018_instruction": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
        "courseD_farmer_while1_instruction": "Move to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_while10_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while10_2018_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while10_predict2_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while10_predict2_2018_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while1_2018_instruction": "Move to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_while2_instruction": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
        "courseD_farmer_while2_2018_instruction": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
        "courseD_farmer_while3_instruction": "Use as few blocks as possible to solve this puzzle.",
        "courseD_farmer_while3_2018_instruction": "Use as few blocks as possible to solve this puzzle.",
        "courseD_farmer_while4_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_2018_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_predict1_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_predict1_2018_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while5_instruction": "Help me remove all of this dirt. ",
        "courseD_farmer_while5_2018_instruction": "Help me remove all of this dirt. ",
        "courseD_farmer_while6_instruction": "Use the `while` loop to easily fill all of the holes.",
        "courseD_farmer_while6_2018_instruction": "Use the `while` loop to easily fill all of the holes.",
        "courseD_farmer_while7_instruction": "Fill in the hole at the end of each of these paths.",
        "courseD_farmer_while7_2018_instruction": "Fill in the hole at the end of each of these paths.",
        "courseD_farmer_while8_instruction": "Challenge: Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_while8_2018_instruction": "Challenge: Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_while9_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while9_2018_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "courseD_farmer_while_challenge1_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge1_2018_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge2_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge2_2018_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_harvester_nested_loops_challenge1-broken_instruction": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
        "courseD_harvester_nested_loops_challenge1_instruction": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
        "courseD_harvester_nested_loops_challenge1_2018_instruction": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
        "courseD_iceage_loops1_instruction": "Help Scrat across the ice to get to the acorn!",
        "courseD_iceage_loops10_instruction": "Help Scrat get all the way over to the acorn!",
        "courseD_iceage_loops11_instruction": "Help Scrat get to the acorn!",
        "courseD_iceage_loops12_instruction": "Get to the acorn any way you can!",
        "courseD_iceage_loops2_instruction": "Use a `turn left` block to get to the acorn!",
        "courseD_iceage_loops3_instruction": "Can you get to the acorn with just one `move forward` block?",
        "courseD_iceage_loops4_instruction": "Add one more block to get Scrat all the way to the acorn!",
        "courseD_iceage_loops6_instruction": "Can you add a loop to get to the acorn?",
        "courseD_iceage_loops7_instruction": "Scrat really wants that acorn! ",
        "courseD_iceage_loops8_instruction": "Can you fix this code? ",
        "courseD_iceage_loops9_instruction": "The acorn is so far away! Can you use loops to help Scrat get there?",
        "courseD_maze_loops_challenge1_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_maze_nestedLoops3_instruction": "Get the zombie to the sunflower using the fewest number of blocks possible.",
        "courseD_maze_nestedLoops3_2018_instruction": "Get the zombie to the sunflower using the fewest number of blocks possible.",
        "courseD_maze_nestedLoops4_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "courseD_maze_nestedLoops4_2018_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "courseD_maze_nestedLoops5_instruction": "Get the zombie to the sunflower using the fewest number of blocks possible!",
        "courseD_maze_nestedLoops5_2018_instruction": "Get the zombie to the sunflower using the fewest number of blocks possible!",
        "courseD_maze_nestedLoops6_instruction": "Get the zombie to the sunflower using only the blocks available.",
        "courseD_maze_nestedLoops6_2018_instruction": "Get the zombie to the sunflower using only the blocks available.",
        "courseD_maze_ramp1_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_maze_ramp1_2018_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_maze_ramp2_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_maze_ramp2_2018_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_maze_ramp3_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseD_maze_ramp3_2018_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseD_maze_ramp4_instruction": "Avoid TNT or feathers will fly!",
        "courseD_maze_ramp4_2018_instruction": "Avoid TNT or feathers will fly!",
        "courseD_maze_ramp5_instruction": "Avoid the TNT.",
        "courseD_maze_ramp5_2018_instruction": "Avoid the TNT.",
        "courseD_maze_ramp5a_instruction": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
        "courseD_maze_ramp5a_2018_instruction": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
        "courseD_maze_ramp5b_instruction": "Navigate this maze to help the bird find the pig!",
        "courseD_maze_ramp5b_2018_instruction": "Navigate this maze to help the bird find the pig!",
        "courseD_maze_ramp5c_instruction": "Help the bird get to the pig.",
        "courseD_maze_ramp5c_2018_instruction": "Help the bird get to the pig.",
        "courseD_maze_ramp5d_instruction": "Get the bird to the pig.",
        "courseD_maze_ramp5d_2018_instruction": "Get the bird to the pig.",
        "courseD_maze_ramp6_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseD_maze_ramp6a_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseD_maze_ramp7_instruction": "Get the bird to the pig!",
        "courseD_maze_until1_instruction": "Get the angry bird to the pig.",
        "courseD_maze_until10_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_2018_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_predict2_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_predict2_2018_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until1_2018_instruction": "Get the angry bird to the pig.",
        "courseD_maze_until2_instruction": "Now, use the `repeat until` loop to do the same thing without specifying how many times to move forward and turn.",
        "courseD_maze_until3_instruction": "Get the bird to the pig.",
        "courseD_maze_until3_2018_instruction": "Get the bird to the pig.",
        "courseD_maze_until4_instruction": "Can you get the zombie to the sunflower using only the blocks that are available?",
        "courseD_maze_until4_2018_instruction": "Can you get the zombie to the sunflower using only the blocks that are available?",
        "courseD_maze_until5_instruction": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
        "courseD_maze_until5_2018_instruction": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
        "courseD_maze_until6_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until6_2018_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until7_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until7_2018_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until8_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until8_2018_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until9_instruction": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
        "courseD_maze_until9_2018_instruction": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
        "courseD_maze_until_challenge_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge1-delete-this-copy_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge1_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge1_2018_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge2_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_pixelation_instruction": "Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.",
        "courseD_playLab_cond1_instruction": "Get Pegleg to the flags to solve this puzzle.",
        "courseD_playLab_cond1_2018_instruction": "Get Pegleg to the flags to solve this puzzle.",
        "courseD_playLab_cond2_instruction": "Give Pegleg a point every time he makes it to the dragon. ",
        "courseD_playLab_cond2_2018_instruction": "Give Pegleg a point every time he makes it to the dragon. ",
        "courseD_playLab_cond3_instruction": "Make the dragon change between random emotions every second.  ",
        "courseD_playLab_cond3_2018_instruction": "Make the dragon change between random emotions every second.  ",
        "courseD_playLab_cond3a_instruction": "Make it so when Pegleg gets to the dragon, he gets 2 points if the dragon is happy and 1 otherwise.",
        "courseD_playLab_cond3a_2018_instruction": "Make it so when Pegleg gets to the dragon, he gets 2 points if the dragon is happy and 1 otherwise.",
        "courseD_playLab_cond4_instruction": "Add some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
        "courseD_playLab_cond4_2018_instruction": "Add some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
        "courseD_playLab_cond5_instruction": "Add a `repeat forever` loop that continuously checks if the score is greater than 5, then ends the game as a win when it is.",
        "courseD_playLab_cond5_2018_instruction": "Add a `repeat forever` loop that continuously checks if the score is greater than 5, then ends the game as a win when it is.",
        "courseD_playLab_cond6a_instruction": "If the pirate (actor 1) is in the safe zone, wait one second, then deduct a point as long as he stays beneath the octopus line.",
        "courseD_playLab_cond6a_2018_instruction": "If the pirate (actor 1) is in the safe zone, wait one second, then deduct a point as long as he stays beneath the octopus line.",
        "courseD_playLab_cond6cloneForTest_instruction": "Testing",
        "courseD_playLab_condFP_instruction": "Now, build your own game to show off to your friends!",
        "courseD_playLab_condFP_2018_instruction": "Now, build your own game to show off to your friends!",
        "courseD_playLab_condFP_a_instruction": "Now, build your own game to show off to your friends!",
        "courseD_playLab_condForVideo_instruction": "Now, build your own game to show off to your friends!",
        "courseD_playLab_embedded_instruction": "Move Pegleg the Pirate with the arrow keys. Get to the dragon to score points, but avoid the ninja! Standing below the line of octopuses will make the ninja stop chasing you, but beware! The longer you stay there, the more points you lose. \n\nGet 5 points to win!",
        "courseD_scrat_ramp1_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_scrat_ramp1_2018_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_scrat_ramp2_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_scrat_ramp2_2018_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_scrat_ramp3_instruction": "There is one extra block that is going to cause Scrat to crash. Throw it away by dragging it back to the toolbox.",
        "courseD_scrat_ramp3_2018_instruction": "There is one extra block that is going to cause Scrat to crash. Throw it away by dragging it back to the toolbox.",
        "courseD_scrat_ramp4_instruction": "Avoid the cracked ice to keep Scrat safe!",
        "courseD_scrat_ramp4_2018_instruction": "Avoid the cracked ice to keep Scrat safe!",
        "courseD_scrat_ramp5_instruction": "Avoid the cracked ice.",
        "courseD_scrat_ramp5_2018_instruction": "Avoid the cracked ice.",
        "courseD_scrat_ramp6_instruction": "Help Scrat get to the acorn using a loop!",
        "courseD_scrat_ramp6_2018_instruction": "Help Scrat get to the acorn using a loop!",
        "courseD_scrat_ramp7_instruction": "Help Scrat get to the acorn!",
        "courseD_scrat_ramp7_2018_instruction": "Help Scrat get to the acorn!",
        "courseD_scrat_ramp8_instruction": "Use what you've learned to get Scrat to the acorn!",
        "courseD_scrat_ramp8_2018_instruction": "Use what you've learned to get Scrat to the acorn!",
        "courseE_artist_concept1_instruction": "Recreate this image. ",
        "courseE_artist_concept1_2018_instruction": "Recreate this image. ",
        "courseE_artist_concept4_instruction": "Recreate this drawing.",
        "courseE_artist_concept4_2018_instruction": "Recreate this drawing.",
        "courseE_artist_concept_challenge1_instruction": "Help the artist draw this unique shape. ",
        "courseE_artist_concept_challenge1_2018_instruction": "Help the artist draw this unique shape. ",
        "courseE_artist_concept_challenge2_instruction": "Create five pinwheel designs using the code below.",
        "courseE_artist_concept_challenge2_2018_instruction": "Create five pinwheel designs using the code below.",
        "courseE_artist_embed_functions8_instruction": "Look at this level carefully. What kind of functions do you see a program needing in order to create a design like this. You'll soon make this on your own, so come back here if you need help.",
        "courseE_artist_functions1_instruction": "Help the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.",
        "courseE_artist_functions10_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.",
        "courseE_artist_functions10_2018_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.",
        "courseE_artist_functions1_2018_instruction": "Help the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.",
        "courseE_artist_functions2_instruction": "This time, use the `draw a square` function to create the glasses. ",
        "courseE_artist_functions2_2018_instruction": "Use the `draw a square` function to create the glasses. ",
        "courseE_artist_functions3_instruction": "You can make this drawing by adding a repeat block.",
        "courseE_artist_functions3_2018_instruction": "Build a function that will create this star.",
        "courseE_artist_functions4_instruction": "Now that you can draw a star, try drawing four stars!",
        "courseE_artist_functions4_2018_instruction": "Now that you can draw a star, try drawing four stars!",
        "courseE_artist_functions5_instruction": "Draw only those three stars to finish this puzzle.",
        "courseE_artist_functions5_2018_instruction": "Draw only those three stars to finish this puzzle.",
        "courseE_artist_functions6_instruction": "Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseE_artist_functions6_2018_instruction": "Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseE_artist_functions7_instruction": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
        "courseE_artist_functions7_2018_instruction": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
        "courseE_artist_functions8_instruction": "Challenge: Create as many functions as you think you need to make this drawing of 50 pixel squares.",
        "courseE_artist_functions8_2018_instruction": "Use everything you've learned so far to recreate this design.",
        "courseE_artist_functions8a_2018_instruction": "Create a function for a single square.",
        "courseE_artist_functions8b_2018_instruction": "Call the `draw a square` function from inside your `draw a line of squares` function to make this even easier!",
        "courseE_artist_functions8c_2018_instruction": "Add one more function that creates this stack of staggered squares.",
        "courseE_artist_functions9_instruction": "Create this image using only the blocks provided.",
        "courseE_artist_functions9_2018_instruction": "**Challenge:** Create this image using only the blocks provided.",
        "courseE_artist_functionsProj_2018_instruction": "**Inspiration:** Use what you've learned to make whatever you want!",
        "courseE_artist_functions_challenge_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge1_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge1_2018_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge2_instruction": "Try this code to see how it works, then make the program your own!",
        "courseE_artist_functions_challenge2_2018_instruction": "Try this code to see how it works, then make the program your own!",
        "courseE_artist_ramp10_instruction": "Now, drag the code for the last triangle into a new loop to spin it around and make a snowflake!",
        "courseE_artist_ramp11_instruction": "Now make a square using Artist!",
        "courseE_artist_ramp12_instruction": "Use what you've learned to draw this triangle inside of a square.",
        "courseE_artist_ramp8_instruction": "Now make a square using Artist!",
        "courseE_artist_ramp8_2_instruction": "Now make a square using Artist!",
        "courseE_artist_ramp8_2018_instruction": "Now make a square using Artist!",
        "courseE_artist_ramp8_2_2018_instruction": "Now make a square using Artist!",
        "courseE_artist_ramp9_instruction": "Use what you've learned to draw this triangle.",
        "courseE_artist_ramp9_2_instruction": "Use what you've learned to draw this triangle.",
        "courseE_artist_ramp9_2018_instruction": "Use what you've learned to draw this triangle.",
        "courseE_artist_ramp9_2_2018_instruction": "Use what you've learned to draw this triangle.",
        "courseE_bee_concept1_instruction": "Collect all of the nectar from each flower.",
        "courseE_bee_concept1_2018_instruction": "Collect all of the nectar from each flower.",
        "courseE_bee_concept2_instruction": "Help the bee make all of the honey. ",
        "courseE_bee_concept2_2018_instruction": "Help the bee make all of the honey. ",
        "courseE_bee_concept3_instruction": "Collect all of the nectar using  as few blocks as possible.",
        "courseE_bee_concept3_2018_instruction": "Collect all of the nectar using  as few blocks as possible.",
        "courseE_bee_concept4_instruction": "Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?",
        "courseE_bee_concept4_2018_instruction": "Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?",
        "courseE_bee_concept5_instruction": "Help the bee collect the nectar from the flowers?",
        "courseE_bee_concept5_2018_instruction": "Help the bee collect the nectar from the flowers?",
        "courseE_bee_functions1_instruction": "Collect all the nectar from each flower.",
        "courseE_bee_functions10_instruction": "Solve this puzzle by creating a function that helps the bee go get all of the honey before returning back to the main path.",
        "courseE_bee_functions10_2018_instruction": "Solve this puzzle by creating a function that helps the bee go get all of the honey before returning back to the main path.",
        "courseE_bee_functions1_2018_instruction": "Collect all the nectar from each flower.",
        "courseE_bee_functions2_instruction": "Use the `get 2 nectar` function to collect the nectar from each flower.",
        "courseE_bee_functions2_2018_instruction": "Use the `get 2 nectar` function to collect the nectar from each flower.",
        "courseE_bee_functions3_instruction": "Build the `get 5` function to use in this puzzle.",
        "courseE_bee_functions3_2018_instruction": "Build the `get 5` function to use in this puzzle.",
        "courseE_bee_functions4_instruction": "Use the `move and get nectar` function to collect all of the nectar.",
        "courseE_bee_functions4_2018_instruction": "Use the `move and get nectar` function to collect all of the nectar.",
        "courseE_bee_functions5_instruction": "Now write the function to collect nectar from the flowers.",
        "courseE_bee_functions5_2018_instruction": "Now write the function to collect nectar from the flowers.",
        "courseE_bee_functions6_instruction": "Create a function and call it to collect nectar at each flower and make honey at each honeycomb.",
        "courseE_bee_functions6_2018_instruction": "Create a function and call it to collect nectar at each flower and make honey at each honeycomb.",
        "courseE_bee_functions6test_instruction": "Create a function and call it to collect nectar at each flower and make honey at each honeycomb.",
        "courseE_bee_functions7_instruction": "Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path. Collect all the nectar and make all the honey!",
        "courseE_bee_functions7_2018_instruction": "Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path. Collect all the nectar and make all the honey!",
        "courseE_bee_functions8_instruction": "Create a function that collects all of the nectar from each flower.",
        "courseE_bee_functions8_2018_instruction": "Create a function that collects all of the nectar from each flower.",
        "courseE_bee_functions9_instruction": "Create a function to collect all of the nectar from each flower.",
        "courseE_bee_functions9_2018_instruction": "Create a function to collect all of the nectar from each flower.",
        "courseE_bee_functions9b_instruction": "Now try it in Bee!",
        "courseE_bee_functions_challenge1_instruction": "You are on your own for this challenge. This could \"bee\" harder than it looks!",
        "courseE_bee_functions_challenge1_2018_instruction": "You are on your own for this challenge. This could \"bee\" harder than it looks!",
        "courseE_bee_functions_challenge2_instruction": "You are on your own for this challenge. Sweet!",
        "courseE_bee_functions_challenge2_2018_instruction": "You are on your own for this challenge. Sweet!",
        "courseE_bee_ramp14_instruction": "Help the bee follow the path to gather all of the honey and all of the nectar.",
        "courseE_bee_ramp14_2018_instruction": "Help the bee follow the path to gather all of the honey and all of the nectar.",
        "courseE_bee_ramp17_instruction": "Use what you have learned to solve this puzzle.",
        "courseE_collector_ramp10_instruction": "Help Laurel collect all of the treasure.",
        "courseE_collector_ramp8_instruction": "Help Laurel collect all of the treasure.",
        "courseE_collector_ramp9_instruction": "Help Laurel collect all of the treasure.",
        "courseE_farmer_concept1_instruction": "Can you write a program that fills these holes until the ground is even?",
        "courseE_farmer_concept1_2018_instruction": "Can you write a program that fills these holes until the ground is even?",
        "courseE_farmer_concept2_instruction": "Collect all of the pumpkins.",
        "courseE_farmer_concept2_2018_instruction": "Collect all of the pumpkins.",
        "courseE_farmer_concept3_instruction": "Fill in the hole at the end of each of these paths.",
        "courseE_farmer_concept3_2018_instruction": "Fill in the hole at the end of each of these paths.",
        "courseE_farmer_concept4_instruction": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
        "courseE_farmer_elseif_test_instruction": "Fill in the hole at the end of each of these paths.",
        "courseE_farmer_functions1_instruction": "Help the harvester get to the pumpkin and pick it.",
        "courseE_farmer_functions10_instruction": "No one knows what these sprouts will become.  Use `if` statements to write the code to check and harvest each one.   ",
        "courseE_farmer_functions10a1_2018_instruction": "Use everything that you've learned so far to solve this puzzle!",
        "courseE_farmer_functions10b_instruction": "Use your new function twice to solve this puzzle.",
        "courseE_farmer_functions10b_2018_instruction": "Use your new function twice to solve this puzzle.",
        "courseE_farmer_functions13_2018_instruction": "Solve this puzzle in 23 blocks or less.",
        "courseE_farmer_functions1_2018_instruction": "Help the harvester get to the pumpkin and pick it.",
        "courseE_farmer_functions1a_instruction": "Now help the harvester pick the corn, lettuce, **and** pumpkin.",
        "courseE_farmer_functions1a_2018_instruction": "Help the harvester pick all of the corn, then the pumpkin.",
        "courseE_farmer_functions2_instruction": "Now, there will be a different number of pumpkins each time you run the program.   \n\nUse the `while` block to pick only as many pumpkins as you need.",
        "courseE_farmer_functions2a_instruction": "We're going to check lots of squares for crops in the next few puzzles.  Let's move everything into a function to make it easier.",
        "courseE_farmer_functions2aALT_instruction": "We're going to check lots of squares for crops in the next few puzzles.  Let's move everything into a function to make it easier.",
        "courseE_farmer_functions2b_instruction": "Help the harvester pick the corn and pumpkins.",
        "courseE_farmer_functions2b_2018_instruction": "Help the harvester pick the corn and pumpkins.",
        "courseE_farmer_functions2ba_instruction": "Help the farmer pick the corn and pumpkins using the `corn and pumpkin` function.",
        "courseE_farmer_functions2ba_2018_instruction": "Help the farmer pick the corn and pumpkins using the `corn and pumpkin` function.",
        "courseE_farmer_functions3_instruction": "What happens when the paths to the pumpkins are all different lengths?   \n\nGet them all with as few blocks as possible.",
        "courseE_farmer_functions3b_instruction": "Now help the farmer pick the corn, lettuce, **and** pumpkin.",
        "courseE_farmer_functions3c_instruction": "Now, fill-in the function yourself by pulling the blocks from the code and dropping them into the **function definition**.",
        "courseE_farmer_functions3c1_2018_instruction": "This function calls other functions!",
        "courseE_farmer_functions3c_2018_instruction": "Try on a longer path.",
        "courseE_farmer_functions4_instruction": "Great!  Now you have code that will work to get pumpkins from any size path.\n\nLet's drag that code into a function so we can use it in lots of ways...but first use it to solve this puzzle again.",
        "courseE_farmer_functions4b_instruction": "Use your new function to solve this puzzle.",
        "courseE_farmer_functions4b_2018_instruction": "Use your new function to solve this puzzle.",
        "courseE_farmer_functions5_instruction": "How can you change your program to get this function to work for each of these paths?",
        "courseE_farmer_functions5a_instruction": "How can you change your program to get this function to work for each of these paths?",
        "courseE_farmer_functions5b_instruction": "The crops are now growing in clusters.  Add some new `while` loops to your function to make sure you get all of the produce.",
        "courseE_farmer_functions5c_instruction": "Your function will come in handy here.",
        "courseE_farmer_functions5c_2018_instruction": "Your function will come in handy here.",
        "courseE_farmer_functions6_instruction": "*\"Lettuce try something new!\"*\n\nHere's some code to collect all of the lettuce.  Move it into a function so we can use it later.",
        "courseE_farmer_functions6b_instruction": "Pick all of the produce.",
        "courseE_farmer_functions6c_instruction": "What do you need to add this program to check whether a sprout is corn or lettuce?",
        "courseE_farmer_functions6c_2018_instruction": "What do you need to add this program to check whether a sprout is corn or lettuce?",
        "courseE_farmer_functions7_instruction": "Use your functions to solve this puzzle.",
        "courseE_farmer_functions7a1_2018_instruction": "Create a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
        "courseE_farmer_functions7b_instruction": "Help the harvester find her way down this confusing path and to the pumpkin by turning left at the corn and right at the lettuce.",
        "courseE_farmer_functions7b_2018_instruction": "Help the harvester find her way down this confusing path and to the pumpkin by turning left at the corn and right at the lettuce.",
        "courseE_farmer_functions8_instruction": "**Challenge:**  Solve this puzzle with as few blocks as possible.",
        "courseE_farmer_functions8a1_2018_instruction": "Is your function still helpful?",
        "courseE_farmer_functions8b_instruction": "**Challenge:** Collect all of the pumpkins using the method from the last puzzle. ",
        "courseE_farmer_functions8b_2018_instruction": "**Challenge:** Collect all of the pumpkins using the method from the last puzzle. ",
        "courseE_farmer_functions9_instruction": "Use conditionals to simplify your program.",
        "courseE_farmer_functions9a1_2018_instruction": "Is your function still helpful?",
        "courseE_farmer_functions9b_instruction": "Can you figure out the pattern that you need to solve this puzzle?",
        "courseE_farmer_functions9b_2018_instruction": "Can you figure out the pattern that you need to solve this puzzle?",
        "courseE_farmer_functions9b_clone_instruction": "Can you figure out the pattern that you need to solve this puzzle?",
        "courseE_farmer_predict1_instruction": "Pick all of the lettuce (only while there is some to pick.)",
        "courseE_farmer_predict1_2018_instruction": "Pick all of the lettuce (only while there is some to pick.)",
        "courseE_farmer_ramp11_instruction": "This puzzle also uses nested loops.  Can you figure out how?",
        "courseE_farmer_ramp11a_instruction": "While there is a pile, remove dirt.",
        "courseE_farmer_ramp11a_2018_instruction": "While there is a pile, remove dirt.",
        "courseE_farmer_ramp11b_instruction": "While there is a pile, remove dirt.",
        "courseE_farmer_ramp11b_2018_instruction": "While there is a pile, remove dirt.",
        "courseE_farmer_ramp12_instruction": "Now use nested loops to solve this puzzle.",
        "courseE_farmer_ramp12_2018_instruction": "Now use nested loops to solve this puzzle.",
        "courseE_farmer_ramp12_forswap_instruction": "Now use nested loops to solve this puzzle.",
        "courseE_farmer_ramp12_forswap_2018_instruction": "Now use nested loops to solve this puzzle.",
        "courseE_farmer_ramp12a_instruction": "Help the farmer correctly travel the path to gather all of the lettuce.",
        "courseE_farmer_ramp12a_2018_instruction": "Help the farmer correctly travel the path to gather all of the lettuce.",
        "courseE_farmer_ramp12b_instruction": "While there is lettuce, pick lettuce!",
        "courseE_farmer_ramp12b_2018_instruction": "While there is lettuce, pick lettuce!",
        "courseE_farmer_ramp12c_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12c_2018_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12d_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12d_2018_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12e_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12e_2018_instruction": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
        "courseE_farmer_ramp12f_instruction": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12f_2018_instruction": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12g_instruction": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12g_2018_instruction": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp13_instruction": "Pick corn if there is corn, and pick lettuce while there is lettuce.",
        "courseE_farmer_ramp13_2018_instruction": "Pick corn if there is corn, and pick lettuce while there is lettuce.",
        "courseE_farmer_ramp15_instruction": "Solve this puzzle using only the blocks available.",
        "courseE_farmer_ramp15_2018_instruction": "Solve this puzzle using only the blocks available.",
        "courseE_farmer_ramp16_instruction": "**Challenge:** Solve this puzzle with the fewest number of blocks.",
        "courseE_maze_predict1_instruction": "This code includes a new block. What do you think would happen if you press the \"Run\" block?",
        "courseE_maze_predict1_2018_instruction": "This code includes a new block. What do you think would happen if you press the \"Run\" block?",
        "courseE_maze_ramp1_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseE_maze_ramp13_instruction": "Time for one last puzzle to pull it all together!",
        "courseE_maze_ramp1_2018_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseE_maze_ramp2_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseE_maze_ramp2_2018_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseE_maze_ramp3_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseE_maze_ramp3_2018_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "courseE_maze_ramp4_instruction": "Avoid TNT or feathers will fly!",
        "courseE_maze_ramp4_2018_instruction": "Avoid TNT or feathers will fly!",
        "courseE_maze_ramp5_instruction": "Avoid the TNT.",
        "courseE_maze_ramp5_2018_instruction": "Avoid the TNT.",
        "courseE_maze_ramp6_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseE_maze_ramp6_2018_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseE_maze_ramp7_instruction": "Use what you've learned to get the bird to the pig!",
        "courseE_maze_ramp7_2018_instruction": "Use what you've learned to get the bird to the pig!",
        "courseE_maze_ramp_predict1_instruction": "This code includes a new block. What do you think would happen if you press the \"Run\" block?",
        "courseE_multi_maze_ramp5_instruction": "Avoid the TNT.",
        "courseE_playLab_challenge1_instruction": "Something should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "courseE_playLab_challenge1_2018_instruction": "Something should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "courseE_playLab_embedded_instruction": "This is an example game you can play around with. Move the dog with your arrow keys. When the dog touches one of the cats, he scores a point! Score 5 points to win!",
        "courseE_playLab_exampleProject2_instruction": "Here's all of your code to choose a card - try adding some other fun features!",
        "courseE_playLab_scaffold1_instruction": "Choose a background and map, and pick an actor to be your game's hero.",
        "courseE_playLab_scaffold1_2018_instruction": "Choose a background and map, and pick an actor to be your game's hero.",
        "courseE_playLab_scaffold2_instruction": "Use event handlers and actions to make your hero move.",
        "courseE_playLab_scaffold2_2018_instruction": "Use event handlers and actions to make your hero move.",
        "courseE_playLab_scaffold3_instruction": "Add two or more additional actors to your game and make them move.",
        "courseE_playLab_scaffold3_2018_instruction": "Add two or more additional actors to your game and make them move.",
        "courseE_playLab_scaffold4_instruction": "Find some interesting ways to change the score in your game. Get the score to show something other than 0 to continue.",
        "courseE_playLab_scaffold4_2018_instruction": "Find some interesting ways to change the score in your game. Get the score to show something other than 0 to continue.",
        "courseE_playLab_scaffold5_instruction": "Now spend some time making sure the game works the way you want. Include a way to win or lose your game, then play until you meet one of those conditions.",
        "courseE_playLab_scaffold5_2018_instruction": "Now spend some time making sure the game works the way you want. Include a way to win or lose your game, then play until you meet one of those conditions.",
        "courseE_playLab_scaffold6_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "courseE_playLab_scaffold6_2018_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "courseE_playlab_challenge2_instruction": "Can you figure out how this \"Fortune Teller\" app works? Click `MORE` to see your challenges.",
        "courseE_playlab_variables_challenge2_instruction": "Can you figure out how this \"Fortune Teller\" app works? Click `MORE` to see your challenges.",
        "courseE_video_createFunctions_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "courseE_video_createFunctions2_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "courseE_video_createFunctions2_2018_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "courseE_video_createFunctions_2018_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "courseF_IceAge_1_instruction": "Help Sid say \"Hello!\" by dragging the `actor 1 say` block out and connecting it to the bottom of the `when run` event.",
        "courseF_IceAge_10_instruction": "Use the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets hit with them.",
        "courseF_IceAge_11_instruction": "Time to create your own game or story! ",
        "courseF_IceAge_2_instruction": "Help Manny and Sid greet each other by using the the `actor ___ say` block twice.",
        "courseF_IceAge_3_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "courseF_IceAge_4_instruction": "Connect a block to the `when actor touches` event to play a sound when Diego finds Manny.",
        "courseF_IceAge_5_instruction": "Help Granny get some exercise by moving left and right repeatedly.",
        "courseF_IceAge_6_instruction": "Can you help Sid call for his friends when you click on him? ",
        "courseF_IceAge_7_instruction": "Write the code to help Scrat get all of the acorns!",
        "courseF_IceAge_8_instruction": "Can you finish this program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? ",
        "courseF_IceAge_9_instruction": "Change the scene to an icy background and set Sid’s (actor 1) speed to fast.",
        "courseF_IceAge_template_instruction": "Write the code to help Scrat get all of the acorns!",
        "courseF_artist_embed_for7_instruction": "Press Run to see a program in action! This one uses for loops.",
        "courseF_artist_embed_variables9_instruction": "Press Run to see this program in action!",
        "courseF_artist_for1_instruction": "Experiment with the `for` loop and play with the `counter` variable.",
        "courseF_artist_for10_instruction": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
        "courseF_artist_for10_2018_instruction": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
        "courseF_artist_for1_2018_instruction": "Experiment with the `for` loop and play with the `counter` variable.",
        "courseF_artist_for2_instruction": "Create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
        "courseF_artist_for2_2018_instruction": "Create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
        "courseF_artist_for3_instruction": "These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. ",
        "courseF_artist_for3_2018_instruction": "These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. ",
        "courseF_artist_for4_instruction": "These squares start at 15 pixels long. The largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
        "courseF_artist_for4_2018_instruction": "These squares start at 15 pixels long. The largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
        "courseF_artist_for5_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?",
        "courseF_artist_for5_2018_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?",
        "courseF_artist_for6_instruction": "Recreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
        "courseF_artist_for6_2018_instruction": "Recreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
        "courseF_artist_for7_instruction": "Make three small changes to the code from the last level to get this!",
        "courseF_artist_for7_2018_instruction": "Make three small changes to the code from the last level to get this!",
        "courseF_artist_for8_instruction": "Take the angle down to 72 degrees to get a spiraled pentagon.",
        "courseF_artist_for8_2018_instruction": "Take the angle down to 72 degrees to get a spiraled pentagon.",
        "courseF_artist_for9_instruction": "**Inspiration:**  Use the counter inside the `set alpha` block to get this faded center.",
        "courseF_artist_for9_2018_instruction": "**Inspiration:**  Use the counter inside the `set alpha` block to get this faded center.",
        "courseF_artist_for_Template_instruction": "Try using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "courseF_artist_for_Template_2018_instruction": "Try using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "courseF_artist_for_challenge1_instruction": "Can you figure out how to re-create this drawing?",
        "courseF_artist_for_challenge1_2018_instruction": "Can you figure out how to re-create this drawing?",
        "courseF_artist_for_challenge2_instruction": "Can you figure out how to re-create this drawing with a single loop?",
        "courseF_artist_for_challenge2_2018_instruction": "Can you figure out how to re-create this drawing with a single loop?",
        "courseF_artist_fwp1_instruction": "Edit the function 'draw a square' to find bugs.",
        "courseF_artist_fwp1_2018_instruction": "Edit the function 'draw a square' to find bugs.",
        "courseF_artist_fwp2_instruction": "Edit the function to accept a parameter called `length`.",
        "courseF_artist_fwp2_2018_instruction": "Edit the function to accept a parameter called `length`.",
        "courseF_artist_fwp2_predict1_instruction": "Edit the function to accept a parameter called `length`.",
        "courseF_artist_fwp2_predict1_2018_instruction": "Edit the function to accept a parameter called `length`.",
        "courseF_artist_fwp3_instruction": "Create a function called 'draw a square' and use it to outline these four boxes using parameters.",
        "courseF_artist_fwp3_2018_instruction": "Create a function called 'draw a square' and use it to outline these four boxes using parameters.",
        "courseF_artist_fwp4_instruction": "Edit this function to add a parameter for the number of sides in your polygon.",
        "courseF_artist_fwp4_2018_instruction": "Edit this function to add a parameter for the number of sides in your polygon.",
        "courseF_artist_fwp5_instruction": "Use the function from the last puzzle to draw this series of shapes.  ",
        "courseF_artist_fwp5_2018_instruction": "Use the function from the last puzzle to draw this series of shapes.  ",
        "courseF_artist_fwp6_instruction": "Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.",
        "courseF_artist_fwp6_2018_instruction": "Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.",
        "courseF_artist_fwp7_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.",
        "courseF_artist_fwp7_2018_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.",
        "courseF_artist_fwp8_instruction": "Can you figure out how to make this drawing using the function that you just created?",
        "courseF_artist_fwp8_2018_instruction": "Can you figure out how to make this drawing using the function that you just created?",
        "courseF_artist_fwp9_instruction": "Freeplay: Draw something awesome! Play with the pen width to see how different your drawings look!",
        "courseF_artist_fwp9_2018_instruction": "Freeplay: Draw something awesome! Play with the pen width to see how different your drawings look!",
        "courseF_artist_fwp_challenge1_instruction": "Can you figure out how this program works?",
        "courseF_artist_fwp_challenge1_2018_instruction": "Can you figure out how this program works?",
        "courseF_artist_fwp_challenge2_instruction": "Use what you learned in the previous level to draw an image like this.",
        "courseF_artist_fwp_challenge2_2018_instruction": "Use what you learned in the previous level to draw an image like this.",
        "courseF_artist_ramp10_instruction": "Now, drag the code for the last triangle into a new loop to spin it around and make a snowflake!",
        "courseF_artist_ramp10_2018_instruction": "Now, drag the code for the last triangle into a new loop to spin it around and make a snowflake!",
        "courseF_artist_ramp8_instruction": "Now make a square using Artist!",
        "courseF_artist_ramp8_2018_instruction": "Now make a square using Artist!",
        "courseF_artist_ramp9_instruction": "Use what you've learned to draw this triangle.",
        "courseF_artist_ramp9_2018_instruction": "Use what you've learned to draw this triangle.",
        "courseF_artist_variables1_instruction": "Let's draw an equilateral triangle that is exactly 50 pixels long on each side.",
        "courseF_artist_variables10_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
        "courseF_artist_variables10_2018_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
        "courseF_artist_variables2_instruction": "Now draw three of those triangles right next to each other.   ",
        "courseF_artist_variables2_2018_instruction": "Now draw three of those triangles right next to each other.   ",
        "courseF_artist_variables3_instruction": "Move the length of 50 into a variable so we can use it in the next few puzzles.",
        "courseF_artist_variables3_2018_instruction": "Move the length of 50 into a variable so we can use it in the next few puzzles.",
        "courseF_artist_variables4_instruction": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
        "courseF_artist_variables4_2018_instruction": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
        "courseF_artist_variables5_instruction": "Add another set of loops at the end of your code to add three more triangles. This time, move forward and up!",
        "courseF_artist_variables5_2018_instruction": "Add another set of loops at the end of your code to add three more triangles. This time, move forward and up!",
        "courseF_artist_variables6_instruction": "Now make the triangles to be 60 pixels wide, with 60 pixel jumps.  ",
        "courseF_artist_variables6_2018_instruction": "Now make the triangles to be 60 pixels wide, with 60 pixel jumps.  ",
        "courseF_artist_variables6a_instruction": "Build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables6a_2018_instruction": "Build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables7_instruction": "Draw a triangle with 150 pixels sides. ",
        "courseF_artist_variables7_2018_instruction": "Draw a triangle with 150 pixels sides. ",
        "courseF_artist_variables8_instruction": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.",
        "courseF_artist_variables8_2018_instruction": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.",
        "courseF_artist_variables9_instruction": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variables9_2018_instruction": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variablesFP_instruction": "**Freeplay:** Take what you've learned and make your own drawing. ",
        "courseF_artist_variablesFP_2018_instruction": "**Freeplay:** Take what you've learned and make your own drawing. ",
        "courseF_artist_variables_10_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
        "courseF_artist_variables_2_instruction": "Now use another loop to draw three of those triangles right next to each other.   \nYou can nest the code from your last puzzle inside.\n",
        "courseF_artist_variables_5_instruction": "Add another set of loops at the end of your code to add three more triangles. This time, move forward and up!",
        "courseF_artist_variables_6_instruction": "OOPS! We actually need the triangles to be 60 pixels wide, with 60 pixel jumps.  \nAren't you glad you're using a variable?",
        "courseF_artist_variables_6a_instruction": "Build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables_9_instruction": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variables_FP_instruction": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
        "courseF_artist_variables_challenge1_instruction": "Can you create a `length` variable and use it to create this pattern?",
        "courseF_artist_variables_challenge1_2018_instruction": "Can you create a `length` variable and use it to create this pattern?",
        "courseF_artist_variables_challenge1a_instruction": "You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "courseF_artist_variables_challenge2_instruction": "You've now learned everything you need to know to make a pattern like this!",
        "courseF_artist_variables_challenge2_2018_instruction": "You've now learned everything you need to know to make a pattern like this!",
        "courseF_artistembed_variables9_instruction": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
        "courseF_bee_conditionals10_instruction": "Collect all of the nectar and make all of the honey.",
        "courseF_bee_conditionals10_2018_instruction": "Collect all of the nectar and make all of the honey.",
        "courseF_bee_conditionals1_predict1_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseF_bee_conditionals1_predict1_2018_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseF_bee_conditionals2_instruction": "Check underneath each cloud to see if it is hiding a flower before you get nectar.  ",
        "courseF_bee_conditionals2_2018_instruction": "Check underneath each cloud to see if it is hiding a flower before you get nectar.  ",
        "courseF_bee_conditionals3_instruction": "Help the bee collect all of the nectar. ",
        "courseF_bee_conditionals3_2018_instruction": "Help the bee collect all of the nectar. ",
        "courseF_bee_conditionals4_instruction": "Get all of the nectar using as few blocks as possible.",
        "courseF_bee_conditionals4_2018_instruction": "Get all of the nectar using as few blocks as possible.",
        "courseF_bee_conditionals5_instruction": "Collect all of the nectar using as few blocks as possible",
        "courseF_bee_conditionals5_2018_instruction": "Collect all of the nectar using as few blocks as possible",
        "courseF_bee_conditionals7_predict2_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseF_bee_conditionals7_predict2_2018_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseF_bee_conditionals8_instruction": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "courseF_bee_conditionals8_2018_instruction": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "courseF_bee_for1_instruction": "Collect the nectar from each flower using the fewest blocks possible.",
        "courseF_bee_for10_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. ",
        "courseF_bee_for10_2018_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. ",
        "courseF_bee_for11_instruction": "What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "courseF_bee_for11_2018_instruction": "What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "courseF_bee_for1_2018_instruction": "Collect the nectar from each flower using the fewest blocks possible.",
        "courseF_bee_for2_instruction": "Write the code to help the bee collect all of the nectar.",
        "courseF_bee_for2_2018_instruction": "Write the code to help the bee collect all of the nectar.",
        "courseF_bee_for3_instruction": "Try this puzzle using the `for` loop and the `counter` variable to see how much shorter your code becomes.",
        "courseF_bee_for4_instruction": "Help the bee collect all of the nectar.",
        "courseF_bee_for4_2018_instruction": "Help the bee collect all of the nectar.",
        "courseF_bee_for5_instruction": "Use the `counter` variable twice to solve this puzzle.",
        "courseF_bee_for5_2018_instruction": "Use the `counter` variable twice to solve this puzzle.",
        "courseF_bee_for6_instruction": "Try gathering this nectar by counting down from 5 to 1 by 1.",
        "courseF_bee_for6_2018_instruction": "Try gathering this nectar by counting down from 5 to 1 by 1.",
        "courseF_bee_for7_instruction": "Try collecting these flowers using an increment of 2.",
        "courseF_bee_for7_2018_instruction": "Try collecting these flowers using an increment of 2.",
        "courseF_bee_for8_instruction": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
        "courseF_bee_for8_2018_instruction": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
        "courseF_bee_for9_instruction": "Use the `counter` variable to navigate this garden with the fewest number of blocks possible.",
        "courseF_bee_for9_2018_instruction": "Use the `counter` variable to navigate this garden with the fewest number of blocks possible.",
        "courseF_bee_for_challenge1_instruction": "Use this `for loop` to collect all of the nectar. ",
        "courseF_bee_for_challenge1_2018_instruction": "Use this `for loop` to collect all of the nectar. ",
        "courseF_bee_for_challenge2_instruction": "Solve this puzzle using the fewest number of blocks possible.",
        "courseF_bee_for_challenge2_2018_instruction": "Solve this puzzle using the fewest number of blocks possible.",
        "courseF_bee_for_challenge3_instruction": "Solve this puzzle using the fewest number of blocks possible.",
        "courseF_bee_functions2_instruction": "Use the `get only nectar` function to collect the nectar from each flower.",
        "courseF_bee_functions2_2018_instruction": "Use the `get only nectar` function to collect the nectar from each flower.",
        "courseF_bee_functions3_instruction": "Click \"edit\" to put code inside the `only make honey` function, then use it to solve this puzzle.",
        "courseF_bee_functions3_2018_instruction": "Click \"edit\" to put code inside the `only make honey` function, then use it to solve this puzzle.",
        "courseF_bee_functions3a_instruction": "Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.  Use your function to solve the puzzle!",
        "courseF_bee_functions3a_2018_instruction": "Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.  Use your function to solve the puzzle!",
        "courseF_bee_functions4_instruction": "Create a new `move and check` function to collect all of the nectar.",
        "courseF_bee_functions4_2018_instruction": "Create a new `move and check` function to collect all of the nectar.",
        "courseF_bee_functions5_instruction": "Now write the function to collect nectar from the flowers.",
        "courseF_bee_functions5a_instruction": "Use the `move and check` function to collect all of the nectar.",
        "courseF_bee_functions5a_2018_instruction": "Use the `move and check` function to collect all of the nectar.",
        "courseF_bee_functions6_instruction": "Help the bee through the maze by turning left at flowers and right at honeycomb.",
        "courseF_bee_functions6_2018_instruction": "Help the bee through the maze by turning left at flowers and right at honeycomb.",
        "courseF_bee_functions7_instruction": "Rebuild your function from the last puzzle to solve this maze.",
        "courseF_bee_functions7_2018_instruction": "Rebuild your function from the last puzzle to solve this maze.",
        "courseF_bee_functions8a_instruction": "Collect all the nectar or make all of the honey!",
        "courseF_bee_functions8a_2018_instruction": "Collect all the nectar or make all of the honey!",
        "courseF_bee_functionsPre7_instruction": "Now try building a function to solve this maze.  How is it different from last time?",
        "courseF_bee_functionsPre7_2018_instruction": "Now try building a function to solve this maze.  How is it different from last time?",
        "courseF_bee_functions_1_2018_instruction": "Finish this code so that the bee can collect all of the honey and nectar.",
        "courseF_bee_functions_2_2018_instruction": "Edit your solution in one place so that the bee can collect all of the honey and nectar.",
        "courseF_bee_functions_3_2018_instruction": "Subtract one from the variable each time through the loop if you want to use the same function to solve this level.",
        "courseF_bee_functions_challenge1_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead.",
        "courseF_bee_functions_challenge1_2018_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead.",
        "courseF_bee_functions_challenge2_instruction": "Use everything you have learned to complete this puzzle!",
        "courseF_bee_functions_challenge2_2018_instruction": "Use everything you have learned to complete this puzzle!",
        "courseF_bee_functions_challenge2_recursion_instruction": "Collect all the nectar or make all of the honey!",
        "courseF_bee_fwp2_instruction": "Pull this code into a function, then call the function to check this row for nectar.",
        "courseF_bee_fwp2_2018_instruction": "Pull this code into a function, then call the function to check this row for nectar.",
        "courseF_bee_fwp3_instruction": "Let's see if the function makes collecting these three rows of nectar any easier.",
        "courseF_bee_fwp3_2018_instruction": "Let's see if the function makes collecting these three rows of nectar any easier.",
        "courseF_bee_fwp4_instruction": "Add a `length` parameter to the function so that it will still work when the row is a different length.",
        "courseF_bee_fwp4_2018_instruction": "Add a `length` parameter to the function so that it will still work when the row is a different length.",
        "courseF_bee_fwp5_instruction": "Use this function to collect the nectar.",
        "courseF_bee_fwp5_2018_instruction": "Use this function to collect the nectar.",
        "courseF_bee_fwp6_instruction": "Build a short and sweet solution to this puzzle.",
        "courseF_bee_fwp6_2018_instruction": "Build a short and sweet solution to this puzzle.",
        "courseF_bee_fwp7_instruction": "**Challenge:** Modify your function to make honey as well.",
        "courseF_bee_fwp7_2018_instruction": "**Challenge:** Modify your function to make honey as well.",
        "courseF_bee_fwp8_instruction": "Use your new function to solve this spiral.",
        "courseF_bee_fwp8_2018_instruction": "Use your new function to solve this spiral.",
        "courseF_bee_fwp9_instruction": "Use your new function to solve this puzzle.",
        "courseF_bee_fwp9_predict1_instruction": "Use your new function to solve this puzzle.",
        "courseF_bee_fwp9_predict1_2018_instruction": "Use your new function to solve this puzzle.",
        "courseF_bee_fwp_challenge1_instruction": "Use one `for loop` in a function with a `length` parameter to collect all of the corn.",
        "courseF_bee_fwp_challenge1_2018_instruction": "Use one `for loop` in a function with a `length` parameter to collect all of the corn.",
        "courseF_bee_fwp_challenge2_instruction": "Use one `for loop` in a function with a `length` parameter to collect all of the vegetables in each row. ",
        "courseF_bee_fwp_challenge2_2018_instruction": "Use one `for loop` in a function with a `length` parameter to collect all of the vegetables in each row. ",
        "courseF_bee_variables_1_2018_instruction": "Finish this code so that the bee can collect all of the honey and nectar.",
        "courseF_bee_variables_2_2018_instruction": "Edit your solution in one place so that the bee can collect all of the honey and nectar.",
        "courseF_bee_variables_3_2018_instruction": "Subtract one from the variable each time through the loop if you want to use the same function to solve this level.",
        "courseF_bee_variables_4_2018_instruction": "Edit the code to work for this puzzle.",
        "courseF_bee_variables_5_2018_instruction": "Create your own code to solve this puzzle",
        "courseF_bee_variables_6_2018_instruction": "**Challenge** Now give this puzzle a try!",
        "courseF_bee_variables_7_2018_instruction": "This puzzle is a little different.  What do you need to do to solve it?",
        "courseF_bee_variables_8_2018_instruction": "How many nectar will the bee collect from this flower?",
        "courseF_farmer_ramp11_instruction": "This puzzle also uses nested loops.  Can you figure out how?",
        "courseF_farmer_ramp11_2018_instruction": "This puzzle also uses nested loops.  Can you figure out how?",
        "courseF_maze_predict1_instruction": "This code includes a new block. What do you think would happen if you press the \"Run\" block?",
        "courseF_maze_ramp13_instruction": "Time for another Angry Birds puzzle to pull it all together!",
        "courseF_maze_ramp15_instruction": "Use what you've learned to get the bird to the pig!",
        "courseF_maze_ramp4_instruction": "Avoid TNT or feathers will fly!",
        "courseF_maze_ramp4_2018_instruction": "Avoid TNT or feathers will fly!",
        "courseF_maze_ramp5_instruction": "Avoid the TNT.",
        "courseF_maze_ramp5_2018_instruction": "Avoid the TNT.",
        "courseF_maze_ramp6_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseF_maze_ramp6_2018_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "courseF_maze_ramp7_instruction": "Use what you've learned to get the bird to the pig!",
        "courseF_playlab_brokenText_instruction": "In the rest of this stage, we're going to build a game that you control!",
        "courseF_playlab_embed_vars_instruction": "Answer Pegleg the Pirate's questions. What happens if you enter the codename \"password\"? What about some other code name?",
        "courseF_playlab_variables0_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!",
        "courseF_playlab_variables1_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!",
        "courseF_playlab_variables1a_instruction": "Variables can be used to store text that you want to use later.  Have Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
        "courseF_playlab_variables1a_2018_instruction": "Variables can be used to store text that you want to use later.  Have Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
        "courseF_playlab_variables2_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n",
        "courseF_playlab_variables2a_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n",
        "courseF_playlab_variables2b RYAN CLONE_instruction": "Insert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables2b_instruction": "Insert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables2b_2018_instruction": "Insert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables3_instruction": "The `ask` block will automatically store whatever the user answers into the variable of your choice.",
        "courseF_playlab_variables3b_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3bEdit_instruction": "Help Kiki have a conversation with Brian by using the variable `A1` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3b_josh_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3b_josh_2018_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables4_instruction": "Can you find the correct variable in the toolbox to fill in the slot?",
        "courseF_playlab_variables4b_instruction": "Put the variables in the correct places to create this conversation.",
        "courseF_playlab_variables4b_2018_instruction": "Put the variables in the correct places to create this conversation.",
        "courseF_playlab_variables5_instruction": "Can you find the correct variable in the toolbox to fill in the slot?",
        "courseF_playlab_variables5b_instruction": "Put all of the variables in the correct place so that Pegleg's story makes sense.",
        "courseF_playlab_variables5c RYAN Copy_instruction": "Let's combine the `ask` block with an `if/else` statement to make a game!",
        "courseF_playlab_variables5c_instruction": "Let's combine the `ask` block with an `if/else` statement to have some fun!",
        "courseF_playlab_variables5c_2018_instruction": "Let's combine the `ask` block with an `if/else` statement to have some fun!",
        "courseF_playlab_variables6b_instruction": "Join the variables together to make a fun story that takes more than one speech bubble to tell.",
        "courseF_playlab_variables6c_instruction": "In the rest of this stage, we're going to build a game that you control!",
        "courseF_playlab_variables6c_2018_instruction": "In the rest of this stage, we're going to build a game that you control!",
        "courseF_playlab_variables7b_instruction": "Create some questions and weave the answers together into your very own story.",
        "courseF_playlab_variables7b_2018_instruction": "Create some questions and weave the answers together into your very own story.",
        "courseF_playlab_variables7c_instruction": "Make the game do something by asking the user to guess a color.",
        "courseF_playlab_variables7c_2018_instruction": "Make the game do something by asking the user to guess a color.",
        "courseF_playlab_variables8b_instruction": "Use what you've learned to create an improv scene between the actors.",
        "courseF_playlab_variables8c_instruction": "Use the variables to make the game more personal.",
        "courseF_playlab_variables8c_2018_instruction": "Use the variables to make the game more personal.",
        "courseF_playlab_variables_challenge1_instruction": "Use these blocks to make the actors share a knock-knock joke. ",
        "courseF_playlab_variables_challenge1_2018_instruction": "Use these blocks to make the actors share a knock-knock joke. ",
        "courseF_playlab_variables_challenge2_instruction": "This game will use variables to keep track of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat and Penguin touch, take points away. Get exactly 10 points to win!",
        "courseF_playlab_variables_challenge2_2018_instruction": "This game will use variables to keep track of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat and Penguin touch, take points away. Get exactly 10 points to win!",
        "courseF_playlab_variables_challenge3_instruction": "Can you figure out how this \"Fortune Teller\" app works? Click `MORE` to see your challenges.",
        "courseF_video_createFunctions_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "courseF_video_createFunctions_2018_instruction": "We don't have a video for creating functions, yet. This is a placeholder.",
        "course_playlab_variables1_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!",
        "course_playlab_variables2_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n",
        "course_playlab_variables3_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n",
        "coursea_maze_ramp1_2018_instruction": "For this puzzle, snap the blocks together and click \"▶ Run\"!",
        "coursef_explore_CYOA_Witch_instruction": "You can do whatever you want in play lab! Here's an example of choose your own adventure story in play lab.",
        "coursef_explore_playlab2_instruction": "You can do whatever you want in play lab! Here's an example of story in play lab.",
        "coursef_explore_playlab_cat_game_instruction": "You can do whatever you want in play lab! Here's an example of game you can make.",
        "coursef_maze_ramp3_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "coursef_maze_ramp3_2018_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "drawings!_instruction": "Draw the equilateral triangle - all the sides are the same!",
        "eventsIntro_instruction": "Need a better playlab/events combo",
        "flappy_1_instruction": "Attach a block to the \"when click\" block, then press \"Run\". Click or tap the screen to move Flappy to the target.",
        "flappy_11_instruction": "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones.",
        "flappy_11_2018_instruction": "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones.",
        "flappy_1_2018_instruction": "Attach a block to the \"when click\" block, then press \"Run\". Click or tap the screen to move Flappy to the target.",
        "flappy_2_instruction": "Now we've added some ground.  Attach a block to the \"when hit the ground\" block.  Your code needs to 'END GAME' when Flappy crashes.",
        "flappy_2_2018_instruction": "Now we've added some ground.  Attach a block to the \"when hit the ground\" block.  Your code needs to 'END GAME' when Flappy crashes.",
        "flappy_3_instruction": "The \"when run\" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.",
        "flappy_3_2018_instruction": "The \"when run\" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.",
        "flappy_4_instruction": "Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the \"when hit an obstacle\" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.",
        "flappy_4_2018_instruction": "Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the \"when hit an obstacle\" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.",
        "flappy_5_instruction": "Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the \"when pass an obstacle\" block, and then score a point by flying Flappy through the first set of pipes.",
        "flappy_5_2018_instruction": "Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the \"when pass an obstacle\" block, and then score a point by flying Flappy through the first set of pipes.",
        "flappy_6_instruction": "See if you can still score a point after making Flappy flap either a smaller or larger amount.",
        "flappy_6_2018_instruction": "See if you can still score a point after making Flappy flap either a smaller or larger amount.",
        "flappy_7_instruction": "Next, try changing the scene by attaching another block to the \"when run\" block.",
        "flappy_7_2018_instruction": "Next, try changing the scene by attaching another block to the \"when run\" block.",
        "flappy_8_instruction": "You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle.",
        "flappy_8_2018_instruction": "You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle.",
        "flappy_9_instruction": "To mix things up, when hitting an obstacle, instead of ending the game try setting the score back to 0.",
        "flappy_9_2018_instruction": "To mix things up, when hitting an obstacle, instead of ending the game try setting the score back to 0.",
        "frozen circle function in circle_instruction": "Now let's create 20 overlapping circles, turning 18 degrees between each circle.",
        "frozen circle function with parameter_instruction": "Here's a ”Create circle” block that can make circles of different sizes. Can you use this to create a small circle of size 5 and a larger circle of size 10?",
        "frozen circle function_instruction": "Use the new “Create a circle” block to create 10 overlapping circles. Don't forget to jump forward between circles.",
        "frozen circle_instruction": "A circle is a special shape. Can you figure out what number to replace the question marks with to draw a circle?",
        "frozen cross rotate dense_instruction": "Let's repeat it 90 times! How many times does 90 go into 360? Hint: It's a really small number.",
        "frozen cross rotate_instruction": "Now try repeating it 10 times. How many degrees do you need to turn between each line?",
        "frozen cross_instruction": "Wrap a “Repeat” block around these commands to create a plus sign. Did you notice Elsa can move forward and backward?",
        "frozen diamond mini snowflake_instruction": "Did you know every snowflake is a different shape? Let's create a new snowflake by using another “Repeat\" block to repeat a parallelogram 4 times, turning right by 90 degrees between each parallelogram.",
        "frozen diamond snowflake_instruction": "Now, let's create a new snowflake by using the repeat block to repeat a parallelogram 10 times, turning right by 36 degrees between each one.",
        "frozen diamond_instruction": "Use a repeat around these blocks to create a parallelogram. It's just like a rectangle but has different angles. This one has 60 degree and 120 degree angles instead of all 90 degree angles.",
        "frozen freeplay_instruction": "You've officially become a master artist! Create a winter wonderland.",
        "frozen line_instruction": "Hi! I'm Elsa of Arendelle. Help me create a single line.",
        "frozen perpendicular_instruction": "Now let's see if we can create two lines that are at a 90 degree angle to each other. You will need to use the \"Turn\" block as well as the \"Move\" block.",
        "frozen snowflake branch_instruction": "Try using the ”Create a snowflake branch” block to create three branches, which starts to look like a snowflake.",
        "frozen snowflake full_instruction": "Now let's repeat it 8 times to make a beautiful snowflake!",
        "frozen snowflower_instruction": "Intricate snow patterns can be created with very simple shapes. Can you make a pattern by repeating 5 circles of size 5 and 5 circles of size 10?",
        "frozen square iterative_instruction": "It seems like we're halfway to making a square. Let's put 4 lines together to create a square.",
        "frozen square loop 3x_instruction": "Let's create three squares, turning after each square. Be sure to turn by 120 degrees before each new square.",
        "frozen square loop_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "frozen square snowflake_instruction": "Can you create a snowflake using the “Repeat” block to make a square 10 times, and the “Turn” block to turn 36 degrees between each square?",
        "grade1_adventurer_loops1_instruction": "Four piles of gold!  Collect all four.",
        "grade1_adventurer_loops10_instruction": "Help me get all of the gold from this cave.",
        "grade1_adventurer_loops2_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "grade1_adventurer_loops3_instruction": "Can you fix Laurel's path to get all of this gold?",
        "grade1_adventurer_loops4_instruction": "Add to the code from the last puzzle to get all of the gold. ",
        "grade1_adventurer_loops5_instruction": "What should you add to this code to get all of the gold?",
        "grade1_adventurer_loops6_instruction": "Write the code to get all of this gold.",
        "grade1_adventurer_loops7_challenge_instruction": "**Challenge:** The gold goes all the way down these stairs!  Write the code to help me get it all.",
        "grade1_adventurer_loops8_challenge_instruction": "Challenge: Try this staircase now! It has an extra spike at the end you'll have to climb.",
        "grade1_adventurer_loops9_instruction": "Help me get the gold from this deep valley.",
        "grade1_adventurer_loopsFP_instruction": "Eureka!  Collect as much gold as you can!",
        "grade1_adventurer_loopsPre_instruction": "This is Laurel the Adventurer!  Can you move her around and get gold?",
        "grade1_artist_loops1_instruction": "The Artist is trying to draw a line six times, but can't get it right.  Can you help?",
        "grade1_artist_loops2_instruction": "Help the artist draw a line 7 times to make a garden wall.",
        "grade1_artist_loops3_instruction": "Now we need to get the soil ready to plant. Find the bugs in the code and help the artist prepare the ground. ",
        "grade1_artist_loops4_instruction": "Time to fix the stairs!  Repeat this pattern five times so the artist can reach the top of the bushes.",
        "grade1_artist_loops5_instruction": "Behind the bushes there is a beautiful vine full of flowers.  Can you climb the vine and see where it goes?",
        "grade1_artist_loops6_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "grade1_artist_loops7_instruction": "The flowers down here are so pretty.  Let's take a closer look.",
        "grade1_artist_loops7a_instruction": "**Challenge:**  Lovely! Let's take a walk around the garden.",
        "grade1_artist_loops7b_instruction": "Time to head home. Can you fix this ladder to help the artist get down?",
        "grade1_artist_loops8_instruction": "Let's take the short way home, over the pond. Can you help the artist stay on the stones?",
        "grade1_artist_loops9_instruction": "I still need a story for this puzzle",
        "grade1_artist_loopsFP_instruction": "Use what you have learned to draw a picture of what you think the artist saw when he got home.",
        "grade1_maze_sequence1_instruction": "A bug! Fix the code to get me to the pig.",
        "grade1_maze_sequence10_instruction": "Move me around the TNT to get to the pig.",
        "grade1_maze_sequence2_instruction": "Fix the code to get me to the pig!",
        "grade1_maze_sequence3_instruction": "Add 2 blocks to get the bird to the pig.",
        "grade1_maze_sequence4_instruction": "Now try this puzzle from the start!",
        "grade1_maze_sequence5_instruction": "Move one way, then another to get me to the pig!",
        "grade1_maze_sequence6_instruction": "Figure out what is missing and then add blocks to get me to the pig!",
        "grade1_maze_sequence7_instruction": "Your turn!  What do you need to do to get the bird to the pig?",
        "grade1_maze_sequence8_instruction": "Debug this level by adding blocks to get me to the pig!",
        "grade1_maze_sequence9_instruction": "Go around the TNT to get me to the pig! ",
        "grade1_maze_sequenceA_instruction": "Challenge: Move me around the TNT to get to the pig.",
        "grade1_maze_sequenceB_instruction": "Fix the bugs to get the bird to the pig.",
        "grade1_maze_sequenceC_instruction": "It's all you!  Get the bird to the pig.",
        "grade1_maze_sequenceD_instruction": "Now head any which way to get that pig!",
        "grade1_playlab_events1_instruction": "This game is called \"Play Lab\".  See if you can figure out what each block does.",
        "grade1_playlab_events1a_instruction": "Make your robot say \"Hello!\" when the button is clicked.",
        "grade1_playlab_events2_instruction": "This program makes Robin fly.  Can you get her to vanish when you click her?",
        "grade1_playlab_events2a_instruction": "Edit the code so that when the second bird is clicked, your program plays a sound!",
        "grade1_playlab_events3_instruction": "This program makes Robin fly.  Can you make the robot jump when you press the up button?\n",
        "grade1_playlab_events3a_instruction": "When the third bird is clicked, the background should change to a city. Can you add code to make this happen?",
        "grade1_playlab_events4_instruction": "Add a block to make Robin vanish when she collides with the robot.",
        "grade1_playlab_events4a_instruction": "Add code to make something happen when the fourth bird is clicked. Be creative!",
        "grade1_playlab_events5_instruction": "Add a block to the 'when run' event that starts the dragon flying.",
        "grade1_playlab_events5a_instruction": "About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.",
        "grade1_playlab_events6_instruction": "Add a block to the 'when actor 1 clicked' event that makes the dragon return to the middle of the screen.",
        "grade1_playlab_events7_instruction": "Add a block so that when you push the left arrow button, the knight surges toward the dragon.",
        "grade1_playlab_events8_instruction": "Add a block so that when the knight collides with the dragon, it plays a sound.",
        "grade1_playlab_events9 RYAN COPY_instruction": "Now, have Robin wait a second, then come back after she vanishes.",
        "grade1_playlab_events9_instruction": "Now, add a block to keep score each time the knight hits the dragon.",
        "grade1_playlab_eventsFP_instruction": "Use your imagination. What can you do to make this game more fun?",
        "grade1_sequence_pre_instruction": "Play with these blocks to see what they make the bird do!",
        "grade1_video_frustrationRainbow_instruction": "This video describes the rainbow of frustration and introduces persistence.",
        "grade2_CaringForNewPet_0_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "grade2_CaringForNewPet_1_instruction": "Drag an extra `move forward` block out of the toolbox to finish your code.",
        "grade2_CaringForNewPet_10_instruction": "Get me to the pig!",
        "grade2_CaringForNewPet_11_instruction": "\"Keep calm and help me find the bad pig.\"",
        "grade2_CaringForNewPet_2_instruction": "\"This pig is ruffling my feathers.\"\n\nThere is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "grade2_CaringForNewPet_2courseC_maze_programming3_instruction": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
        "grade2_CaringForNewPet_3_instruction": "\"Trace the path and lead me to the silly pig. Avoid TNT or feathers will fly!\"",
        "grade2_CaringForNewPet_3D_instruction": "\"Follow this path to get me to the pig!\"",
        "grade2_CaringForNewPet_4_instruction": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
        "grade2_CaringForNewPet_5_instruction": "Get me to the pig!",
        "grade2_CaringForNewPet_6_instruction": "Challenge: Guide me to the green evilness! (Watch out for TNT)",
        "grade2_CaringForNewPet_7D_instruction": "Challenge: This code has a lot of bugs. You'll need to remove blocks and add blocks.",
        "grade2_MakeDogTag_1_instruction": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
        "grade2_MakeDogTag_10_instruction": "Now, draw anything you like!",
        "grade2_MakeDogTag_2_instruction": "This spaceship needs a window!\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "grade2_MakeDogTag_3_instruction": "\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"\n\nFinish Starla's rocket so she can chase her pet.",
        "grade2_MakeDogTag_4_instruction": "Finish this tag by drawing a rectangle around the outside.\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "grade2_MakeDogTag_5_instruction": "\"Now a tag for Belle!\"\n\nDraw this diamond with 200 pixel sides.",
        "grade2_MakeDogTag_6_instruction": "Challenge: This tag is a special one!  Can you figure out how to draw the outline?",
        "grade2_MakeDogTag_7_instruction": "One more tag.  This is a triangle for Pi.\n(Each side is 150 pixels)",
        "grade2_MakeDogTag_8_instruction": "Now let's connect a bunch of V's together in a loop.",
        "grade2_MakeDogTag_9_instruction": "Rebuild the code from the last puzzle, but this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24 times instead of 8.",
        "grade2_MakeDogTag_BFP_instruction": "\"Hi, I'm an artist. You can write code to make me draw almost anything.\"\n\nPlay with the blocks in the toolbox to see what they do!",
        "grade2_MakeDogTag_FP_instruction": "Freeplay: What shape will you make the tag for your pet?",
        "grade2_PuppyLoops_1_instruction": "Can you get me to the pig using 5 of the same kind of blocks?",
        "grade2_PuppyLoops_10_instruction": "My teacher says that I should finish what I start!\n\nHelp me finish my pinwheel. Can you figure out what's wrong?",
        "grade2_PuppyLoops_2_instruction": "Can you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade2_PuppyLoops_3_instruction": "Get me to the pig! Solve this puzzle by creating a loop!",
        "grade2_PuppyLoops_4_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade2_PuppyLoops_5_instruction": "Can you figure out the fastest way to get me to the pig?",
        "grade2_PuppyLoops_6_instruction": "Loops even work with more than one block inside!  Can you loop this sequence to get me to the pig?",
        "grade2_PuppyLoops_7_instruction": "Use what you learned to get me to the sunflower!",
        "grade2_PuppyLoops_8_instruction": "This code for the cat's whiskers is wrong. \n\nFix this code to draw whiskers that are all the same length.",
        "grade2_PuppyLoops_9_instruction": "Looks like the C in code is drawn backwards!\n\nCan you make it look like a C again?",
        "grade2_collector_10_instruction": "You're almost done! Collect as many pieces of treasure as you can to finish the stage!",
        "grade2_collector_10_2018_instruction": "You're almost done! Collect as many pieces of treasure as you can to finish the stage!",
        "grade2_collector_2_instruction": "Move Laurel to the gold, then use `collect` to pick it up.",
        "grade2_collector_3_instruction": "Put these blocks in order to collect all of the gold and solve the puzzle.",
        "grade2_collector_4_instruction": "Sequence matters! The blocks you need are already in the workspace, but not connected.  Order these blocks to solve the puzzle.",
        "grade2_collector_5_instruction": "These blocks are in the wrong order. Can you fix them?",
        "grade2_collector_6_instruction": "Reorder the blocks to collect all of the treasure.",
        "grade2_collector_7_instruction": "Challenge puzzle! Use blocks from the toolbox to collect all of the treasure.",
        "grade2_collector_8_instruction": "\"Keep up the good work! Help me collect all of the coins.\"",
        "grade2_collector_9_instruction": "*\"Let's get all of the coins!\"*",
        "grade2_collector_9a_instruction": "**Challenge:** Grab all of the coins.",
        "grade2_collector_A_instruction": "Help Laurel collect all of the treasure.",
        "grade2_collector_A_2018_instruction": "Help Laurel collect all of the treasure.",
        "grade2_collector_pre1_instruction": "\"Hi, I'm Laurel. Today I'm searching for treasure at the dog park!\" \n\nPlay around with the blocks to see if you can help Laurel collect some gold.",
        "grade2_maze_debuggingFP_instruction": "\"Now, help me sneak up on the pig any way you want to!\"",
        "grade2_maze_debuggingPre_instruction": "Play with these blocks to see what they make the bird do!",
        "grade2_maze_intro10_instruction": "Solve this puzzle.",
        "grade2_maze_intro2_instruction": "Welcome to Code Studio! Here you will learn to use blocks to build programs. Press `Run` to run a program now!",
        "grade2_maze_intro3_instruction": "The `workspace` is where you will create all of your programs. Can you guess what this program does? Press the “Run” button to find out.",
        "grade2_maze_intro4_instruction": "Drag a block from the toolbox into the workspace. Connect it to the other blocks.",
        "grade2_maze_intro6_instruction": "That’s it!  Now we’re ready to try to solve a few puzzles. ",
        "grade2_maze_intro7_instruction": "This time, try something a bit more challenging.",
        "grade2_maze_intro8_instruction": "This is a challenge puzzle.  It is meant to be hard and will probably take you a couple of tries to solve.  If you don’t solve it after several tries, don’t worry!  It will be in the Play Zone at the end of the stage and you can try it again when you’ve had more practice.",
        "grade2_maze_intro9_instruction": "Solve this puzzle.",
        "grade2_playlab_project_1_instruction": "Now, write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets!",
        "grade2_playlab_project_2_instruction": "The `repeat forever` block allows you to run code over and over forever. Can you attach blocks to move Chomp the Dino (actor 2) up and down forever?",
        "grade2_playlab_project_3_instruction": "Can you have Waddles (actor 1) say \"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \n\nWhen you're done, play the game to make that happen.",
        "grade2_playlab_project_4_instruction": "Can you add a block to score a point when Waddles runs into Octavia (actor 3)? \nPlay the game and move Waddles with the arrows until you score!",
        "grade2_playlab_project_5_instruction": "Add blocks to the `when run` event to change the background and the speed of Waddles.\n\nPlay the game and move Waddles with the arrows until you score.",
        "grade2_playlab_project_6_instruction": "Create your own story. When you're done, click \"Finish\" to share with friends.",
        "grade2_puppy_loops2_instruction": "Can you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade2_puppy_loops3_instruction": "\"Get me to the pig!\"\n\n Solve this puzzle by creating a loop!",
        "grade2_puppy_loops4_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade2_puppy_loops5_instruction": "\"Get me to the pig as quickly as possible!\"",
        "grade2_puppy_loops6_instruction": "\"This pig is ruffling my feathers!\"\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
        "grade2_puppy_loops7_instruction": "\"Get me to the pig!\"\n\nUse what you learned in other puzzles!",
        "grade3_AboutMyRobot_1_instruction": "Make your robot say \"Hello!\" when the button is clicked.",
        "grade3_AboutMyRobot_2_instruction": "Edit the code so that when the second bird is clicked, your program plays a sound!",
        "grade3_AboutMyRobot_3_instruction": "When the third bird is clicked, the background should change to a city. Can you add code to make this happen?",
        "grade3_AboutMyRobot_4_instruction": "Add code to make something happen when the fourth bird is clicked. Be creative!",
        "grade3_AboutMyRobot_5_instruction": "About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.",
        "grade3_AboutMyRobot_TeacherIDo_instruction": "Run this puzzle and click on the robot to see what happens!",
        "grade3_ConditionalsElse_1_instruction": "This cloud is blocking my view! Check to see if there's a flower under the cloud, and only get nectar if there's a flower. Be careful, it can change!",
        "grade3_ConditionalsElse_2_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "grade3_ConditionalsElse_3_instruction": "Now I just want to make honey. Some of these clouds might have honeycombs under them. Be sure to check each cloud!",
        "grade3_ConditionalsElse_4_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).",
        "grade3_ConditionalsElse_5_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_ConditionalsElse_6_instruction": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
        "grade3_ConditionalsElse_7_instruction": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
        "grade3_ConditionalsElse_8_instruction": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
        "grade3_ConditionalsElse_9_instruction": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. \n",
        "grade3_ConditionalsElse_TeacherIDo_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_Conditionals_1 BAD_instruction": "Use a loop to collect all of the nectar.",
        "grade3_Conditionals_1_instruction": "I'm a hungry bee! \nHelp me collect all of the nectar from the flowers using the fewest number of blocks.",
        "grade3_Conditionals_10 BAD_instruction": "Gather nectar from the rows of flowers! Use a nested loop.",
        "grade3_Conditionals_10_instruction": "There's a lot happening here!\n\nUse what you've learned to collect all of the nectar and then make the honey.",
        "grade3_Conditionals_11 BAD_instruction": "Assessment: Use a `while` loop to collect all of the nectar from these flowers.",
        "grade3_Conditionals_11_instruction": "Let's put everything together!\n\nUse what you've learned to help me collect nectar only from flowers that have it, using as few blocks as possible.  Don't forget to make honey at the end.",
        "grade3_Conditionals_12_instruction": "This stair step pattern should look familiar.  \n\nCan you collect nectar only from the flowers that have some, using as few blocks as possible?",
        "grade3_Conditionals_13_instruction": "Assessment: Collect all of the nectar. Be careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "grade3_Conditionals_2_instruction": "Look at all of that nectar!\n\nHelp me collect the nectar and make the honey using as few blocks as you can.  ",
        "grade3_Conditionals_3_instruction": "Be careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "grade3_Conditionals_4_instruction": "Check this flower with an \"if\" block to see if there is any nectar available.",
        "grade3_Conditionals_5_instruction": "Collect nectar from each flower only if it has any.",
        "grade3_Conditionals_6_instruction": "This field has red and purple flowers. Red flowers have a known nectar amount, but purple flower nectar is unknown. Collect all the nectar.",
        "grade3_Conditionals_7_instruction": "Collect all the nectar from each flower.",
        "grade3_Conditionals_8_instruction": "I wonder what's out there!\n\nHelp me fly around the yard and collect nectar only from the flowers that have some. ",
        "grade3_Conditionals_9_instruction": "Help me find all of the nectar using as few blocks as possible!",
        "grade3_Conditionals_TeacherIDo_instruction": "Check this flower with an \"if\" block to see if there is any nectar available.",
        "grade3_Debugging_1_instruction": "These blocks are really bugging me. Fix the error(s) to collect all of the nectar.",
        "grade3_Debugging_5_instruction": "That flower looks tasty! \n\nFix the error(s) to collect all of the nectar.  You can now use both run and step.",
        "grade3_Debugging_6_instruction": "What a sweet challenge!\n\nFix the error(s) to collect all of the nectar.",
        "grade3_Debugging_7_instruction": "Fix the error(s) to collect all of the nectar and make all of the honey.",
        "grade3_Debugging_9_instruction": "\"Bee\" patient with this one!\n\nYou will need to fix a couple of things in this program to collect all of the nectar and make all of the honey.",
        "grade3_Debugging_TeacherIDo_instruction": "These blocks are really bugging me. Fix the error(s) to collect all of the nectar and make all of the honey.",
        "grade3_Loops_1_instruction": "Can you help me collect the nectar from these flowers? ",
        "grade3_Loops_10_instruction": "Such a busy bee!\n\nHelp bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "grade3_Loops_11_instruction": "The shape of this path is different than the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "grade3_Loops_12_instruction": "Can you find the quickest way for the bee to collect all of the nectar and make all of the honey?",
        "grade3_Loops_2_instruction": "This time, use a loop to gather all of the nectar.",
        "grade3_Loops_3_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "grade3_Loops_4_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "grade3_Loops_5_instruction": "What a beautiful field of flowers!   Help the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?",
        "grade3_Loops_6_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "grade3_Loops_7_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "grade3_Loops_8_instruction": "Collect all the nectar and make all of the honey using the fewest blocks possible.",
        "grade3_Loops_9_instruction": "Collect nectar from each flower and make honey at each honeycomb using the fewest blocks possible.",
        "grade3_Loops_TeacherIDo_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "grade3_RunningFarm_1_instruction": "Use conditionals to make sure that you pick all of the corn, but don't disturb the stalks where nothing is growing yet.",
        "grade3_RunningFarm_10_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_11a_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_2_instruction": "Help the farmer collect both corn and lettuce from the field.",
        "grade3_RunningFarm_3_instruction": "*\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"*",
        "grade3_RunningFarm_4_instruction": "Help the farmer pick all of the lettuce in each cluster before moving on to the next bunch.",
        "grade3_RunningFarm_5_instruction": "This field has clusters of corn, lettuce, and pumpkins all growing together.  Can you collect them all?",
        "grade3_RunningFarm_6_instruction": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "grade3_RunningFarm_7_instruction": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_8_instruction": "Have wheat and potatoes planted randomly at various growth stages. Now we introduce multiple while loops (stacked) nested inside a loop. The two while loops in the solution represent different while loops (while there is potato and while there is wheat)",
        "grade3_RunningFarm_9_instruction": "Add Weeds element. Weeds start out in random spots in the field and spread more and more rapidly as time goes on.. This puzzle is the culminating game-like puzzle. Students should have the event blocks (up, down, left, right, spacebar) available in the toolbox to use if they want. The entire field should be planted randomly with mostly wheat, potatoes, and a few weeds.",
        "grade3_RunningFarm_TeacherIDo_instruction": "Teacher I Do: Show students how they can use loops and conditionals to plant and harvest 2 rows of crops.",
        "grade3_RunningFarm_TeacherIDo2_instruction": "Teacher I Do: Show students how to use loops to harvest many crops.",
        "grade3_bee_Conditionals_new4_instruction": "Now try checking all of these flowers with \"if\" blocks to see if there is any nectar available.",
        "grade3_bee_conditionals_new1a_instruction": "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade3_bee_conditionals_new1b_instruction": "Help the bee collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade3_bee_conditionals_new2_instruction": "Collect all of the nectar using as few blocks as possible",
        "grade3_bee_conditionals_new2a_instruction": "Get all of the nectar using as few blocks as possible.",
        "grade3_bee_conditionals_new2b_instruction": "Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade3_bee_conditionals_new3a_instruction": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb.",
        "grade3_bee_conditionals_new3b_instruction": "Collect all of the nectar and make all of the honey.",
        "grade3_bee_conditionals_new3c_instruction": "Help the bee collect all of the nectar and make all of the honey! Hint: Try using one loop inside of another loop.",
        "grade3_bee_conditionals_quantum1_instruction": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "grade3_bee_conditionals_quantum2_instruction": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  \n",
        "grade3_bee_conditionals_quantum3_instruction": "Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
        "grade3_bee_conditionals_quantum4_instruction": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "grade3_bee_conditionals_quantum5_instruction": "Use the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_maze_Loop1_instruction": "Assessment:  Get me to the sunflower using only 5 blocks! ",
        "grade3_maze_loops1_instruction": "Get the zombie to the sunflower.",
        "grade3_maze_loops2_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "grade3_maze_loops2a_instruction": "Get the zombie to the sunflower using the fewest number of blocks possible.",
        "grade3_maze_loops3_instruction": "Get the zombie to the sunflower using only the blocks available.",
        "grade3_maze_loops4_instruction": "Get the zombe to the sunflower using the fewest number of blocks possible!",
        "grade3_maze_loops5_instruction": "Get me to the sunflower using the fewest blocks possible!",
        "grade3_maze_nestedLoops1_instruction": "Can you get me to the pig using 5 of the same kind of blocks?",
        "grade3_maze_nestedLoops2_instruction": "Can you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade3_maze_nestedLoops3_instruction": "Get me to the pig! You can only use one move forward block this time",
        "grade3_maze_nestedLoops4_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade3_playLab_buildGame_1_instruction": "There is a new block in this lesson, the `random integer` block. It is used to choose a random number. Write a program where the robot says a random number between 1 and 100!",
        "grade3_playLab_buildGame_2_instruction": "We have already created a random integer, \"j\", which is either 1 or 0. Now, we need to use it to decide whether our card is red or black. Add a second if statement to the code under `when run` to complete this code.",
        "grade3_playLab_buildGame_3_instruction": "There are 13 different card values in a deck of cards, so we'll need to have 13 options. Under the empty `when run` block, add a line that sets the placeholder \"i\" to a random integer between 1 and 13.",
        "grade3_playLab_buildGame_4_instruction": "In a deck of cards, a card with value 1 isn't actually called a \"1\", there's a special name. Write an if statement that checks if the random number is a 1, then tell the computer that the value of that card is \"Ace\".",
        "grade3_playLab_buildGame_5_instruction": "We can just call the cards from 2 to 10 by their numbers, so add an if statement that checks whether the number generated is within those numbers, then sets the card value to the number generated.",
        "grade3_playLab_buildGame_6_instruction": "There are three more cards with special names in the deck. Add to your code so that a card number 11 is called a \"Jack\", a 12 is a \"Queen\" and a 13 is a \"King\"",
        "grade3_playLab_buildGame_7_instruction": "You already know what color your card is, but what suit is it? Add code to the conditional statement \"if card is Red\" to choose hearts or diamonds.",
        "grade3_playLab_buildGame_8_instruction": "Add the second part of the code to choose a suit, copying what you made for a Red card.",
        "grade3_playLab_buildGame_final_instruction": "Final stage for playlab conditionals level (could hide entire function so that students just work with point scoring)",
        "grade3_playLab_buildGame_final2_instruction": "Here's all of your code to choose a card - try adding some other fun features!",
        "grade3_robotFarmer_ConditionalsIntro4_instruction": "Help the farmer remove this entire pile using a `while` loop.",
        "grade3_robotFarmer_ConditionalsIntro_1_instruction": "*\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"*  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
        "grade3_robotFarmer_ConditionalsIntro_10_instruction": "I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it",
        "grade3_robotFarmer_ConditionalsIntro_10a_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "grade3_robotFarmer_ConditionalsIntro_11_instruction": "It's still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in. Hint: use the dropdown menu of options on the \"if\" block.",
        "grade3_robotFarmer_ConditionalsIntro_11a_instruction": "Flatten all of these piles using as few blocks as possible. ",
        "grade3_robotFarmer_ConditionalsIntro_2_instruction": "Next, move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
        "grade3_robotFarmer_ConditionalsIntro_3_instruction": "*\"Move to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible.\"*",
        "grade3_robotFarmer_ConditionalsIntro_4_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "grade3_robotFarmer_ConditionalsIntro_5_instruction": "Help me remove all of this dirt. ",
        "grade3_robotFarmer_ConditionalsIntro_6_instruction": "Remove all the piles of dirt, using as few blocks as possible. The new options in the dropdown menu on the \"while\" block tell me if I'm standing on a pile or a hole.",
        "grade3_robotFarmer_ConditionalsIntro_7_instruction": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
        "grade3_robotFarmer_ConditionalsIntro_8_instruction": "Fill in the hole at the end of each of these paths.",
        "grade3_robotFarmer_ConditionalsIntro_9_instruction": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
        "grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction": "Help me fill in all these holes with 5 shovelfuls of dirt. Hint: you can put a \"repeat\" block inside the \"while\" block.",
        "grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction": "I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it",
        "grade4_arist_functions_star0_instruction": "Have you drawn something like this star before? Practice making it one more time by adding a turn and a repeat block.",
        "grade4_arist_nested_loop_circles1_instruction": "Assessment: Use a nested loop to complete the design.",
        "grade4_arist_nested_loop_flags1_instruction": "Loop the given code to create a windmill.",
        "grade4_arist_nested_loop_polygons1_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "grade4_arist_nested_loop_polygons2_instruction": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "grade4_arist_nested_loop_squares1_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.",
        "grade4_arist_nested_loop_triangles2_instruction": "Now nest this loop inside another loop to draw 10 triangles.  This is called a \"nested\" loop.  ",
        "grade4_arist_nested_loop_triangles3_instruction": "Can you draw a hexagon by looping the triangle code?",
        "grade4_arist_nested_loop_triangles4_instruction": "Draw the teeth in the alligator's mouth!",
        "grade4_arist_nested_loop_triangles5_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "grade4_arist_nested_loop_triangles6_instruction": "Can you draw these 36 triangles using a nested loop?",
        "grade4_artist_freeplay_instruction": "You are on your own now! Try out any of the functions you used in this stage or try this new function that will automatically give your image a beautiful background color! This creation will be saved to your Projects dashboard so that you can easily edit it any time!",
        "grade4_artist_functions1_instruction": "Help the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.",
        "grade4_artist_functions2_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
        "grade4_artist_functions2a_instruction": "Create this image using only the blocks provided.",
        "grade4_artist_functions3a_instruction": "Create this image using only the blocks provided.",
        "grade4_artist_functions3b_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.",
        "grade4_artist_functionsChallenge0_instruction": "**Challenge:** Create as many functions as you think you need to make this drawing of 50 pixel squares.",
        "grade4_artist_functions_challenge_instruction": "Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "grade4_artist_functions_challenge2_instruction": "Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "grade4_artist_functions_freeplay_instruction": "You are on your own now! Try out any of the functions you used in this stage or try this new function that will automatically give your image a beautiful background color! This creation will be saved to your Projects dashboard so that you can easily edit it any time!",
        "grade4_artist_functions_stars0_instruction": "You can make this drawing by adding a repeat block.",
        "grade4_artist_functions_stars1_instruction": "Now that you can draw a star, try drawing four stars!",
        "grade4_artist_functions_stars2_instruction": "Draw only those three stars to finish this puzzle.",
        "grade4_artist_functions_stars3_instruction": "That last one is tough if you only use loops. Let's try drawing the same picture using this new 'function' that will help to **draw a star**.",
        "grade4_artist_functions_windows0_instruction": "Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "grade4_artist_functions_windows1_instruction": "If you can draw one window, you can draw three! Try using your choice of a nested loop or a function here. Don't forget the jump block!",
        "grade4_artist_functions_windows2_instruction": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n- The top windows are 50 pixels away from each other.  \n- The bottom windows are 100 pixels below the top set.",
        "grade4_artist_nestedLoops_challenge_instruction": "Click here to see the full instructions again!\n\nHere is the code for an interesting shape.  What happens when you repeat it multiple times, turning between each iteration?   Notice that the turns in this shape add up to 420 degrees, which means that when your artist is done drawing, it will be facing a different direction than when you started.  That new direction is exactly 60 degrees to the right of where you began.",
        "grade4_artist_nestedLoops_challenge2_instruction": "Now for a challenge!  Feel free to use trial and error. You are not expected to get the image perfect the first time.   Want to see more hints?  Click here!",
        "grade4_artist_nested_loop_circles1_instruction": "Assessment: Use a nested loop to complete the design.",
        "grade4_artist_nested_loop_flags1_instruction": "Loop the given code to create a windmill.",
        "grade4_artist_nested_loop_polygons1_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "grade4_artist_nested_loop_polygons2_instruction": "Hi, I'm the Artist! Let's create some drawings together! For starters, try repeating this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "grade4_artist_nested_loop_squares1_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.",
        "grade4_artist_nested_loop_triangles1_instruction": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.",
        "grade4_artist_nested_loop_triangles2_instruction": "Let's make a quick adjustment to get completely different image!  \nHint: ? × 10 = 360",
        "grade4_artist_nested_loop_triangles3_instruction": "Can you draw a hexagon by looping the triangle code?\nHint: 6 × ? = 360",
        "grade4_artist_nested_loop_triangles4_instruction": "Hi! I'm the Artist. Let's try some different types of drawings together. Can you help me draw the bottom teeth in the alligator's mouth?",
        "grade4_artist_nested_loop_triangles5_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "grade4_artist_nested_loop_triangles6_instruction": "Can you draw these 36 triangles using a nested loop?",
        "grade4_artist_parameters_squares1_instruction": "Click \"edit\" to fill in the function definition of \"draw a square\" and add a parameter. It should take a length parameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75 pixels in length, each 100 pixels apart.",
        "grade4_artist_parameters_triangles1_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the function 'draw a triangle' to find the bugs.",
        "grade4_artist_parameters_triangles2_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "grade4_artist_parameters_triangles2b_instruction": "Can you complete this drawing? The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides.",
        "grade4_artist_parameters_triangles3_instruction": "Can you complete this drawing? The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides.",
        "grade4_artist_parameters_triangles4_instruction": "The code for this triangle function is broken. Can you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade4_artist_parameters_trianglesx_instruction": "Can you complete this drawing? The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides.",
        "grade4_bee_conditionals_nested_loops_instruction": "Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade4_bee_conditionals_new1_instruction": "Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade4_bee_conditionals_new1a_instruction": "Help the bee make all of the honey. You can only make honey at a honeycomb, but you can check any space to see if there is a honeycomb.",
        "grade4_bee_conditionals_new2_instruction": "Can you help the bee collect the nectar from the flowers? You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade4_bee_conditionals_new2a_instruction": "Make all of the honey. It's actually more efficient to check each space for a honey comb, even when you know some are empty.",
        "grade4_bee_conditionals_new3a_instruction": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb.",
        "grade4_bee_conditionals_new3b_instruction": "Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?",
        "grade4_bee_conditionals_new3c_instruction": "Help the bee collect all of the nectar and make all of the honey! Hint: Try using one loop inside of another loop.",
        "grade4_bee_conditionals_quantum1_instruction": "This cloud is blocking my view! Check to see if there's a flower under the cloud, and only get nectar if there's a flower. Be careful, it can change!",
        "grade4_bee_conditionals_quantum2_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "grade4_bee_conditionals_quantum3_instruction": "Now I just want to make honey. Some of these clouds might have honeycombs under them. The way we've been going about things won't work here. Be sure to check if a honeycomb is hiding behind each cloud!",
        "grade4_bee_conditionals_quantum4_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).",
        "grade4_bee_conditionals_quantum5_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade4_bee_functions_instruction": "Have we met before? I'm the farmer! Please help me remove this pile of dirt and fill this hole.",
        "grade4_bee_functions1_instruction": "Collect all the nectar from each flower.",
        "grade4_bee_functions10_instruction": "Create a function to collect all of the nectar from each flower.",
        "grade4_bee_functions11_instruction": "Solve this function by creating a function to turn, move forward and make all of the honey, then return the bee to where it started and turn back.",
        "grade4_bee_functions2_instruction": "Functions are blocks of code that perform a task. Use the \"get 2 nectar\" function to collect the nectar from each flower.",
        "grade4_bee_functions3_instruction": "Build the `get 5` function to use in this puzzle.",
        "grade4_bee_functions4_instruction": "Use the `move and get nectar` function to collect all of the nectar.",
        "grade4_bee_functions5_instruction": "This puzzle will be deleted!",
        "grade4_bee_functions6_instruction": "Now write the function to collect nectar from the flowers.",
        "grade4_bee_functions7_instruction": "Create a function and call it to collect nectar at each flower and make honey at each honeycomb.",
        "grade4_bee_functions8_instruction": "Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path. Then collect all the nectar and make all the honey!",
        "grade4_bee_functions9_instruction": "Create a function that collects all of the nectar from each flower.",
        "grade4_bee_nestedLoops0_instruction": "Use a loop to collect all of the nectar.",
        "grade4_bee_nestedLoops1_instruction": "Collect all of the nectar from each flower.",
        "grade4_bee_nestedLoops2_instruction": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
        "grade4_bee_nestedLoops2a_instruction": "Collect all of the nectar using  as few blocks as possible.",
        "grade4_bee_nestedLoops3_instruction": "Collect all of the nectar by creating a nested loop.",
        "grade4_bee_nestedLoops4_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "grade4_bee_nestedLoops_assess_instruction": "**Assessment:** Collect all of the nectar and make all of the honey using loops.\n\nHint: There are several possible solutions!",
        "grade4_designProcess_vid_instruction": "Prepare to build a project within some given parameters.",
        "grade4_farmer_functions1_instruction": "*\"Have we met before? I'm the farmer!\"*\n\nHelp the farmer get to the pumpkins and pick them.",
        "grade4_farmer_functions2_instruction": "Take the code you just wrote it and use it to define a new function. Call the function twice to complete the puzzle.",
        "grade4_farmer_functions3_instruction": "Try using a couple of repeat blocks within your function definition.",
        "grade4_farmer_functions4_instruction": "Swap out your repeat loops for more versatile while loops.",
        "grade4_farmer_functions5_instruction": "Things are going to start getting trickier, but don't give up! You can use the same while loops to check both spaces in each pass.",
        "grade4_farmer_functions6_instruction": "The paths are a different length. You can use a different type of while loop to keep the pattern going as long as you need to.",
        "grade4_frozen_freeplay_instruction": "You've officially become a master artist! Create a winter wonderland.",
        "grade4_frozen_functions0_instruction": "Can you figure out what number to replace the question marks with to draw a circle?",
        "grade4_frozen_functions1_instruction": "Use the new “draw a circle” function to create 10 overlapping circles. Don't forget to jump forward between circles.",
        "grade4_frozen_functions1a_instruction": "Use the new “Create a circle” block to create 10 overlapping circles. Don't forget to jump forward between circles.",
        "grade4_frozen_functions2_instruction": "Now let's create 20 overlapping circles, turning 18 degrees between each circle.",
        "grade4_frozen_functions3_instruction": "Here's a ”Create circle” block that can make circles of different sizes. Can you use this to create a small circle of size 5 and a larger circle of size 10?",
        "grade4_frozen_functions4_instruction": "Intricate snow patterns can be created with very simple shapes. Can you make a pattern by repeating 5 circles of size 5 and 5 circles of size 10?",
        "grade4_frozen_nested_loop_diamonds1_instruction": "Let’s use a repeat block to create a rhombus. Like a square, all sides are equal length, but the angles are different. This one has 60 degree and 120 degree angles instead of all 90 degree angles.",
        "grade4_frozen_nested_loop_diamonds2_instruction": "Did you know every snowflake is a different shape? Let's create a new snowflake by using another “Repeat\" block to repeat a parallelogram 4 times, turning right by 90 degrees between each parallelogram.",
        "grade4_frozen_nested_loop_diamonds3_instruction": "Now, let's create a new snowflake by using the repeat block to repeat a parallelogram 10 times, turning right by 36 degrees between each one.",
        "grade4_frozen_nested_loop_rectangle1_instruction": "Hi, I’m Anna of Arendelle! Let’s use a repeat block to create a rectangle. This one is  200 pixels long and 100 pixels tall. All of the corners are 90 degree angles.",
        "grade4_frozen_square_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "grade4_frozen_square_loop1_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "grade4_frozen_square_loop2_instruction": "Let's create three squares, turning after each square. Be sure to turn by 120 degrees before each new square.",
        "grade4_frozen_square_loop3_instruction": "Can you create a snowflake using the “Repeat” block to make a square 10 times, and the “Turn” block to turn 36 degrees between each square?",
        "grade4_playLab_proj_example1_instruction": "instructions",
        "grade4_playLab_proj_example1a_instruction": "Take a look at this project.  Do you see how it was made?",
        "grade4_playLab_proj_example2a_instruction": "Take a look at this project.  Do you see how it was made?",
        "grade4_playlab_freeplay_instruction": "It's free play time! Have fun with all the blocks in your tool box. ",
        "grade4_playlab_test_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "grade4_playlab_test2_instruction": "Here's a function called `jump` that causes your main character to jump up 100 pixels. Run the program and use the jump function to collect all of the flags by moving the dog with the arrow keys.",
        "grade4_prompt_test_instruction": "This is a test play lab level.",
        "grade4_review_artist1_instruction": "Hi, I'm an artist. You can write code to make me draw almost anything. Use a few blocks to make me draw over the grey lines in the picture. (Each line is 100 pixels long)",
        "grade4_review_artist2_instruction": "This house needs a roof! Draw the triangle.  Hint: all three sides are the same length.",
        "grade4_review_artist3_instruction": "The jump block moves the artist without drawing. Draw the dashed line using both the `jump forward` and `move forward` blocks. Each line is 50 pixels long.",
        "grade4_review_bee1_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "grade4_review_bee2_instruction": "Collect nectar from each flower and make honey at each honeycomb using the fewest blocks possible.",
        "grade4_review_bee3_instruction": "Such a busy bee!\n\nHelp bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "grade4_scaffolded_project1_instruction": "It is amazing how much you have learned! Let's put them together to make a game, step by step.",
        "grade4_scaffolded_project2_instruction": "Now let's get things moving! Use event handlers and actions to make your hero move.\n\nWe've added these blocks to your tool box to help you.\n",
        "grade4_scaffolded_project3_instruction": "Now that your game has a hero, it's time to start adding other actors and assigning them behaviors. \n\nAdd two or more additional actors to your game and make them move. Do you want to have an actor patrol back and forth? Try using a these new blocks to bring these other components of your game to life!",
        "grade4_scaffolded_project4_instruction": "Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.",
        "grade4_scaffolded_project4a_instruction": "Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.",
        "grade4_scaffolded_project5_instruction": "Now spend some time making sure the game works the way you want. Try including a way to win or lose your game.",
        "grade4_scaffolded_project6_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "grade5_artist_binary1_instruction": "Binary is a way of representing information using only two options.  Here, we're going to use the options \"off\" (represented by the number 0) and \"on\" (represented by the number 1).  \n\nWe've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.  Can you have the artist draw \"01010101\" in binary in the first row?",
        "grade5_artist_binary10_instruction": "Click here to see hints.",
        "grade5_artist_binary11_instruction": "Free Play: Here's a blank canvas for you to draw on.  Have fun!",
        "grade5_artist_binary2_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  The artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\nRun this code to see how the artist uses binary to draw this pattern.",
        "grade5_artist_binary3_instruction": "Which of these binary strings could you loop 8 times to draw this image?",
        "grade5_artist_binary4_instruction": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
        "grade5_artist_binary5_instruction": "Each binary string represents one row of this picture. Can you rearrange them so it draws a smiley face instead of a frowny face?",
        "grade5_artist_binary6_instruction": "Which 6 digit binary string, repeated 11 times, will draw this image?",
        "grade5_artist_binary7_instruction": "What is the shortest binary string that you can repeat to draw this image?",
        "grade5_artist_binary8_instruction": "Finish this drawing.",
        "grade5_artist_binary9_instruction": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits?",
        "grade5_artist_for_loops1_instruction": "Use a `for` loop to draw this triangle that is 50 pixels wide. If you count from 1 to 3 by 1s, you can use this just like a `repeat` loop.",
        "grade5_artist_for_loops10_instruction": "Can you figure out how to use all of the things you've learned to create this image?\n\nNeed a hint? Click here.",
        "grade5_artist_for_loops1a_instruction": "Try using a `for loop`to create this triangular design. Don't worry that the numbers are different than the last puzzle. As long as you turn by the right number of degrees, the artist will make the correct shape!",
        "grade5_artist_for_loops1b_instruction": "Experiment with the `for` loop and play with the `counter` variable.",
        "grade5_artist_for_loops2_instruction": "Use a `repeat` inside of a `for` loop to create this stack of triangles that goes from 50 pixels to 100 pixels.",
        "grade5_artist_for_loops3_instruction": "These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. ",
        "grade5_artist_for_loops4_instruction": "These squares start at 15 pixels long, the largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
        "grade5_artist_for_loops5_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n\nHint:  You need to remove something!",
        "grade5_artist_for_loops6_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect. Try using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "grade5_artist_for_loops7_instruction": "Make three small changes to the code from the last level to get this!",
        "grade5_artist_for_loops7a_instruction": "Take the angle down to 72 degrees to get a spiraled pentagon.",
        "grade5_artist_for_loops7b_instruction": "Use the counter inside the `set alpha` block to get this faded center.\n(This hexagon pattern was made using a 60 degree turn.)",
        "grade5_artist_for_loops8_instruction": "Remember back in a previous stage when we used a variable to control the number of sides in a shape? We are going to do the same thing with the `counter` variable now. This pattern starts with a triangle and adds one side at a time until it draws a decagon (10 sides). Each side should be 100 pixels long. ",
        "grade5_artist_for_loops9_instruction": "Let's put it all together!  Using your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.\n\nVery little of the code has been provided for you.",
        "grade5_artist_for_loopsfreeplay11_instruction": "Free-Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNeed a hint? Click here.",
        "grade5_artist_for_loopsfreeplay12_instruction": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
        "grade5_artist_freeplay_instruction": "Create your own project! This creation will be saved to your Projects dashboard so that you can easily edit it any time!",
        "grade5_artist_functionparameters10_instruction": "Free Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.\n \nWant to know how our inspiration pattern was made? ",
        "grade5_artist_functionparameters11_instruction": "Freeplay: Below there are functions you've written, and more for you to play with. Draw something awesome! Play with the pen width to see how different your drawings look!",
        "grade5_artist_functionparameters7_instruction": "This image is similar to the last. Can you use a `for` loop with your function to make this design?",
        "grade5_artist_functionparameters8_instruction": "The triangle has 21 pixel sides, and the sides in each following shape are 7 pixels longer than the last.  Use the `multiplication` block to make this all happen with just one function call. Be sure to jump 100 pixels between polygons.",
        "grade5_artist_functionparameters9_instruction": "Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.",
        "grade5_artist_functionparameters9a_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.",
        "grade5_artist_functionparameters9b_instruction": "Can you figure out how to make this drawing using the function that you just created?",
        "grade5_artist_functionparameters_6_instruction": "Edit this function to add a parameter for the number of sides in your polygon.\n\nThe sides of all the shapes are 100 pixels long.",
        "grade5_artist_parameters_squares1_instruction": "Click \"edit\" to fill in the function definition of \"draw a square\" and add a parameter. It should take a length parameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75 pixels in length, each 100 pixels apart.",
        "grade5_artist_parameters_squares1a_instruction": "This program looks okay from here, but something isn't working right. See if you can figure out how to edit the function 'draw a square' to find the bug.",
        "grade5_artist_parameters_squares2_instruction": "Create a function called 'draw a square' and use it to outline these four boxes. Make sure to add a parameter for 'length'! Starting from the upper right, the box widths are 50, 100, 150, and 200.",
        "grade5_artist_parameters_squares2a_instruction": "Edit the function to accept a parameter called `length`.",
        "grade5_artist_parameters_stars1_instruction": "That last one is tough if you only use loops. Let's try drawing the same picture using this new 'function' that will help to **draw a star**.",
        "grade5_artist_parameters_triangles1_instruction": "This program looks okay from here, but something isn't working right. See if you can figure out how to edit the function 'draw a square' to find the bug.",
        "grade5_artist_parameters_triangles1a_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the function 'draw a triangle' to find the bugs.",
        "grade5_artist_parameters_triangles1aa_instruction": "Click \"edit\" to fill in the function definition of \"draw a triangle\" and add a parameter. It should take a length parameter, just like the triangle. This time, draw 3 triangles: 25, 50 and 75 pixels in length, each 100 pixels apart.",
        "grade5_artist_parameters_triangles2_instruction": "This drawing can be easily created using a new type of function that includes a parameter. The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides. Replace the '???' with the correct values to draw the picture.",
        "grade5_artist_parameters_triangles2a_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "grade5_artist_parameters_triangles3_instruction": "The code for this triangle function is broken.\n\nCan you edit the function to fix it, and then make triangles of length 150, 75, 25?",
        "grade5_artist_parameters_triangles4_instruction": "The code for this triangle function is broken. Can you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade5_artist_parameters_trianglesy_instruction": "The code for this triangle function is broken.\n\nCan you edit the function to fix it, and then make triangles of length 150, 75, 25?",
        "grade5_artist_variables_freeplay10_instruction": "Free Play: Experiment with the number of sides this shape has. Can you change the algorithm so that the overall size of the shape stays the same, no matter how many sides it has? Hint: If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher.",
        "grade5_artist_variables_freeplay14_instruction": "Free Play: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.\n\nFor even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.",
        "grade5_artist_variables_freeplay15_instruction": "Want a second peek at the inspiration design or the hints?  Click here!\n\nOtherwise, make a design all your own!",
        "grade5_artist_variables_freeplay16_instruction": "Still playing?  Here is a blank canvas where you can create whatever you want!",
        "grade5_artist_variables_hexagons1_instruction": "Let's try it again! \n\nCan you set the `length` variable to 60 to make this cool design with hexagons?",
        "grade5_artist_variables_letterT11_instruction": "Here’s more complicated code using the same concepts from the last puzzle - what should you set the \"sides\" variable to in order to draw this picture made of squares?",
        "grade5_artist_variables_new1_instruction": "Here is a program that will create an image. There are a few things that are wrong with it.",
        "grade5_artist_variables_octagons13_instruction": "When a shape has lots of sides, each side needs to be shorter if you want the whole pattern to fit on the screen. \nLet's recreate the algorithm for this amazing pattern, but instead of manually setting the `length` variable, let's use a math block with the `sides` variable inside to make sure that each shape fits correctly. The perimeter of each polygon is 300 pixels.\nNeed some hints?  Click here.",
        "grade5_artist_variables_pentagon8_instruction": "Use what you learned in the last puzzle to create this hexagon using the \"sides\" variable.\n\nSee how you could change just one value to draw a triangle,  square, pentagon, or octagon?",
        "grade5_artist_variables_pentagon9_instruction": "Now, recreate the algorithm from the last level and create a pentagon with sides of length 150.",
        "grade5_artist_variables_pentagons1_instruction": "Draw this pattern of pentagons with 100 pixel sides by setting the right value for `length` and dropping the `length` variable into all of the the correct places. \n\nSee how you only have to set the value for `length` once, and the code uses the right value everywhere?",
        "grade5_artist_variables_pentagons12_instruction": "Let's set the \"sides\" variable to 5. The more sides we add to this algorithm, the bigger this whole pattern gets! Notice that there is another variable called \"length\". We can now use that wherever we have a \"move forward.\" Set the \"length\" variable to 75 for this shape.",
        "grade5_artist_variables_rectangle6_instruction": "Now I want to make a rectangle that is twice as tall as it is wide. We've got a variable called \"width\" that needs to be set to 100. Can you use the math blocks to complete the code?",
        "grade5_artist_variables_square7_instruction": "Here’s some code that can draw any regular polygon. There’s a new variable called sides that is set to 4. Can you use the sides variable (along with the math block) to turn the right amount regardless of how many sides there are in the polygon?\n\nClick here to go back to the hint!",
        "grade5_artist_variables_triangles2_instruction": "Instead of using \"move forward by 150,\" the \"move\" block is now referencing a variable called \"length.\" Can you set \"length\" to 150 to draw this new triangle?",
        "grade5_artist_variables_triangles3_instruction": "Drag a number block to both the `set length` block and the `repeat _ times` block to draw a set of 50 pixel triangles. ",
        "grade5_bee_for_loops1_instruction": "Use a loop to collect the nectar from each flower.",
        "grade5_bee_for_loops10_instruction": "What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "grade5_bee_for_loops11_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. ",
        "grade5_bee_for_loops2_instruction": "Add the code necessary to make sure the bee collects all the nectar. Look at how much code you need for this puzzle! (We'll learn a simpler way in the next puzzle.)",
        "grade5_bee_for_loops3_instruction": "Try this puzzle using the `for` loop with `counter` variable and see how much shorter your code becomes.",
        "grade5_bee_for_loops4_instruction": "Help the bee collect all of the nectar.",
        "grade5_bee_for_loops6_instruction": "You can also use a \"for loop\" to count down. Try gathering this nectar by counting down from 5 to 1 by 1.",
        "grade5_bee_for_loops7_instruction": "Try collecting these flowers using an increment of 2.",
        "grade5_bee_for_loops8_instruction": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
        "grade5_bee_for_loops9_instruction": "Use the `counter` variable to navigate this garden with the fewest number of blocks possible.",
        "grade5_bee_parameters_new8_instruction": "That's a great function you've created! You are officially on your own now. Collect all the nectar. Make all the honey.",
        "grade5_bee_parameters_new9_instruction": "Bonus Challenge! If you are feeling ambitious, try this puzzle. It is possible to collect all of the nectar and make all of the honey using only a For loop, a Repeat loop, a function call, and a turn. Try it all on your own, or view the hints to build it step-by-step. Great job with this stage!",
        "grade5_pixelation_instruction": "Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.",
        "grade5_playlab_freeplay_instruction": "It's free play time! Have fun with all the blocks in your tool box. ",
        "grade5_playlab_parameters_points1_instruction": "Here's the same game but most of the code is hidden. We've added a new function called `score_points.`\n\nAdd a new parameter called `points` to the `player_score` function. \n\nThe `score_points` function should be able to both add and remove points from `player_score` depending on which actor is hit.\nChanging the score by 1 will add a point, while changing the score by -1 will subtract a point.\n\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will move on to the next puzzle. ",
        "grade5_playlab_variables1_instruction": "This time you don't have to write any code, just hit \"Run\" to play the game! In this game, you're the dog who is trying to collect more flags than the cat. Use the down arrow to control the dog. Press \"Finish\" when you're done playing.",
        "grade5_playlab_variables10_instruction": "Edit the the \"patrol\" function to add an \"actor\" parameter, so that we can call it for each of the actors on the screen. Remember, the actors correspond to numbers 1, 2, and 3.",
        "grade5_playlab_variables11_instruction": "Add another parameter called \"speed\" to the \"patrol\" function. Try using a \"set speed\" block with the new \"speed\" parameter to help Penguin get both flags before the other sprites even get one.",
        "grade5_playlab_variables12_instruction": "Let's have some fun! Look at the code provided to see if you can figure out what each block does.  \nWhen you're done, use the arrow keys to control Dog and collect all of the flags.\nNOTE: You don't need to make any changes to the program",
        "grade5_playlab_variables13_instruction": "Use the `when actor touches` block to send Dog back to the top-left ONLY if Dog touches any of the other actors.",
        "grade5_playlab_variables14_instruction": "It's free play time! Have fun with all the blocks in your tool box. ",
        "grade5_playlab_variables1ask_instruction": "This time, when you press 'run', you will see a 'prompt' asking you for a number. This number will be stored in a variable used to set the dog's speed.\n\n\nPay attention to how this program is written!",
        "grade5_playlab_variables2_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "grade5_playlab_variables3_instruction": "Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "grade5_playlab_variables4_instruction": "Now we're using a variable called \"height\" to control how high the dog can jump. Update the \"height\" variable so that the dog can jump high enough to reach all the flags.",
        "grade5_playlab_variables5_instruction": "You've seen now how a variable can be used to set the height of an actor's jump. How else could  you use a variable?\n\nLet's build a game! First we'll need a score. Try setting the 'points' variable to give yourself 10 free points!",
        "grade5_playlab_variables6_instruction": "Use the right arrow to throw pie.\n\nIn our game, how should we score points? Add 1 to your \"points\" variable each time Dog hits Cat with a piece of pie. Use the \"when actor 2 touches anything\" event to trigger an update to your score. You can increment your variable by setting \"points = points + 1.\" Get your score up to 10 (going one at a time!) to pass the level.",
        "grade5_playlab_variables6ask_instruction": "This time, you need 100 points to win!  Don't worry though, you can choose how many points you earn each time you score a hit!\nTry adding the `ask` block and changing the number 1 out for the variable `value`.",
        "grade5_playlab_variables7_instruction": "Nice, now let's make sure this game isn't too easy to play. Any time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point. Start with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "grade5_playlab_variables71_instruction": "Here's our game from an earlier stage, but most of the code is hidden. There’s a new function `score_points.`\n\nEdit the function so that a new parameter called `points` can be added to `player_score`. \n\nThe variable `player_score` should increase each time Dog tags Cat with pie, and decrease each time that Cat tags Dog with a sandwich.\n\nNote: When you're done, click \"Run\" to play.  When Dog scores 6 points, you will move on to the next puzzle. ",
        "grade5_playlab_variables9_instruction": "Here's a function called `patrol`. \n\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels.",
        "grade5_playlab_variables_freeplay_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\nHint: scroll down to see all the commands in the workspace.",
        "grade5_playlab_variables_jump1_instruction": "This puzzle uses a hidden function that makes the dog jump when the 'up' arrow is pressed. The height of the jumps can be set at the start of the game using the 'jumpPower' variable. Try to touch all of the flags!",
        "grade5_prompt_test_instruction": "Variables aren't always numbers. What if you wanted to store a word or text? Experiment with the new `ask` block.",
        "gradeK_sequence_4_instruction": "Try this one yourself from the beginning.",
        "gradek_adventurer_loops1_instruction": "Three piles of gold!  Collect all three.",
        "gradek_adventurer_loops10_instruction": "Help me get all of the gold from this cave.",
        "gradek_adventurer_loops2_instruction": "How can Laurel collect all five piles of gold using only one `[E-->]` block?",
        "gradek_adventurer_loops3_instruction": "Can you fix Laurel's path to get all of this gold?",
        "gradek_adventurer_loops4_instruction": "Use what you learned to get all of the coins.",
        "gradek_adventurer_loops4a_instruction": "Add to this code to collect all of the coins.",
        "gradek_adventurer_loops5_instruction": "What should you add to this code to get all of the gold?",
        "gradek_adventurer_loops6_instruction": "Write the code to get all of this gold.",
        "gradek_adventurer_loops7_instruction": "Write the code to get all of this gold.",
        "gradek_adventurer_loops7_challenge_instruction": "**Challenge:** The gold goes all the way up these stairs!  Write the code to help me get it all.",
        "gradek_adventurer_loops8_instruction": "Help me get all of the gold from this deep valley.",
        "gradek_adventurer_loops9_instruction": "Help me get all of the gold from this cave.",
        "gradek_adventurer_loopsFP_instruction": "Eureka!  Collect as much gold as you can!",
        "gradek_adventurer_loopsPre_instruction": "This is Laurel the Adventurer.  Mover her around and get as much gold as you can!",
        "gradek_artist_loops1_instruction": "Help the artist draw this line two times forward.",
        "gradek_artist_loops2_instruction": "Our artist is trying to draw a line five times, but can't get it right.  Can you help?",
        "gradek_artist_loops3_instruction": "Now, use a `repeat` loop to draw this line five times!",
        "gradek_artist_loops4_instruction": "Draw a line seven steps long. This will become our horizon.",
        "gradek_artist_loops5_instruction": "Let's put a nice hill in the back.",
        "gradek_artist_loops6_instruction": "Use the `repeat` loop to add waves to the water.",
        "gradek_artist_loops7_instruction": "We need a ladder up to the boat.",
        "gradek_artist_loops8_instruction": "Challenge: The stairs down to the dock are broken.  Help me fix them.",
        "gradek_artist_loops9_instruction": "Time to head back to land. Help me put down stones so I don't fall in!",
        "gradek_artist_loopsA_instruction": "Help me build steps to watch the ship sail away.",
        "gradek_artist_loopsFP_instruction": "The artist saw something funny in the distance.  Draw what you think he saw.",
        "gradek_artist_loopsPre_instruction": "This is a new type of puzzle called \"Artist\". Play with the level and draw something fun.",
        "gradek_playlab_events1_instruction": "Make your robot say \"Hello!\" when the button is clicked.",
        "gradek_playlab_events1a_instruction": "Add a block so that when you click the \"up\" button, Olive the Cat walks up.",
        "gradek_playlab_events1c_instruction": "Jorge the Dog wants to say \"Hi there.\"  Can you help him?",
        "gradek_playlab_events2_instruction": "Edit the code so that when the second bird is clicked, your program plays a sound!",
        "gradek_playlab_events2a_instruction": "Add a block so that when you click \"down\" Olive the Cat walks down.",
        "gradek_playlab_events2c_instruction": "Help Jorge the Dog get moving by connecting the `move left` block to the `when left` event block that is already in the workspace.",
        "gradek_playlab_events3_instruction": "When the third bird is clicked, the background should change to a city. Can you add code to make this happen?",
        "gradek_playlab_events3a_instruction": "When the third bird is clicked, the background should change to a city. Can you add code to make this happen?",
        "gradek_playlab_events3b_instruction": "Add a button so that Olive the Cat moves right when you click the \"right\" button.",
        "gradek_playlab_events3c_instruction": "Now, get Jorge to move right when the `right` button is clicked.",
        "gradek_playlab_events4_instruction": "Add code to make something happen when the fourth bird is clicked. Be creative!",
        "gradek_playlab_events4a_instruction": "Add a block so that Olive the Cat moves left when you click the \"left\" button.",
        "gradek_playlab_events4c_instruction": "Add events to have Jorge move up and down when the `up` and `down` buttons are pressed.",
        "gradek_playlab_events5_instruction": "About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.",
        "gradek_playlab_events5a_instruction": "About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.",
        "gradek_playlab_events5c_instruction": "Make this more interesting by changing the background and playing a random sound when Jorge is clicked.",
        "gradek_playlab_eventsA_instruction": "Now, have the cat change to a random size AND have it play a random sound when you click the center button.",
        "gradek_playlab_eventsFP_instruction": "Add anything you want to this game.  Can you make the dinosaur disappear when Jorge runs into him?",
        "gradek_playlab_eventsPre_instruction": "This is a Play Lab level.  Move blocks to the workspace and see what happens!",
        "group test_instruction": "Make a game",
        "harvester_Kahoot_instruction": "Now help the farmer pick the corn, lettuce, **and** pumpkin.",
        "harvey_pixelation_instruction": "Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.",
        "harvey_snowflake_artist1_instruction": "Get your snowflake ready for 3d printing!",
        "harvey_snowflake_artist2_instruction": "Get your snowflake ready for 3d printing!",
        "harvey_tictactoe_instruction": "Let's play a game! Draw as many X's as you can! Can you get 3 in a row?",
        "iceAgeLoopsforVideo_instruction": "Can you get to the acorn with just one `move forward` block?",
        "iceage_click_hello_instruction": "Can you help Sid call for his friends when you click on him? ",
        "iceage_click_hello_2018_instruction": "Can you help Sid call for his friends when you click on him? ",
        "iceage_free_play_instruction": "Time to create your own game or story! ",
        "iceage_free_play_2018_instruction": "Time to create your own game or story! ",
        "iceage_free_playcourseF_IceAge_11_instruction": "Time to create your own game or story! ",
        "iceage_hello1_instruction": "Help Sid say \"Hello!\" by dragging the `say` block out and connecting it to the bottom of the `when run` event.",
        "iceage_hello1_2018_instruction": "Help Sid say \"Hello!\" by dragging the `say` block out and connecting it to the bottom of the `when run` event.",
        "iceage_hello2_instruction": "Help Manny and Sid greet each other by using the the `actor ___ say` block twice.",
        "iceage_hello2_2018_instruction": "Help Manny and Sid greet each other by using the the `actor ___ say` block twice.",
        "iceage_move_events_instruction": "Write the code to help Scrat get all of the acorns!",
        "iceage_move_events_2018_instruction": "Write the code to help Scrat get all of the acorns!",
        "iceage_move_to_actor_instruction": "Connect a block to the `when actor touches` event to play a sound when Diego finds Manny.",
        "iceage_move_to_actor_2018_instruction": "Connect a block to the `when actor touches` event to play a sound when Diego finds Manny.",
        "iceage_move_to_flag_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "iceage_move_to_flag_2018_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "iceage_repeat_instruction": "Help Granny get some exercise by moving left and right repeatedly.",
        "iceage_repeat_2018_instruction": "Help Granny get some exercise by moving left and right repeatedly.",
        "iceage_sound_and_points_instruction": "Can you finish this program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? ",
        "iceage_sound_and_points_2018_instruction": "Can you finish this program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? ",
        "iceage_throw_hearts_instruction": "Use the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets hit with them.",
        "iceage_throw_hearts_2018_instruction": "Use the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets hit with them.",
        "iceage_warn_ice_age_instruction": "Change the scene to an icy background and set Sid’s (actor 1) speed to fast.",
        "iceage_warn_ice_age_2018_instruction": "Change the scene to an icy background and set Sid’s (actor 1) speed to fast.",
        "jessie-test_instruction": "Lots of instructions",
        "k-1 maze 1_instruction": "Can you make me move West to get to the pig?",
        "k1stickerfreeplay_instruction": "The artist saw something funny in the distance.  Draw what you think he saw.",
        "kikiTesta_instruction": "Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.\n\nCan you help her grab as many as she can using just 4 blocks?",
        "kikiTesting_instruction": "See all angles of Stevie and Jorge",
        "level 'grade3_Loops_10_instruction": "Such a busy bee!\n\nHelp bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "level 'grade3_Loops_11_instruction": "The shape of this path is different than the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "level 'grade3_Loops_12_instruction": "Can you find the quickest way for the bee to collect all of the nectar and make all of the honey?",
        "level 'grade3_Loops_2_instruction": "This time, use a loop to gather all of the nectar.",
        "level 'grade3_Loops_3_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "level 'grade3_Loops_4_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "level 'grade3_Loops_5_instruction": "What a beautiful field of flowers!   Help the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?",
        "level 'grade3_Loops_6_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "level 'grade3_Loops_7_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "level 'grade3_Loops_8_instruction": "Collect all the nectar and make all of the honey using the fewest blocks possible.",
        "level 'grade3_Loops_9_instruction": "Collect nectar from each flower and make honey at each honeycomb using the fewest blocks possible.",
        "level grade3_Loops_2_instruction": "This time, use a loop to gather all of the nectar.",
        "loop pet test_instruction": "Last time, you practiced using the \"repeat forever\" loop to make a sprite do something forever. This time, we will use it to make a virtual pet. \n\nThis dog's name is Daisy. Daisy LOVES to snack on carrots. Use the \"drag and drop\" block to move the carrot to Daisy.",
        "loops_forvideo_angrybirds_ab_instruction": "Use loops to get the bird to the pig!",
        "loops_forvideo_angrybirds_cf_instruction": "Use loops to get the bird to the pig!",
        "loops_forvideo_bee_cf_instruction": "Use loops to help the bee get nectar from all the flowers!",
        "loops_forvideo_collector_ab_instruction": "Use loops to help the collector get all the gems!",
        "loops_forvideo_collector_cf_instruction": "Use loops to help Laurel collect gems!",
        "loops_forvideo_harvester_ab_instruction": "Use loops to help the harvester pick the corn!",
        "loops_forvideo_harvester_cf_instruction": "Use loops to help the harvester pick her crops!",
        "loops_forvideo_iceage_ab_instruction": "Use loops to get Scrat to the acorn!",
        "loops_forvideo_iceage_cf_instruction": "Use loops to get Scrat to the acorn!",
        "love_spring_1_instruction": "Let's celebrate Spring!  We have put some seeds in the ground to prepare for the season's flowers.  Can you cover them up so that the birds don't eat them?",
        "love_spring_2_instruction": "Our flowers are in full bloom!  Now we need the bee to grab nectar from each one so he can make plenty of honey back at his hive!",
        "love_spring_3_instruction": "Figure out how to change this code so that Robin chooses a number between 1 and 20.  \n\nWhen you're ready, press \"Run\" and play until you guess Robin's number!",
        "marina_gameLab_play_instruction": "Clone this level and make your own blocks!",
        "mike3bit_instruction": "We start you with the 4x2 image Maddie was creating, but we've left out the last few pixels. Finish off the image by figuring out which colors are missing and encoding them.",
        "mike3bitbird_instruction": "Here's an example of an image made with 3-bit color. Try changing it to understand how it works. If you want to reset the image, press \"Start Over\".",
        "mike3bitfreeplay_instruction": "Make something awesome and share it with your classmates! You can copy and paste the value of a pixel to use it repeatedly.",
        "mike3bitmario_instruction": "A careless binary coder typed in ONE extra 0 or 1 somewhere within this image's data. The extra bit that is causing Mario to glitch out! \n\nDelete the extra bit to restore Mario back to normal!",
        "pet game 1_instruction": "Use the \"make a new sprite\" block to make yourself a pet!",
        "pet game 2_instruction": "Your pet needs some exercise! Use the \"add behavior\" block to get them moving.",
        "pet game 3_instruction": "Pets love toys! Use a second \"make sprite\" block to give your pet a toy, then use the \"move towards\" behavior to make your pet run to their new toy.",
        "pet game 4_instruction": "When your pet gets to their toy, they get excited! Use the \"when touches\" block to detect when your pet gets to their toy.\n\nWhen that happens, use the \"remove behavior\" block to make them stop walking, and the \"add behavior\" block to make them have a dance party!",
        "pet game 5_instruction": "You can add lots more things for your pet to interact with! Play around with the \"set sprite\" block and make more stuff anywhere you want it!",
        "pet game 6_instruction": "It's important for pets to learn to follow commands. Use the \"when clicked\" block to teach your pet to only start wandering after you click on them.",
        "pet game 7_instruction": "Pets need to learn to stop, too! Use the \"when clicked\" block to teach your pet to stop wandering after you click on them.",
        "pet game 8_instruction": "Your pet now has two toys! Use the \"when clicked\" block to get them to move to the toy you click on",
        "pet game 9_instruction": "Your pet has been so good, they deserve a treat. Use the \"add behavior\" block to make the bone draggable, then drag it to your pet.",
        "playEventsK1_instruction": "This game is called \"Play Lab\".  See if you can figure out what each block does.",
        "playEventsK2_instruction": "Jorge wants to say \"Hi there.\"\n\nCan you help?",
        "playEventsK3_instruction": "Jorge wants to be scratched behind the ears!  Can you make it so that when you click Jorge he is happy?",
        "playEventsK4_instruction": "Can you make it so that Jorge the dog chases Robin the bird when you click the up arrow?",
        "playEventsK5_instruction": "Now add code so that Robin flies away when you click the forward arrow.",
        "playEventsK6_instruction": "Have Robin talk back to Jorge when you click on her.",
        "playEventsK7_instruction": "What else can you do in this fun scene?",
        "playLabDebugVideo1_instruction": "Jorge the Dog wants to say \"Hi there.\"  Can you help him?",
        "ramp_artist_loops1_instruction": "Move forward by 60 pixels to complete this puzzle.",
        "ramp_artist_loops1_2018_instruction": "Move forward by 60 pixels to complete this puzzle.",
        "ramp_artist_loops2_instruction": "Move forward five times and make this colored line.",
        "ramp_artist_loops2_2018_instruction": "Move forward five times and make this colored line.",
        "ramp_artist_loops3_instruction": "Use a `repeat` loop to draw five colored dashes.",
        "ramp_artist_loops3_2018_instruction": "Use a `repeat` loop to draw five colored dashes.",
        "ramp_artist_loops4_instruction": "What happens when you add a 72 degree right turn after everything else inside your loop?",
        "ramp_artist_loops4_2018_instruction": "What happens when you add a 72 degree right turn after everything else inside your loop?",
        "ramp_artist_loops5_instruction": "Use loops to draw this staircase.",
        "ramp_artist_loops5_2018_instruction": "Use loops to draw this staircase.",
        "ramp_artist_loops6_instruction": "Edit your loop to draw this staircase.",
        "ramp_artist_loops6_2018_instruction": "Edit your loop to draw this staircase.",
        "ramp_artist_loops7_instruction": "Look for a pattern and make this code shorter using loops!",
        "ramp_artist_loops7_2018_instruction": "Look for a pattern and make this code shorter using loops!",
        "ramp_artist_loops8_instruction": "Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops8_2018_instruction": "Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops8_clone_instruction": "Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops9_instruction": "Solve this puzzle by drawing a square.",
        "ramp_artist_loops9_2018_instruction": "Solve this puzzle by drawing a square.",
        "sample1_instruction": "Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.\n\nCan you help her grab as many as she can using just 4 blocks?",
        "sample10_instruction": "Now you can use loops to draw whatever you like!",
        "sample10a_instruction": "You have helped the adventurer and her bee!  As a reward, please stay and play around in my magical village. \n\nYou should have everything you need to create a game of your own.",
        "sample2_instruction": "Use what you've learned to help bee gather all of this honey using only the blocks that you have here.",
        "sample2a_instruction": "Use what you've learned to help bee gather all of this honey using only 4 blocks.",
        "sample3_instruction": "Now you can help bee make all of the honey using just the blocks in the toolbox.",
        "sample3assessment_instruction": "Can you figure out how to gather all of this nectar in just one try?",
        "sample4_instruction": "Our adventurer has found a stash of coins in this cave.\n\nCan you help her grab as many as she can using just 7 blocks?",
        "sample5_instruction": "Help bee make all of the honey.",
        "sample6_instruction": "Challenge: Help bee get all of the nectar.",
        "sample7assessment_instruction": "Can you help bee make all of the honey in just one try?",
        "sample8_instruction": "Look at this trove of coins! How many can you get the adventurer to grab?",
        "sample9_instruction": "Use loops to help the artist connect all of the dots. ",
        "sample9a_instruction": "The wizard has found his potions!  Use everything you have learned to help him collect them.",
        "scrat 16 (copy 1)_instruction": "Acorn! Acorn! Acorn! Use an \"if\" block to get me there with the fewest number of blocks.",
        "scrat 16_instruction": "Acorn! Acorn! Acorn! Use an \"if\" block to get me there with the fewest number of blocks.",
        "scrat 17 (copy 1)_instruction": "Ok, let's do that again for practice - this isn't very different, but watch out for the <insert obstacle name for Scrat>!",
        "scrat 17_instruction": "Ok, let's do that again for practice - this isn't very different, but watch out for the wall!",
        "scrat 18 (copy 1)_instruction": "The \"If-else\" blocks checks a condition, and then does one thing OR another. To get me to the acorn try to use this new block.",
        "scrat 18_instruction": "The \"If-else\" blocks checks a condition, and then does one thing OR another. To get me to the acorn try to use this new block.",
        "scrat 19 (copy 1)_instruction": "One more practice of the \"if-else\" block, can you get it right on your first try?",
        "scrat 19_instruction": "One more practice of the \"if-else\" block, can you get it right on your first try?",
        "scrat 20_instruction": "Can you add just 3 blocks to help me solve a more complex maze? If you do it right, I can walk any curvy path no matter the length. Hurry! The ice is melting!",
        "skratDebugVideo1_instruction": "Get Scrat to the Acorn.",
        "subgoal U3 L4 introducing subgoal labels_instruction": "Introduce orient turtle and move turtle",
        "subgoal U3L2 Using Simple Commands_instruction": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
        "subgoalU3L2_TurtleSquare_right_instruction": "Draw a square to the front and to the right of the starting location. (Click to show full instructions)",
        "template test_instruction": "what's up",
        "testArtistForTestK_instruction": "The Artist is trying to draw a line five times, but can't get it right.  Can you help?",
        "test_sarah_instruction": "hi hi",
        "u3-old-drawing-view_instruction": "DO This",
        "valentine_artist_03_instruction": "Now try something on your own!",
        "weird_playLab_instruction": "About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot."
      },
      "markdown_instructions": {
        "'pre-assessment survey q25A'_markdown_instruction": "If yes, what computer science course(s) had you taken before your current computer science  class? \n",
        "2-3 Artist 1 new_markdown_instruction": "Hi, I'm an artist. You can write code to make me draw almost anything. Use a few blocks to make me draw over the grey lines in the picture. (Each line is 100 pixels long)\n\n",
        "2-3 Artist 11_markdown_instruction": "Give the stop sign a border by making an octagon with 100 pixels sides. ",
        "2-3 Artist 12_markdown_instruction": "Create a circle to finish the eyeball! \n\nIf the artist turns 1 degree with each loop, how many times do you need to repeat the code to draw a circle? ",
        "2-3 Artist 2 new_markdown_instruction": "This house has a half-finished wall. Each side is 100, but the half-finished wall is only 50. Complete the wall.",
        "2-3 Artist 3.4_markdown_instruction": "The jump block moves the artist without drawing. Draw the dashed line using both the `jump forward` and `move forward` blocks. Each line is 50 pixels long.",
        "2-3 Artist 3new_markdown_instruction": "The red hat is 100 pixels tall. Finish drawing a black hat that is 70 pixels shorter. \n\n*(Note: The width of each hat is 50 pixels.)*",
        "2-3 Artist 4_markdown_instruction": "Help me complete the house for this cat.",
        "2-3 Artist 6_markdown_instruction": "This house needs a roof! Draw the triangle.  \n\nHint: all three sides are the same length.\n\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\" width=\"300\"/>",
        "2-3 Artist 7_markdown_instruction": "Finish drawing the last set of windows on the school so that everyone in class can see outside. \n\nThe sides of each square window pane are 25 pixels long. ",
        "2-3 Artist 8_markdown_instruction": "Time to build a barn!\n\nMake the rooms for each animal by splitting the barn into 2 equal-sized squares. \n\nHint: The rectangle is 200 pixels wide and 100 pixels tall.\n\nThere are many different ways to solve this puzzle.",
        "2-3 Artist 9 NEW_markdown_instruction": "Finish this kite",
        "2-3 Artist 9 REPLACEMENT_markdown_instruction": "Finish drawing these stairs!",
        "2-3 Artist 9_markdown_instruction": "Finish this kite",
        "2-3 Artist Assessment 1_markdown_instruction": "**Assessment:** Finish drawing the last tooth. It is 25 pixels wide and 25 pixels tall.",
        "2-3 Artist Debugging 10_markdown_instruction": "The direction pad on my game controller is too narrow. \n\nCan you make it wider by 10 pixels?\n\nTry running the code first to see what's wrong.",
        "2-3 Artist Debugging 11_markdown_instruction": "My snowflake is falling apart!\n\nCan you figure out what's going wrong?",
        "2-3 Artist Debugging 2_markdown_instruction": "This code for the cat's whiskers is wrong. \n\nFix this code to draw whiskers that are all the same length.",
        "2-3 Artist Debugging 3_markdown_instruction": "My boat has a hole! \n\nWhat do you need to fix to make the ends meet?",
        "2-3 Artist Debugging 5_markdown_instruction": "The code that we have for the leg and foot is wrong. \n\nCan you fix it?",
        "2-3 Artist Debugging 6_markdown_instruction": "Looks like I'm sitting on a chair that’s missing a leg!\n\nEdit the code to draw the last leg.",
        "2-3 Artist Debugging 7_markdown_instruction": "Looks like the C in code is drawn backwards!\n\nCan you make it look like a C again?",
        "2-3 Artist Debugging 8_markdown_instruction": "My teacher says that I should finish what I start!\n\nHelp me finish my pinwheel. Can you figure out what's wrong?",
        "2-3 Artist Debugging 9_markdown_instruction": "Something is off!\n\nThe code for this stem is wrong. Can you figure out how to get the artist to trace the stem the right way?",
        "2-3 Artist Debugging Assessment 1_markdown_instruction": "**Assessment:** \nWhy does this square end up being 75 pixels too small on each side?  \n\nWhere does the code go wrong?",
        "2-3 Artist Free Play_markdown_instruction": "Free-play! Draw anything you'd like.",
        "2-3 Artist Functions 1 a_markdown_instruction": "\"Me zombie artist. Me love drawing!\" \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.\n\n",
        "2-3 Artist Functions 1_markdown_instruction": "\"Me zombie artist. Me love drawing!\" \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.\n\n",
        "2-3 Artist Functions 10_markdown_instruction": "**Freeplay:** Here are two functions, one to draw a big gear and one to draw a small gear.  \n\nUse them to draw the inside of a machine!",
        "2-3 Artist Functions 11 a_markdown_instruction": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares!  \n\nCan you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
        "2-3 Artist Functions 11.5 a_markdown_instruction": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program **6** times, turning **60** degrees each time you loop?",
        "2-3 Artist Functions 11.5_markdown_instruction": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program 6 times, turning 60 degrees each time you loop?",
        "2-3 Artist Functions 11_markdown_instruction": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares!  \n\nCan you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
        "2-3 Artist Functions 12 Mike_markdown_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 12 a_markdown_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 12_markdown_instruction": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
        "2-3 Artist Functions 2 a_markdown_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the small green `draw a square` block to call this new function and create the glasses. \n\nThe squares in this drawing are 75 pixels apart.",
        "2-3 Artist Functions 2_markdown_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
        "2-3 Artist Functions 3 a_markdown_instruction": "Edit the \"draw a square\" function to draw glasses with frames that are 115px on each side. \n\nThe squares are now 45 pixels apart.",
        "2-3 Artist Functions 3_markdown_instruction": "Edit the function to draw a square with a side length of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart.",
        "2-3 Artist Functions 4 a_markdown_instruction": "Now, put the function inside of a loop and add an extra turn to draw these three squares.",
        "2-3 Artist Functions 4_markdown_instruction": "Now, put the function inside of a loop to draw these three squares.",
        "2-3 Artist Functions 9_markdown_instruction": "**Freeplay:** Here is a snowflake function. Experiment with it to create a winter scene! \n\nThis is a free play level, so there is no puzzle to solve. Have fun!",
        "2-3 Artist Loops 1_markdown_instruction": "Can you make a hexagon with sides that are 100 pixels long to finish the cell? Remember, that means that you will only need to turn 60 degrees!",
        "2-3 Artist Loops 2_markdown_instruction": "Now use a repeat block to make the cell a shell.",
        "2-3 Artist Loops New 10_markdown_instruction": "Now let's connect a bunch of V's together in a loop.",
        "2-3 Artist Loops New 11_markdown_instruction": "Time to make something snazzy! \n\nRebuild the code from the last puzzle, but this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24 times instead of 8.",
        "2-3 Artist Loops New 12_markdown_instruction": "Draw a diamond with sides of 100 pixels. ",
        "2-3 Artist Loops New 13_markdown_instruction": "We are going to start you with some code (in grey) to make one diamond. \n\nLoop the grey code to create a fun pattern!",
        "2-3 Artist Loops New 14_markdown_instruction": "Play around with the code for the diamond and see what other patterns you can make. \n\nTry changing how many degrees you turn and how many times you loop.",
        "2-3 Artist Loops New 15_markdown_instruction": "Now, draw anything you like!\n<br/><br/>\n\n",
        "2-3 Artist Loops New 2_markdown_instruction": "Here is the same puzzle that we just solved, but this time, we can only use one `move forward` block and one `turn` block this time.\n\nCan you use a `repeat` to solve this puzzle?",
        "2-3 Artist Loops New 9_markdown_instruction": "Draw a simple V (where both sides are 50 pixels) to complete the arrow.",
        "2-3 Artist Nested Loops 10_markdown_instruction": "Loop this code 12 times to complete the pattern.",
        "2-3 Artist Nested Loops 11_markdown_instruction": "Loop this code 4 times to complete the pattern, turn 90 degrees after each circle.",
        "2-3 Artist Nested Loops 12_markdown_instruction": "Loop this code 12 times to complete the curls.",
        "2-3 Artist Nested Loops 2_markdown_instruction": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.",
        "2-3 Artist Nested Loops 3_markdown_instruction": "You'll need to loop your triangle 12 times to draw this pattern. \n\nDivide the number of degrees in a circle (360) by the number of shapes you're drawing (12) to figure out how far to turn after each shape.",
        "2-3 Artist Nested Loops 4_markdown_instruction": "Loop this diamond 12 times to draw a flower!\n\nNote: We'll use the same angle to loop 12 diamonds as we did for 12 triangles.  \nHow much do you need to turn after each shape?",
        "2-3 Artist Nested Loops 5_markdown_instruction": "Fill in this building's windows using a nested loop. \n\nThe windows are 20 pixels long and 20 pixels apart.",
        "2-3 Artist Nested Loops 6_markdown_instruction": "This dinosaur has 8 spikes running up its tail.\n\nEach spike is 30 pixels long. \n\nLoop the triangle 8 times, but make sure to jump forward after each one!",
        "2-3 Artist Nested Loops 7_markdown_instruction": "Loop this triangle 10 times to draw the sun. \n\nYou'll need to move and turn after each triangle. \n\nYou can figure out how much to turn by dividing the number of degrees in a circle by the number of triangles that make it up.",
        "2-3 Artist Nested Loops 8_markdown_instruction": "Now let's add some grass to our picture. \n\nEach tuft of grass is 50 pixels apart.",
        "2-3 Artist Nested Loops 9_markdown_instruction": "We'll finish this picture by adding our flower. \n\nLoop the diamond 12 times to draw the flower.",
        "2-3 Artist Nested Loops Free Play_markdown_instruction": "Free play, draw something cool with nested loops.",
        "2-3 Bee Conditionals 11_markdown_instruction": "I wonder what's out there!\n\nHelp me fly around the yard and collect nectar only from the flowers that have some. ",
        "2-3 Bee Conditionals 13_markdown_instruction": "There's a lot happening here!\n\nUse what you've learned to collect all of the nectar and then make the honey.",
        "2-3 Bee Conditionals 14_markdown_instruction": "Let's put everything together!\n\nUse what you've learned to help me collect nectar only from flowers that have it, using as few blocks as possible.  \n\nDon't forget to make honey at the end.",
        "2-3 Bee Conditionals 15_markdown_instruction": "This stair step pattern should look familiar.  \n\nCan you collect nectar only from the flowers that have some, using as few blocks as possible?",
        "2-3 Bee Conditionals 2_markdown_instruction": "I'm a hungry bee! \n\n\nHelp me collect all of the nectar from the flowers using the fewest number of blocks.",
        "2-3 Bee Conditionals 3_markdown_instruction": "Look at all of that nectar!\n\nHelp me collect the nectar and make the honey using as few blocks as you can.  ",
        "2-3 Bee Conditionals 5_markdown_instruction": "These magic purple flowers change!\n\nEach time you try the puzzle, purple flowers can have either 1 nectar or none at all...but you won't know the number until you run the code! \n\nBe careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "2-3 Bee Conditionals Assessment 1_markdown_instruction": "**Assessment:** Collect all of the nectar.  \nBe careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "2-3 Bee Debugging 1_markdown_instruction": "These blocks are really bugging me!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 10_markdown_instruction": "This puzzle is making me loopy! \n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging 2_markdown_instruction": "Can you find the problem here?\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 3_markdown_instruction": "Ooh, this one stings!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 5_markdown_instruction": "That flower looks tasty! \n\nFix the error(s) to collect all of the nectar.  \nYou can now use both run and step.",
        "2-3 Bee Debugging 6_markdown_instruction": "What a sweet challenge!\n\nFix the error(s) to collect all of the nectar.",
        "2-3 Bee Debugging 9_markdown_instruction": "\"Bee\" patient with this one!\n\nYou will need to fix a couple of things in this program to collect all of the nectar and make all of the honey.",
        "2-3 Bee Debugging Assessment 1_markdown_instruction": "**Assessment:**  Now it's time to show what you know!\n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "2-3 Bee Functions 1_markdown_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 2 nectar` function to collect the nectar from each flower.",
        "2-3 Bee Functions 10_markdown_instruction": "Purple flowers change between either 1 or 0 nectar each time you run the puzzle.   \n\nCreate a function that collects nectar only from purple flowers that have nectar.",
        "2-3 Bee Functions 2_markdown_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 5` function to get 5 nectars at a time.",
        "2-3 Bee Functions 4_markdown_instruction": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the function to collect all of the nectar.",
        "2-3 Bee Functions Assessment 1_markdown_instruction": "**Assessment:** Use the given function to collect nectar from each flower.",
        "2-3 Bee Functions Assessment 2_markdown_instruction": "**Assessment:** Create a function to turn, move forward and make 3 honey, then return the bee to where it started and turn back.",
        "2-3 Bee Loops 1_markdown_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "2-3 Bee Loops 13_markdown_instruction": "**Assessment:** Collect all of the nectar using the fewest blocks possible.",
        "2-3 Bee Loops 3A_markdown_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "2-3 Bee Loops 3B_markdown_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "2-3 Bee Loops 4_markdown_instruction": "Such a busy bee!\n\nHelp Bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "2-3 Bee Loops 4A_markdown_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "2-3 Bee Loops 5_markdown_instruction": "The shape of this path is different from the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "2-3 Bee Loops 7_markdown_instruction": "What a beautiful field of flowers!   \n\nHelp the bee visit each one.\n\nCan you find a way to do it with fewer than 7 blocks?",
        "2-3 Bee Loops 8_markdown_instruction": "These purple flowers have different amount of nectar each time you run the puzzle. \n\nUse the `while nectar` loop to collect all of the nectar. \n\nThis loop will run as long as the condition is true, in this case `nectar > 0`.",
        "2-3 Bee Loops Assessment 1_markdown_instruction": "**Assessment:** Use a `while` loop to collect all of the nectar from these flowers.",
        "2-3 Maze 1_markdown_instruction": "Can you help me catch the naughty pig? \n\nStack a couple of `move forward` blocks below the `when run` block and press \"Run\". ",
        "2-3 Maze 12 - One Move Block_markdown_instruction": "Get the mean pig! But this time, you can only use one `move forward` block...\n\nAh, look closely - do you see any other blocks that can help you get there?",
        "2-3 Maze 12_markdown_instruction": "Suddenly, a magical block appears!  With the `repeat` block, you can loop code over and over.\n\nCan you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "2-3 Maze 13_markdown_instruction": "Get me to the pig! You can only use one `move forward` block this time",
        "2-3 Maze 15_markdown_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "2-3 Maze Loops 18_markdown_instruction": "Get me to the sunflower using the fewest blocks possible!  \n\nTry using one `repeat` loop inside of another to cut down on the amount of code you need.",
        "2-3 Maze Loops 19_markdown_instruction": "Let's take this to another level! \n\nUse loops to get me to the sunflower with the fewest loops possible.",
        "2-3 Maze Loops Assessment 1_markdown_instruction": "**Assessment:**  Get me to the sunflower using only 5 blocks! ",
        "4-5 Artist 1_markdown_instruction": "Help me finish drawing my box. (Each line is 300 pixels long) \n\n",
        "4-5 Artist 10_markdown_instruction": "Press \"Run\" to try the code. Then, repeat it enough times to complete the drawing. The colors will be different every time.",
        "4-5 Artist 11_markdown_instruction": "Complete the green lines.  \n\nThe lines are 300 pixels long and 15 pixels apart.",
        "4-5 Artist 2_markdown_instruction": "Loop this code using the `repeat` block to complete the square.",
        "4-5 Artist 3.5_markdown_instruction": "Try to figure out what happens if you run this code (or just press \"Run\" and try it). \n\nNext, repeat the code enough times to complete the drawing!",
        "4-5 Artist 3_markdown_instruction": "This rectangular flower bed has a perimeter of 600.  \nThe long side has a length of 200. \n\nDraw the rectangle using as few blocks as possible.",
        "4-5 Artist 4_markdown_instruction": "How many degrees are in a circle?  \n\nLoop the blocks to create a circle of colors.",
        "4-5 Artist 5_markdown_instruction": "What can we replace \"???\" with to make sure that the zombie completes this drawing using the loop provided?",
        "4-5 Artist 6_markdown_instruction": "This equilateral triangle has angles of 60, 60, and 60 degrees. Each side is 200 pixels. Complete the drawing.",
        "4-5 Artist 7_markdown_instruction": "This right triangle has angles of 30, 60, and 90 degrees.  The slanted side's length (length of the hypotenuse) is 200 pixels. \n\nComplete the drawing.",
        "4-5 Artist 8_markdown_instruction": "The halfway line on a soccer field is *perpendicular* to the sidelines.   \nThis rectangle has a perimeter of 800 pixels total, and it is 240 pixels long. How tall is it?   \n\nDraw the bounds and the halfway line.",
        "4-5 Artist 9_markdown_instruction": "Draw the right half of this image so that the design is symmetrical. \nThe triangles are equilateral and have sides that are 50 pixels long.",
        "4-5 Artist Assessment 1_markdown_instruction": "**Assessment:** Use a loop to draw the equilateral triangle. Each side is 300 pixels.",
        "4-5 Artist Free Draw 1_markdown_instruction": "Free Draw!  Draw whatever you are inspired to create.",
        "4-5 Artist Patterns 1_markdown_instruction": "Draw this square using a loop.\n\nEach side is 20 pixels long.",
        "4-5 Artist Patterns 10_markdown_instruction": "This code draws two rows of hexagons - loop the whole thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120 pixels in your outermost loop to make sure the artist doesn't draw off the screen.",
        "4-5 Artist Patterns 11_markdown_instruction": "How many times do you need to loop this to draw a half circle?",
        "4-5 Artist Patterns 12_markdown_instruction": "If you create another loop like this one, but turn left instead of right, what happens? \n\nCan you repeat all of that to draw this wave?",
        "4-5 Artist Patterns 13_markdown_instruction": "Now let's loop that whole thing four times to create this picture frame. Watch out for the corners - you can't just turn 90 degrees! \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these blocks of code will make an additional quarter circle for the corners?",
        "4-5 Artist Patterns 2_markdown_instruction": "If you place your square loop inside another loop, we call that a nested loop. \n\nWhat do you need to add as an outer loop to make sure all 15 squares line up next to each other?",
        "4-5 Artist Patterns 3_markdown_instruction": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
        "4-5 Artist Patterns 4_markdown_instruction": "This diamond has 50 pixel sides and angles of 120 and 60 degrees. \n\nUse a loop to draw it.",
        "4-5 Artist Patterns 5_markdown_instruction": "Repeat this code to make a row of 6 diamonds. \n\nNotice that we changed our diamond code to repeat 3 times instead of 2 - why do you think that is?",
        "4-5 Artist Patterns 6_markdown_instruction": "How many times do you need to repeat this block to draw the full grid of diamonds?\n\n",
        "4-5 Artist Patterns 7_markdown_instruction": "Let's modify the code from the last puzzle to make this more complex pattern. Notice how the diamonds overlap now, try changing the first \"jump backwards\" from 100 to 50 (half as far) - now how far should the artist go in the second \"jump backwards\"?\n\n",
        "4-5 Artist Patterns 8_markdown_instruction": "Use a loop to draw this hexagon with 40 pixel sides and 60 degree angles.",
        "4-5 Artist Patterns 9.5_markdown_instruction": "Let's loop this code to draw two rows of hexagons. \n\nNotice how our second row is shifted to the right.",
        "4-5 Artist Patterns 9_markdown_instruction": "Now repeat this code 3 times and draw the whole row. \n\nEach hexagon is 80 pixels wide from the furthest points left to right.",
        "4-5 Artist Patterns Free Play_markdown_instruction": "Free play - try your hand at making a pattern of your own!",
        "4-5 Bee Conditionals 1_markdown_instruction": "This cloud is blocking my view! \n\nCheck to see if there's a flower under the cloud, and only get nectar if there's a flower.   \nBe careful, it can change!",
        "4-5 Bee Conditionals 2_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "4-5 Bee Conditionals 4_markdown_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar only if it is a flower.  \nElse, make honey (because it is a honeycomb).",
        "4-5 Bee Conditionals 5_markdown_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "4-5 Bee Conditionals 6_markdown_instruction": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
        "4-5 Bee Conditionals 7_markdown_instruction": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
        "4-5 Bee Conditionals 8_markdown_instruction": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
        "4-5 Bee Conditionals Assessment 1_markdown_instruction": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. \n",
        "4-5 Bee Debugging 1_markdown_instruction": "These blocks are really bugging me. \n\nCan you fix them?",
        "4-5 Bee Debugging 6_markdown_instruction": "The purple flower has a different amount of nectar each time you run the puzzle. \n\nFix the blocks to get all of the nectar from the flower each time.",
        "4-5 Bee Debugging Assessment 1_markdown_instruction": "**Assessment:** Fix the code.",
        "4-5 Bee Nested Loops 2_markdown_instruction": "Collect all of the nectar from each flower. \n\nUse a nested loop. ",
        "4-5 Bee Nested Loops 4_markdown_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. \n\nUse a nested loop. ",
        "4-5 Bee Nested Loops Assessment 1_markdown_instruction": "**Assessment:** Collect all of the nectar and make all of the honey using loops.",
        "4-5 Maze 7_markdown_instruction": "Get the zombie to the sunflower quickly!  \n\nCan you solve the puzzle in fewer than 11 blocks?",
        "4-5 Maze 9_markdown_instruction": "Now we have a new block called `repeat until`.  \nThis will let us keep looping commands until the zombie gets the sunflower.  \n\nUse the new `repeat until` block to solve this puzzle in as few commands as possible.",
        "4-5 Maze Assessment 1_markdown_instruction": "**Assessment:** Get to the sunflower using as few blocks as possible.",
        "4-5 Maze Conditionals 1_markdown_instruction": "Use the `repeat until` block to get the zombie to the sunflower.",
        "4-5 Maze Conditionals 10_markdown_instruction": "Can you add just 3 blocks to help the zombie solve a more complex maze? \n\nIf you do it right, he can walk any curvy path no matter the length!",
        "4-5 Maze Conditionals 2_markdown_instruction": "Use the `repeat until` block to get the zombie to the sunflower.",
        "4-5 Maze Conditionals 3_markdown_instruction": "Use the `if` block to help me decide when to turn. \n",
        "4-5 Maze Conditionals 4_markdown_instruction": "Ok, solve this one just like the last puzzle, but you need to remember how you used the `if` and `repeat until` blocks together.",
        "4-5 Maze Conditionals 5_markdown_instruction": "\"Me want sunflower!\"  \n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
        "4-5 Maze Conditionals 6_markdown_instruction": "\"Eat sunflower!\"\n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
        "4-5 Maze Conditionals 7_markdown_instruction": "The solution to this puzzle isn't very different, but watch out for the chompers!",
        "4-5 Maze Conditionals 8_markdown_instruction": "The `if/else` block checks a condition, and then does one thing OR another. \n\nUse this new block to get me to the sunflower.",
        "4-5 Maze Conditionals 9_markdown_instruction": "One more practice puzzle with the `if/else` block!\n\nTrace it with your finger to see if you can figure it out on your first try.",
        "4-5 Maze Conditionals Assessment 1_markdown_instruction": "**Assessment:** Use a `repeat until` and an `if/else` block to get me to the sunflower in as few blocks as possible.",
        "4-5 Nested Loops 1_markdown_instruction": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.\n\n",
        "4-5 Nested Loops 11_markdown_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? \n\nEach square is 30 pixels.",
        "4-5 Nested Loops 12_markdown_instruction": "Can you draw these 36 triangles using a nested loop?",
        "4-5 Nested Loops 2_markdown_instruction": "Now nest this loop inside another loop to draw 10 triangles.  \nThis is called a \"nested\" loop.  ",
        "4-5 Nested Loops 3_markdown_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "4-5 Nested Loops 5_markdown_instruction": "Loop the given code to create a windmill.",
        "4-5 Nested Loops 6_markdown_instruction": "Can you draw a hexagon by looping the triangle code?",
        "4-5 Nested Loops 7_markdown_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "4-5 Nested Loops 8_markdown_instruction": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "4-5 Nested Loops 9_markdown_instruction": "Draw the teeth in the alligator's mouth!",
        "4-5 Nested Loops Assessment 1_markdown_instruction": "**Assessment:** Use a nested loop to complete the design.",
        "4-5 While Loops 1_markdown_instruction": "Move me to the hole and fill it with two shovelfuls of dirt, using the `fill` block.",
        "4-5 While Loops 2_markdown_instruction": "Move me to the pile of dirt and remove it with 5 shovel scoops, using the `remove 1` block.",
        "4-5 While Loops 3_markdown_instruction": "Use as few blocks as possible to complete this puzzle!  \n\nMove me to the pile and remove all the dirt, then move to the hole and fill it completely.",
        "4-5 While Loops 4_markdown_instruction": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
        "AlgPD DR Free Play_markdown_instruction": "Using a word problem from your existing curriculum or elswhere, complete the Design Recipe and program a function. Use a Design Recipe form from your workbook or download a copy [here]('https://code.org/curriculum/algebra/docs/worksheets/design_recipe.pdf').",
        "Alien Defender_markdown_instruction": "**Project Idea**: Make a defender game in Play Lab!",
        "Alien Defender_2018_markdown_instruction": "**Project Idea**: Make a defender game in Play Lab!",
        "App Lab test_markdown_instruction": "<a href=\"https://docs.google.com/document/d/1HgSfQeUI1zxo-3bL-9jhff0jI2um2A-3vwpvy3JAD38\" target=\"_blank\">Innovation Project</a>",
        "AppLab Intro 2 - Edit place1_markdown_instruction": "On the last screen you gave your character a choice between to actions or places. Pick one of them and start making a screen for it!\n\n1. In the screen selector choose \"New screen...\" ([Show me where](#triggercallout=selector))\n2. Change the \"id\" of the screen to something clear, for example the name of the new location ([Show me where](#triggercallout=idChange))\n3. You can switch back and forth between your two screens from the screen selector. ([Show me where](#triggercallout=selector))\n4. You can select the \"background-color\" of your screen if you like.\n\nClick \"Run\" and then \"Finish\" to move on and start adding to your screen.",
        "AppLab Intro 2 - Edit startScreen2_markdown_instruction": "Nice work! Time to start filling in your story.\n\n1. Click the story text on this screen. ([Show me where](#triggercallout=storyText))\n2. Fill in your story ([Show me where](#triggercallout=editStoryText))\n3. Explore the different properties you can change in the menu. Personalize this screen's look! ([Show me where](#triggercallout=changeTextColor))\n\nHit \"Run\" once to make everything looks good. Then hit \"Finish\" to move on!",
        "AppLab Intro 2 - Try Cat Commander_markdown_instruction": "This is what the code for Cat Commander looks like. Take one minute to scroll through the code and see if you can understand how it works. Talk about it with a partner. What patterns do you see? \n\nOnce you're done, move on by clicking \"Run\" then \"Finish\", to learn to build your own adventure.",
        "AppLab Intro 2 - add sound_markdown_instruction": "<img src=\"https://images.code.org/3c1d6506a6a3c350380b921e08588a2b-image-1505429594117.52.37 PM.png\" style=\"float:right;height:100px\">\n\nYou can add sound to your app too! Add them outside an `onEvent()` to play from the start of the adventure (good for background music) or inside an `onEvent()` to play when that button is clicked (good for \"Win\" / \"Lose\" sounds).\n\n1. Drag a `playSound()` block into your program\n2. Click the dropdown, then \"Choose...\", then \"Sound Library\" to find the library of sounds built into App Lab\n3. Try out the \"Background\" category for longer songs that will play for your entire adventure.\n4. Hit \"Choose\" to select the sound you like.\n5. You can also drag code inside an `onEvent` block to play sound only when an event happens. Shorter sounds work better here.\n\nRun your app. There should be sound playing now too!",
        "AppLab Intro 2 - finish and share_markdown_instruction": "Congrats on finishing your Hour of Code! You can share your work with friends! Click \"Share\" to get a link or even text it to them.\n\nYou can keep working on your project here. Whenever your friends go to the link you shared they'll get the latest version you made. How far will you build your adventure?",
        "AppLab Intro 4 - thisOrThat design_markdown_instruction": "**Goal:** Try out Design Mode to keep making changes to your This or That App. There's also some new blocks in your toolbox! You'll learn more about these in later lessons.\n\n**How:** Click into \"Design\" to quickly edit how your app looks or add screen elements yourself. Experiment with some of the new blocks in the toolbox.",
        "AppLab Intro 4 - thisOrThat template_markdown_instruction": "**Goal:** Try out Design Mode to keep making changes to your This or That App. You'll learn more in later lessons.\n\n**How:** Click into \"Design\" to quickly edit how your app looks or add screen elements yourself.",
        "AppLab Intro 5 - go further_markdown_instruction": "**Goal:** This is a blank App Lab project. Build whatever you like here! You also have a few more blocks you can try out if you like. Don't forget to share your work!",
        "AppLab Intro 5 - share keep going_markdown_instruction": "**Goal:** Share your app with someone, or just send it to yourself! Then keep building it out!\n\n**How:** Click \"Share\" to find lots of ways to share your app. Here's some ideas to try\n\n* Add a button that takes you back from `\"screen2\"` to `\"screen1\"`\n* Add more screens with more images\n* Add more types of reaction buttons that users can click",
        "AppLab Intro 5 - socialTemplate_markdown_instruction": "**Goal:** Add a button to the screen for scrolling to the next image. Give it a good icon, like a right arrow. In the next level you'll make it work.\n\n**How:** Use Design Mode to drag in a button. The icon library has many different arrows to choose from. Don't forget you can search for them.\n\n**Show Me:** ",
        "AppLab Intro 6 - animalSoundBoard_markdown_instruction": "**Goal:** Keep building out the Animal Sound board. Then make sure to \"Share\" it.\n\n**How:** Add new buttons for more animals. Or make the soundboard for a totally different topic entirely!",
        "AppLab Intro 6 - blankApp_markdown_instruction": "**Goal:** This is a completely blank App Lab App. Build whatever you want from scratch!?\n\n**How:** You're in control here. You decide what you want to make!",
        "AppLab Intro 6 - quizApp_markdown_instruction": "**Goal:** Build out three questions in this Quiz App. You can always make more questions by duplicating screens. Then send it to a friend!\n\n**How:** Run the app first and try clicked all the buttons to see how it works. Then from Design Mode you can change the default text for the questions and buttons. In Code mode create response text for when the user clicks the different buttons. Customize the colors or add images if you want too!",
        "AppLab Intro 6 - thisOrThatAddButton Template_markdown_instruction": "**Goal:** Add a second button to the screen that says \"Right!\"\n\n**How:** In Design Mode drag in a new button. Position and resize it. Then set its `\"text\"`, `\"background color\"`, and `\"font size\"`\n\n**Show Me:** ",
        "AppLab Intro 6 - thisOrThatPersonalize_markdown_instruction": "<img src=\"https://images.code.org/762507aef26d512f820c42fb2e7fc6f1-image-1508386296370.11.19 PM.png\" style=\"float:right;height:200px\">\n\n**Goal:** Start building your own \"Choose Your Own Adventure\" app. Don't forget to \"Share\" it with someone!\n\n**How:** Choose the basic story you want to tell, like who your character is and the setting. Then change the text and images of your app to match the story. You can always add more screens as you keep building out your adventure.\n\n<details><summary><b>Stuck? Click here for some ideas</b></summary>\n\n<li>Make an adventure about your favorite fictional character</li>\n<li>Make an adventure about a famous (or not-so-famous person) you're a big fan of</li>\n<li>Make an adventure that has a lot of unexpected twists or has a difficult moral choice</li>\n\n</details>",
        "Applab allthethings onRecordEvent_markdown_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "Applab test_markdown_instruction": "This level is submittable. For testing only! Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "Artist Inspiration_markdown_instruction": "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNotice: We've used the `set alpha` block to make the \"petals\" fade toward the outside.",
        "Bergeron Robot Maze1_markdown_instruction": "Can you help me catch the naughty pig? \n\nStack a couple of `move forward` blocks below the `when run` block and press \"Run\". ",
        "Big Game Animation 1_markdown_instruction": "Now that you've learned to write simple linear functions, let's work on using them to add some movement to our game. Click \"Run\" to see what your game can currently do (not much!), update any variables you like, and then click finish to move on.",
        "Big Game Animation 2_markdown_instruction": "The `update-target` function takes the target's current x value, and returns an updated value.\n\nComplete `update-target` so that it adds to the x value each time it is called. The more you add to x, the faster the target will go.",
        "Big Game Animation 3_markdown_instruction": "The `update-danger` function should work just like `update-target`, except that the danger should move from the right side over towards the left.\n\nComplete `update-danger` to make the danger fly across the screen.",
        "Big Game Animation 4_markdown_instruction": "At this point in your game your danger should run across the screen from right to left, and your target should run across from left to right.\n\nThey don't ever come back on screen once they've left, but we'll take care of that later.\n\nTake a minute to make sure your game is working like you want it to, and then click \"Finish\" to move on.",
        "Big Game Booleans 1_markdown_instruction": "When you last worked on your game we got our target and danger sprites to fly across the screen, but they never come back. Click \"Run\" to see how your game is currently working, and then click finish and we'll work on making those sprites reappear on screen after they've left.",
        "Big Game Booleans 2_markdown_instruction": "Now that your `onscreen?` function is checking `safe-left?` and `safe-right?` we need to fix those functions.\n\nWhen we used them for Sam the Bat we wanted to prevent Sam from leaving the screen, but now we want the Target and Danger to actually go all the way off screen before returning to the opposite side.\n\nGo to the \"Functions\" section of the toolbox and complete the `safe-left?` function so that it returns *true* if the sprite's x coordinate is greater than -50.\n\nIf you're successful you should see the Danger go all the way off the left side before returning on the right side.",
        "Big Game Booleans 3_markdown_instruction": "Now that you've got `safe-left?` working, let's fix `safe-right?`\n\nIt should take in a sprite's x coordinate and return true if that coordinate is less than 450.\n\nOnce your `safe-right?` is complete you should see the Target go off the right side of the screen and return on the left.",
        "Big Game Booleans 4_markdown_instruction": "We've provided a couple of empty functions for `safe-left?` and `safe-right?` The first thing you need to do is complete the `onscreen?` function so that it checks whether both `safe-left?` and `safe-right?` are true.\n\n**TIP** - even after you add `safe-left?` and `safe-right?` your sprites won't return to the screen - why do you think that is?",
        "Big Game Booleans 5_markdown_instruction": "At this point your Danger should run across the screen from right to left, your Target should run across from left to right, and they should both return to the opposite side, repeatedly. Take a minute to make sure your game is working like you want it to, and then click \"Finish\" to move on.",
        "Big Game Collision 1_markdown_instruction": "At this point you've programmed a video game with a moving Target and Danger, both of which return to the screen once they've left, and a Player that responds to keyboard input. Click \"Run\" to see how your game is currently working, and then we'll dig into the final missing piece - collision detection!",
        "Big Game Collision 3_markdown_instruction": "Let's fix this `distance` function so our collision detection works properly.\n\nUse the Distance Formula, so the distance function returns the distance between the player's center coordinates (px, py) and another sprite's center coordinates (cx, cy).\n\nWe've provided a working `line-length` function to help you out.",
        "Big Game Collision 4_markdown_instruction": "The `distance` function returns the distance between two sprites.\n\nComplete the `collide?` function so that it returns *true* if the distance between two points is less than 100 pixels apart.\n\nIf you're successful, your sprites will instantly collide - why do you think that is?",
        "Big Game Final_markdown_instruction": "You made it!\n\nAt this point your game should be fully functioning, take some time to enjoy your new game and make any final tweaks to it.\n\nWhen you're happy with the final product, click Finish and you'll have an opportunity to share a link to your game.\n\nGood work!",
        "Big Game Player 1_markdown_instruction": "We're getting really close to a finished game!\n\nLast time you worked on your game, you used booleans to make your Target and Danger return to the screen once they've left. Click \"Run\" to see how your game looks right now, and then we'll get to making your Player move up and down.",
        "Big Game Player 2_markdown_instruction": "To move the player up and down, we'll need to use a conditional block to figure out which key is pressed and respond accordingly.\n\nComputers read keypresses as numeric key codes - the up arrow is **38** and the down arrow is **40**. You can lookup other key codes in your student workbook.\n\nEdit the `update-player` function so the player moves up when the up arrow (keycode 38) is pressed, and moves down (keycode 40) when the down arrow is pressed.",
        "Big Game Vars 1_markdown_instruction": "Let's get started on your Big Game! Here you'll see a whole bunch of placeholder code that you'll eventually replace with your own, but for now we're only going to worry about defining variables. Click \"Run\" to see what the game looks like with the default values.",
        "Big Game Vars 2_markdown_instruction": "The first step to making this game your own is to give it a good Title. Click edit on the `title` and `subtitle` variables and change them to something new.",
        "Big Game Vars 3_markdown_instruction": "Now let's set the background for your new game. Edit the `bg` variable and select a new background Image from the dropdown.",
        "Big Game Vars 4_markdown_instruction": "Awesome! Now you can update the variables for your Player, Target, and Danger. Feel free to play with all of the variables at this point to make your game look like you'd like it to. Click \"Finish\" when you're done.",
        "Brad Spooky House Copy_markdown_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Play with the pen width to see how different your drawings look!\n\n",
        "Brad Spooky House_markdown_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Play with the pen width to see how different your drawings look!\n\n",
        "CSD U3 - images - Embed Project_markdown_instruction": "Example of the Final Project",
        "CSD U3 abstraction race template_markdown_instruction": "Template for the race game",
        "CSD U3 abstraction space template_markdown_instruction": "![](https://images.code.org/b449da443093a6b7fb872c0b65d4ea39-image-1472234725048.png)\n\n![](https://images.code.org/87f39110a8cec7a6ca1978989f1d8eaf-image-1472235414354.png)\n\n![](https://images.code.org/69cb2daab7d1eec824b8bd2d2b117116-image-1472235429548.png)",
        "CSD U5 Amazon Data Video_markdown_instruction": "Watch this video to learn how this problem is solved by Amazon. As you watch think about what data is being collected and where it's coming from.",
        "CSD U5 Amazon Data Video_2018_markdown_instruction": "Watch this video to learn how this problem is solved by Amazon. As you watch think about what data is being collected and where it's coming from.",
        "CSD U5 Netflix Data Video_markdown_instruction": "Watch this video to learn how this problem is solved by Netflix. As you watch think about what data is being collected and where it's coming from.",
        "CSD U5 Netflix Data Video_2018_markdown_instruction": "Watch this video to learn how this problem is solved by Netflix. As you watch think about what data is being collected and where it's coming from.",
        "CSD U5 Waze Data Video_markdown_instruction": "Watch this video to learn how this problem is solved by Waze. As you watch think about what data is being collected and where it's coming from.",
        "CSD U5 Waze Data Video_2018_markdown_instruction": "Watch this video to learn how this problem is solved by Waze. As you watch think about what data is being collected and where it's coming from.",
        "CSD U6 Catch the Mouse_markdown_instruction": "Embedded Prediction",
        "CSD U6 Catch the Mouse_2018_markdown_instruction": "Embedded Prediction",
        "CSD U6 checkbox_markdown_instruction": "Predict Level",
        "CSD U6 getProperty board predict_markdown_instruction": "Predict Level (See contained level for markdown)",
        "CSD U6 getProperty board predict_2018_markdown_instruction": "Predict Level (See contained level for markdown)",
        "CSD U6 interval_markdown_instruction": "Predict Level",
        "CSD U6 interval_2018_markdown_instruction": "Predict Level",
        "CSD U6 iter predict bubbles_markdown_instruction": "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)",
        "CSD U6 iter predict bubbles_2018_markdown_instruction": "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)",
        "CSD U6 params starchaser template_markdown_instruction": "Template Level.",
        "CSD U6 params starchaser template_2018_markdown_instruction": "Template Level.",
        "CSD U6 predict LED button_markdown_instruction": "Embedded Prediction",
        "CSD U6 predict LED button_2018_markdown_instruction": "Embedded Prediction",
        "CSD-Arrays_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "CSD-Arrays_2018_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "CSDU4 - Design Mode - 1_markdown_instruction": "<img src='https://images.code.org/3fad83213ae72073251c4d5abc1f048a-image-1444060521578.png' style='float: right; width: 250px'> A new group of commands has been added to the toolbox called **UI Controls** (User Interface Controls) which are commands that let you interact with, and respond to, the user of your app. To keep it simple, we'll start with just two commands: \n* `onEvent` which lets you run a function in response to some event occuring (such as a button click).\n* `button` which puts a button on the screen.",
        "CSDU4 - Design Mode - 22_markdown_instruction": "A new command in the toolbox: `playsound`! Read the documentation about how to add sounds.",
        "CSDU6 - button LED prediction_markdown_instruction": "See contained level for markdown",
        "CSDU6 - button LED prediction_2018_markdown_instruction": "See contained level for markdown",
        "CSDU6 - button up down predict question_markdown_instruction": "What do you think will happen when you run this code? What will happen when you press the left and right buttons?",
        "CSDU6 - timed loop question timed_markdown_instruction": "What do you think will happen when you run this code?",
        "CSDU6 - toggle state LED prediction_markdown_instruction": "See contained level for markdown",
        "CSDU6 - toggle state LED prediction_2018_markdown_instruction": "See contained level for markdown",
        "CSDU6 frequency template_markdown_instruction": "Do a thing!",
        "CSDU6 frequency template_2018_markdown_instruction": "Do a thing!",
        "CSDU6 play predict code_markdown_instruction": "Markdown is in contained level",
        "CSDU6 play predict code_2018_markdown_instruction": "Markdown is in contained level",
        "CSP Data Unit - Counting Multiple Things_markdown_instruction": "If you can count one thing you can count multiple things\n\nFind out how many people like something other than dogs and cats\n\nCount dogs\nCount cats\nCount total\nDo the math\n\nblank/ blank total\n\nCan also use this to find percents from this\n\nx% are dog lovers",
        "CSP Data Unit -Counting Records - Easy Way_markdown_instruction": "ReadRecords with specific criteria \nfind the length of an array\n",
        "CSP Data Unit -Counting Records - Hard Way_markdown_instruction": "\n1. ReadRecords for all records\n2. Way to loop through and count",
        "CSP U4 - CreateRecord with JSON_markdown_instruction": "Good news! we can also store objects in the easy way!\nStarting code is some kind of pre-composed object. And call to createRecord that shows using the javascript object as the the thing being stored.\nTest.\nInvestigate.\nAdd a field to the object and run again, see what’s there.",
        "CSP U4 - First Create Record Experience_markdown_instruction": "So how can we use this?  We can use it to compose a bunch of things we want to store at once.  In Data we call this a “record”.  Let’s look at how we create records….new level:\n\nJust drag out createRecord and play with it (non-project level) — not triggered by a button. \n\nCreateRecord should populate with a default JSON object (which you can set in level builder when defining params for the blocks in the palette.)  Have it be the string version of of JSON object.\nJust Hit run several times.\nView Data.\nInvestigate problems.\n\n\n",
        "CSP U4 - Import Table_markdown_instruction": "You can create a new table by importing a CSV file. CSV stands for comma separated values and is a standard way to move data between different applications. CSV files usually have multiple columns with the first row containing the label for each column. AppLab will use this first row to create the column names in the table. \n\nIn AppLab you can create a new table in an app by clicking the “View Data” button(a new browser tab opens) and type in a new, descriptive table name (the table name does not have to match the app name, and an app can have more than one table), then click the “Add” button next to the table name(another new browser tab opens). Click the “Import” button, then the “Choose File” button and select the RottenTomatoes2015.csv file (see below). Finally click the “Overwrite & Import” button. Note the unique “Id” field created for each record.",
        "CSP U4L01 SFLP_markdown_instruction": "<div style=\"width: 250px; text-align: center; float: right; margin-left: 50px\">\n  <a href=\"https://images.code.org/8abc8eedb4975d2c55ac5848cac0d0ed-image-1454087887353.png\" target=\"_blank\">\n    <img src=\"https://images.code.org/8abc8eedb4975d2c55ac5848cac0d0ed-image-1454087887353.png\" style=\"width: 250px; float: right\">\n  </a>\n  <i>Click to enlarge.</i>\n</div>",
        "CSPPD course goals_markdown_instruction": "***Now that you've learned more about the CSP curriculum, let's consider your goals***\n<br>\n<br>\n\n__What are your goals for your CSP class?__ *These goals will change over time, and we'll revisit this your response as we go through the course so we can check in on how we're progressing towards those goals.*\n\n*NOTE: remember you can change the size of the text box by clicking and dragging the bottom-right corner of the box.*\n",
        "CSPPD materials question1_markdown_instruction": "We just talked about the types of materials available through the Code.org CSP curriculum, including teacher lesson plans, widgets, widget tutorial videos, concept videos, teaching tips videos, and student-facing activities. Which of these materials are you most excited to have access to? Which are you most uncertain about? ",
        "CSPPD strategies_markdown_instruction": "\nThis space is your __digital journal for documenting strategies__ you've picked up during Professional Development and while teaching the course. We'll revisit this often during PD, and you should refer back to it while planning lessons to remind yourself of strategies you want to try in class. \n\n\n",
        "CSPU5_U3L13 Free Response Reflection_markdown_instruction": "Elements in your app are required to have **unique IDs**. Given what you now know about how event handlers work, why is it important for the IDs of page elements to be unique?\n\n",
        "CSPU5_U3L15 spot the difference variable debugging_markdown_instruction": "Respond to the following questions about your investigation into the bug with the counting game. Feel free to go back and look at the game again (but do so in another tab or be sure to click \"Submit\" to save your work!):\n\n- From the user's perspective, what was the difference between the first version of the game and the one with the bug?\n- From looking at the code, what specifically was the difference between the two, and why is that an issue?\n- How did you fix the bug?\n",
        "CSPU5_U3L15 spot the difference variable debugging_2018_markdown_instruction": "Respond to the following questions about your investigation into the bug with the counting game. Feel free to go back and look at the game again (but do so in another tab or be sure to click \"Submit\" to save your work!):\n\n- From the user's perspective, what was the difference between the first version of the game and the one with the bug?\n- From looking at the code, what specifically was the difference between the two, and why is that an issue?\n- How did you fix the bug?\n",
        "CSPU5_U3L23 Free Response Wrap Up_markdown_instruction": "Identify a global problem that a NLP (Natural Language Processing) application could be used to help solve. \n\n* Describe the problem.\n* Explain how you think a NLP app could contribute to a solution.\n* Describe how the app would interact with the user. \n* What would you name the app? \n\n",
        "CSP_U2_Shakespeare_Question_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nShakespeare’s complete works have approximately 3.5 million characters.  Which is bigger in file size: Shakespeare’s complete works stored in plain ASCII text or a 4 minute song on mp3?  How much bigger?",
        "CSP_U2_Shakespeare_Question_2018_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nShakespeare’s complete works have approximately 3.5 million characters.  Which is bigger in file size: Shakespeare’s complete works stored in plain ASCII text or a 4 minute song on mp3?  How much bigger?",
        "Calc Circles of Eval .1_markdown_instruction": "You’ll be writing a kind of code called Evaluation Blocks, because each block of code evaluates to a single value. Change the ??? in this code so that the block evaluates to 5.",
        "Calc Circles of Eval .2_markdown_instruction": "This Evaluation Block is a multiplication function which takes two numbers and returns the product of those numbers. Edit this block so that it multiplies 2 * 5",
        "Calc Circles of Eval .3_markdown_instruction": "Here's a function for addition which takes two numbers and returns their sum. Use this Addition Block to add 3 + 6.",
        "Calc Circles of Eval .4_markdown_instruction": "Here we've nested an Addition Block inside a Multiplication Block. Complete this code so it multiplies 3 by (4 + 1)",
        "Calc Circles of Eval 2_markdown_instruction": "Use a Multiplication Block to complete this code.",
        "Calc Circles of Eval 3_markdown_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 4_markdown_instruction": "This code is missing a couple of Evaluation Blocks - make sure you put everything in the right order.",
        "Calc Circles of Eval 7_markdown_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 8_markdown_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval 9_markdown_instruction": "Complete the Evaluation Blocks to match this statement.",
        "Calc Circles of Eval Free Play_markdown_instruction": "Free Play: Try using the Evaluation Blocks to write some equations of your own. How does nesting the blocks in different ways impact their evaluation?",
        "Calc Define Funcs 1_markdown_instruction": "Let's look at some more traditional algebraic functions now. Here's a function translated from the simple algebraic function `f(x) = x + 1`. What would you expect this function to output if provided an input of 15?",
        "Calc Define Funcs 2_markdown_instruction": "Write a function `f` that takes a parameter `x` and returns `x - 10`. Test your function using `f(15)`.",
        "Calc Define Funcs 3_markdown_instruction": "We don't have to call our function `f` every time; create a function called `times-ten` that should take a parameter `x` and return `x * 10`. Once you've created the function, run `times-ten(50)`.",
        "Calc Define Funcs 4_markdown_instruction": "Write a function called `half` that takes a number `x` and returns half that number. Once you've written the function, use it to calculate `half(21)`",
        "Calc Design Recipe 1_markdown_instruction": "Let's use the Design Recipe to create a function called `cube` - this function should take in a Number and return that number to the power of 3. Make sure to write two example cases! When you're done, use your new function to calculate `cube(7)`.",
        "Calc Design Recipe 2_markdown_instruction": "Your school is holding a bake sale, and you need to track the cost of making each cookie, the money paid, and the total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\nWrite the function `cost`, which takes in the number of cookies you intend to sell, and returns the cost of making those cookies.\n\n_Test your function by calculating the cost of 42 cookies_",
        "Calc Design Recipe 3_markdown_instruction": "Write the function `sales` which takes in the number of cookies sold, and produces the amount of money customers spent to buy those cookies (each cookie is sold at $1.50).\n\n_Test your function by calculating the sales for 135 cookies_",
        "Calc Design Recipe 4_markdown_instruction": "Using the two functions we just wrote, write the function `profit`, which takes in the number of cookies you sold, and gives you back the total profit you make from selling your cookies, accounting for the cost of baking them.\n\n_Test your function by calculating the total profit for 15 cookies_",
        "Calc Rocket 1_markdown_instruction": "In the last puzzle you wrote a contract for the function `rocket-height` that states it has a range of Number, domain of Number, and should return the height of the rocket traveling at 15 m/s after a given number of seconds. Let's write an example case now for the height of the rocket at 3 seconds.",
        "Calc Rocket 2_markdown_instruction": "Great, let's do one more example before writing the function - what should the rocket height be after 30 seconds?",
        "Calc Vars 1.1_markdown_instruction": "Here we've set the `age` variable to 17 years. Can you write an expression that calculates `age` in days?",
        "Calc Vars 1_markdown_instruction": "Variables allow us to name values so that we can easily refer to them repeatedly throughout our programs. Here's a variable called `age`. Set its value to your age and click run.",
        "Calc Vars 2.1_markdown_instruction": "Here's a new variable called `age-in-months`. Use the variable `age` to set `age-in-months`.",
        "Calc Vars 2_markdown_instruction": "Can you write an expression that calculates `age` in months?",
        "Classroom Assessment Techniques_markdown_instruction": "The following link is a resource that presents the process of designing and using classroom assessment techniques:",
        "Collaborative Learning and Group Work: Description and Strategies_markdown_instruction": "The following link to Cornell University Center for Teaching Excellence provides a brief description of group learning along with a handful of specific techniques for designing and implementing group work activities:  ",
        "Course 4 Artist 1_markdown_instruction": "Help me draw a box.   \n(Each line is 200 pixels long) \n\n<br/><br/>\n\n",
        "Course 4 Artist 11_markdown_instruction": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!  \n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You are not expected to get it perfect the first time.\n\nThe repeated shape is almost identical to the one from the last puzzle, except that the length used in the first loop is a little smaller. ",
        "Course 4 Artist 13_markdown_instruction": "Still playing?  Here is a blank canvas where you can design anything you want!",
        "Course 4 Artist 2_markdown_instruction": "Can you use a loop to draw the greyed out square?  \n(Each side is 300px long)",
        "Course 4 Artist 20_markdown_instruction": "Still playing?  \n\nHere is a blank canvas where you can create whatever you want!",
        "Course 4 Artist 3_markdown_instruction": "Try to figure out what happens if you run this code (or press \"Run\" to test it).  \n\nThen, repeat it enough times to complete the drawing.",
        "Course 4 Artist 4_markdown_instruction": "How many degrees are in a circle?  \nFill in the repeat block with that number to create a circle of colors.",
        "Course 4 Artist 5_markdown_instruction": "Draw the other half of this design so it's symmetrical. \nThe triangles are equilateral and are 50 pixels long.  \n\nYou may have to run the code several times to figure out all of the blocks that need to be added.",
        "Course 4 Artist 6_markdown_instruction": "Complete the code to draw these three, equilateral triangles.",
        "Course 4 Artist 7_markdown_instruction": "Now nest this loop inside another loop to draw 10 triangles. ",
        "Course 4 Artist 8_markdown_instruction": "Draw this sun by looping this whole block of code multiple times.",
        "Course 4 Artist 8a_markdown_instruction": "Remember this shape?  Now we're going to let you build it without giving you any blocks to start!",
        "Course 4 Artist 9_markdown_instruction": "Loop this design 10 times and make sure to turn between each shape that's drawn. ",
        "Course 4 Artist Binary 1_markdown_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\n**Run this code to see how the artist uses binary to draw this pattern.**",
        "Course 4 Artist Binary 1a_markdown_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  The artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\nRun this code to see how the artist uses binary to draw this pattern.",
        "Course 4 Artist Binary Free Play 2b_markdown_instruction": "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own. \n<br/>",
        "Course 4 Artist Binary ryan_markdown_instruction": "Binary is a way of representing information using only two options.  Here, we're going to use the options \"off\" (represented by the number 0) and \"on\" (represented by the number 1).   \n\nWe've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.  Can you have the artist draw \"01010101\" in binary in the first row?",
        "Course 4 Artist For Loops 1_markdown_instruction": "Use a repeat block to draw this triangle that is 50 pixels wide.\n\n",
        "Course 4 Artist For Loops 10_markdown_instruction": "Free Play Time! Have fun drawing whatever you like with the blocks you have learned how to use.",
        "Course 4 Artist For Loops 11_markdown_instruction": "Remember back in a previous stage when we used a variable to control the number of sides in a shape? We are going to do the same thing with the `counter` variable now.  \n\nThis pattern starts with a triangle and adds one side at a time until it draws a decagon (10 sides). Each side should be 100 pixels long. \n\nHow will you use the `counter` variable from the `for` loop to recreate this drawing?",
        "Course 4 Artist For Loops 11a_markdown_instruction": "Let's put it all together!   \n\nUsing your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.\n\nVery little of the code has been provided for you.",
        "Course 4 Artist For Loops 12_markdown_instruction": "That looked pretty cool, but now I'd like to draw each shape next to the last one. This time each side is 20 pixels. Use a jump block to jump forward 40 pixels after each shape.",
        "Course 4 Artist For Loops 13_markdown_instruction": "Hmmm, those shapes are getting bigger every time! Didn't we already solve this problem with variables? How can we use the counter variable to make the sides smaller as there are more of them? Instead of moving forward by a set amount, try moving forward (100 / counter) pixels.",
        "Course 4 Artist For Loops 14_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect. \n\nTry using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "Course 4 Artist For Loops 15_markdown_instruction": "**Free Play:** Try making some drawings of your own using `for loops`. We've added a few useful variables for you as well.",
        "Course 4 Artist For Loops 3_markdown_instruction": "Use the last puzzle as a reference to complete this one.  The smallest triangle has 20 pixel sides, the largest has 200 pixel sides, and each triangle is 20 pixels larger than the last.",
        "Course 4 Artist For Loops 4_markdown_instruction": "How would you modify what you've learned to draw these squares? They start at 15 pixels long, the largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
        "Course 4 Artist For Loops 5_markdown_instruction": "Good job on the last puzzle! Let's use that \"counter\" variable block again to draw this cool picture. \n\n",
        "Course 4 Artist For Loops 6_markdown_instruction": "Free Play! Try using a for loop to draw a growing shape pattern of your own design.",
        "Course 4 Artist For Loops 6a_markdown_instruction": "Make three small changes to the code from the last level to get this!",
        "Course 4 Artist For Loops 8_markdown_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n\nHint:  You need to remove something!  ",
        "Course 4 Artist For Loops 8a_markdown_instruction": "Just one little change to the code from the last image can create this image. Can you figure out what that change is?",
        "Course 4 Artist For Loops 9_markdown_instruction": "Can you make a spiral? Move forward from 1 to 75 pixels, increasing by 1 pixel each time.\n\n",
        "Course 4 Artist For Loops Challenge_markdown_instruction": "**Challenge:** Can you figure out how to use all of the things you've learned to create this image of polygons, all with 40 pixel sides?\n\nRemember, in order to create a spiral, you cannot close the polygon.  This means that each shape will need to have one fewer sides than usual.",
        "Course 4 Artist For Loops Challenge_a_markdown_instruction": "**Challenge:** Can you figure out how to use all of the things you've learned to create this image of polygons, all with 40 pixel sides?",
        "Course 4 Artist For Loops inspire_markdown_instruction": "<br/><br/>\n<img src=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\" width=\"250px\"/>  \n<br/><br/>\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "Course 4 Artist Functions 12.1_markdown_instruction": "Let's create a function called `draw an octagon 20` that draws an octagon where each side is 20 pixels long.",
        "Course 4 Artist Functions 13.1_markdown_instruction": "Now, let's make a function called `jump to upper right` that moves the artist to the upper-right of the octagon that you just drew so we can finish this pattern.  \n<br/>\n*Hint:  To get yourself to the upper-right corner, try jumping in a pattern that makes just 3/8 of the octagon.*  ",
        "Course 4 Artist Functions 14.1_markdown_instruction": "Now, let's make a function called `jump to upper right` that moves the artist to the top-right of the octagon that you just drew so we can finish this pattern.  ",
        "Course 4 Artist Functions Inspiration_markdown_instruction": "<img src=\"https://images.code.org/cf373e03bede480ae54aec72ce823454-image-1442951867535.54.11.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own. ",
        "Course 4 Artist Functions challenge_markdown_instruction": "<img src=\"https://images.code.org/69f1c2b415f907c86aaa6ed2534c3682-image-1442870371171.13.38.png\" width=\"250px\"/>\n\n**Challenge Level:** Use what you've learned in this stage and others to figure out how to make the drawing above.  ",
        "Course 4 Artist Inspire_markdown_instruction": "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own. ",
        "Course 4 Artist Vars 11_markdown_instruction": "Here’s some more complicated code using the same concepts from the last puzzle - what should you set the `sides` variable to in order to draw this picture made of squares?\n\n<p style=\"font-size:small; padding: 15px 15px 15px 40px; background-color:#dcf3f3; border-radius:10px;\">\n\tJust for fun: Try using a few different numbers to see what happens to the pattern!\n</p>",
        "Course 4 Artist Vars 13_markdown_instruction": "When a shape has lots of sides, each side needs to be shorter if you want the whole pattern to fit on the screen. \n\nLet's recreate the algorithm for this amazing pattern, but instead of manually setting the `length` variable, let's use a math block with the `sides` variable inside to make sure that each shape fits correctly.  \n\nThe perimeter of each polygon is 300 pixels.",
        "Course 4 Artist Vars 14_markdown_instruction": "**Free Play**: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.\n\nFor even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.",
        "Course 4 Artist Vars 2_markdown_instruction": "Instead of using `move forward by 150`, the `move` block is now referencing a variable called `length`. Can you set `length` to 150 to draw this new triangle?",
        "Course 4 Artist Vars 3_markdown_instruction": "Here's a loop that draws a square, but something's missing. Can you fix it so that it uses the variable \"length\" to figure out how long each side should be? ",
        "Course 4 Artist Vars 4_markdown_instruction": "Now I want to make a rectangle that is twice as tall as it is wide. We've got a variable called `width` that needs to be set to 100. Can you use the math blocks to complete the code?",
        "Course 4 Artist Vars 6_markdown_instruction": "Here’s some code that can draw any regular polygon. \n\nThere’s a new variable called `sides` that is set to 4. \n\nCan you use the `sides` variable (along with the math block) to turn the right amount regardless of how many sides are in the polygon?",
        "Course 4 Artist Vars 7_markdown_instruction": "Use what you learned in the last puzzle to create this hexagon using the `sides` variable.\n\nSee how you could change just one value to draw a triangle,  square, pentagon, or octagon?",
        "Course 4 Artist Vars 8_markdown_instruction": "**Free Play:** Experiment with the number of sides this shape has. Can you change the algorithm so that the overall size of the shape stays the same, no matter how many sides it has? ",
        "Course 4 Artist Vars 9_markdown_instruction": "Modify this algorithm so it uses the `sides` variable instead of a fixed number to draw a triangle. Don't forget to use the `set sides to` block.",
        "Course 4 Bee 1_markdown_instruction": "The bee can't tell what's under the cloud! \n\nUse the `if` block to check whether there is a flower under the cloud. \n\nGet nectar one time, **ONLY** if there is a flower.",
        "Course 4 Bee 2_markdown_instruction": "Use the `if/else` block to check each object to see if it's a flower or a honeycomb. \n\nIf it's a flower, collect one nectar...otherwise, make one honey!",
        "Course 4 Bee 3_markdown_instruction": "The unknown object is either a flower or a honeycomb. \n\nThis time, use the `if/else` block to collect one nectar **if** it is a flower, **else** make one honey (because then it would be a honeycomb).",
        "Course 4 Bee 4_markdown_instruction": "This purple flower may have either 3, 2, or 1 nectar. \n\nHere an `if/else` block is combined with another `if/else` block to create an `if/else-if/else` statement. \n\nComplete the solution to collect the unknown amount of nectar.",
        "Course 4 Bee 5_markdown_instruction": "This purple flower may have either 3, 2, or 1 nectar. Add an `if-else` block to create an `if, else-if, else` block. Complete the solution to collect the unknown amount of nectar.",
        "Course 4 Bee 6_markdown_instruction": "This purple flower may have either 3, 2, or 1 nectar. Create an `if, else-if, else` block to collect the unknown amount of nectar.",
        "Course 4 Bee 7_markdown_instruction": "Use everything you have learned so far to collect all the nectar. The purple flower may have either 3, 2, or 1 nectar.",
        "Course 4 Bee For Loops 11_markdown_instruction": "What's wrong with this loop? See if you can fix it and make the bee collect all the nectar.",
        "Course 4 Bee Params 1_markdown_instruction": "Write a sequence to collect all of the nectar using `get 3 nectar` which turns, moves to collect the nectar, and then returns to the original location.",
        "Course 4 Bee Params 2_markdown_instruction": "Modify the `get 3 nectar` function so it makes me turn right instead of left to the flowers.",
        "Course 4 Bee Params 3_markdown_instruction": "Now there are flowers on both sides!  \n\nWe've added variables called `left` and `right` for you to use, and now there is a parameter called `direction` inside `get 3 nectar`. \n\n**Edit `get 3 nectar` so that the bee turns the correct direction when the variables `left` or `right` are passed into the function.**",
        "Course 4 Bee Params 5_markdown_instruction": "Let's start from scratch - can you create a new function called `get 5 nectar` with a direction parameter?",
        "Course 4 Bee Params 8_markdown_instruction": "**Challenge:** Now there's honey to deal with too! \n\nRewrite your function to use both the number of honey units and the number of nectar units.  How would you use those numbers to decide what you should do?",
        "Course 4 EC 1a_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 EC 1b_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 EC 2a_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 EC 2b_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 EC 2c_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 EC 2d_markdown_instruction": "**Extreme Challenge:**  No rules. No clues. Just the challenge!",
        "Course 4 Maze 4_markdown_instruction": "Try the `repeat` block to use fewer blocks when solving this puzzle...",
        "Course 4 Play Lab Params 1_markdown_instruction": "Here's a function called `jump` that causes your main character to jump up 100 pixels. \n\nRun the program and use the jump function to collect all of the flags by moving the dog with the arrow keys.",
        "Course 4 Play Lab Params 2_markdown_instruction": "Now we've got flags that are too high for our current jump! Let's use both the \"up\" and \"down\" arrows so that we can have multiple jump heights.  \n\nWe need to add a parameter to our jump function called `height`.  \n- The up arrow should cause the dog to jump 200 pixels \n- The down arrow should make it jump only 100 pixels. \n",
        "Course 4 Play Lab Params 4_markdown_instruction": "Here's a function called `patrol`. \n\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels.",
        "Course 4 Play Lab Params 5_markdown_instruction": "Edit the the `patrol` function to add an `actor` parameter, so that we can call it for each of the actors on the screen. Remember, the actors correspond to numbers 1, 2, and 3.",
        "Course 4 Play Lab Params 6_markdown_instruction": "Add another parameter called `speed` to the `patrol` function. Try using a `set speed` block with the new `speed` parameter to help Penguin get both flags before the other sprites even get one.",
        "Course 4 Play Lab Params 7_markdown_instruction": "Let's have some fun! Look at the code provided to see if you can figure out what each block does.  \n\nWhen you're done, use the arrow keys to control Dog and collect all of the flags.\n\n**NOTE:** You don't need to make any changes to the program",
        "Course 4 Play Lab Params 8_markdown_instruction": "Use the `when actor touches` block to send Dog back to the top-left ONLY if Dog touches any of the other actors.",
        "Course 4 Play Lab Vars 2_markdown_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "Course 4 Play Lab Vars 3_markdown_instruction": "Here's a new kind of game! \n\nYou don't need to change anything on this level.\n\n**Directions:** Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "Course 4 Play Lab Vars 4_markdown_instruction": "Now we're using a variable called `height` to control how high the dog can jump. Update the `height` variable so that the dog can jump high enough to reach all the flags. \n",
        "Course 4 Play Lab Vars 7_markdown_instruction": "Nice, now let's make sure this game isn't too easy to play!  \n\nAny time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point. \n\nStart with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "Course 4 Play Lab Vars 9_markdown_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\n*Hint: scroll down to see all the commands in the workspace.*",
        "Course 4 Play Labs For Loops 1_markdown_instruction": "Let's make the dog speak every number from 1 to 100. Use a `for` loop and the counter block to speak the counter variable each time the loop is run.",
        "Course 4 Play Labs For Loops 4a_markdown_instruction": "Now, let's blend the variables from Stage 7 together with your `counter` variable to make some magic happen.   \n\nIn this puzzle, Dog will count from **0** to **1000** by `increment`.  Set the `increment` variable to **10** at the beginning of your code to see what happens.",
        "Course 4 Play Labs For Loops 5_markdown_instruction": "In the last stage we counted the square of each number. Try changing `counter ^ 2` to `counter ^ 3` to count the cube of each number (1, 8, 27, 64, 125, 216, 343…)",
        "Course 4 Play Labs For Loops 5a_markdown_instruction": "In this puzzle, Dog will be your time keeper.\n\nDog will count from **0** to **30** by `increment`.  The `increment` variable will begin with a value of **1**.\n\nCan you make it so that each time you click Dog, `increment` increases by **2**?  Click the forward arrow to run the `for loop`.  \n\n**Note:** Run the loop a couple of times, clicking Dog before each one.",
        "Course 4 Play Labs For Loops 6a_markdown_instruction": "Now that we've seen how to control our `for loop` using variables inside of our program, let's make a game!\n\nDog will still keep time by counting with our `for loop` by `increment`, but this time we will add The Wizard into the mix.  Can you change the code so that `increment` goes up by two each time The Wizard is clicked?\n\nWatch out!  The Wizard moves quickly!",
        "Course 4 Play Labs For Loops 7a_markdown_instruction": "Now we're getting somewhere!  What if we start counting how many times we can click The Wizard before Dog gets to 30?  \n\nFinish adding blocks to The Wizard so that every time he's clicked the variable `clicked` increases by one. You can ignore `increment` for now.\n\n**Note:** Dog will start counting when you click `Run`.",
        "Course 4 Play Labs For Loops 8_markdown_instruction": "Now, help the actors move as they count.  \n\nDog should move and count by adding 2 (`counter + 2`) each time.  Cat will move and count by multiplying by 2 (`counter *2`)  each time. Penguin will move and count to the power of 2 (`counter ^ 2`) each time.  Who will reach their flag first?",
        "Course 4 Playlab For Loop Freeplay_markdown_instruction": "**Freeplay:** Use everything you've learned so far to make a game that includes a `for` loop!",
        "Course 4 Playlab For Loops 4b_markdown_instruction": "Now, these two characters are going to race!  \n\nEach of them will move `counter` steps at a time, but their counters will have different values because of the `for` loops.  \n\nCan you change the **increment** in one of the loops so that the race is a tie?",
        "Course 4 Playlab For Loops 5b_markdown_instruction": "Adjust the interval on these `for` loops so that the two characters end in the exact same place.",
        "Course 4 Playlab For Loops 6b_markdown_instruction": "Now we're going to use `for` loops in a whole different way!\n\nThis game gets hard quickly because the time between disappearances shrinks fast!\n\n<hr/>\n\n**Edit this `for` loop to create a game that's fun for you to play!**  \n\n<hr/>\n\nPress \"Run\" and click Madame Unicorn as many times as you can.  Can you beat our score of 24? ",
        "Course 4 SCF 1_markdown_instruction": "**Functions Super Challenge:** Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "Course 4 SCF 1a_markdown_instruction": "**Functions Super Challenge:** Can you figure out how to collect all of this nectar with the fewest blocks possible?",
        "Course 4 SCF 1b_markdown_instruction": "**Functions Super Challenge:** Can you figure out how to collect all of this honey with the fewest blocks possible?\n",
        "Course 4 SCF 2_markdown_instruction": "**Functions Super Challenge:** Use what you learned in the previous level to draw an image like this.\n\n*Note: The code becomes more simple if you incorporate parameters.*  ",
        "Course 4 SCF 3 Fail 1_markdown_instruction": "**Functions Super Challenge #1:** \n\n",
        "Course 4 SCF 3 Fail 2_markdown_instruction": "**Functions Super Challenge #1:** \n\n",
        "Course 4 SCFL 1_markdown_instruction": "**For-Loops Super Challenge:** Solve this puzzle with the fewest number of blocks possible.",
        "Course 4 SCFL 1a_markdown_instruction": "**For Loops Super Challenge:** Can you get Scrat to his acorn using as few blocks as possible?\n",
        "Course 4 SCFL 1b_markdown_instruction": "**For Loops Super Challenge:** Can you get Scrat to his acorn using as few blocks as possible?",
        "Course 4 SCFL 2_markdown_instruction": "**For-Loops Super Challenge:** Solve this puzzle with the fewest number of blocks possible.  \n<br/>",
        "Course 4 SCFL 3_markdown_instruction": "**For-Loops Super Challenge:** Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
        "Course 4 SCFL 4_markdown_instruction": "**For-Loops Super Challenge:** Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png\" width=\"350px\"/>",
        "Course 4 SCFL 6_markdown_instruction": "**For-Loops Super Challenge:** Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
        "Course 4 SCFL 7_markdown_instruction": "**For-Loops Super Challenge:** The artist wants to catch some waves! Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/fba3423f2e9a405d4d3859de32cdb0f3-image-1446102880655.13.36.png\" width=\"350px\"/>",
        "Course 4 SCFP 1_markdown_instruction": "Create a function with parameters that allows the artist to jump backward and forward by x pixels, and also up and down by y pixels (using positive and negative numbers).",
        "Course 4 SCV 1_markdown_instruction": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\n**Variables Super Challenge:** You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "Course 4 SCV 2_markdown_instruction": "<img src=\"https://images.code.org/85f0b27009edd86eff78692004b9ed52-image-1444712655590.02.32.png\" width=\"250px\"/>\n\n**Variables Super Challenge:** You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "Course 4 SCV 4_markdown_instruction": "**Variables Super Challenge:** Solve this puzzle with the fewest number of blocks possible.",
        "Course 4 SCV 5_markdown_instruction": "**Variables Super Challenge:** Solve this puzzle with the fewest number of blocks possible.",
        "Course 4 SCV 6_markdown_instruction": "<img src=\"https://images.code.org/499fc71a0a06bacb68a9789ad57f8148-image-1445574373673.16.44.png\" width=\"250px\"/>\n\n**Variables Super Challenge:** You've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?  ",
        "Course 4 SCVP 1_markdown_instruction": "Create a function with parameters that allows the artist to jump backward and forward by x pixels, and also up and down by y pixels (using positive and negative numbers).",
        "Course 4 Variables Assessment_markdown_instruction": "Can you create this image using a variable for `sides`? Each line should be 50 pixels long.",
        "CourseF_PlayLab_vars10_markdown_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\n*Hint: scroll down to see all the commands in the workspace.*",
        "CourseF_PlayLab_vars2_markdown_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "CourseF_PlayLab_vars3_markdown_instruction": "Here's a new kind of game! \n\nYou don't need to change anything on this level.\n\n**Directions:** Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "CourseF_PlayLab_vars4_markdown_instruction": "Now we're using a variable called `height` to control how high the dog can jump. Update the `height` variable so that the dog can jump high enough to reach all the flags. ",
        "CourseF_PlayLab_vars9_markdown_instruction": "Nice, now let's make sure this game isn't too easy to play!  \n\nAny time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point. \n\nStart with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "D_Frozen_nested4_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
        "D_Frozen_nested5_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_\n",
        "D_Frozen_nested7_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n- The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "D_Frozen_nested9_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?\n",
        "Dance Party 1-validated_markdown_instruction": "**Make a prediction:** Here’s a sprite called `alien1`! \n\nWhat do you think will happen when you click on it?  ",
        "Dance Party 1-validated_simple_markdown_instruction": "**Make a prediction:** Here’s a sprite called `alien1`! \n\nWhat do you think will happen when you click on it?  ",
        "Dance Party 1_markdown_instruction": "**Make a prediction:** Here’s a sprite called `alien1`! What do you think will happen when you click on her?",
        "Dance Party 2 Validated_markdown_instruction": "The alien was proud of her dancing skills on Mars, but now she can only move side-to-side. Can you change the behavior inside the `begins` block to make her start spinning around?",
        "Dance Party 2_markdown_instruction": "The alien was proud of its dancing skills on Mars, but now it can only move side-to-side.  \n\nCan you change the behavior inside the <xml> <block type=\"gamelab_addBehaviorSimple\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"sprite_variables_get\">\n          <title name=\"VAR\">alien1</title>\n        </block>\n      </value>\n    </block></xml> block to make it start spinning around?  ",
        "Dance Party 2_simple_markdown_instruction": "The alien can only move left and right.\n\nChange the behavior inside the <xml> <block type=\"gamelab_addBehaviorSimple\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"sprite_variables_get\">\n          <title name=\"VAR\">alien1</title>\n        </block>\n      </value>\n    </block></xml> block to make the alien start turning.  ",
        "Dance Party 3 - Validated_markdown_instruction": "Create a new sprite called `alien2`.  \n\nMake it do a different dance move when it's clicked.  ",
        "Dance Party 3_markdown_instruction": "Create a new sprite called `alien2`.  \n\nMake it do a different dance move when it's clicked.  ",
        "Dance Party 3_simple_markdown_instruction": "Create a new sprite called `alien2`.\n\nWhen the new sprite is clicked, it should do something.",
        "Dance Party 4 Validated_markdown_instruction": "Create a third sprite called `alien3`.  \n\nCan you set all of your aliens to stand in a straight line? It's an alien dance crew!",
        "Dance Party 4_markdown_instruction": "Create a third sprite called `alien3`.  \n\nCan you set all of your aliens to stand in a straight line? It's an alien dance crew!",
        "Dance Party 4_simple_markdown_instruction": "Create a third sprite called `alien3`.  \n\nPlace all of your aliens in a straight line. It's an alien dance party!",
        "Dance Party 5 - Validated_markdown_instruction": "We can change all kinds of things in this program when you click on the sprites.  Let’s change their color!  \n\n**Add code to change the color of each alien when it gets clicked.**",
        "Dance Party 5_markdown_instruction": "We can change all kinds of things in this program when you click on the sprites.  Let’s change their color!  \n\n**Add code to change the color of each alien when it gets clicked.**",
        "Dance Party 5_simple_markdown_instruction": "You can change many things in this program.\n\nAdd code to change the color of each alien when it gets clicked.",
        "Dance Party 6 - Validated_markdown_instruction": "These aliens are running wild!  \n\nUse the <xml><block type=\"gamelab_removeAllBehaviors\" inline=\"true\">\n      <value name=\"SPRITE\"/>\n    </block></xml> block to make each alien stop moving when it is clicked.",
        "Dance Party 6_markdown_instruction": "These aliens are running wild!  \n\nUse the <xml><block type=\"gamelab_removeAllBehaviors\" inline=\"true\">\n      <value name=\"SPRITE\"/>\n    </block></xml> block to make each alien stop moving when it is clicked.",
        "Dance Party 6_simple_markdown_instruction": "These aliens are too busy!  \n\nUse the <xml><block type=\"gamelab_removeAllBehaviors\" inline=\"true\">\n      <value name=\"SPRITE\"/>\n    </block></xml> block to make each alien stop moving when it is clicked.",
        "Dance Party 7 - Validated_markdown_instruction": "Finally, add a new bell sprite called `myBell`.  \n\nWhen you click on it, make all the aliens start doing the same dance move!",
        "Dance Party 7_markdown_instruction": "Finally, add a new bell sprite called `myBell`.  \n\nWhen you click on it, make all the aliens start doing the same dance move!",
        "Dance Party 7_simple_markdown_instruction": "Finally, add a new bell sprite called `myBell`.  \n\nWhen you click on it, make all the aliens start doing the same dance move!",
        "Dance Party Freeplay_markdown_instruction": "Now create your own alien disco! Looking for inspiration? Try these ideas:\n* Create two bell sprites, and make the aliens do a different dance move for each\n* Make the aliens do a new dance move whenever they touch each other",
        "Dance Party Freeplay_simple_markdown_instruction": "Now make a new alien dance party!  Here are some ideas:\n* Create two bell sprites, and make the aliens do a different dance move for each\n* Make the aliens do a new dance move whenever they touch each other",
        "Dance Party Predict_markdown_instruction": "**Make a prediction:** Here’s a sprite called `alien1`!   \n\nWhat do you think will happen when you click on it?  ",
        "Dance Party Predict_simple_markdown_instruction": "**What do you think?** \n\nHere’s a sprite called `alien1`!   \n\nWhen you click on it, what will it do?  ",
        "Discovery Learning: Definition and History_markdown_instruction": "The following link is a resource that shows some of the history behind discovery learning: ",
        "Discovery Learning: Principals and Techniques_markdown_instruction": "The following link is a resource that shows the principles and techniques of discovery learning: ",
        "Discovery Learning: Principles and Techniques_markdown_instruction": "The following link is a resource that shows the principles and techniques of discovery learning: ",
        "Discovery learning definition and history_markdown_instruction": "The following link is a resource that shows some of the history behind discovery learning: ",
        "Discovery learning techniques_markdown_instruction": "The following link is a resource that shows the principles and techniques of discovery learning: ",
        "ECSPD Online U1D1-2 Assessment 1_markdown_instruction": "Did you have coffee this morning? If you did, odds are you used a computer. If you made the coffee yourself, your coffee maker probably had a digital clock or a programmable timer. If you bought it, the barista likely used a card reader with an electronic cash register to take your payment. Think through your day and record how many computers you used before sitting down in front of a desktop or a laptop (or whatever device you are using right now). Don't forget the computers in your car, your refrigerator, your alarm clock...\n",
        "ECSPD Online U1D1-2 Reflection_markdown_instruction": "You have experienced the lesson both online and on the first day of the in-person PD. Additionally, you have watched a video defining computers. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.\n",
        "ECSPD Online U1D10 Reflection_markdown_instruction": "You have experienced the lesson both online and on the first day of the in-person PD. Additionally, you have watched a TED talk about the representation of data. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.",
        "ECSPD Online U1D11-14 Reflection_markdown_instruction": "You have experienced part of this lesson online and have investigated other design tools. What have you learned that you can take back to your classroom? How will you tackle this lesson's unique challenges? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.\n",
        "ECSPD Online U1D15-16 Reflection_markdown_instruction": "You have experienced the lesson on the first day of the in-person PD and have watched a TED talk about the extent of the use of algorithms in the world. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.",
        "ECSPD Online U1D17-19 Assessment_markdown_instruction": "Take some time to look over the lesson and the unplugged activity. Think about your classroom and the space you have available to run the Turing Test Activity. How are you planning to set up your classroom to best facilitate the Turing Test Activity?",
        "ECSPD Online U1D17-19 Reflection_markdown_instruction": "This is the last lesson in the unit. How does it combine what was covered previously in the unit? Now that you have taken time to examine this lesson, what have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.",
        "ECSPD Online U1D3-4 Reflection_markdown_instruction": "You have experienced part of this lesson online and studied the components of computers. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level. ",
        "ECSPD Online U1D5-7 Reflection_markdown_instruction": "You have experienced this lesson in person and have examined additional resources online. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.",
        "ECSPD Online U1D8-9 Assessment_markdown_instruction": "List three points either from the articles or the lesson plan that you would want to discuss with your class. Describe one strategy you plan to use to facilitate discussion.",
        "ECSPD Online U1D8-9 Reflection_markdown_instruction": "You have experienced part of this lesson online and have read a few articles regarding the impact of computers and the internet on communication. What have you learned that you can take back to your classroom? Use this space to record your ideas for this lesson. You will have a chance to share your ideas and questions in a forum in the following level.",
        "ECSPD your goals_markdown_instruction": "__What are your goals for your ECS class?__ *These goals will change over time, and we'll revisit this your response as we go through the course so we can check in on how we're progressing towards those goals.*\n",
        "Eval Booleans 1_markdown_instruction": "Boolean operators (like >, <, =) allow us to compare different values, returning either *true* or *false*. Click \"Run\" to see how this expression evaluates.",
        "Eval Booleans 2_markdown_instruction": "Can you set the values so that this expression evaluates as *true*?",
        "Eval Booleans 3_markdown_instruction": "The `string-length` function returns the number of characters in a string (including spaces!) - make this code evaluate to *true*.",
        "Eval Booleans 4_markdown_instruction": "Here's an Evaluation Block called `and` - it returns *true* if both of its parameters are *true*, otherwise it returns *false*. Edit the x variable so that this expression returns *true*.",
        "Eval Booleans 5_markdown_instruction": "This `or` block returns *true* if either of its parameters is *true*. Otherwise, if both parameters are *false* it will return *false*. Set the y variable to a value that will cause this expression to return *false*.",
        "Eval Booleans 6_markdown_instruction": "Here's one more boolean block called `not`. This block flips *true* to *false*, or *false* to *true*. If you wrap this block of code in a NOT block, it should return *true* (because we are asking if the two expressions do NOT produce equal values).",
        "Eval Booleans Free Play_markdown_instruction": "Free Play: Try out some creations of your own using Booleans.",
        "Eval Cond 4_markdown_instruction": "We can use the `string=?` function to make conditionals that respond to text input. Here's a function called `green shape` that takes a string for the type of shape. Complete the conditions so that the correct solid green shape is returned when the function is run with \"circle\", \"triangle\", \"square\", or \"rectangle\".",
        "Eval Cond 5_markdown_instruction": "Here's a similar function `red shape` with an additional variable for size. Complete the conditionals so the correct solid red image of a given size is drawn for \"circle\", \"triangle\", and \"star\".",
        "Eval Contracts 4_markdown_instruction": "The `scale` function returns an image that is either larger or smaller than the input image. Try scaling this circle by a factor of 10. How is the returned image different than if you'd just made a circle of that size in the first place?",
        "Eval Contracts A_markdown_instruction": "Use the `star` function to produce a solid red star with a 60 pixel radius",
        "Eval Contracts C_markdown_instruction": "Check out the `rotate` function - can you use it to rotate this 90 pixel green square by 45 degrees?",
        "Eval Contracts E_markdown_instruction": "Try using the `text` function to write this \"Hello, world!\" in teal at size 40.",
        "Eval Define Funcs 1_markdown_instruction": "Here's a new function called `green-triangle` that takes a single Number for size and produces a green triangle. Use the new function to create a 125 pixel green triangle",
        "Eval Define Funcs 2_markdown_instruction": "Let's look inside that `green-triangle` function to see how it works. Can you modify it so that the `green-triangle` function always draws outlined green triangles? **Don't forget to change the examples too!**",
        "Eval Define Funcs 3_markdown_instruction": "Here's the start of another new function called `purple-circle` with a domain of one Number (the radius) and a range of Image. The body of the function is broken though, it always draws a circle of 50 pixel radius instead of using the radius parameter. Replace the current Number with the `radius` block from the domain.\n\nWhen you've fixed the function, test your new function with a 150 pixel radius.",
        "Eval Define Funcs 4_markdown_instruction": "Create a new function called `aqua-star` that has a Domain of a single Number for radius and returns an aqua star of the given radius. Run your new function with a radius of 75.",
        "Eval Define Funcs 5_markdown_instruction": "Let's use that `aqua-star` function to make a row of different sized stars. From left to right, the stars should have radii of 25, 50, and 75.",
        "Eval Define Funcs Test_markdown_instruction": "Here's the start of another new function called `purple-circle` with a domain of one Number (the radius) and a range of Image. The body of the function is broken though, it always draws a circle of 50 pixel radius instead of using the radius parameter. Replace the current Number with the `radius` block from the domain.\n\nWhen you've fixed the function, test your new function with a 150 pixel radius.",
        "Eval Defining Vars Free Play 1_markdown_instruction": "Free Play: We've provided a function that fills your screen with `my-image`. Change `my-image` to see what patterns you can make.",
        "Eval Design Recipe .1_markdown_instruction": "Here's a Design Recipe for a function called `square-circle` with domain Number String and range Image. Click Edit to write the function definition (you will see two examples provided).",
        "Eval Design Recipe 3_markdown_instruction": "The Design Recipe for `wide-rect` already has a contract and one example. Can you write a second example and then complete the definition? The `wide-rect` function should produce a rectangle of given color that is twice as wide as it is high.",
        "Eval Design Recipe 4_markdown_instruction": "Use the Design Recipe to create a function `starburst`. When given a number of points and an outer radius, `starburst` returns a yellow radial star with given points, and an inner radius that is half the outer radius.",
        "Eval Design Recipe 5_markdown_instruction": "Write a function `striped-flag` that takes two colors and produces a flag that is 250 pixels wide, 150 pixels tall, with three even horizontal stripes of given colors, in the order color2, color1, color2.",
        "Eval Design Recipe 6_markdown_instruction": "Write a function `large-polygon` that should output a solid polygon of given sides and color that takes up most of the window, regardless of the number of sides. To make sure that the polygon doesn't get too large as you increase the number of sides, side length should be inversely proportional to side number, with a length of **(800/sides)**.",
        "Eval Design Recipe Free Play_markdown_instruction": "Free Play: Use the Design Recipe to create some functions of your own design",
        "Eval Strings Images .1_markdown_instruction": "So far we've only dealt with a single type of data, Numbers. Another type of data is a String, which is any combination of letters, numbers, or other characters wrapped in quotation marks. Run the String \"Hello, world!\" and see what happens.",
        "Eval Strings Images .2_markdown_instruction": "The `string-append` function takes two Strings and returns a single combined String. Add a String \"Universe\" to the second argument of `string-append`.",
        "Eval Strings Images 1_markdown_instruction": "The third type of data we're going to use is an Image. This `star` function takes in a Number and two Strings, and it evaluates to an Image. Use this function to make a solid red star with radius of 100.",
        "Eval Strings Images 2_markdown_instruction": "Free Play: Every Evaluation Block is color-coded to let you know which data type it returns and which types it needs for its parameters. The last parameter of the triangle function takes a String that controls its color - try some different colors to see what works.",
        "Eval Strings Images 3_markdown_instruction": "Some functions can only take a specific set of Strings, such as the second argument of this `circle` function, which controls its style. Draw this orange outline circle using the special String block with a dropdown to make sure you only use valid styles.",
        "Eval Strings Images 4_markdown_instruction": "Try using the `rectangle` block to draw this solid, red rectangle - it is 175 pixels wide and 100 pixels tall.",
        "Eval Strings Images 5_markdown_instruction": "Try using this new Evaluation Block called `overlay` to place a 100 pixel white triangle on top of a 200 pixel red circle.",
        "Eval Strings Images 6_markdown_instruction": "Use the overlay block to place a 75 pixel radius yellow star on top of a 150 pixel long blue square.",
        "Eval Strings Images 7_markdown_instruction": "The `offset` block lets you move an image relative to where it would normally be placed. Use this block to offset the square by 100 pixels on the y-axis.",
        "Eval Strings Images 8_markdown_instruction": "Here's a different kind of star block - it's called `radial-star` and it allows you to draw stars with any number of points! Use it to create a 7 point solid orange star with an inner radius of 75 pixels and an outer radius of 175 pixels.",
        "Eval Strings Images Free Play_markdown_instruction": "Free Play: Explore the blocks available to create something interesting. Make sure to share your favorite creations.",
        "Fish Tank 1-validated_markdown_instruction": "**Make a prediction**: What do you think will happen when you run this code?",
        "Fish Tank 1-validated_simple_markdown_instruction": "**What do you think?**: When you run this code, what will it do?",
        "Fish Tank 1_markdown_instruction": "**Make a prediction**: What do you think will happen when you run this code?",
        "Fish Tank 2-validated_markdown_instruction": "Let's make a fish tank!  \n\nChange Dusty (the tumbleweed) to a fish.",
        "Fish Tank 2-validated_simple_markdown_instruction": "Change Petal (the flower) to a fish.",
        "Fish Tank 2_markdown_instruction": "We're going to make a fish tank. Change the Dusty the tumbleweed to a fish.",
        "Fish Tank 3-validated Ram_markdown_instruction": "The fish is getting dizzy! \n\nChange the fish's behavior so that it swims around the tank.",
        "Fish Tank 3-validated_markdown_instruction": "The fish is getting dizzy! \n\nChange the fish's behavior so that it swims around the tank.",
        "Fish Tank 3-validated_simple_markdown_instruction": "The fish should swim! \n\nMake the fish swim around the tank.",
        "Fish Tank 3_markdown_instruction": "All this spinning is going to make our fish dizzy! Change the fish's behavior to make it swim around the tank.",
        "Fish Tank 4-validated_markdown_instruction": "Our fish tank needs some water! \n\nUse <xml><block type=\"gamelab_setBackground\" inline=\"true\">\n    <value name=\"COLOR\">\n      <block type=\"colour_picker\">\n        <title name=\"COLOUR\">#0000ff</title>\n      </block>\n    </value>\n  </block></xml> to make the background blue.",
        "Fish Tank 4-validated_simple_markdown_instruction": "The fish needs water! \n\nUse <xml><block type=\"gamelab_setBackground\" inline=\"true\">\n    <value name=\"COLOR\">\n      <block type=\"colour_picker\">\n        <title name=\"COLOUR\">#0000ff</title>\n      </block>\n    </value>\n  </block></xml> to make the background blue.",
        "Fish Tank 4_markdown_instruction": "Our fish tank needs some water! Use the `set background color` block to make the background blue.",
        "Fish Tank 5-validated_markdown_instruction": "Our fish is getting a little lonely. Add another sprite to the fish tank.",
        "Fish Tank 5-validated_simple_markdown_instruction": "The fish wants a friend.   Add a new sprite.",
        "Fish Tank 5_markdown_instruction": "Our fish is getting a little lonely. Create a new sprite inside the fish tank.",
        "Fish Tank 6-validated_markdown_instruction": "What do you want your fish’s new friend to do?   \n\nAdd a behavior and watch them go!",
        "Fish Tank 6-validated_simple_markdown_instruction": "What should the new friend do?   \n\nGive the friend a new behavior!",
        "Fish Tank 6_markdown_instruction": "What do you want your fish’s friend to do? Add a behavior and watch them go!",
        "Fish Tank 7-validated_markdown_instruction": "We've added a lot of new blocks to the toolbox.   \n\nPlay with them to make your fish tank special!",
        "Fish Tank 7-validated_simple_markdown_instruction": "There are a lot of new blocks.   \n\nPlay with them to make your fish do new things!",
        "Fish Tank 7_markdown_instruction": "There are a lot of new blocks in the toolbox. Play with them to make your fish tank special.",
        "Fish Tank Predict_markdown_instruction": "**Make a prediction**: What do you think will happen when you run this code?",
        "Fish Tank Predict_simple_markdown_instruction": "**What do you think?**\n\nWhen you run this code, what will it do?",
        "Fish Tank Template_markdown_instruction": "Project Template",
        "Fish Tank Template_simple_markdown_instruction": "Project Template",
        "Formative versus Summative Assessment_markdown_instruction": "The following link is a resource that provides definitions and examples of formative and summative assessments:",
        "Function intro Ryan_markdown_instruction": "A **function** named `build bridge` is in your workspace.  All of the code you need to cross the river is built right in! \n \nSnap the small, green <xml> <block type=\"procedures_callnoreturn\" id=\"callMe\"><mutation name=\"build bridge\"/></block></xml> block into your workspace twice to fix the path and get {currentPlayerName} to the Redstone Torch [redstone_torch].",
        "GLJ_Crawl_Exemplar_1_markdown_instruction": "**Free Play**: Try using what you've learned to make something new. Make sure to explore some of the new blocks in the toolbox.",
        "GLJr_Behavior_7_markdown_instruction": "Check out these two new blocks - the green \"When dog is touching cat\" block will run everything attached to it when the dog touches the cat, and the \"Remove behavior\" block removes a behavior from a sprite.\n\nSee if you can make both the dog and cat stop moving when they run into each other.",
        "GLJr_Behavior_8_markdown_instruction": "The cat and dog are so excited to see each other that they want to have a dance party. In addition to removing their move behaviors when the two sprites touch, add the \"dance party\" behavior so they celebrate!",
        "GLJr_Behavior_9_markdown_instruction": "**Free Play**: Try using what you've learned to make something new. Make sure to explore some of the new blocks in the toolbox.",
        "GLJr_Forever_5_markdown_instruction": "Now we have two sprites! Use a loop to make the dog jittery and make the cat wander",
        "GLJr_Forever_6_markdown_instruction": "Let's try some more movement blocks - make the dog run up and make the cat run right.",
        "GLJr_Forever_7_markdown_instruction": "Check out this new \"if-else\" block - it lets you run one set of code _if_ a condition is true, and a different set of code if it's false. Inside it we're using another new block that tells you _if_ two sprites are touching.\n\nSee if you can make both the dog and cat stop moving when they run into each other.",
        "GLJr_Forever_8_markdown_instruction": "The cat and dog are so excited to see each other that they want to have a dance party. If the two sprites are touching, have each run the \"dance party\" block.",
        "GLJr_Forever_9_markdown_instruction": "**Free Play**: Try using what you've learned to make something new. Make sure to explore some of the new blocks in the toolbox.",
        "Geometric Pattern_markdown_instruction": "**Project Idea:** Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Geometric Sun_markdown_instruction": "**Project Idea:** Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Geometric Sun_2018_markdown_instruction": "**Project Idea:** Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
        "Harvesting_markdown_instruction": "Uh oh, I lost my map and can't remember what I planted! Every sprout could grow up to be **corn** ![picture of corn](https://images.code.org/cac3133c40781553a70066a67298b2b5-image-1472493202556.png) , **beans** ![picture of beans](https://images.code.org/5e379ff595be17722237d9685b29fd96-image-1472493220871.png) , or **pumpkins** ![picture of pumpkin](https://images.code.org/03cf76a978e0788ccb53f14e9d264695-image-1472493237148.png) . Can you write some code to pick all the crops, no matter what they are?",
        "HoCAB_labyrinth1_markdown_instruction": "Use the blocks to solve this maze!\n\n<xml><block type=\"simple_move_down\"/></xml><xml><block type=\"simple_move_up\"/></xml><xml><block type=\"simple_move_right\"/></xml><xml><block type=\"simple_move_left\"/></xml>",
        "Inspirational Artwork_markdown_instruction": "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNotice: We've used the `set alpha` block to make the \"petals\" fade toward the outside.",
        "InspirationalArtwork_markdown_instruction": "You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "InspirationalArtwork_2018_markdown_instruction": "You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "Introduction to App Lab and Turtle Programming_markdown_instruction": "The video below is from lesson 4, and introduces App Lab and the Turtle. ",
        "Introduction to Design Mode_markdown_instruction": "**You do not need to watch this video** to understand or complete this lesson - it is merely here if you are interested in getting a general overview.  \n\nIn this lesson to get started we will only use a few of the features depicted.",
        "Introduction to Design Mode_2018_markdown_instruction": "**You do not need to watch this video** to understand or complete this lesson - it is merely here if you are interested in getting a general overview.  \n\nIn this lesson to get started we will only use a few of the features depicted.",
        "Just for Testing_markdown_instruction": "Other test instructions",
        "K-1 Bee Loops 2_markdown_instruction": "Use a `repeat` loop to move and then get the nectar and make honey!",
        "K-1 Bee Loops 3_markdown_instruction": "Use three `repeat` loops to get the nectar and make honey!",
        "K-1 Bee Loops 4_markdown_instruction": "Use `repeat` loops to get the nectar, make honey, and to move!",
        "K-1 Bee Loops 5_markdown_instruction": "Use `repeat` loops to get the nectar and honey!",
        "K-1 Bee Loops 6_markdown_instruction": "Use a `repeat` loop to get the nectar, get honey, and to move!",
        "K-1 Maze Loops 10_markdown_instruction": "Get me to the pig!   \nUsing the `repeat` loop will make it much easier.",
        "K-1 Maze Loops 11_markdown_instruction": "Get me to the pig!  \nThe `repeat` loop will make this easier.",
        "K-1 Maze Loops 12_markdown_instruction": "Get me to the pig!  \nThe `repeat` loop will make this easier.",
        "K-1 Maze Loops 2_markdown_instruction": "Use the `repeat` block to get me to the pig!",
        "K-1 Maze Loops 3_markdown_instruction": "Get me to the pig!  \nBe sure to use `repeat` loops.",
        "K-1 Maze Loops 5_markdown_instruction": "Get me to the pig!  \nBe sure to use `repeat` loops.",
        "K-1 Maze Loops 6_markdown_instruction": "Get me to the pig!  \nBe sure to use `repeat` loops.",
        "K-1 Maze Loops 7_markdown_instruction": "Get me to the pig!  \nBe sure to use `repeat` loops.",
        "K-1 Maze Loops 8_markdown_instruction": "Use `repeat` loops to get me to the pig.",
        "K-1 Maze Loops Assessment 1_markdown_instruction": "Look at all we've learned!   \nUse a `repeat` loop to get me to the pig!",
        "K2.0 sequence 1_markdown_instruction": "A bug! Fix the code to get me to the pig.\n\n![](https://images.code.org/2843193ce2d869ad2f06f0f5b114c9d0-image-1467924400663.gif)",
        "K2.0 sequence 10_markdown_instruction": "**Challenge:** Move me around the TNT to get to the pig.\n\n![](https://images.code.org/4873075cd34a942f5006d59b05422bd0-image-1467932801138.gif)",
        "K2.0 sequence 12_markdown_instruction": "Let's get that pig!\n\n![](https://images.code.org/f908ff77eb81ee85d405a7ba66cc2986-image-1467933103380.gif)\n",
        "K2.0 sequence 2_markdown_instruction": "Fix the code to get me to the pig!\n\n![](https://images.code.org/629cddc754f9ad02929f06fc68462e4d-image-1467924800613.gif)",
        "K2.0 sequence 3_markdown_instruction": "Something is not quite right. REMOVE a block to get me to the pig!\n\n![](https://images.code.org/dd6d92233199ee0f524caa4051b99275-image-1467920800577.gif)",
        "K2.0 sequence 4_markdown_instruction": "Time for a shorter puzzle!  Move one way, then another to get me to the pig.\n\n![](https://images.code.org/c2e2d7ea98a18d899c6de183ce6d82e1-image-1471385293382.gif)\n",
        "K2.0 sequence 5_markdown_instruction": "Move one way, then another to get me to the pig!\n\n![](https://images.code.org/0b324bc0f684f7a22171acd8b38c8d9f-image-1467931807767.gif)",
        "K2.0 sequence 6_markdown_instruction": "Figure out what is missing and then add blocks to get me to the pig!\n\n![](https://images.code.org/b9803e12911694d8bb18bd55304f85d5-image-1467932006704.gif)",
        "K2.0 sequence 7_markdown_instruction": "Solve this level and get me to the pig!\n\n![](https://images.code.org/1eb9139e2887083dc80b98d9aeb3bef2-image-1467932105884.gif)",
        "K2.0 sequence 8_markdown_instruction": "**Challenge:** Debug this level by adding blocks to get me to the pig!\n\n![](https://images.code.org/810d7189bcd0767d37ea82319b4c678c-image-1467932445247.gif)",
        "K2.0 sequence 9_markdown_instruction": "**Challenge:** Go around the TNT to get me to the pig!\n\n![](https://images.code.org/fa04813e9451e0bc070af50bc01d4a6b-image-1467932582838.gif)",
        "KIKI GLJ Test Response_markdown_instruction": "Look carefully at the code below.  What do you think the plane will do when you click \"Run\"?\n",
        "LaurelDebugging4Video1_markdown_instruction": "This is Laurel the Adventurer!\n\nMove her around and get as much gold as you can.",
        "Limited Quantity of Blocks Test_markdown_instruction": "Get me to the pig by adding only one block.",
        "Luigi's Pizza 1_markdown_instruction": "Welcome to Luigi's Pizza! To order a pizza, type the name of a topping into the `cost` function, and we'll return the price of that pizza. Try ordering a pepperoni pizza to start.",
        "Luigi's Pizza 2_markdown_instruction": "Right now there are only four choices available at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional block in the `cost` function. Once you've added your toppings, test out the function to make sure it works.",
        "Luigi's Pizza 3_markdown_instruction": "That's better, everyone loves more variety in their pizza toppings! But you still can't please everyone, and folks are coming in to order toppings that Luigi doesn't have. Instead of saying no to those people, could you update the _else_ clause so that we charge them a premium for toppings that we don't normally offer? Let's charge $10,000 for a topping we don't carry.",
        "Luigi's Pizza 4_markdown_instruction": "Free Play: What can you do to make Luigi's cost function even more useful? Try one (or more) of the following:  \n\n- Create a new function to display an image of the chosen pizza\n- Create a function that allows for ordering multiple pizzas (the same, or with different toppings)\n- Create a function that allows you to add a coupon code for a 30% discount",
        "MC Agent Freeplay_markdown_instruction": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
        "MC HOC 2016 SCORE LEVEL_markdown_instruction": "Some games let you keep score. Play tag with these Iron Golems and use the <xml>  <block type=\"craft_addScore\">\n    <title name=\"SCORE\">1</title>\n  </block></xml> block to give yourself a point when you tag them.  \n  \n  Reach five points to win!",
        "MC_2017_Ryan_02_markdown_instruction": "Code like this can be made even shorter using loops!  \n\nNow get the Agent to the pressure plate using a `repeat` loop to help him move forward.",
        "MC_HOC_2017 Agent Test_markdown_instruction": "Click \"Run\" to move the player using the **arrow keys**.  \n\nTo pass this level, you will need to get to the door and open it (using the **space bar**) so you can get to the orange square inside.",
        "MC_HOC_2017_01_markdown_instruction": "Click \"Run\" to move the player using the **arrow keys**.  \n\nTo pass this level, you will need to get to the door and open it (using the **space bar**) so you can get to the orange square inside.",
        "MC_HOC_2017_01_Cole_markdown_instruction": "You need to collect all the tools on this journey. Move around using the **arrow keys**, and get to the chest on the path to win",
        "MC_HOC_2017_01_Kiki_markdown_instruction": "To play this level, click the orange \"Run\" button beneath the play space, then move the player around using the **arrow keys**.  ",
        "MC_HOC_2017_01_RETRY_markdown_instruction": "The door is locked, but the Agent is here to help!\n\nSnap a `move forward` block to the bottom of the `when run` block in the workspace to get the Agent to the pressure plate [PressurePlate_Up], then press \"Run\" and use the arrow keys to move out of the house to collect the **chest** [chest].",
        "MC_HOC_2017_02_markdown_instruction": "The player needs to get into that secret grove.  Help The Agent open the gate by writing code to get him to the pressure plate.",
        "MC_HOC_2017_02_Cole_markdown_instruction": "{currentPlayerName} is headed on an adventure! To help, get the **map** [map_empty] behind the locked door on the right. \n \nSnap the code into the workspace to move the Agent to the pressure plate [PressurePlate_Up] so that {currentPlayerName} can get through. ",
        "MC_HOC_2017_02_Kiki_markdown_instruction": "The player is headed out on an adventure, but first they have to get the torch that is hidden on the other side of that locked door. \n\nProgram the Agent to move forward twice to follow the white path and get to the pressure plate so he can open the door for the player.",
        "MC_HOC_2017_02_Will_markdown_instruction": "To finish this level, the player needs to get to the orange square inside of the Secret Grove, which is behind the locked door.  \n\nThe code in the workspace will make the Agent move forward twice to get to the pressure plate and open the door for Alex or Steve.",
        "MC_HOC_2017_03_Cole_markdown_instruction": "{currentPlayerName} continues on the adventure and needs the **compass** [compass] to prepare for the trip.  \n   \nCode the Agent to open the gate. ",
        "MC_HOC_2017_03_Kiki_markdown_instruction": "The player's adventure will begin behind the locked door, in the Secret Grove!  \n\n\nHelp The Agent open the door by writing code to get him to the pressure plate.",
        "MC_HOC_2017_04_markdown_instruction": "Change the loop from the last puzzle to help the Agent make a path over the wider part of this river.",
        "MC_HOC_2017_04POINT5_Cole_markdown_instruction": "You made it out of the swamp!  Now, get the player safely to the orange square.\n\nHelp The Agent clear the path by finding a simple pattern and using loops to cross the first two pressure plates.",
        "MC_HOC_2017_04POINT5_RYAN_markdown_instruction": "You made it across! \n\nNow, get {currentPlayerName} safely through the maze to collect the **axe** [diamond_axe]",
        "MC_HOC_2017_04_Cole_markdown_instruction": "The Agent can move across water!  \n \nUse a `repeat` loop to solve this puzzle and help {currentPlayerName} get to the **bucket** [bucket_empty] behind the door. ",
        "MC_HOC_2017_04_Kiki_markdown_instruction": "The entry to the Secret Grove led to this beautiful Oasis!  To pass this level, the player needs to get to the orange square in the cabana.  \n\nUse a `repeat` loop to help the Agent get all the way up to the pressure plate, which opens the cabana door.",
        "MC_HOC_2017_05_markdown_instruction": "Loops are not always helpful.\n\nThese cacti are not growing in an obvious pattern, so a loop would not clear them correctly.  Instead, we've given you a function called `destroy and move` that will do the hard work for you each time the Agent gets to an obstacle.",
        "MC_HOC_2017_05_Cole_markdown_instruction": "Oh no, the bridge is out! \n\nCode the Agent to rebuild the bridge using the <xml>  <block type=\"craft_placeBlock\">\n    <title name=\"TYPE\">       </title>\n  </block></xml> block so that {currentPlayerName} can get to the **shovel** [diamond_shovel].",
        "MC_HOC_2017_05_Josh_markdown_instruction": "Oh no, the bridge is out!\n\nHelp the Agent rebuild the bridge so that the player can get to the **shovel**.",
        "MC_HOC_2017_05_Kiki_markdown_instruction": "It's time for the player to leave the Secret Grove and continue the adventure, but the bridge is out! \n\nHelp the Agent rebuild the bridge, then move to the wooden plank so that the player can get to the orange square.",
        "MC_HOC_2017_06_Cole_markdown_instruction": "Another river, but this one is much wider! \n \nFix this code to help the Agent build a bridge so that {currentPlayerName} can get to the **pickaxe** [diamond_pickaxe]. ",
        "MC_HOC_2017_06_Josh_markdown_instruction": "Another river, but this one is much wider!  \n\nFix this code to help the Agent build a bridge across this river.",
        "MC_HOC_2017_06_Kiki_markdown_instruction": "Another river, but this one is much wider!  \n\nFix this code to help the Agent build a bridge across the water.",
        "MC_HOC_2017_07_Cole_markdown_instruction": "There's ice in the way!  \n \nThe `clear path` function can help you destroy the ice and get {currentPlayerName} to the Minecart [minecart_normal]! ",
        "MC_HOC_2017_07_Kiki_markdown_instruction": "Loops are not the only way to repeat code!  \n\nHere, we've given you a function called `clear cacti` that will do the hard work of clearing three cacti every time you use it.  Use two `clear cacti` blocks to clear the path to the orange square. ",
        "MC_HOC_2017_07a_Kiki_markdown_instruction": "Now, edit this loop to help the Agent clear a path to the orange square.",
        "MC_HOC_2017_08_Cole_markdown_instruction": "Now, instead of destroying before you move, you will need to place a block.  \n\nChange the provided function to work for the desert.",
        "MC_HOC_2017_08_Kiki_markdown_instruction": "Now, instead of destroying cacti, you will need to place stone over lava, then destroy standstone.  \n\nChange the function to work for this level.",
        "MC_HOC_2017_08_RY_markdown_instruction": "Now there are **TWO** functions to choose from!\n\nUse these functions to quickly build a bridge across the lava for {currentPlayerName}.",
        "MC_HOC_2017_08_Will_markdown_instruction": "Now there are **TWO** functions to choose from!\n\nUse these functions to quickly build a bridge across the lava for the player.",
        "MC_HOC_2017_09_Cole_markdown_instruction": "Use functions to help the Agent destroy the giant blocks of dirt that are blocking the player's path to the pressure plate.",
        "MC_HOC_2017_09_Kiki_markdown_instruction": "This starting code cannot be removed.\n\nAdd commands to the `create trail` function so that the program in the workspace will get the Agent to the pressure plate. ",
        "MC_HOC_2017_09_RS_CLONE_markdown_instruction": "Fix this function to fill in the holes, then step on the pressure plate to clear a path to the torch.",
        "MC_HOC_2017_10_Cole_markdown_instruction": "Use the functions to clear a path for the mine cart, and walk into the Nether Portal.",
        "MC_HOC_2017_10_Cole_old_markdown_instruction": "Try building a function from the beginning that will make it easier for the Agent to finish this minecart and get the player to the orange square.",
        "MC_HOC_2017_10_Kiki_markdown_instruction": "Try building a function from the beginning that will make it easier for the Agent to finish this minecart and get the player to the orange square.",
        "MC_HOC_2017_10_RYAN_markdown_instruction": "Try building functions from the beginning that will make it easier for the Agent to finish this minecart and get the player to the orange square.",
        "MC_HOC_2017_10_RYAN2_markdown_instruction": "Try building functions from the beginning that will make it easier for the Agent to finish this minecart and get the player to the orange square.",
        "MC_HOC_2017_11_Kiki_markdown_instruction": "Now it's up to you! See what you can create around this frozen lake.",
        "MC_HOC_2017_13_Cole_markdown_instruction": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
        "MC_HOC_2017_4.5v2_markdown_instruction": "You made it out of the swamp!  Now, get the player safely to the orange square.\n\nHelp The Agent clear the path by finding a simple pattern and using loops to cross the first two pressure plates.",
        "MC_HOC_2017_Ali_markdown_instruction": "Look at the functions below.  How can you use them to avoid the Ghasts and help {currentPlayerName} make it safely to the **Enchanted Book** [book_enchanted]?  ",
        "MC_HOC_2017_FP10x10_markdown_instruction": "**Freeplay:** Now it's up to you! Can you challenge yourself to collect all of the diamonds in this level? ",
        "MC_HOC_2017_FP10x10_RE_markdown_instruction": "**Freeplay:** Now it's up to you! Can you challenge yourself to collect all of the diamonds in this level? ",
        "MC_HOC_2017_FP20x20_markdown_instruction": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
        "MC_HOC_2017_Ryan_03_markdown_instruction": "Did you know that you can put more than one piece of code into a loop?  \n\nUse a `repeat` loop to help the Agent build a bridge over the river by placing blocks in the water.",
        "MC_HOC_2017_Ryan_05_markdown_instruction": "Sometimes you need to knock down things that get in the way of your player.  \nUse the `destroy` block to clear all of the cactii between the Agent and the pressure plate.",
        "MC_HOC_Kiki_02_markdown_instruction": "Someone needs to be on the pressure plate before the side door will open.  Help the Agent get to the plate so the player can leave the house.",
        "MSM Defining Vars 1_markdown_instruction": "Write a program that produces a 50 pixel solid green triangle.",
        "MSM Defining Vars 2_markdown_instruction": "If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called `my-shape` and put the code for a 50 pixel solid green triangle inside.",
        "MSM Defining Vars 3_markdown_instruction": "Take your `my-shape` variable and use it with this provided code to draw two identical green triangles that are 50 pixels in size.",
        "MSM Defining Vars 4_markdown_instruction": "Edit your `my-shape` variable so that it draws 75 pixel solid red stars.",
        "Making Music_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Making Music_2018_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Matt Test Level_markdown_instruction": "Do 0 bits weigh less than 1 bits?\n",
        "Mike Pair Programming_markdown_instruction": "Here are markdown instructions",
        "Mike Test Bee Conditionals 1_markdown_instruction": "This cloud is blocking my view! \n\nCheck to see if there's a flower under the cloud, and only get nectar if there's a flower.   \nBe careful, it can change!",
        "Mike Test Bee Conditionals 2_markdown_instruction": "**Assessment:** Collect all of the nectar.  \nBe careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "MikeTest1_markdown_instruction": "Markdown",
        "NEW Course 4 Artist Functions 1_markdown_instruction": "Can you draw a square that is 100 pixels in length, using a repeat loop?\n\n",
        "NEW Course 4 Artist Functions 10.1_markdown_instruction": "Use the functions from the previous puzzles to draw this pattern.",
        "NEW Course 4 Artist Functions 10_markdown_instruction": "Click \"edit\" to fill out the blocks in the function definition to make a 40 pixel square.\n\n",
        "NEW Course 4 Artist Functions 11_markdown_instruction": "Now we want to create a new function called `draw a line of squares` that draws six squares all in a row.  \n\nCan you build this function using this `draw a square 20` function that we created for you?\n<br/><br/>\n\n*Note: See that we've changed the pen to be much thinner. Click \"edit\" on the `draw a square 20` function to see how!*",
        "NEW Course 4 Artist Functions 12_markdown_instruction": "Use the `draw a line of squares` function from the last puzzle to draw this pattern.",
        "NEW Course 4 Artist Functions 13_markdown_instruction": "Can you draw a star shape using the `draw a line of squares` function?  \n\n(Be sure to `move forward` 60 pixels before you turn 144 degrees!)",
        "NEW Course 4 Artist Functions 14_markdown_instruction": "It's free-play time! Draw anything you like!",
        "NEW Course 4 Artist Functions 2_markdown_instruction": "Can you draw 3 squares 20 pixels apart from one another? \n\nEach square is 100 pixels in size.",
        "NEW Course 4 Artist Functions 3_markdown_instruction": "Here is a new type of Block. It is called a `function` block. Click \"edit\" then fill it with the code for drawing a square with 100 pixel sides. \n\nWhen you're done editing the function, click \"Close\" to go back to your program.",
        "NEW Course 4 Artist Functions 4_markdown_instruction": "Use the `draw a square` function to draw this pattern. ",
        "NEW Course 4 Artist Functions 6_markdown_instruction": "Using the \"draw a square\" function block, can you draw this picture? Hint: each square is 20 pixels apart.\n\n",
        "NEW Course 4 Artist Functions 7_markdown_instruction": "Are you getting the hang of how to use function blocks? Let's modify `draw a square` so that it draws squares that are 200 pixels in size. \n\nClick on \"edit\" to enter the `draw a square` function editor.\n\nRemember to click on \"Close\" to get out of the function editor. ",
        "NEW Course 4 Artist Functions 8_markdown_instruction": "We have created a new function for you called `draw a triangle`.  Can you edit the function definition to draw a triangle with 100 pixel sides?",
        "NEW Course 4 Artist Functions 9_markdown_instruction": "Can you solve this by adding only one block?",
        "NEW Course 4 Artist Functions inspire_markdown_instruction": "<img src=\"https://images.code.org/5e50e6ef0cafb40a8b697ea158047412-image-1441260841174.11.12.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own. \n\n",
        "NEW Course 4 Artist Params 1_markdown_instruction": "Let's define this function to draw a square with 50 pixel sides. Click \"edit\" to get started.\n\n",
        "NEW Course 4 Artist Params 10_markdown_instruction": "Create a `draw a hexagon` function block with a length parameter. \n\nThis hexagon has sides that are 100 pixels in length.",
        "NEW Course 4 Artist Params 11_markdown_instruction": "Can you figure out how to draw this shape? \n\nEdit the function to use the `sides` parameter.",
        "NEW Course 4 Artist Params 12_markdown_instruction": "Can you complete this drawing? \n\nThe sides of all the shapes are 100 pixels long.",
        "NEW Course 4 Artist Params 12a_markdown_instruction": "This image is similar to the last.  \n\nCan you use a `for` loop with your function to make this design?",
        "NEW Course 4 Artist Params 14_markdown_instruction": "Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.\n\n- The smallest side length of the square is 5 pixels.\n- The smallest side length of the triangle is 10 pixels.\n- The smallest side length of the hexagon is 2 pixels.\n- All increase to 100 pixels.  ",
        "NEW Course 4 Artist Params 15_markdown_instruction": "**Freeplay:** Here are the functions you've written, and some more for you to play with. Play with the pen width to see how different your drawings look!",
        "NEW Course 4 Artist Params 2_markdown_instruction": "Create a `draw triangle` function from scratch that makes a triangle with  50 pixel sides.",
        "NEW Course 4 Artist Params 3_markdown_instruction": "Now let's use the function to draw 5 triangles in a row. \n\nEach triangle is 30 pixels apart.",
        "NEW Course 4 Artist Params 4_markdown_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "NEW Course 4 Artist Params 5_markdown_instruction": "Replace the `???` in the `length` parameter input block. \n\nThe pentagon has 100 pixel sides.",
        "NEW Course 4 Artist Params 6_markdown_instruction": "Fill in the `length` parameter to draw these shapes by replacing the `???` with the right numbers.  \n\nThe square and triangle have 100 pixel sides.  \nThe hexagon sides are 75 pixels long. ",
        "NEW Course 4 Artist Params 7_markdown_instruction": "Can you complete this drawing? \n\nThe sides of each triangle are 25 pixels larger than the last.  \nThe first triangle has 25 pixel sides.",
        "NEW Course 4 Artist Params 8_markdown_instruction": "The code for this triangle function is broken. \n\nCan you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "NEW Course 4 Artist Params 9_markdown_instruction": "Click \"edit\" to fill in the function definition of `draw a square` and add a parameter.  \nIt should take a length parameter just like the triangle. \n\n**This time, draw 3 squares:** 25, 50 and 75 pixels in length. The lefthand corners are each 100 pixels away from the last.",
        "NEW Course 4 Artist Params inspire_markdown_instruction": "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNotice: We've used the `set alpha` block to make the \"petals\" fade toward the outside.",
        "NEW Course 4 Artist Vars 12_markdown_instruction": "Now, recreate the algorithm from the last level and create a pentagon with sides of length 150.",
        "NEW Course 4 Artist Vars 2_markdown_instruction": "Drag a number block to the `set length` block and to the `repeat _ times` block to draw a set of 50 pixel triangles. ",
        "NEW Course 4 Artist Vars 4_markdown_instruction": "Let's try it again! \n\nCan you set the `length` variable to 60 to make this cool design with hexagons?",
        "NEW Course 4 Artist Vars 6_markdown_instruction": "Draw this pattern of pentagons with 100 pixel sides by setting the right value for `length` and dropping the `length` variable into all of the the correct places. \n\nSee how you only have to set the value for `length` once, and the code uses the right value everywhere?",
        "NEW Course 4 Bee For Loops 10a_markdown_instruction": "Ready for a challenge?  Take what you've learned about loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.\n",
        "NEW Course 4 Bee For Loops 2_markdown_instruction": "Add the code necessary to make sure the bee collects all the nectar. \n\nLook at how much code you need for this puzzle!   \n(We'll learn a simpler way in the next puzzle.)",
        "NEW Course 4 Bee For Loops 3_markdown_instruction": "Ah, the `for loop` makes this much easier! All the code you need is here, take a look at how it is put together then click `Run` to see how it works. ",
        "NEW Course 4 Bee For Loops 4 4_markdown_instruction": "Now we need to `move forward` `counter` times, then `get nectar` `counter` times.  Can you use two `repeat` loops to solve this challenge?",
        "NEW Course 4 Bee For Loops 4_markdown_instruction": "Replace the ??? in the `for loop` with the largest amount of nectar the bee has to collect. ",
        "NEW Course 4 Bee For Loops 5 5_markdown_instruction": "Are you getting the hang of using the `for loop`? Let's help the bee get the rest of the nectar.",
        "NEW Course 4 Bee For Loops 5_markdown_instruction": "You can also use a `for loop` to count down. Try gathering this nectar by counting down from 5 to 1 by 1.",
        "NEW Course 4 Bee For Loops 6_markdown_instruction": "The last number in your for loop is called the `increment`.  Each time the loop is run, the counter variable changes by the value of the increment. \n\nTry collecting these flowers using an increment of 2.",
        "NEW Course 4 Bee For Loops 8_markdown_instruction": "You've got this!  \n\nWhat should your increment be to collect 3, 6, 9, 12, 15 nectar?\n\n",
        "NEW Course 4 Bee For Loops 95_markdown_instruction": "Take a look at each piece of the `for loop` that you have just created.  Can you figure out which numbers you need to double to solve this puzzle? Why does it work?",
        "NEW Course 4 Play Lab Params 11_markdown_instruction": "It's free play time! Have fun with all the blocks in your tool box.  \n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Tag</strong> - Have character 2 patrol and use your arrow keys to make character 1 chase until they collide. </li>\n            <li><strong>Whack-a-Sprite</strong> - Have a character constantly pop up at a random location. Award points for clicking the sprite before it disappears. </li>\n            <li><strong>Best Guess</strong> - Make both characters disappear, change location to a random spot, then reappear as a random character.  Click on the first one and get a point...but if you click on the second one you LOSE a point! </li>\n        </ul>\n\t</h5>\n</details>\n</h5>\n",
        "NEW Course 4 Play Labs For Loops 8a_markdown_instruction": "**Challenge:** How would you use the `for loop` to go from top to bottom and get every character to say their actor number, then vanish from the screen? ",
        "New Minecraft Hero Project_markdown_instruction": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
        "October15 JoL 1_markdown_instruction": "Program the artist to design a face for your jack-o-lantern!\n\n",
        "October15 bat_markdown_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Play with the pen width to see how different your drawings look!\n\n",
        "October15 ghost 1_markdown_instruction": "Give the ghost eyes, using the `draw a circle` function.\n\n",
        "October15 pumpkin 1_markdown_instruction": "Finish this jack-o-lantern by drawing the eyes and nose in any style you would like.\n\n",
        "October15 stars 1_markdown_instruction": "Use loops and the `random integer` block to fill the night sky with stars of different shapes and sizes.",
        "Overworld Chop Tree_markdown_instruction": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the `destroy` block command to chop it down.",
        "Overworld Chop Tree_2018_markdown_instruction": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the `destroy` block command to chop it down.",
        "Overworld House Frame Chosen_markdown_instruction": "Build the rest of your house from any material you'd like. The `repeat` command will come in handy.",
        "Overworld House Frame Chosen_2018_markdown_instruction": "Build the rest of your house from any material you'd like. The `repeat` command will come in handy.",
        "Overworld Move to Sheep_markdown_instruction": "Add a second `move forward` block to reach the sheep.",
        "Overworld Move to Sheep_2018_markdown_instruction": "Add a second `move forward` block to reach the sheep.",
        "Overworld Place Wall_markdown_instruction": "Every house starts with a wall. Build the first part of your house by putting the `place` and `move forward` commands inside the repeat loop.",
        "Overworld Place Wall_2018_markdown_instruction": "Every house starts with a wall. Build the first part of your house by putting the `place` and `move forward` commands inside the repeat loop.",
        "Overworld Shear Sheep_markdown_instruction": "Sheep-shearing time! Use the `shear` command to gather wool from both sheep.",
        "Overworld Shear Sheep_2018_markdown_instruction": "Sheep-shearing time! Use the `shear` command to gather wool from both sheep.",
        "PDAlg 13-16 Sam Extension Puzzle_markdown_instruction": "Add a second parameter to `onscreen?` for Sam's y coordinate and update the function so it keeps him safe on all four sides.",
        "PDAlg 17-20 Luigi Extension Puzzle_markdown_instruction": "Without modifying your existing `cost` function, create a new `coupon` function that takes a pizza topping and coupon code and returns the cost of a pizza with that topping. If the coupon code is correct (you get to decide what it is), apply a 30% discount to the pizza.",
        "PDAlg 8-12 Rocket Height Puzzle_markdown_instruction": "Let's write a `rocket-height` function with simple acceleration. Write a function that ensures the rocket is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.",
        "PDAlg 8-12 ex dr 2_markdown_instruction": "This student has created two examples for the function `apples` but something's not quite right. How would you direct this student to correct their mistake?",
        "PDAlg Big Game History_markdown_instruction": "Now that you've played through a Big Game level you should see a new entry in your history. Click the _Version History_ button and you should see at least one version. Each time you go back to a Big Game level you'll get a new record in your version history that you can revert back to.\n\nMake sure to click _Run_ and _Finish_ to move on to the next puzzle.",
        "PDAlg Big Game Remix_markdown_instruction": "Here's your Big Game as you last left it. Try clicking the _Remix_ button to spin off a new remix of your project. Any changes you make after you click _Remix_ will be saved on your new remix and not on your main Big Game.\n\n**Clicking Remix will take you to a new page** - make sure you come back here and click _Run_ and _Finish_ after you've made a remix.",
        "PDAlg Design Recipe Delete_markdown_instruction": "When developing complex programs it's not uncommon to end up with functions that you no longer want, which used to just crowd your functions drawer, but now you can **delete** them. Click the **delete** button to get rid of this function, then try creating and deleting a few of your own.",
        "PDAlg Design Recipe Required_markdown_instruction": "In addition to testing examples, we can also _require_ that students use examples in their functions. Complete the Design Recipe for the `eggs` function, making sure to create and test your examples. (You can ignore creating examples if you want to see the error message.)",
        "PDAlg Updates Cond_markdown_instruction": "When you went to PD in the summer, the **Conditional** block that you were introduced to was black and allowed any data type to be used. This proved to be confusing, given that every other function we've seen always produces the same type of data. To help make conditionals clearer and more consistent we've replaced the single black block with a separate block for each data type.\n\n![conditional blocks](//studio.code.org/script_assets/pd/newcond.png)",
        "PDAlg Updates Errors_markdown_instruction": "Few things in programming are as frustrating as ambiguous or unclear error messages. When things go wrong in a program we rely on helpful error messages for direction, so we've spend a lot of time creating error messages that help direct students to solve their own problems.\n\nRun the provided program and use the error messages to try and track down the bugs.",
        "PDAlg Updates Space_markdown_instruction": "Making use of limited programming space (especially on small screens) is challenging with a block based language. To help with this we've added a few features:\n\n- A draggable bar (three vertical dots) between the programming space and the game space allowing you to shrink the game space for more room to code.\n- A handful of redesigned blocks that take up less horizontal space (check out the new `overlay` block.)\n- The programming space will scroll vertically when the blocks extend past the visible screen space.\n- Zoom in and out using Cmd +/- (Mac) or Ctrl +/- (Windows)\n\nExperiment with this provided code to see how the space can be manipulated to deal with larger programs.",
        "PDK5 Challenges_markdown_instruction": "What are your biggest challenges to implementing Code.org's curriculum in your classroom?\n",
        "PDK5 Difficulty_markdown_instruction": "Was programming as hard as you expected? Explain why or why not. How does this impact your teaching of computer science?",
        "PDK5 Foundation_markdown_instruction": "Do you see computer science as a foundational skill for your students? Why or why not?",
        "PDK5 Goals_markdown_instruction": "What are your goals or intentions for integrating Code.org in your classroom?\n",
        "PDK5 Impact 1_markdown_instruction": "Do you think your students will find the online activities in the K-5 courses fun and engaging? Why or Why not?",
        "PDK5 Impact 2_markdown_instruction": "Does computer science connect to other topics or subjects your students are learning about? Explain why or why not.",
        "PDK5 Impact 3_markdown_instruction": "Does learning about computer science help students grow into the kind of citizens you are preparing them to be? Explain why or why not.",
        "PDK5 Loops 2_markdown_instruction": "In the last puzzle, you used a loop to get the bird to the pig with 2 blocks instead of using 5 \"move forward\" blocks. Why do you think it's important to write computer programs efficiently?\n",
        "PS FR test 7-25_markdown_instruction": "Here is *some* **markdown**",
        "PS copy 2-3 Bee Conditionals 5_markdown_instruction": "These magic purple flowers change!\n\nEach time you try the puzzle, purple flowers can have either 1 nectar or none at all...but you won't know the number until you run the code! \n\nBe careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "PS fr prediction q1_markdown_instruction": "What do *you* think will happen? ",
        "Peer Review Level 1 - Tuesday Report_markdown_instruction": "Vacations are really fun. Please document a short and amusing story about a recent vacation.\n\nSome guidelines\n\n* Pics or it didn't happen\n* Keep it to 4 sentences or less please\n* Puns are strictly prohibited",
        "Peer Review Level 2 - Wednesday Report_markdown_instruction": "Cats are the best. Dogs are pretty cool as well. What do you like more, and why?\n\nSome guidelines\n\n* Cats are awesome\n* Cats don't give a what\n* Cats make for better GIFs\n* Pictures are great",
        "Pixelation - Lesson 14 - Fix bit offset v.2_markdown_instruction": "Something happened to the bits in this image! Find the error and fix it! Hint: a few extra bits were added. You should only need to remove some bits.",
        "Pixelation - Lesson 14 - Fix the error_markdown_instruction": "Something happened to the bits in this image!  Find error and fix it!  Hint: a few extra bits were added.  You should only need to remove some bits.",
        "Pixelation 2_markdown_instruction": "Something happened to the bits in this image!  Find error and fix it!",
        "Pixelation 4x4 Empty_markdown_instruction": "The width and height are now encoded in the pixel data. Can you figure out how to adjust the dimensions?",
        "Pizza on a Plate_markdown_instruction": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Play Lab Rocket 2_markdown_instruction": "We've started the Design Recipe for `rocket-height` using the contract and examples you just wrote. Complete the function definition for `rocket-height` and run your animation.",
        "Play Lab Rocket 3_markdown_instruction": "Awesome, now can you update that function so that our rocket moves more quickly? Make sure to update the purpose statement, examples, and function definition to launch a rocket at 40 meters per second.",
        "Play Lab Rocket Free Play_markdown_instruction": "Free Play: Experiment with your `rocket-height` function to make the rocket fly in different ways. Click \"Finish\" when you are done.",
        "Revisiting the Counter Pattern_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Revisiting the Counter Pattern_2018_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Robot Doodle_markdown_instruction": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot Doodle_2018_markdown_instruction": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot Drawing_markdown_instruction": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Robot_markdown_instruction": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
        "Rocket Height Course A_markdown_instruction": "Follow the Design Recipe to create a function `rocket-height` which produces the height of a rocket traveling at 15 meters per second.",
        "Ryan Test Locked Blocks_markdown_instruction": "Here's a function called `patrol`. Edit it to move the Cat up 400 pixels and then down 400 pixels.",
        "SG U3L01 Assessment1_markdown_instruction": "Consider the algorithm you designed for today’s activity. Identify two instances where there may be multiple ways to interpret your instructions and suggest improvements that could be made to improve their clarity.\n",
        "SG U3L01 Assessment3_markdown_instruction": "Describe the features of a programming language that make it different from the language you typically use in everyday life. Explain why a programming language must be created in this way.\n",
        "SG U3L02 Assessment_markdown_instruction": "This lesson introduced the notion of \"efficiency\" in programming, and that it might mean different things at different times.  Think of an example *outside* of computer science in which you have heard the term “efficiency” and compare it to the ways we talked about efficiency in programming.  \n\nIn what ways is the meaning of \"efficiency\" the same? In what ways is it different?",
        "SG U3L02 Free Response Getting Started_markdown_instruction": "In this lesson we solved a series of problems with a limited set of commands (only 2). Give at least one reason why it's useful to learn how to solve and program solutions with a limited set of commands.\n\nIn this lesson we solved a series of problems using the `Move turtle` and `Orient turtle` subgoals. Give at least one reason that breaking problems down into subgoals is a good approach to solving problems.",
        "SG U3L02 Free Response Wrap Up_markdown_instruction": "Summarize your experiences with this first App Lab lesson by answering the following questions:\n\n\n* Were you able to be creative with such a limited set of tools?\n* What was most frustrating about this activity? If you could add one additional block, what would it be and why? What subgoal would that block achieve?",
        "SG U3L03 - draw rect function_markdown_instruction": "This is your code from the previous level.  Did you know that you can write functions that call your other functions?\n\nTake the code that draws the rectangle and move it into a new function called `drawRectangle()`. The first line of your program should be a single call to `drawRectangle()`. The rest of the code should just be function definitions, including your definition for **right**.\n\nYou'll only need one subgoal for this, `//Define function`.\n\nNOTE: your program will still do the same thing.  We are just changing the way it is written to demonstrate that you can use functions you've already written as building blocks in new functions.\n\n![](https://images.code.org/fd6e8b4d2218a242bae19ac9c78b5d5f-image-1447799438050.gif)",
        "SG U3L03 Free Response Wrap Up_markdown_instruction": "In your own words, explain at least one reason why programming languages have functions.  Include an example of something you did in this lesson that demonstrates the reason you describe.\n",
        "SG U3L04 Assessment1_markdown_instruction": "Consider the figure below.  Use top-down thinking to design a solution to the problem.  In the space provided write a list of **just the names** of the functions that you would write in a program that draws this figure.  (Assume that the long line segments are 6 turtle moves long).\n\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\n",
        "SG U3L04 Free Response Wrap Up_markdown_instruction": "In the Create Performance Task, you will be asked to identify an abstraction in your program and explain how it helps manage the complexity of the program. Functions are a form of abstraction. Pick a function you wrote in your solution to the 3x3 square problem and explain how it helps manage the complexity of your program.",
        "SG U3L06 Assessment_markdown_instruction": "It is said that *functions with parameters generalize the behavior of a more specific command and allow programmers to use functions instead of duplicated code.* Explain what this means to you using the difference between turnLeft() and turnLeft(angle) as an example.\n",
        "SG U3L07 Free Response Reflection_markdown_instruction": "When breaking a problem down, you often encounter elements that you want to use repeatedly in your code. Sometimes it's appropriate to write a new function; at other times it's appropriate to write a loop.  \n\nThere is no hard-and-fast rule as to which is better, but what do you think?  What kinds of circumstances would lead you to writing a function versus using a loop?\n\n",
        "SG U3L08 Assessment2_markdown_instruction": "“Abstraction” is often used to focus on a general case and ignore a specific instance of a problem. \n\nGiven this meaning of the word, how are functions with parameters an example of abstraction?",
        "SG csp_U3_square_v_rect_FR_markdown_instruction": "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\" style=\"float: right\">\n\nIn this lesson you wrote code to make the turtle draw squares. Briefly describe how the code for drawing a rectangle would be different than drawing a square.  (Example rectangle at right)",
        "Sam the Butterfly 2_markdown_instruction": "Sam's mom wants to make sure that she can always see at least a bit of him, so lets write some functions that help make sure he doesn't go too far out of the yard. Here's a function called `safe-left?` - it should take a Number for its domain that represents Sam's x-coordinates and return *true* if he's completely visible on screen. If your function works, Sam shouldn't be able to leave the yard from the left side.",
        "Sam the Butterfly 3_markdown_instruction": "In the last puzzle we kept Sam from leaving on the left, now let's do the same thing on the right. Complete the `safe-right?` function to make sure Sam can't go off the right side of the screen.",
        "Sam the Butterfly 4_markdown_instruction": "Huh, we can keep Sam from leaving on the left, or we can keep him from leaving on the right, but how can we keep him safe from leaving both directions? Try using the `and` block to program the function `on-screen?` to check if Sam is `safe-left?` and `safe-right?`",
        "Sam the Butterfly 5_markdown_instruction": "Free Play: Awesome, we've kept Sam safe on the left and right! Use this free play stage to experiment with your functions and further improve `onscreen?`",
        "Standalone_Artist_1_markdown_instruction": "Welcome to Artist! First off, let's try to make a simple square using the turn right block and move forward block. Each side should be 100 pixels long.\n\n",
        "Standalone_Artist_2_markdown_instruction": "Draw this diamond with 120 and 60 degree angles and 150 pixel long sides.\n\n",
        "Standalone_Artist_3_markdown_instruction": "Can you draw this hexagon with 100 pixel sides and 60 degree turns?\n\n",
        "Standalone_Artist_4_markdown_instruction": "Now you've got a new block to play with, the loop. This will repeat a set of commands. What happens if you loop these commands 6 times?\n\n",
        "Standalone_Artist_5.5_markdown_instruction": "Notice how we simplified the diamond code by turning it into a loop. You can loop that whole sequence 12 times to draw the flower. Hint: You'll need to turn 30 degrees after your diamond loop so you don't keep drawing over the same diamond.\n\n",
        "Standalone_Artist_5_markdown_instruction": "How many times do you need to loop this diamond to draw the flower?\n\n",
        "Standalone_Artist_6_markdown_instruction": "Loop this hexagon code 6 times to create the design. How many degrees will you need to turn each time? Hint: divide the number of degrees in a circle by the number of times you are looping.\n\n",
        "Standalone_Artist_7_markdown_instruction": "A function is another programming tool to help you avoid repeating yourself. This function draws a flower, so you can use it any time you want to draw a flower. Use this and the new jump block to draw these flowers. Hint: The flowers are 150 pixels apart\n\n",
        "Standalone_Artist_8_markdown_instruction": "Here's a function called `Draw a shape` that we've programmed to draw hexagons. Run the code to see what it does and then experiment with the function to see what happens. Can you make it draw a pattern of squares, triangles, or octagons?\n\n",
        "Standalone_Artist_9_markdown_instruction": "Now go ahead and make whatever picture you'd like! You've even got an empty function that you can make do whatever you want!\n\n",
        "Test Contained Free Response_markdown_instruction": "My free response markdown instructions",
        "Test embedded K1 Blockly in instructions_markdown_instruction": "Use <xml><block type=\"maze_moveWest\"/></xml> **three** times to get the harvester to the corn! Don't forget to use <xml><block type=\"harvester_corn\"/></xml> to pick the corn!",
        "Testing Quantum Farmer_markdown_instruction": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
        "Text Compression 1_markdown_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.\n\n<img src=\"http://code.org/api/hour/begin_text_compression.png\">",
        "The Accelerometer_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "The Accelerometer_2018_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "The Internet: IP Addresses & DNS_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1ngw37cKFH4Dl_lhWXuXROH5WDdgHatz3gJo3pAdpqkg/edit?usp=sharing)",
        "The Internet: IP Addresses & DNS_2018_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1ngw37cKFH4Dl_lhWXuXROH5WDdgHatz3gJo3pAdpqkg/edit?usp=sharing)",
        "The Internet: Wires, Cables, and Wifi_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1k-qKthfOewieVcWgsAP8v2hW-dh3CbK-f7oXlHpF6Cs/edit)",
        "The Internet: Wires, Cables, and Wifi_2018_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1k-qKthfOewieVcWgsAP8v2hW-dh3CbK-f7oXlHpF6Cs/edit)",
        "The Official Peer Instruction Blog_markdown_instruction": "The following link is to a recent blog post describing the basic approach to and benefits of peer learning: ",
        "Total Artist Clone Me_markdown_instruction": "Freeplay: Here are the functions you've written, and some more for you to play with. Play with the pen width to see how different your drawings look!\n\n",
        "Trent Test Level_markdown_instruction": "More questions!\n",
        "Tuesday Report: Balancing Teachers and Tools in Unit 1_markdown_instruction": "So far we've seen four lessons from unit 1 — two model lessons delivered by facilitators and two lessons by participants. With your partner, consider:\n\n- How have people wearing teacher hats been balancing their time leading or guiding with the student-hat’s time to get into activities and tools?\n- What strategies have been effective for managing the transition to tools? What strategies are effective in getting peoples’ attention once they’re lost in a tool?\n- What are your  current thoughts about the appropriate balance of teacher-guided time VS time in the tools or with the activities?\n\nUse the space below to record any thoughts, recommendations, or commentary.",
        "Tuesday Report: Discovery Learning in Unit 1_markdown_instruction": "So far we've seen four lessons from unit 1 — two model lessons delivered by facilitators and two lessons by participants. With your partner, consider:\n\n- What opportunities have you seen for learners to discover concepts for themselves?\n- How did the process of engaging in discovery activities change the pacing, flow, or outcome of the lesson?\n- What benefits and pitfalls did you see in discovery activities?\n\nUse the space below to record any thoughts, recommendations, or commentary.",
        "Tuesday Report: Group Work and Peer Learning in Unit 1_markdown_instruction": "So far we've seen four lessons from unit 1 — two model lessons delivered by facilitators and two lessons by participants. With your partner, consider:\n\n- Where did you see group work and peer learning in these lessons? \n- What are the benefits of using group work and peer learning here? \n- How does using peer learning and group work as a strategy in the lesson impact how the activities run? \n\nUse the space below to record any thoughts, recommendations, or commentary.",
        "Tuesday Report: Measuring Student Learning in Unit 1_markdown_instruction": "So far we've seen four lessons from unit 1 — two model lessons delivered by facilitators and two lessons by participants. With your partner, consider:\n\n- What opportunities have you seen for assessing learners’ knowledge (prior knowledge, knowledge gained during the lesson, etc)?\n- What assessments are available in the curriculum?\n- What strategies would be effective for checking in on what students know?\n\nUse the space below to record any thoughts, recommendations, or commentary.",
        "Tuesday Report: discovery learning_markdown_instruction": "So far we've seen four lessons from unit 1 -- two model lessons delivered by facilitators and two lessons by participants. With your partner, consider:\n\n- What opportunities have you seen for learners to discover concepts for themselves? \n- How did the process of engaging in discovery activities change the pacing, flow, or outcome of the lesson? \n- What benefits and pitfalls did you see in discovery activities? \n\nUse the space below to record any thoughts, recommendations, or commentary",
        "U1L1 - FR computer science word association_markdown_instruction": "**Directions:**\n\nYou're in a class called *Computer Science Principles*.\n\nYou might not know anything about computer science right now.  You might know a few things.  We're going to take the pulse of the class to see on the first day what we think computer science involves, and we'll revisit this occasionally.\n\n**Do this:**\n\n**Without using the words _computer_ or *science* write 5 to 10 words or phrases** that come to mind when you hear the term \"computer science\". What do you think about?\n\n\n\n",
        "U1L10 Assessment Free Response_markdown_instruction": "Many languages do not use the characters of U.S. English. Suppose you wanted to be able to encode the characters of every language on earth within a single protocol. Guess how many characters would need to be encoded and calculate the number of bits that would be required per character. Then discuss the benefits and drawbacks of using this single unified system.\n",
        "U1L10 Assessment Free Response_2018_markdown_instruction": "Many languages do not use the characters of U.S. English. Suppose you wanted to be able to encode the characters of every language on earth within a single protocol. Guess how many characters would need to be encoded and calculate the number of bits that would be required per character. Then discuss the benefits and drawbacks of using this single unified system.\n",
        "U1L10 Journal Free Response_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nDescribe the steps involved in getting a text message from an idea in your head to your friend's computer screen.\n",
        "U1L10 NetSim numbers with decimal_markdown_instruction": "**Instructions**:\n\nInvent and test a protocol for encoding and sending text messages. Your protocol must include the letters a-z, spaces, and common punctuation marks. You may add additional characters if you wish. See the worksheet handed out by your teacher for more detailed instructions!",
        "U1L11 Abstraction Reflection_2018_markdown_instruction": "An abstraction is a simplified representation of something that is more complex. Decimal numbers were a useful abstraction in the context of today's lesson. Write a short response to both questions below.\n\n* What is the underlying complexity decimal numbers were used to represent.\n* How were decimal numbers helpful in designing a system to represent text in bits?",
        "U1L11 Collaboration Reflection_markdown_instruction": "What problems arose in your efforts to create a working protocol? How did you think about the problem(s) in order to solve it?\n\nDescribe one instance in which collaboration with a partner influenced the final protocol your team produced.\n",
        "U1L11 Collaboration Reflection_2018_markdown_instruction": "What problems arose in your efforts to create a working protocol? How did you think about the problem(s) in order to solve it?\n\nDescribe one instance in which collaboration with a partner influenced the final protocol your team produced.\n",
        "U1L11 Reflection Free Response_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nHow long did it take to send a formatted text message using your protocol? \n\nHow many extra bits did your encoding scheme need to communicate the text?  Calculate the percentage of bits that were used for formatting instead of sending the actual text message. \n\npercent = (formatting bits)/(total bits) * 100\n\n\n",
        "U1L11 Reflection Free Response_2018_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nHow long did it take to send a formatted text message using your protocol? \n\nHow many extra bits did your encoding scheme need to communicate the text?  Calculate the percentage of bits that were used for formatting instead of sending the actual text message. \n\npercent = (formatting bits)/(total bits) * 100\n\n\n",
        "U1L11 Reflection Multiple Representations_2018_markdown_instruction": "\"The binary pattern `01000001` represents the number 65.\"\n\nWrite a brief response explaining whether you believe this statement is always true. Explain your reasoning.",
        "U1L12 Reflection Free Response_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nThe salesperson in a cell phone store is telling me that the phone I'm considering has 8GB of memory, which means I can save 10,000 photos taken with the phone's camera! \n\nIs the salesperson telling me the truth? Why or why not?\n",
        "U1L12 Reflection Free Response_2018_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nThe salesperson in a cell phone store is telling me that the phone I'm considering has 8GB of memory, which means I can save 10,000 photos taken with the phone's camera! \n\nIs the salesperson telling me the truth? Why or why not?\n",
        "U1L13 Assess Text Compression amount_markdown_instruction": "Here's the same compressed text that you saw on the last level, but now we also see the size of the original, uncompressed text. On the previous level you reconstructed the text by tracing back through the dictionary. Now we're going to think about if this is a \"good\" compression rate.\n\n![](https://images.code.org/ffb941527193cd04c02ff2ce392d02e6-image-1439479301236.20.23 AM.png)\n\nIn the text box below, answer the following two questions:\n\n- What is the compression rate, or the compressed text size + dictionary size compared to the original text size? (as a percentage) \n- Is this a \"good\" compression rate? Why or why not? \n\n\n",
        "U1L13 Assess Text Compression amount_2018_markdown_instruction": "Here's the same compressed text that you saw on the last level, but now we also see the size of the original, uncompressed text. On the previous level you reconstructed the text by tracing back through the dictionary. Now we're going to think about if this is a \"good\" compression rate.\n\n![](https://images.code.org/ffb941527193cd04c02ff2ce392d02e6-image-1439479301236.20.23 AM.png)\n\nIn the text box below, answer the following two questions:\n\n1. What is the compression rate? The compression rate says by how much the text was compressed from the original as a percentage. Don't forget that the compressed version of the text is the compressed text size + dictionary size. (see note below) \n\n2. Is this a \"good\" compression rate? Why or why not? \n\n\n(*NOTE: to calculate, the compression rate is slightly different than simply stating the compressed size as a fraction of the original. It's just opposite sides of the same coin.  For example: if you find the compressed text + dictionary size is 70% of the original, that means the text was compressed by 30%.*)\n",
        "U1L13 Assessment 1_markdown_instruction": "Why do you want to compress anything? What's the point?\n",
        "U1L13 Assessment 1_2018_markdown_instruction": "Why do you want to compress anything? What's the point?\n",
        "U1L13 Assessment 2_markdown_instruction": "Why is compression a \"hard problem\" for computers?  Draw on your own experience compressing text with the text compression widget. Is there a way to know when you've compressed it the most? Explain why you can or can't know.\n",
        "U1L13 Assessment 2_2018_markdown_instruction": "Why is compression a \"hard problem\" for computers?  Draw on your own experience compressing text with the text compression widget. Is there a way to know when you've compressed it the most? Explain why you can or can't know.\n",
        "U1L13 Reflection 1_markdown_instruction": "What made compressing text hard to do?",
        "U1L13 Reflection 2_markdown_instruction": "Describe the thinking process you used in solving this challenge.",
        "U1L13 Reflection Free Response_markdown_instruction": "If you send a compressed segment of text would your friend will be able to read it?  \n\nWhy is the dictionary important?\n",
        "U1L13 Text Compression_markdown_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "U1L14 - Assessment 2_markdown_instruction": "What would happen if we didn't include width and height bits in our protocol?\n\nAssume your friend just sent you 32 bits of pixel data (just the 0s and 1s for black and white pixels). Could you recover the original image? If so, how? If not, why not?\n\n\n",
        "U1L14 - Assessment 2_2018_markdown_instruction": "What would happen if we didn't include width and height bits in our protocol?\n\nAssume your friend just sent you 32 bits of pixel data (just the 0s and 1s for black and white pixels). Could you recover the original image? If so, how? If not, why not?\n\n\n",
        "U1L14 Assessment 1_markdown_instruction": "Please answer the following 3 questions in the space below.\n\n1. What are the **dimensions** (width and height) of the **largest image** we can make with the pixelation widget? \n\n2. How many **total bits** would there be in the the largest possible image we could make with the pixelation widget (assuming 1 bit per pixel)?\n\n3. How many **total bits** bits would it take to represent **the smallest possible image** (i.e. an image with one pixel)?\n",
        "U1L14 Assessment 1_2018_markdown_instruction": "Please answer the following 3 questions in the space below.\n\n1. What are the **dimensions** (width and height) of the **largest image** we can make with the pixelation widget? \n\n2. How many **total bits** would there be in the the largest possible image we could make with the pixelation widget (assuming 1 bit per pixel)?\n\n3. How many **total bits** would it take to represent **the smallest possible image** (i.e. an image with one pixel)?\n",
        "U1L16 Reflection Free Response_markdown_instruction": "Respond to this prompt or to another as directed by your teacher.\n\nIf you had the opportunity to repeat this lesson, what would you do differently?\n\nDescribe something you learned in this unit that will impact your future work in this class.\n\n\n",
        "U1L2 Free response assessment question_markdown_instruction": "Provide an example of a question that could NOT be answered with a single binary message. Explain why this is the case, making reference to the definition of a binary message. \n\n",
        "U1L2 Free response assessment question_2018_markdown_instruction": "Provide an example of a question that could NOT be answered with a single binary message. Explain why this is the case, making reference to the definition of a binary message. \n\n",
        "U1L2 Free response reflection question_markdown_instruction": " Modify your question so that it could be answered with a binary message. Explain why it can now be answered with a binary message.\n\n\n",
        "U1L3 Free Response_markdown_instruction": "How did collaboration impact the development of your protocol? What challenges did working in a group present and in what ways did it positively impact your final product?",
        "U1L3 Free Response_2018_markdown_instruction": "How did collaboration impact the development of your protocol? What challenges did working in a group present and in what ways did it positively impact your final product?",
        "U1L3 Free response reflection question_markdown_instruction": "Recall when you built your binary message sending device. Why did we decide to send a message as a sequence of states (A and B) rather than modifying our devices to represent more states (State C, State D, State E, ...)?\n",
        "U1L3 Free response reflection question_2018_markdown_instruction": "Recall when you built your binary message sending device. Why did we decide to send a message as a sequence of states (A and B) rather than modifying our devices to represent more states (State C, State D, State E, ...)?\n",
        "U1L4 Free Response Reflection_markdown_instruction": "A binary message was recorded as a wave as shown in the image below. Can you decode the message? Explain what information you would need in order to successfully decode the message into A’s and B’s.\n\n![](https://images.code.org/c8ba0db14fabb778dc034ac4656259fa-image-1434429617999.png)\n\n",
        "U1L4 Free Response Reflection_2018_markdown_instruction": "A binary message was recorded as a wave as shown in the image below. Can you decode the message? Explain what information you would need in order to successfully decode the message into A’s and B’s.\n\n![](https://images.code.org/c8ba0db14fabb778dc034ac4656259fa-image-1434429617999.png)\n\n",
        "U1L4 Free response reflection question_markdown_instruction": "Complete the Lesson 2 Rubric.\n\nA binary message consisting of four bits was sent to you by a friend. The message was supposed to be ABAB. Unfortunately, your friend sent the message at 1/2 the bit rate you agreed upon. What message did you receive instead?\n",
        "U1L5 Free Response Assessment_markdown_instruction": "Complete the rubric for Lesson 5. Then respond to this prompt using approximately 100 words.\n\nReflect on the progress of communication innovations. \n\nWhat do you notice across the variety of systems? \n\nSpeculate on the next phase of communication innovations.\n",
        "U1L5 Free Response Lesson Review_markdown_instruction": "Complete these three sentences.\n\nThree big ideas from the lesson today are _____ and _____ and _____ . \nBut the most important or interesting thing I learned today is _____. \n\nAt the beginning of the class, I thought _______ but now i know _______.\n",
        "U1L5 How the Internet Works - Video_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1YviZiL1VjpUa9Gbe3j_4lETKyoZqEW14_RG7EEWEwgU/edit)",
        "U1L6 Free Response Assessment_markdown_instruction": "If you had to represent numbers with A/B states from sending-bits widget, could you?\n\nWrite a represent of the numbers 0 through 15 using only the letters A and B.\n\n\n",
        "U1L6 Free Response Reflection_markdown_instruction": " In 50 words or less, describe the concept of a number system. \n\nWhy are rules required for a number system to be useful?\n",
        "U1L6 Free Response Reflection_2018_markdown_instruction": " In 50 words or less, describe the concept of a number system. \n\nWhy are rules required for a number system to be useful?\n",
        "U1L7 Free Response Assessment_markdown_instruction": "In 100 words or less describe how place value is used in the binary number system. How is it similar or different from the way place value is used in the base 10 number system.\n",
        "U1L7 Free Response Assessment_2018_markdown_instruction": "In 100 words or less describe how place value is used in the binary number system. How is it similar or different from the way place value is used in the base 10 number system.\n",
        "U1L7 Free Response Reflection_markdown_instruction": "Reflect on your learning in this lesson. In the space below, enter:\n\n3 recollections (things you remember), \n\n2 observations (things you noticed), and \n\n1 insight (something you fully understand the significance of).\n",
        "U1L7 Free Response Reflection_2018_markdown_instruction": "Reflect on your learning in this lesson. In the space below, enter:\n\n3 recollections (things you remember), \n\n2 observations (things you noticed), and \n\n1 insight (something you fully understand the significance of).\n",
        "U1L8 Free Response Getting Started_markdown_instruction": "Respond to the following question.\n\nList two or three challenges you faced when trying to send multi-bit messages using the bit-sending widget during previous classes?\n",
        "U1L8 Free Response Reflection_markdown_instruction": "<strong>Complete the Sending Numbers Rubric (on the second page of the <a href= \"https://docs.google.com/document/d/1cSlWYnxOciDQut0OAUcsddmM56bveHely71LUb_CHkM/edit\" target=\"_blank\">Sending Number activity guide</a>) and then respond to the following prompt.</strong>\n\nWhat problems arose in your efforts to create a working protocol? How did you think about the problem(s) in order to solve it?\n",
        "U1L8 Free Response Reflection_2018_markdown_instruction": "<strong>Complete the Sending Numbers Rubric (on the second page of the Sending Numbers activity guide</a>) and then respond to the following prompt.</strong>\n\nWhat problems arose in your efforts to create a working protocol? How did you think about the problem(s) in order to solve it?\n",
        "U1L8 Free Response2_markdown_instruction": "How did collaboration play a role in the creation of your protocol?",
        "U1L9 Free Response Assessment_markdown_instruction": "Choose one of the topics you most enjoyed learning about today. Describe what new information you learned and how it relates to the way we create and use number systems.\n",
        "U2 The Internet: Cybersecurity and Crime - Video_markdown_instruction": "[Video guide and questions](https://drive.google.com/open?id=1Qv4lgMMtP42sRlofUmGtElViD1AJ7yETvQ4pCh0rDjw)",
        "U2L02 Assessment 5_markdown_instruction": "Even with a good protocol, what are some privacy and security challenges while playing battleship on the Internet Simulator?",
        "U2L02 Assessment 5_2018_markdown_instruction": "Even with a good protocol, what are some privacy and security challenges while playing battleship on the Internet Simulator?",
        "U2L02 Assessment1_markdown_instruction": "Why was it necessary to include the sender's and recipient's names in the NetSim version of Battleship, but not in the face-to-face game?\n",
        "U2L02 Assessment2_markdown_instruction": "\nIf the messaging scheme your group designed was really used on the internet, what could go wrong in terms of security and privacy?\n\n*In your response, think about what a malicious person could do. What if the messages sent weren't about a game but about something more personal like a conversation with a friend, or communicating with a bank?*\n\n\n",
        "U2L02 Free Response Getting Started_markdown_instruction": "Have you ever played the game of Battleship? \n\nWhat rules did you follow? \n\nDid you have a strategy for winning?\n",
        "U2L02 Free Response Reflection_markdown_instruction": "Describe the addressing system your group devised.\n\nHow did your group decide upon a system for sending messages in the Battleship simulator? \n\nWere there disagreements or problems? How were they resolved?\n\n\n",
        "U2L02 Free Response Reflection_2018_markdown_instruction": "Describe the addressing system your group devised.\n\nHow did your group decide upon a system for sending messages in the Battleship simulator? \n\nWere there disagreements or problems? How were they resolved?\n\n\n",
        "U2L04 Assessment2_markdown_instruction": "Describe the relative benefits of routing over a broadcast style of communication. Is routed traffic more secure than broadcasting? Justify your answer.\n",
        "U2L04 Assessment2_2018_markdown_instruction": "Describe the relative benefits of routing over a broadcast style of communication. Is routed traffic more secure than broadcasting? Justify your answer.\n",
        "U2L04 Assessment3_markdown_instruction": "Can you know in advance the path a message will take between you and another computer on the Internet? Justify your answer.\n",
        "U2L04 Assessment3_2018_markdown_instruction": "Can you know in advance the path a message will take between you and another computer on the Internet? Justify your answer.\n",
        "U2L04 Free Response Wrap Up_markdown_instruction": "How do you think the routers are physically connected? Does it matter to you? Why or why not?\n",
        "U2L05 Reflection 1_markdown_instruction": "In your own words, what were the primary obstacles you needed to overcome in today’s challenge? How do these obstacles mirror actual problems encountered on the Internet?\n",
        "U2L05 Reflection 1_2018_markdown_instruction": "In your own words, what were the primary obstacles you needed to overcome in today’s challenge? How do these obstacles mirror actual problems encountered on the Internet?\n",
        "U2L07 Assessment5_markdown_instruction": "When analyzing algorithms why doesn't the amount of real time (clock time) tell us very much about the algorithm's \"efficiency\"?\n",
        "U2L08 Free Response 1_markdown_instruction": "How is creating a router table similar to finding the shortest path in a graph?  How is it different?\n",
        "U2L08 Free Response 2_markdown_instruction": "Why do routers store information about neighbors and costs, rather than the whole path from themselves to another router? \n",
        "U2L08 Free Response 3_markdown_instruction": "Why does a router keep track of the cost to a destination through multiple routers instead of only the fastest one?\n\n",
        "U2L09 Assessment2_markdown_instruction": "Why do computers need to periodically check the DNS for websites you have already visited?\n",
        "U2L09 Assessment2_2018_markdown_instruction": "Why do computers need to periodically check the DNS for websites you have already visited?\n",
        "U2L09 Free Response Wrap Up_markdown_instruction": "Why don’t we need to know the IP addresses for our favorite sites?\n",
        "U2L09 Free Response Wrap Up_2018_markdown_instruction": "Why don’t we need to know the IP addresses for our favorite sites?\n",
        "U2L10 Assessment3_markdown_instruction": "Why do multiple websites at your school and the computers in your classroom all have IP addresses that start with the same two sets of numbers?\n",
        "U2L10 FR describe what you made from lesson prompt_markdown_instruction": "What was the most interesting visualization you were able to create with the data set provided? What did it help you discover about the data?\n\nMake sure that your response includes the following:\n\n1. What type of chart it was\n2. What specific data it plotted\n3. What it helped you discover and/or *why* it was the most interesting to you\n\nTry to keep your response to 150 words or less (5-7 sentences).",
        "U2L10 FR describe what you made from lesson prompt_2018_markdown_instruction": "What was the most interesting visualization you were able to create with the data set provided? What did it help you discover about the data?\n\nMake sure that your response includes the following:\n\n1. What type of chart it was\n2. What specific data it plotted\n3. What it helped you discover and/or *why* it was the most interesting to you\n\nTry to keep your response to 150 words or less (5-7 sentences).",
        "U2L10 FR why best worst viz_markdown_instruction": "\nChoose the visualization that you thought was the best or worst (pick one) from the ones you saw in class and do the following:\n\n1. Describe the visualization so the reader knows which one you are talking about (example: \"Collection A #2 -- Average divorce rates in America\")\n\n2. Say whether this was the best or worst visualization for you and *and why*.  Justify your opinion by citing principles of visualizations that you have learned about.  Use the visualization 101 guide as a resource. \n\nTry to keep your response to around 100 words (about 3-5 sentences).\n",
        "U2L10 FR why best worst viz_2018_markdown_instruction": "\nChoose the visualization that you thought was the best or worst (pick one) from the ones you saw in class and do the following:\n\n1. Describe the visualization so the reader knows which one you are talking about (example: \"Collection A #2 -- Average divorce rates in America\")\n\n2. Say whether this was the best or worst visualization for you and *and why*.  Justify your opinion by citing principles of visualizations that you have learned about.  Use the visualization 101 guide as a resource. \n\nTry to keep your response to around 100 words (about 3-5 sentences).\n",
        "U2L10 Free Response Getting Started_markdown_instruction": "Explain the similarities between DNS and the Postal Service.  Describe their analogous hierarchical structure.\n",
        "U2L10 Free Response Wrap Up_markdown_instruction": "Complete this sentence.\n\nI learned three things today about DNS: ______(1)______ , ______(2)______ , and ______(3)______. \n\nHowever, the most important thing I learned is ______(4)______.\n",
        "U2L11 Free Response_markdown_instruction": "The definition of HTTP makes use of the ASCII character set without reference to how these characters are encoded. Explain why this is an example of abstraction.\n",
        "U2L11 Free Response_2018_markdown_instruction": "The definition of HTTP makes use of the ASCII character set without reference to how these characters are encoded. Explain why this is an example of abstraction.\n",
        "U2L12 FR reflection on collaboration_markdown_instruction": "*NOTE: The following is modification of one of the prompts given on the AP Create Performance task.*\n\nDescribe the development process of discovering your data story and creating a visualization.  Describe the difficulties and/or opportunities you encountered along the way, and describe the collaborative process between you and your partner.\n\nPlease limit your response to about 200 words.",
        "U2L12 FR reflection on collaboration_2018_markdown_instruction": "*NOTE: The following is modification of one of the prompts given on the AP Create Performance task.*\n\nDescribe the development process of discovering your data story and creating a visualization.  Describe the difficulties and/or opportunities you encountered along the way, and describe the collaborative process between you and your partner.\n\nPlease limit your response to about 200 words.",
        "U2L13 Assessment1_markdown_instruction": "What is a Caesar cipher?  As part of your answer demonstrate encrypting the plaintext messages: `CS IS COOL` with a caesar cipher.\n",
        "U2L13 Assessment1_2018_markdown_instruction": "What is a Caesar cipher?  As part of your answer demonstrate encrypting the plaintext messages: `CS IS COOL` with a caesar cipher.\n",
        "U2L13 Assessment2_markdown_instruction": "What makes one encryption better than another?\n",
        "U2L13 FR Reflection data analysis objective_markdown_instruction": "In order to analyze data with a computer, we need to clean the data first. Based on your experience today, would you say that data analysis is a perfectly objective process? Why or why not? (Limit to about 100 words)\n",
        "U2L13 FR Reflection data analysis objective_2018_markdown_instruction": "In order to analyze data with a computer, we need to clean the data first. Based on your experience today, would you say that data analysis is a perfectly objective process? Why or why not? (Limit to about 100 words)\n",
        "U2L13 Free Response Getting Started_markdown_instruction": "In what situations on the Internet do you typically want to keep information secret? \n\nFrom whom do you want to keep it to be secret? \n\nHow do you think your privacy is maintained on the Internet now?\n\n\n",
        "U2L13 Free Response Getting Started_2018_markdown_instruction": "In what situations on the Internet do you typically want to keep information secret? \n\nFrom whom do you want to keep it to be secret? \n\nHow do you think your privacy is maintained on the Internet now?\n\n\n",
        "U2L13 Free Response Wrap Up_markdown_instruction": "List 3 characteristics of the ideal encryption scheme.\n",
        "U2L13 Free Response Wrap Up_2018_markdown_instruction": "List 3 characteristics of the ideal encryption scheme.\n",
        "U2L14 Assessment2_markdown_instruction": "Using the Vigenere cipher, does the length of the key matter? \nFor example, if one key is length 5 and another is 20, does one produce a “better” encrypted message than the other, or is it basically the same? Yes or no? Explain your reasoning.",
        "U2L14 Assessment2_2018_markdown_instruction": "Using the Vigenere cipher, does the length of the key matter? \nFor example, if one key is length 5 and another is 20, does one produce a “better” encrypted message than the other, or is it basically the same? Yes or no? Explain your reasoning.",
        "U2L14 Free Response Getting Started_markdown_instruction": "What is the difference is between “cracking” a code and “decrypting” a message?\n",
        "U2L14 Free Response Getting Started_2018_markdown_instruction": "What is the difference is between “cracking” a code and “decrypting” a message?\n",
        "U2L14 Free Response Wrap Up_markdown_instruction": "Knowing what you know now about frequency analysis, would you feel comfortable sending your password over the Internet using a substitution cipher?\n\nWhy or why not?\n",
        "U2L14 Free Response Wrap Up_2018_markdown_instruction": "Knowing what you know now about frequency analysis, would you feel comfortable sending your password over the Internet using a substitution cipher?\n\nWhy or why not?\n",
        "U2L15 Assessment2_markdown_instruction": "What problems exist with encryption schemes such as the Vigenere cipher even when strong encryption keys are used?\n",
        "U2L15 Free Response Getting Started_markdown_instruction": "Why do you think Internet hacking becomes \"really big news\" when it occurs?\n",
        "U2L15 Free Response Wrap Up_markdown_instruction": "Companies and organizations commonly require users to change their passwords frequently. Websites have password length and complexity requirements. \n\nIs it better to change your password frequently or to have a longer password? \n\nWhat level of security is appropriate to require of end users? Does this change, depending on the context (for example, employee or customer)?\t\n",
        "U2L16 Free Response Assessment 3_markdown_instruction": "Why are computationally-hard problems important in encryption strategies?",
        "U2L16 Free Response assessment 2_markdown_instruction": "What do people do who need solutions to large computationally-hard problems?",
        "U2L16 Free response assessment 1_markdown_instruction": "What does \"computationally hard\" mean?",
        "U2L17 Assessment 1_markdown_instruction": "Describe what it means for a problem to be “computationally hard.”",
        "U2L17 Assessment 2_markdown_instruction": "What strategies do people use to solve large computationally-hard problems?",
        "U2L17 Free Response Getting Started_markdown_instruction": "What kinds of problems do you think are “computationally hard\"?",
        "U2L17 Free Response Wrap Up_markdown_instruction": "If the TSP is unsolvable for finding an exact solution, how do you think package delivery companies optimize their delivery routes?",
        "U2L18 Assessment_markdown_instruction": "How is the Wireless Hotspot problem different from another “hard” problem you saw, the Traveling Salesman problem?\n",
        "U2L18 Free Response Assessment 1_markdown_instruction": "In symmetric encryption the same key is used to encrypt and decrypt a message. In asymmetric encryption different keys are used to encrypt and decrypt. Give at least one reason why asymmetric encryption is useful",
        "U2L18 Free Response Assessment 1_2018_markdown_instruction": "In symmetric encryption the same key is used to encrypt and decrypt a message. In asymmetric encryption different keys are used to encrypt and decrypt. Give at least one reason why asymmetric encryption is useful",
        "U2L18 Free Response Assessment 3_markdown_instruction": "List other examples of one-way functions. Can you think of a one-way function in real life?",
        "U2L18 Free Response Getting Started_markdown_instruction": "Given that the Travelling Salesman Problem and the Wireless Hotspot Problem are computationally hard to solve, why might the Wireless Hotspot Problem be a more ideal candidate for using an encryption method? Make reference to properties of the two problems in your answer.\n",
        "U2L18 Free Response Wrap Up_markdown_instruction": "Mixing paint is an easy-to-understand example of a one-way function. The process is clear -- mix together a few colors to get a new color -- but it's difficult to \"un-mix\" the paint to get back to the original colors used.\n\nHow is this related to encryption?\n\n\n",
        "U2L19 Assessment_markdown_instruction": "Explain how modulo acts as a one-way function?\n",
        "U2L19 Free Response Getting Started_markdown_instruction": "Explain in your own words what the modulo operation does.  You may use the analogy of a clock in your answer if you like.\n",
        "U2L19 Free Response Getting Started_2018_markdown_instruction": "Explain in your own words what the modulo operation does.  You may use the analogy of a clock in your answer if you like.\n",
        "U2L19 Free Response Wrap Up_markdown_instruction": "Describe to a person who knows nothing about encryption why public key encryption is secure and is hard to crack.\n",
        "U2L19 Free Response Wrap Up_2018_markdown_instruction": "Describe to a person who knows nothing about encryption why public key encryption is secure and is hard to crack.\n",
        "U2L20 Free Response Getting Started_markdown_instruction": "Why do you think Internet hacking becomes \"really big news\" when it occurs?\n",
        "U2L3 Assessment 4_markdown_instruction": "Why does it not make sense for users to be identified by their real names on the Internet?",
        "U2L3 Free Response Getting Started_markdown_instruction": "What are the benefits of using a phone number instead of a person's name? How many total phone numbers are there?\n",
        "U2L3 Free Response Wrap Up_markdown_instruction": "Why does it make more sense to use IP addresses for online accounts instead of users' real names?\n",
        "U2L3: IP DNS Video_markdown_instruction": "[Video guide and questions](https://docs.google.com/document/d/1ngw37cKFH4Dl_lhWXuXROH5WDdgHatz3gJo3pAdpqkg/edit?usp=sharing)",
        "U2L4 Free Response Getting Started_markdown_instruction": "Imagine that you want to send a postcard to a friend in a city on the far side of the country. After you write a message, you address it, add a return address, put a stamp on it, and drop it in the mail.\n\nThen what happens? What is the route that postcard takes to get to your friend? \n\nList the steps that you think it takes for a postcard gets from you to your friend. Include each of the potential stops along the way and how it gets transported from one place to another.\n\n\n",
        "U2L5 FR brighten darken image_markdown_instruction": "Imagine that you have an image that is too dark or too bright. Describe how you would alter the RGB settings to brighten or darken it. Give an example.\n",
        "U2L5 FR brighten darken image_2018_markdown_instruction": "Imagine that you have an image that is too dark or too bright. Describe how you would alter the RGB settings to brighten or darken it. Give an example.\n",
        "U2L8 google trends hypothesis_markdown_instruction": "Consider the Google Trends graph of dogs and cats below (same graph as previous question).\n\nGive a plausible explanation or hypothesis for the spike in dog searches that occurred between 2014 and 2015 that would lead to further investigation or research. Give your explanation and what you would want to investigate next.\n\n<a href=\"https://images.code.org/bd40b81c105978fe26ff787a6bf82795-image-1469633006237.png\" target=_blank><img src=\"https://images.code.org/bd40b81c105978fe26ff787a6bf82795-image-1469633006237.png\"><br>Click to Enlarge</a>",
        "U2L8 google trends hypothesis_2018_markdown_instruction": "Consider the Google Trends graph of dogs and cats below (same graph as previous question).\n\nGive a plausible explanation or hypothesis for the spike in dog searches that occurred between 2014 and 2015 that would lead to further investigation or research. Give your explanation and what you would want to investigate next.\n\n<a href=\"https://images.code.org/bd40b81c105978fe26ff787a6bf82795-image-1469633006237.png\" target=_blank><img src=\"https://images.code.org/bd40b81c105978fe26ff787a6bf82795-image-1469633006237.png\"><br>Click to Enlarge</a>",
        "U2L9 FR digital divide issue_markdown_instruction": "Consider the following statement from the CS Principles course framework:\n\n```\n7.4.1C The global distribution of computing resources raises issues of equity, access, and power.\n```\n\nBriefly describe one of these issues that you learned about in the lesson and how it affects your life or the lives of people you know.  Keep your response to about 100 words (about 3-5 sentences).",
        "U2L9 FR digital divide issue_2018_markdown_instruction": "Consider the following statement from the CS Principles course framework:\n\n```\n7.4.1C The global distribution of computing resources raises issues of equity, access, and power.\n```\n\nBriefly describe one of these issues that you learned about in the lesson and how it affects your life or the lives of people you know.  Keep your response to about 100 words (about 3-5 sentences).",
        "U2L9 Free Response Getting Started_markdown_instruction": "On the Internet, computers can only communicate with each other through IP addresses. Typically, you will know the name (or URL) of a computer you wish to talk to, but not its IP address. \n\nList two impacts that would result if you HAD TO KNOW IP addresses to get to websites?\n",
        "U3 - Basic Conditionals - 1_markdown_instruction": "0-  True and False statement\n\nif ( 1 < 5) {\n  console.log(\"Hello\");\n}",
        "U3 - Basic Conditionals - 3_markdown_instruction": "Adding a variable\n\nvar x = 8;\nif( 3 < x){\n console.log(“Is this working?”)\n}\n\nits the same thing with a variable just the x stands for the 5!\n",
        "U3 - Basic Conditionals - 4_markdown_instruction": "User input\n\nvar x = prompt(“Enter number”)\nif( 3 < x){\n console.log(“Bigger”)\n}\n",
        "U3 - Basic Conditionals - 5_markdown_instruction": " Random number\nvar dice = randomNumber(1,6)\nif( 3 < dice){\n console.log(“Bigger”)\n}",
        "U3 Variables misconceptions 2_markdown_instruction": "What will Program 2 output?",
        "U3 Variables misconceptions 3_markdown_instruction": "What will Program 3 output?",
        "U3 Variables misconceptions 4_markdown_instruction": "What will Program 4 output?",
        "U3L01 Assessment1_markdown_instruction": "Consider the algorithm you designed for today’s activity. Identify two instances where there may be multiple ways to interpret your instructions and suggest improvements that could be made to improve their clarity.\n\n",
        "U3L01 Assessment1_2018_markdown_instruction": "Consider the algorithm you designed for today’s activity. Identify two instances where there may be multiple ways to interpret your instructions and suggest improvements that could be made to improve their clarity.\n\n",
        "U3L01 Assessment3_markdown_instruction": "Describe the features of a programming language that make it different from the language you typically use in everyday life. Explain why a programming language must be created in this way.\n\n",
        "U3L01 Assessment3_2018_markdown_instruction": "Describe the features of a programming language that make it different from the language you typically use in everyday life. Explain why a programming language must be created in this way.\n\n",
        "U3L01 Free Response Getting Started_markdown_instruction": "Complete the \"thinking\" portion of a Think-Pair-Share activity here. \n\nPlay the part of a \"lazy worker.\" \n\n* What task do you dislike doing that you can imagine a computer program could take over for you? \n* List a few important steps that a computer program would have to complete. \n* Do you think this would be an easy or hard task to program? Why?\n",
        "U3L01 Free Response Wrap Up_markdown_instruction": "* Describe the instructions you followed in the block sculpture algorithm that were the most helpful?\n* What do you think is the hardest part of writing a useful algorithm? \n* If you were to repeat this activity, how would you improve the algorithm you wrote? \n\n\n",
        "U3L02 Assessment_markdown_instruction": "This lesson introduced the notion of \"efficiency\" in programming, and that it might mean different things at different times.  Think of an example *outside* of computer science in which you have heard the term “efficiency” and compare it to the ways we talked about efficiency in programming.  \n\nIn what ways is the meaning of \"efficiency\" the same? In what ways is it different?\n",
        "U3L02 Assessment_2018_markdown_instruction": "This lesson introduced the notion of \"efficiency\" in programming, and that it might mean different things at different times.  Think of an example *outside* of computer science in which you have heard the term “efficiency” and compare it to the ways we talked about efficiency in programming.  \n\nIn what ways is the meaning of \"efficiency\" the same? In what ways is it different?\n",
        "U3L02 Free Response Getting Started_markdown_instruction": "Today we solved a series of problems with a limited set of commands (only 4). Give at least one reason why it's useful to learn how to solve and program solutions with a limited set of commands.  \n",
        "U3L02 Free Response Getting Started_2018_markdown_instruction": "Today we solved a series of problems with a limited set of commands (only 4). Give at least one reason why it's useful to learn how to solve and program solutions with a limited set of commands.  \n",
        "U3L02 Free Response Wrap Up_markdown_instruction": "Summarize your experiences with this first App Lab lesson by answering the following questions:\n\n* What surprised you about programming with such a small set of basic commands?\n* Were you able to be creative with such a limited set of tools?\n* What was most frustrating about this activity? If you could add one additional simple command, what would it be and why?\n\n\n",
        "U3L02 Free Response Wrap Up_2018_markdown_instruction": "Summarize your experiences with this first App Lab lesson by answering the following questions:\n\n* What surprised you about programming with such a small set of basic commands?\n* Were you able to be creative with such a limited set of tools?\n* What was most frustrating about this activity? If you could add one additional simple command, what would it be and why?\n\n\n",
        "U3L03 - draw rect function_markdown_instruction": "This is your code from the previous level.  Did you know that you can write functions that call your own functions?\n\nTake the code that draws the rectangle and move into a new function called `drawRectangle()`. The first line of your program should be a single call to `drawRectangle()`. The rest of the code should just be function definitions. \n\nNOTE: your program will still do the same thing.  We are just changing the way it is written to demonstrate that you can use functions you've already written as building blocks in new functions.\n\n![](https://images.code.org/fd6e8b4d2218a242bae19ac9c78b5d5f-image-1447799438050.gif)",
        "U3L03 - draw rect function_2018_markdown_instruction": "This is your code from the previous level.  Did you know that you can write functions that call your own functions?\n\nTake the code that draws the rectangle and move into a new function called `drawRectangle()`. The first line of your program should be a single call to `drawRectangle()`. The rest of the code should just be function definitions. \n\nNOTE: your program will still do the same thing.  We are just changing the way it is written to demonstrate that you can use functions you've already written as building blocks in new functions.\n\n![](https://images.code.org/fd6e8b4d2218a242bae19ac9c78b5d5f-image-1447799438050.gif)",
        "U3L03 Free Response Getting Started_markdown_instruction": "In the previous lesson we created simple turtle drawings using only four commands. At some point you probably wished that more commands were available to you. Describe a command you wanted to be able to use and explain why you wanted to use it. If you have time try to brainstorm additional commands as well.\n",
        "U3L03 Free Response Reflection_markdown_instruction": "Respond to your teacher's prompt in the space below.\n",
        "U3L03 Free Response Wrap Up_markdown_instruction": "In your own words, explain at least one reason why programming languages have functions.  Include an example of something you did in this lesson that demonstrates the reason you describe.\n\n",
        "U3L03 Free Response Wrap Up_2018_markdown_instruction": "In your own words, explain at least one reason why programming languages have functions.  Include an example of something you did in this lesson that demonstrates the reason you describe.\n\n",
        "U3L04 - six by six lines_markdown_instruction": "Code a solution to the highway lines problem.  Your solution should use functions to reduce clutter and improve readability of your solution.\n\n![](https://images.code.org/23a714face9925e1eb8dfe3c133eb22d-image-1441815998620.png)",
        "U3L04 Assessment1_markdown_instruction": "Consider the figure below.  Use top-down thinking to design a solution to the problem.  In the space provided write a list of **just the names** of the functions that you would write in a program that draws this figure.  (Assume that the long line segments are 6 turtle moves long).\n\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\n\n",
        "U3L04 Assessment1_2018_markdown_instruction": "Consider the figure below.  Use top-down thinking to design a solution to the problem.  In the space provided write a list of **just the names** of the functions that you would write in a program that draws this figure.  (Assume that the long line segments are 6 turtle moves long).\n\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\n\n",
        "U3L04 Free Response Getting Started_markdown_instruction": "Define the term \"abstraction.\" \n\nWhy is abstraction an important concept in computer science?\n",
        "U3L04 Free Response Reflection_markdown_instruction": "Respond to your teacher's prompt below.\n",
        "U3L04 Free Response Wrap Up_markdown_instruction": "In the Create Performance Task, you will be asked to identify an abstraction in your program and explain how it helps manage the complexity of the program. Functions are a form of abstraction. Pick a function you wrote in your solution to the 3x3 square problem and explain how it helps manage the complexity of your program.\n",
        "U3L04 Free Response Wrap Up_2018_markdown_instruction": "In the Create Performance Task, you will be asked to identify an abstraction in your program and explain how it helps manage the complexity of the program. Functions are a form of abstraction. Pick a function you wrote in your solution to the 3x3 square problem and explain how it helps manage the complexity of your program.\n",
        "U3L05 Assessment2_markdown_instruction": "Describe the trade-offs of writing highly efficient code. Give an example.\n",
        "U3L05 Assessment3_markdown_instruction": "How can functions be used to make code more readable?\n",
        "U3L05 Assessment4_markdown_instruction": "How can functions be used to make code more efficient in effort, space, or time?\n",
        "U3L05 Free Response Getting Started_markdown_instruction": "Efficiency means different things depending upon the activity. What does it mean to be efficient in these activities?\n\n* Doing homework\n* Packing a bag \n* Getting from one place to another \n* Doing household chores \n* Driving a car \n* Managing a budget \n\n\n",
        "U3L05 Free Response Reflection_markdown_instruction": "In less than 50 words, summarize what efficiency means in programming.\n",
        "U3L06 Assessment_markdown_instruction": "It is said that *functions with parameters generalize the behavior of a more specific command and allow programmers to use functions instead of duplicated code.* Explain what this means to you using the difference between turnLeft() and turnLeft(angle) as an example.\n\n",
        "U3L06 Assessment_2018_markdown_instruction": "It is said that *functions with parameters generalize the behavior of a more specific command and allow programmers to use functions instead of duplicated code.* Explain what this means to you using the difference between turnLeft() and turnLeft(angle) as an example.\n\n",
        "U3L06 Free Response Getting Started_markdown_instruction": "Brainstorm a new command you would like to include in a turtle drawing program. \n\n* Would you choose to improve a commands you have already used or something entirely new? \n* How would it work? \n* Would the command need any additional information to successfully execute the instructions?\n",
        "U3L06 Free Response Reflection_markdown_instruction": "Respond to your teacher's prompt in the space below.\n",
        "U3L06 Free Response Wrap Up_markdown_instruction": "List 3 interesting functions you discovered in the AppLab API. \n\nSelect one of them and describe how you think you might want to use it in a future programming project.\n",
        "U3L07 - Starry Night Starter Code_markdown_instruction": "You are going to use loops and random numbers to generate an image of starry night sky similar to one shown here.  We have given you some starter code to generate the ground and sky (just two giant dots), you will add code to this project to make the stars, grass, and moon.  All of the effects are clever applications of turtle dots, lines, and colors.  To get started, follow the series of steps suggested in the accompanying worksheet. \n\n<img src=\"https://images.code.org/0f42e475e7600ac33d31bdf5dee70726-image-1459547325746.gif\" style=\"width: 250px\">",
        "U3L07 Free Response Getting Started_markdown_instruction": "Run the program: <a href=\"http://studio.code.org/p/applab#eUmMCRRJNxJk9EheYznD6w\" target=\"_blank\">\n Starry Night </a> several times. \n \n* What's \"weird\" or \"different\" about this program from previous ones we've seen?\n* How do you think this effect is produced?\n\n\n",
        "U3L07 Free Response Reflection_markdown_instruction": "When breaking a problem down, you often encounter elements that you want to use repeatedly in your code. Sometimes it's appropriate to write a new function; at other times it's appropriate to write a loop.  \n\nThere is no hard-and-fast rule as to which is better, but what do you think?  What kinds of circumstances would lead you to writing a function versus using a loop?\n\n\n",
        "U3L07 Free Response Reflection_2018_markdown_instruction": "When breaking a problem down, you often encounter elements that you want to use repeatedly in your code. Sometimes it's appropriate to write a new function; at other times it's appropriate to write a loop.  \n\nThere is no hard-and-fast rule as to which is better, but what do you think?  What kinds of circumstances would lead you to writing a function versus using a loop?\n\n\n",
        "U3L08 - Enchantment Under the Sea_markdown_instruction": "You have been provided with starter code for an “Under the Sea” scene which includes three functions, one each for the starfish, seagrass, and fish. Create versions of these functions which accept parameters to allow you to add more variation to your scene.  The student worksheet provides more details and guidance.\n\n<img src=\"https://levelbuilder-studio.code.org/script_assets/k_1_images/instruction_gifs/csp/U3L08%20-%20Under%20the%20sea.gif\" style=\"width: 250px\">",
        "U3L08 Assessment2_markdown_instruction": "“Abstraction” is often used to focus on a general case and ignore a specific instance of a problem. \n\nGiven this meaning of the word, how are functions with parameters an example of abstraction?\n",
        "U3L08 Assessment2_2018_markdown_instruction": "“Abstraction” is often used to focus on a general case and ignore a specific instance of a problem. \n\nGiven this meaning of the word, how are functions with parameters an example of abstraction?\n",
        "U3L08 Free Response Getting Started_markdown_instruction": "In previous lessons, you used parameterized functions. \n\n* In what situations are parameterized functions useful? \n* What problems do parameterized functions solve?\n",
        "U3L08 Free Response Wrap Up_markdown_instruction": "How are parameterized functions involved in the children's game \"Simon Says?\"\n",
        "U3L09 Free Response Getting Started_markdown_instruction": "In computer science, when programmers break a big job into several smaller jobs, it's called decomposition.\n\nWhen programmers think about tasks in the general terms about what is going to be accomplished (not specifically about how every step will be accomplished), it's called abstraction. \n\nWhat non-CS task have you worked on lately that involved decomposition? Explain.\n\nWhat non-CS task have you worked on lately that involved abstraction? Explain.\n\n\n",
        "U3L09 Free Response Wrap Up_markdown_instruction": "Describe how your team \"decomposed\" the design of the digital scene project.\n\nDescribe the \"levels of abstraction\" that were included in the component you were responsible for.\n\n\n",
        "U3L10 Free Response Getting Started_markdown_instruction": "* What is your personal goal for this project? \n\n* How will your personal goal impact the larger collaborative project?\n\n\n",
        "U3L10 Free Response Wrap Up_markdown_instruction": "What issues have arisen during this collaborative project? \n\nHow were they resolved?\n",
        "U3L11 Free Response Getting Started_markdown_instruction": "What can you learn by reflecting on your independent work in this project and on your contributions to an effective team effort?\n",
        "U3L11 Free Response Reflection_markdown_instruction": "What was the most important skill you developed in this project?\n\nHow will you be able to apply that skill to future projects both in and out of computer science?\n\n\n",
        "U3L12 - Reflection - Mission Unsortable_markdown_instruction": "Activity Reflection\n\n**Prompt:** \nThinking back on the \"Mission Unsortable\" activity, describe a time when one person's mission conflicted with another person's mission. \n\nWhat happened? Describe how you might modify the missions so that the problem occur.\n",
        "U3L12 Free Response Getting Started_markdown_instruction": "Respond to the following prompt\n\nIn the programs you have written so far, lines of code and functions execute in a predictable order - the order in which you program them to execute. \n\nWhat if someone came along and said, \"This is hard to read. I'm going to re-arrange the lines of code so that they are ordered by length from shortest to longest.\" \n\nIs that a good idea or a bad idea? Explain your reasoning.\n\n\n",
        "U3L12 Free Response Reflection_markdown_instruction": "How did your personal mission contribute and/or detract from the overall goal of sorting the cards? \n\nHow could your group have sorted the cards more efficiently, assuming that everyone still needed to execute the actions as prescribed in their missions? \n\nIf your group was not the first to finish, what slowed your progress?\n\n\n",
        "U3L13 Free Response Getting Started_markdown_instruction": "Give three examples of familiar applications that respond to you, the user. \n\nFor each, describe the actions (means of input) you use to \"talk to the program.\" \n\nIf directed by your teacher, work with a partner to sketch a mock-up of an app with multiple means of input.\n\n\n",
        "U3L13 Free Response Reflection_markdown_instruction": "Elements in your app are required to have **unique IDs**. Given what you now know about how event handlers work, why is it important for the IDs of page elements to be unique?\n\n",
        "U3L14 - Journal Favorite Event_markdown_instruction": "Pick one of the two prompts below to answer.  Start by copy/pasting the prompt you're responding to.\n\n**Pick one:**\n\n* Think back a few lessons to the \"Mission: Unsortable\" card sorting activity. Relate something that happened in that activity to something you found with event-driven programming in this lesson. Were there any \"unfortunate events\" in the card sorting activity that were similar to \"unfortunate events\" while programming in this lesson?  \n\n* What was your favorite event type? Explain what the event type is and how you might use it in an app that you want to write.  \n\nWrite your response below in 100 words or less.\n",
        "U3L15 spot the difference variable debugging_markdown_instruction": "Respond to the following questions about your investigation into the bug with the counting game. Feel free to go back and look at the game again (but do so in another tab or be sure to click \"Submit\" to save your work!):\n\n- From the user's perspective, what was the difference between the first version of the game and the one with the bug?\n- From looking at the code, what specifically was the difference between the two, and why is that an issue?\n- How did you fix the bug?\n",
        "U3L16 Assessment Free Response_markdown_instruction": "Self-assess your clicker game project using the rubric, then respond to this prompt:\n\nIn 100 words, summarize what you learned in this activity and how you might be able to use your new knowledge in future projects.\n\n\n",
        "U3L16 Free Response Getting Started_markdown_instruction": "Until today, you have only learned how to add buttons to a program. \n\nWhat other elements, in addition to buttons, do you interact with in familiar applications? \n\nBesides clicking on buttons, in what other ways can you get information to the program or tell the computer to do things?\n\n\n",
        "U3L16 Free Response Wrap Up_markdown_instruction": "In the next lesson, you will enhance the clicker game to make it more interesting and more fun.\n\nWhat features would you like to add to your program?\n",
        "U3L18 Free Response Wrap Up_markdown_instruction": "Over the next few lessons, you will be gathering skills and knowledge to create a clicker game of your own design. \nYou probably have some very cool ideas about what you want to design. And obviously, you will gather new ideas and will need to learn some new programming skills. \n\nGet ready for the tasks ahead of you by assessing what you already know, and thinking about what you want to know. \nIn the space below:\n\n1.  List at least 3 things you already know that will be useful in designing your clicker game.\n\n2.  Based upon the initial ideas of your game design, list at least 3 things you want to know.\n\n\n",
        "U3L19 - final prompt_markdown_instruction": "Respond to your teacher's prompt below",
        "U3L2 Free Response Reflection_markdown_instruction": "Respond to your teacher's prompt in the space below.\n",
        "U3L2 Using Simple Commands (no tooltips)_markdown_instruction": "<img src=\"https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png\" align=right>**Directions:** Given only 4 turtle commands, write code in App Lab to complete the drawings in each of the challenges below.  Your goal is to write code that solves the problem as efficiently as possible using only the commands provided.  \n\nWhat does “efficient” mean?  In computer science it can actually mean several different things depending on what you’re talking about.  Work on these challenges, try to solve them in a way that you think is best and we’ll ask about efficiency at the end.\n\n<img src=\"https://levelbuilder-studio.code.org/script_assets/k_1_images/instruction_gifs/csp/U3L02-leftSquare.gif\" align=right>**Warm up 1:** Draw a 1 x 1 square to the front and left of the turtle as efficiently as possible. The program should stop with turtle in its original position, facing its original direction.\n\nOnce you think you have a solution, click the Finish button - it will appear once you run the program.",
        "U3L20 Assessment4_markdown_instruction": "How do you know if a program needs a conditional statement?\n",
        "U3L20 Assessment5_markdown_instruction": "How do you decide when to use an \"if\" statement or \"if-else\" statement?\n",
        "U3L20 Assessment6_markdown_instruction": "When using an \"if\" statement, what line of code is executed if the condition is false?\n",
        "U3L20 Assessment7_markdown_instruction": "How do you know if the conditionals in your code are working correctly?\n",
        "U3L20 Assessment8_markdown_instruction": "What is the result of a Boolean expression?\n\n\n",
        "U3L20 Free Response Getting Started_markdown_instruction": "Think about these statements. Are they true or false?\n\n    There are 7 days in the week. \n    Candy Crush is a fun app.\n    2 + 1 = 4\n    A beach vacation is the best.\n\nIn 50 words, speculate on what you think it means to be true or false in a computer compared to true or false in life.\n\n\n",
        "U3L20 Free Response Wrap Up_markdown_instruction": "Share your game with a partner. \nExamine the conditional and help each other resolve any problems.\n\nWhat help or suggestions did you provide to your partner? \n\nWhat suggestions did your partner offer to you that improved the decision making in your game?\n\n\n",
        "U3L21 Assessment Wrap Up_markdown_instruction": "Revisit and examine the Clicker Game Enhancement list from Lesson 18 - Controlling Memory and Program Flow. \n\nWhat enhancements do you now have the knowledge and skills - related to variables and conditionals - necessary to implement?\n\n\n",
        "U3L22 Assessment_markdown_instruction": "Why is an inline function used in your clicker game to get or set a key/value pair?\n",
        "U3L22 Free Response Getting Started_markdown_instruction": "In the previous lesson, you added a \"best score\" feature to your clicker game. It worked fine for multiple plays in one game-playing session. \n\nWhy doesn't it save your best score from one session to the next?\"\n",
        "U3L22 Reflection_markdown_instruction": "Use the rubric to assess your Clicker Game project. Then, reflect on your learning by answering the following questions.\n\nAnswer in 100 words:\n\n* What are you most proud of in this project? Why?\n\n* What problems did you have?\n\n* How did you resolve them? \n\n* What did you learn from the problems? \n\n* Were some of the problems avoidable? How? \n\n* If you were to do this activity again, what would you do differently?\n",
        "U3L23 Free Response Wrap Up 2_markdown_instruction": "\"Age Bot\" is a personal assistant that gives information about age-related milestones in a person's life. Write an algorithm so Age Bot can answer the question \"What is the voting age in the United States?\"\n",
        "U3L23 Free Response Wrap Up_markdown_instruction": "Identify a global problem that a NLP (Natural Language Processing) application could be used to help solve. \n\n* Describe the problem.\n* Explain how you think a NLP app could contribute to a solution.\n* Describe how the app would interact with the user. \n* What would you name the app? \n\n",
        "U3L24 Chatbot Keyword Record_markdown_instruction": "Now it's time to catch the bugs in your own digital assistant. Your code might be working correctly right now, but you have to be able to **prove** it. Use the next level to record the keywords/phrases that your digital assistant responds to. \n\nYou will have many chances to add to this record over the next few days. Remember, you will not be able to earn full credit on the digital assistant project without a comprehensive record of your keywords.",
        "U3L25 Assessment_markdown_instruction": "Write a compound conditional/nested if statement to fit the situation:\n\nHenry and Milton flip a coin twice. \n\nIf the coin lands on the same side twice, Henry wins. \n\nIf the coin lands on different sides for each flip, Milton wins.\n",
        "U3L25 Free Response Getting Started_markdown_instruction": "Examine these three sentences.\n\n1. If you have the letter S in your name, please stand.\n\n2. If you play an instrument or sing in the choir, please put your head down on your desk.\n\n3. If the number of your home address is an even number please stand, otherwise please put your head down on your desk.\n\nDescribe how they are logically different.\n\n\n",
        "U3L25 Free Response Wrap Up_markdown_instruction": "Give 2 reasons why Boolean statements are important in writing efficient programs.\n",
        "U3L26 Free Response Getting Started_markdown_instruction": "Think about interactions you have experienced in conversations.\n\nHow do you know when someone you're talking to is engaged in the conversation? \n\nWhat do they say that indicates that they are paying attention?\n\n\n",
        "U3L27 Assessment1_markdown_instruction": "Assess your digital assistant using the rubric.\n\nDiscuss how you incrementally developed your program. What did you create first? What came next? What problems did you encounter and solve? (100 words max)\n",
        "U3L27 Assessment2_markdown_instruction": "What was the most significant feedback you provided that helped other students review and revise their programs? (100 words max)\n\n",
        "U3L27 Assessment3_markdown_instruction": "What was the most significant feedback another student provided that helped you review and revise your program? (100 words max)\n",
        "U3L27 Free Response Getting Started_markdown_instruction": "Record the first step in the Think-Pair-Share activity here. \n\nThink of three ways to use strings within your chatbot to make it respond more ‘intelligently’ or expand its ‘personality.’\n\nRecord your ideas here and then share with another classmate.\n",
        "U3L28 Free Response Getting Started_markdown_instruction": "A while loop is a process that continues as long as some condition is true. \nWe experience many of them every day in our normal activities. \n\nDescribe a real-world example of a while loop that you personally experience in your daily life. \n\nWhat is the condition that causes the loop to continue?\n",
        "U3L28 Free Response Wrap Up_markdown_instruction": "In your own words, describe how a while loop works. \n\nExplain two things to pay attention to when creating while loops.  \n\nIn your response justify why the name \"while loop\" accurately describes the behavior of this new programming construct.\n",
        "U3L29 Free Response Getting Started_markdown_instruction": "***Think about gathering data from a coin flip game.*** In addition to the number of heads and tails, what other data might be interesting to gather?\n",
        "U3L29 Free Response Wrap Up_markdown_instruction": "***Describe another game that depends upon random numbers.*** List three statistics that might be interesting to collect from 10,000 plays of that game?\n",
        "U3L30 Free Response Getting Started_markdown_instruction": "Why do you think human beings create lists? \n\nWhat types of lists have you created? \n\nHow do you use lists?\n",
        "U3L31 Assessment1_markdown_instruction": "Assess your photo album project with the rubric. Then answer the following questions.\n\nDiscuss how you incrementally developed your program. (100 words max)\n\n* What did you create first? \n* What came next? \n* What problems did you encounter and solve?\n",
        "U3L31 Assessment2_markdown_instruction": "Describe how the feedback you gave to another student was helpful.(100 words max)\n\n* What was the most significant feedback you provided that helped a peer review, revise and improve the program? \n* How did your suggestions contribute to the improvement?\n",
        "U3L31 Assessment3_markdown_instruction": "What was the most significant feedback another student provided to your project that helped you review, revise, and improve your program? (100 words max)\n",
        "U3L31 Free Response Getting Started_markdown_instruction": "List three reasons why you think that electronic photo albums are so popular.\n",
        "U3L32 Free Response Getting Started_markdown_instruction": "Did you ever own a \"lite-brite\" toy as a child? Describe how an image is created with this toy. What would you have to do to change everything that is red to blue?\n",
        "U3L33 Free Response Getting Started_markdown_instruction": "Describe the visual impact of each of the following effects. What do you have to do to the image to create the desired effect?\n\n* Make an image \"warmer\"\n* Make an image \"cooler\"\n* Make an image \"brighter\"\n* Make an image \"darker\"\n* Make an image \"gray scale\"\n\n\n",
        "U3L34 Free Response Getting Started_markdown_instruction": "Have you ever seen hidden-image stereograms...an image hidden within what appears to be a colorful geometric pattern? See an example <a href=\"http://www.vision3d.com/sghidden.html\" target=\"_blank\"> here.\n\n</a>How do you think stereograms are created?\n",
        "U4 - Charts - Import Data - 1_markdown_instruction": "We can import data\n\nGiven a csv file, have students import it and then go look at in the data viewer",
        "U4 - Import Data - 1_markdown_instruction": "We can import data\n\nGiven a csv file, have students import it and then go look at in the data viewer",
        "U4 - Objects - Template Contacts_markdown_instruction": "![](https://images.code.org/53a5bdfb7f4ec83174756c8e094558fd-image-1449518131328.png)",
        "U4 - Objects - Template Contacts_2018_markdown_instruction": "![](https://images.code.org/53a5bdfb7f4ec83174756c8e094558fd-image-1449518131328.png)",
        "U4L01 Free Response_markdown_instruction": "This is the free response question text.\n",
        "U4L02 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L03 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L04 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L05 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L06 Data Storage 7_markdown_instruction": "For your data collection app you may need to collect data over multiple screens. Add a second screen to the sample app we have been building to capture an image from a user. Return to screen 1 after the JSON object has been stored in the table.",
        "U4L06 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L07 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L08 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L09 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L10 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L11 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L12 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L13 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L14 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L15 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L15 Read Data 2_markdown_instruction": "Student should create a sentence which puts together all the pieces from a record\n\n**Name** is **Age** years old and like **Food**",
        "U4L15 Read Data 4_markdown_instruction": "Now instead of the first record, we want a random record from the list of records.  Can you figure out how to make this happen?\n\n**HINT**\n1. Find out the length of the records\n1. Make a variable that holds a random number\n1. Use it to get a random record",
        "U4L16 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L17 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L18 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L19 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L20 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L21 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L22 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L23 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L24 Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U4L3 - FR Identifying people_markdown_instruction": "Consider the following scenario:\n\n*In order to dampen the effect of a potential data breach or accidental release of records a health care company has decided to remove a lot of personally identifiable information in its health records, like names, phone numbers and so on.  In its place, along with all medical information, they plan to store ONLY the gender, age, and zip code of the patient.*\n\n**Give your opinion**: Is this health care company doing enough to protect the personal information of patients? If yes, explain why this is the best they can do. If no, explain what they should do instead.  (Limit your response to a few sentences).",
        "U4L3 - FR Identifying people_2018_markdown_instruction": "Consider the following scenario:\n\n*In order to dampen the effect of a potential data breach or accidental release of records a health care company has decided to remove a lot of personally identifiable information in its health records, like names, phone numbers and so on.  In its place, along with all medical information, they plan to store ONLY the gender, age, and zip code of the patient.*\n\n**Give your opinion**: Is this health care company doing enough to protect the personal information of patients? If yes, explain why this is the best they can do. If no, explain what they should do instead.  (Limit your response to a few sentences).",
        "U4LXX Free Response_markdown_instruction": "Free response prompt here.\n\n",
        "U5 ColorSleuth add score variables and update with console_markdown_instruction": "Fun part - hide/show player highlight in app.\n\nDO THIS:\n\n* in nextTurn() hide both player highlights\n* in if statement show the correct one in \n\n[anigif showing functionality]\n\n",
        "U5 ColorSleuth nextTurn pt1 update UI to indicate turn_markdown_instruction": "Fun part - hide/show player highlight in app.\n\nDO THIS:\n\n* in nextTurn() hide both player highlights\n* in if statement show the correct one in \n\n[anigif showing functionality]\n\n",
        "U5 ColorSleuth part 4 make setBoard function_markdown_instruction": "You should now have code that sets the color of the buttons and picks one at random to make a slightly different color.  \n\nThis is good functionality that, now that it's working means we can move onto the next problem. But for the game we're going to want to do this multiple times so that's a clue we should make a function\n\nDO THIS:\n\n* Define a new function called `setBoard`.\n* Move all of the code that sets the colors of the buttons inside the function [licecap]\n* add a call to `setBoard` to verify that it works",
        "U5 ColorSleuth part 5 make random RGB string_markdown_instruction": "We can use the *same technique* to generate a random color.\n\nall colors are defined as strings with only difference being the numbers that are used.\n\nWe just learned how to do this for ids.  Same principle for colors it just gets nasty looking.\n\n\"rgb(\"+random=\", \"+random...",
        "Underground Avoiding Lava_markdown_instruction": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An `if` command will come in handy here. Add a `move forward` command in the correct place to mine these blocks.",
        "Underground Avoiding Lava_2018_markdown_instruction": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An `if` command will come in handy here. Add a `move forward` command in the correct place to mine these blocks.",
        "Underground If Statements_markdown_instruction": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an `if` command to place cobblestone over any lava you uncover.",
        "Underground If Statements_2018_markdown_instruction": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an `if` command to place cobblestone over any lava you uncover.",
        "Using Accelerometer Events_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Using Accelerometer Events_2018_markdown_instruction": "Today you’re going to learn how to use and create **functions**.\n\nCreating a function lets you make your own blocks! There are two parts to a function: \n\nMaking a newly named block that has all of the code you want to run inside of it. \n-xml of function definition- \n\nThe single green block itself that you use, or call, to run the function you created.\n-xml of function call-\n\nPrepare to get familiar with functions, learn how to edit them, and create your own!",
        "Valentine_artist_01_markdown_instruction": "Help the artist finish his llama heart to change it from llame to llovely! How many llamas does the artist still need to draw?",
        "Valentine_playlab_01_markdown_instruction": "Kiki the Soccer Girl wants to make sure her friends are loved on Valentine's Day! Program Kiki (Actor 1) to move left and right when the left and right arrows are pressed. When Kiki is clicked, she should throw hearts towards her friends. \n\n---\nClick \"Run\" and play the game to find out how many friends she has to send love to in order to win!",
        "Video - Cybersecurity and Crime - Video_markdown_instruction": "[Video guide and questions](https://drive.google.com/open?id=1Qv4lgMMtP42sRlofUmGtElViD1AJ7yETvQ4pCh0rDjw)",
        "Video - Cybersecurity and Crime_markdown_instruction": "[Video guide and questions](https://drive.google.com/open?id=1Qv4lgMMtP42sRlofUmGtElViD1AJ7yETvQ4pCh0rDjw)",
        "Video - Cybersecurity and Crime_2018_markdown_instruction": "[Video guide and questions](https://drive.google.com/open?id=1Qv4lgMMtP42sRlofUmGtElViD1AJ7yETvQ4pCh0rDjw)",
        "Virtual Pet 1 Predict_markdown_instruction": "**Make a prediction:** This is Geraldine, your new pet giraffe.\n\nWhat do you think will happen if you press \"▶ Run\" and then click on her?\n",
        "Virtual Pet 1 Predict_simple_markdown_instruction": "**What do you think?** \n\nThis giraffe is called Geraldine.  \n\nWhen you click on her, what will she do?",
        "Virtual Pet 1-validated_markdown_instruction": "This is Geraldine, your new pet giraffe. What do you think will happen if you press run and then click on her?",
        "Virtual Pet 1_markdown_instruction": "This is Geraldine, your new pet giraffe.  \n\nWhat do you think will happen if you press \"▶ Run\" and then click on her?",
        "Virtual Pet 1_simple_markdown_instruction": "This is Geraldine, your new pet giraffe.  \n\nWhat do you think will happen if you press \"▶ Run\" and then click on her?",
        "Virtual Pet 2 - Validated (Ram)_markdown_instruction": "There's a mud puddle over in the corner.  \n\nCreate an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2 - Validated_markdown_instruction": "There's a mud puddle over in the corner.  \n\nCreate an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2_markdown_instruction": "There's a mud puddle over in the corner.  \n\nCreate an **event** so that when Geraldine touches the puddle, her color changes to brown.",
        "Virtual Pet 2_simple_markdown_instruction": "There is brown dirt in the corner.\n\nCreate an **event** so that when Geraldine touches the dirt, her color changes to brown.",
        "Virtual Pet 2_simple_clone_markdown_instruction": "There is brown dirt in the corner.\n\nCreate an **event** so that when Geraldine touches the dirt, her color changes to brown.",
        "Virtual Pet 4_markdown_instruction": "We don't want to wait for the giraffe to clean itself every time.  \n\nAdd a behavior to your soap to make it draggable, then drag it over to clean the giraffe!\n",
        "Virtual Pet 4_simple_markdown_instruction": "We want to bring the soap to the giraffe.\n\nAdd a behavior to your soap to make it draggable, then drag it over to clean the giraffe!\n",
        "Virtual Pet 5 - Validated_markdown_instruction": "All of this play takes energy!  \n\nAdd actions to each event so the giraffe gets a little smaller (shrinks by 5) each time it collides with another sprite.  \n",
        "Virtual Pet 5_markdown_instruction": "All of this play takes energy!  \n\nAdd actions to each event so the giraffe gets a little smaller (shrinks by 5) each time it collides with another sprite.  \n",
        "Virtual Pet 5_simple_markdown_instruction": "The giraffe is too big!  \n\nAdd actions to each event so the giraffe gets smaller each time it touches another sprite.  \n",
        "Virtual Pet 6_markdown_instruction": "A balanced diet is important! We have to feed the giraffe to get its strength back.  \n\nAdd an apple to the scene and have it return the giraffe back to regular size when the two sprites touch.  \n",
        "Virtual Pet 6_simple_markdown_instruction": "The giraffe is hungry!\n\nAdd an apple and use an action to make the giraffe its normal size when the apple and giraffe touch.  \n",
        "Virtual Pet Freeplay_markdown_instruction": "Freeplay: What more can you make your giraffe do? \n\n- Can you add more special items for your virtual pet?  \n- Can you give her some friends?  ",
        "Virtual Pet Freeplay_simple_markdown_instruction": "Freeplay: What more can you make your giraffe do? \n\n- Can you add more special items for your giraffe?  \n- Can you give her some friends?  ",
        "Virtual Pet Predict_markdown_instruction": "**Make a prediction:** This is Geraldine, your new pet giraffe. What do you think will happen if you press run and then click on her?",
        "Web Lab 1_markdown_instruction": "Make an awesome web page!\n\n1. Look at the web page we gave you to start with. Look how lame it is. 1996 just called and wants its web page back. But don't get depressed - YOU can fix it!\n2. Add a background-color attribute in the body style in style.css to make the page background color 'darkcyan'\n3. Add a text-align attribute to the body style in style.css to center the image and text horizontally\n4. Change index.html to include an inspiring hashtag\n5. Add a color attribute to the p style in style.css to make the inspiring hashtag white\n6. Add a font-size attribute to the p style in style.css to make your inspiring hashtag REALLY BIG! (Try 24px and 3em and see what happens.)",
        "What is the difference between formative and summative assessment?_markdown_instruction": "The following link is a resource that provides definitions and examples of formative and summative assessments:",
        "WhileAdventure_markdown_instruction": "Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.  \n\nCan you help her grab as many as she can using just 4 blocks?",
        "Widget: Text Compression_markdown_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "Widget: Text Compression_2018_markdown_instruction": "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.",
        "aE3alternate_markdown_instruction": "\n<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nThis alternate shows what the image would look like if the user chose pentagon napkins and modified line weight/color.\n</div>\n\n",
        "aE3alternateB_markdown_instruction": "\n<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nThis alternate shows what the image would look like if the user chose triangle napkins and got bold with the code.\n</div>\n\n",
        "aE4_markdown_instruction": "\n<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nOh No! Our napkins are too small! \n<br/><br/>\nWe need to have the napkins twice as big and still keep the tablecloth the same size. What numbers can you change to make that happen?\n<br/><br/>\n(as shown in triangles)\n</div>\n\n",
        "aE5_markdown_instruction": "\n<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nLet's pull the look together with some window decorations!\n<br/><br/>\nHere is your original code for drawing a line of napkins. Piece 4 lines together to make a pattern that goes around your window frame.\n</div>\n\n",
        "aE6_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nThe guests are going to need something to sit on!\n<br/><br/>\nThe artist has an idea to make some fun chairs. How many times do you need to loop this to draw half of a circle?\n</div>",
        "allthethings data blocks test_markdown_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings design mode elements_markdown_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\nEnd of instructions that are long.",
        "allthethings level dataTables_markdown_instruction": "Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "allthethings_fish_tank_markdown_instruction": "All-the-things test level.",
        "allthethings_template_backed1_markdown_instruction": "Backed by a template #1. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script). ",
        "allthethings_template_backed2_markdown_instruction": "Backed by a template #2. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).",
        "artistLoopsK3_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nDraw a line eight steps long. This will become the land for our kingdom!<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/c00b930eb5fb13ae946847adc51c9bd3-image-1467935631246.gif\" width=\"300\"/>\n",
        "artistLoopsK4_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nNow we need a castle with a draw bridge.  Fix the code so that the bridge lays straight instead of falling down.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/84b93e1b9dad3ee52a46c767524d3558-image-1467935697224.gif\" width=\"300\"/>\n",
        "artistLoopsK5_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nNow we need to fix the top of the castle. Can you loop the code three times?<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/f418ccba20b7230baba1328143bd0092-image-1467935762464.gif\" width=\"300\"/>\n",
        "artistLoopsK6_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nSomeone is stuck in the tower!  Fix the stairs to set them free.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/1efb95ca15f66b46145725769d3d279c-image-1467935856461.gif\" width=\"300\"/>\n",
        "artistLoopsK7_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nThis tower is lovely, what is downstairs? Build another staircase to find out!<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/af040c27be11c3a639e18c440c8a047c-image-1467936046481.gif\" width=\"300\"/>\n",
        "artistLoopsK8_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nWow! There's a garden over there!  Help fix these stairs so I can get to it.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/bf368872da36217b0d19261fc6b84bf6-image-1467936147116.gif\" width=\"300\"/>\n",
        "artistLoopsKA_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nThese stones are in the wrong place.  Help me move them so I don't fall in!<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\" width=\"300\"/>\n",
        "artistLoopsKB_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nLook!  It's a theater.  Help me set up the chairs so we can all see the stage.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/c4263306ebb0ad1d99fe6f200a790d0c-image-1467936424533.gif\" width=\"300\"/>\n",
        "beeDebugVideo1_markdown_instruction": "Collect all of the nectar.",
        "collector example_markdown_instruction": "Collect all the gold using the `collect` block:\n\n<xml>\n  <block type=\"collector_collect\"/></xml>",
        "collectorDebugVideo2_markdown_instruction": "*\"Sequence matters!\"*\n\nThe blocks you need are already in the workspace, but not connected.  \n\nPut these blocks in order to collect all of the gold and solve the puzzle.",
        "collectorSkinVideo1_markdown_instruction": "Move Laurel to the treasure, then use `collect` to pick it up.\n\nCollect one pile of treasure to pass this level.",
        "collectorSkinVideo2_markdown_instruction": "Move Laurel to the treasure, then use `collect` to pick it up.\n\nCollect one pile of treasure to pass this level.",
        "comment_intro_maze_2018_markdown_instruction": "*\"I'm confused. Help me remember how to solve this maze.\"*  \n\n---\n\nTo pass this puzzle, solve the maze and use the new <xml><block type=\"comment\">\n    <title name=\"TEXT\"> </title>\n  </block></xml> block to leave yourself quick reminders. They can help you remember what you were doing and why!   \n  \n\nComments are only used for **you**, they don't affect the play area.",
        "conditionals_forvideo_harvester_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "course1_artist_loops_challenge2_markdown_instruction": "Let's play a game! Draw as many X's as you can! Can you get 3 in a row?",
        "course1_artist_loops_challenge3_markdown_instruction": "**Tweet!**\n\n*\"Can you help me make two bird houses?\"*",
        "course1_artist_loops_challenge4_markdown_instruction": "*\"It's time to toss the dice! Can you help me draw these?\"*",
        "course1_maze_debugging_challenge1_markdown_instruction": "Debug this level. Remove the extra blocks, and add the missing blocks. Get the bird to the pig!",
        "course1_maze_debugging_challenge2_markdown_instruction": "Debug this level. These are the right blocks, but they're in the wrong order!",
        "course1_maze_seq_challenge2_markdown_instruction": "You can only move up to four times in each direction. Can you find a path before you run out of blocks?",
        "course1_playlab_events_challenge1_markdown_instruction": "*\"Where are my friends hiding? In this game, clicking on me will show my friend Olive the cat!\"*\n\nClicking Olive will make Robin appear! Can you write code to show the rest of the characters too?\n\nIn this puzzle, make sure to click for hints! The hints will help you do this project step-by-step!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "course1_playlab_events_challenge2_markdown_instruction": "*\"Let's have a party! Give my friends something to do when you click or tap them.\"*\n\nWhat will the animals say? What else will happen?\n\n\n\nIn this puzzle, make sure to click for hints! The hints will give you fun things to try!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "course2_artist_nestedLoops_challenge1_markdown_instruction": "Can you figure out how to make a picture like this?\n\n- Both shapes have **50 pixel sides.**\n- The *octagons* are made with **45 degree** turns.\n- The *triangles* are made with **120 degree** turns.",
        "course2_artist_nestedLoops_challenge2_markdown_instruction": "Can you figure out how to make a picture like this?\n\n- The first inner loop should make an octagon.\n- The second inner loop should make a hexagon.\n- The third inner loop should make a square.",
        "course2_artist_prog_challenge1_markdown_instruction": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun!",
        "course2_artist_prog_challenge2_markdown_instruction": "*Help me paint the yellow lines on this road!*",
        "course2_bee_conditionals_challenge1_markdown_instruction": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb.",
        "course2_bee_conditionals_challenge2_markdown_instruction": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
        "course2_collector_loops_challenge2_markdown_instruction": "*\"Let's hunt for treasure - using loops!\"*\n\nHelp the collector by debugging this code. Get all of the treasure!",
        "course2_collector_prog_challenge1_markdown_instruction": "Look carefully! Can you collect all **10** pieces of treasure?",
        "course2_collector_prog_challenge2_markdown_instruction": "There are **20** pieces of treasure in this cave. Collect at least half to finish the challenge!",
        "course2_harvester_loops_challenge1_markdown_instruction": "Collect all of the corn.",
        "course2_harvester_loops_challenge2_markdown_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "course2_maze_programming_challenge1_markdown_instruction": "*\"The pig is hiding! Can you help me find a way around?\"*",
        "course2_maze_programming_challenge2_markdown_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "course2_maze_seq_challenge2_markdown_instruction": "You can only move up to four times in each direction. Can you find a path before you run out of blocks?",
        "course3_artist_concept_challenge1_markdown_instruction": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!  \n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You are not expected to get it perfect the first time.\n\nThe repeated shape is almost identical to the one from the last puzzle, except that the length used in the first loop is a little smaller. ",
        "course3_artist_functions_challenge1_markdown_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "course3_artist_functions_challenge2_markdown_instruction": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
        "course3_bee_debugging_challenge1_markdown_instruction": "Watch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "course3_bee_functions_challenge1_markdown_instruction": "You are on your own for this challenge.  This could \"bee\" harder than it looks!",
        "course3_bee_functions_challenge2_markdown_instruction": "You are on your own for this challenge!",
        "course3_bee_functions_challenge3_markdown_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
        "course3_bee_functions_challenge4_markdown_instruction": "Use everything you have learned to complete this puzzle!",
        "course3_collector_debugging_challenge2_markdown_instruction": "Are you an expert of nested loops? Use what you have learned so far to collect all of the treasure!",
        "course3_farmer_condLoops_challenge1_markdown_instruction": "The pumpkins mark the place where you should turn. *Turn right at the pumpkins.* Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
        "course3_farmer_condLoops_challenge2_markdown_instruction": "*\"It's a vegetable maze!\"* \n\nTurn right at pumpkins, turn left at the lettuce. Collect everything to complete the level.",
        "course3_farmer_until_challenge2_markdown_instruction": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
        "course3_maze_debugging_challenge1_markdown_instruction": "*\"Am I just going around in circles?\"*",
        "course3_maze_debugging_challenge2_markdown_instruction": "*\"If I turn too often, I might get dizzy! Help me reach the pig with only four `turn` commands.\"*",
        "course3_maze_until_challenge1_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "course3_playLab_challenge1_markdown_instruction": "_The **squirrels** are terrified to see that a **dinosaur** has come to town! Can the brave **knight** keep them all from panicking?_\n\nRules:\n1. *Touching the squirrels scores you points.*\n2. *Touching the dinosaur takes many points away.*\n\nHere is a different kind of game that has already been started for you! Play it to see how it works. \n\n\nSomething should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "course3_playlab_challenge2_markdown_instruction": "Can you figure out how this \"Fortune Teller\" app works? Try adding some of the following features to this game:\n\n* Change the \"yes\" and \"no\" answers to something more interesting.\n* Let the player ask another question after the actor says the fortune.\n* Give the witch two more things to say when she is in an `angry` or `normal` mood.\n* Give the wizard his own set of fortunes.\n* Make each actor change mood randomly.\n\nCheck the hints if you need help with these challenges!",
        "course4_artist_binary_challenge1_markdown_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "course4_artist_binary_challenge2_markdown_instruction": "There are 256 bits represented on this grid - that means it's easy for a small change to cause big problems. Are you persistent enough to restore this logo back to normal?\n\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)",
        "course4_artist_concept_challenge2_markdown_instruction": "Create five pinwheel designs using the code below.",
        "course4_artist_functions_challenge2_markdown_instruction": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
        "course4_artist_fwp_challenge1_markdown_instruction": "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)",
        "course4_artist_variables_challenge1_markdown_instruction": "Can you create a `length` variable and use it to create this interesting pattern?",
        "course4_artist_variables_challenge2_markdown_instruction": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\nYou've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "course4_bee_for_challenge1_markdown_instruction": "Use this for loop to collect all of the nectar. There are a few actions that you will want to `repeat 'counter' times`.",
        "course4_bee_fwp_challenge1_markdown_instruction": "Use one `for loop` in a function to collect all of the corn. The same `for loop` can count to different maximum values by using the `length` parameter.",
        "course4_bee_fwp_challenge2_markdown_instruction": "Let's see if you can handle this one final test! Give it everything you've got!\n\nUse one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.\n\nGood luck!",
        "course4_collector_nested_loops_challenge2_markdown_instruction": "*\"Let's hunt for treasure - using loops!\"* \n\nHelp the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "course4_harvester_nested_loops_challenge1_markdown_instruction": "*\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"*",
        "course4_playlab_variables_challenge1_markdown_instruction": "Use these blocks to make the actors share a knock-knock joke. Change the punchline and setup to tell your own joke!",
        "course4_playlab_variables_challenge3_markdown_instruction": "Can you figure out how this \"Fortune Teller\" app works? Try adding some of the following features to this game:\n\n* Change the \"yes\" and \"no\" answers to something more interesting.\n* Let the player ask another question after the actor says the fortune.\n* Give the witch two more things to say when she is in an `angry` or `normal` mood.\n* Give the wizard his own set of fortunes.\n* Make each actor change mood randomly.\n\nCheck the hints if you need help with these challenges!",
        "courseA_artist_loops2_markdown_instruction": "Help the artist draw this line two times forward.\n\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)",
        "courseA_artist_loops2_2018_markdown_instruction": "Help the artist draw this line two times forward.\n\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)",
        "courseA_artist_loops4_markdown_instruction": "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop to draw this line five times!\n\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)",
        "courseA_artist_loops4_2018_markdown_instruction": "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop to draw this line five times!\n\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)",
        "courseA_artist_loops_challenge1_markdown_instruction": "You can use a loop to draw many lines in a row.\n\nCan you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!\n\nHere are some ideas:\n\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)",
        "courseA_artist_loops_challenge1_2018_markdown_instruction": "You can use a loop to draw many lines in a row.\n\nCan you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!\n\nHere are some ideas:\n\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)",
        "courseA_artist_loops_challenge2_markdown_instruction": "**Tweet!**\n\n*\"Can you help me make two bird houses?\"*",
        "courseA_artist_loops_challenge2a_markdown_instruction": "*\"Help me get the camp site ready!\"*\n\nUse the blocks in the toolbox to draw these three tents.",
        "courseA_artist_loops_challenge2a_2018_markdown_instruction": "*\"Help me get the camp site ready!\"*\n\nUse the blocks in the toolbox to draw these three tents.",
        "courseA_bee_seq1_markdown_instruction": "Help the bee get one nectar!",
        "courseA_bee_seq10_markdown_instruction": "Try it by yourself! Get all the nectar.",
        "courseA_bee_seq11_markdown_instruction": "You've been a busy bee! Get all the nectar.",
        "courseA_bee_seq12_markdown_instruction": "Help the bee get one nectar!",
        "courseA_bee_seq13_markdown_instruction": "*Buzz buzz!*\n\nUse <xml><block type=\"maze_moveWest\"/></xml> **three** times to get the bee to the flower! Don't forget to use <xml><block type=\"maze_nectar\"/></xml> to get nectar!",
        "courseA_bee_seq14_markdown_instruction": "*Buzz buzz!*\n\nUse <xml><block type=\"maze_moveNorth\"/></xml> **three** times to get the bee to the flower! Don't forget to get nectar at the end.",
        "courseA_bee_seq2_markdown_instruction": "Add *one* block to help the bee get nectar from the flower.",
        "courseA_bee_seq3_markdown_instruction": "Can you figure out what is wrong with this code? Help the bee get to the flower!",
        "courseA_bee_seq4_markdown_instruction": "Try it yourself!",
        "courseA_bee_seq5_markdown_instruction": "You have to move in two directions to get to the flower! Help the bee pick the right direction.",
        "courseA_bee_seq6_markdown_instruction": "Now the bee needs to get nectar from two flowers!",
        "courseA_bee_seq7_markdown_instruction": "Add two blocks to finish this puzzle!",
        "courseA_bee_seq8_markdown_instruction": "This maze looks familiar... can you figure out what looks different?",
        "courseA_bee_seq9_markdown_instruction": "This bee needs nectar! Do you see a pattern?",
        "courseA_collector_loops1_markdown_instruction": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can.\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
        "courseA_collector_loops12_markdown_instruction": "*\"Eureka!  Get as much treasure as you can!\"*  \n(You do not have to get it all.)",
        "courseA_collector_loops12_2018_markdown_instruction": "*\"Eureka!  Get as much treasure as you can!\"*  \n(You do not have to get it all.)",
        "courseA_collector_loops1_2018_markdown_instruction": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can.\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
        "courseA_collector_loops3_markdown_instruction": "How can Laurel get all five piles of treasure using only one <xml><block type=\"maze_moveEast\"/></xml> block?",
        "courseA_collector_loops3_2018_markdown_instruction": "How can Laurel get all five piles of treasure using only one <xml><block type=\"maze_moveEast\"/></xml> block?",
        "courseA_collector_loops_challenge1_markdown_instruction": "*\"Can you help me spot some bugs? I know which way I want to go, but I'm not sure how many steps to take.\"*",
        "courseA_collector_loops_challenge1_2018_markdown_instruction": "*\"Can you help me spot some bugs? I know which way I want to go, but I'm not sure how many steps to take.\"*",
        "courseA_collector_preLoops1_markdown_instruction": "This is Laurel the Adventurer! \n\nPress \"Run\" to see her walk up to the treasure and grab it.",
        "courseA_collector_preLoops2_markdown_instruction": "Great!  Now you get to add code yourself!  \n\nSnap a ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) block to the bottom of the program and click \"Run\"!",
        "courseA_collector_preLoops3_markdown_instruction": "To grab the treasure, snap two ![](https://images.code.org/54c206b62a02f1d7ea8f1bee52664ecb-image-1508905670742.25.37.png) blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) block to the bottom of the program and click \"Run\"!",
        "courseA_forVideoTest_artist_markdown_instruction": "Repeat loops work for Artist, too!",
        "courseA_harvester_forVideo_markdown_instruction": "Can you pick all the corn using only **one** move block?",
        "courseA_harvester_loops1_markdown_instruction": "Help the harvester pick all the corn!",
        "courseA_harvester_loops10_markdown_instruction": "Help the harvester pick all five ears of corn!",
        "courseA_harvester_loops11_markdown_instruction": "Try one more on your own! ",
        "courseA_harvester_loops2_markdown_instruction": "The harvester needs to pick all the corn! Do you see a pattern?",
        "courseA_harvester_loops3_markdown_instruction": "Can you pick all the corn using only **one** move block?",
        "courseA_harvester_loops4_markdown_instruction": "*\"I need help to find what's wrong!\"*\n\nCan you help the harvester find the bug in her code?",
        "courseA_harvester_loops5_markdown_instruction": "Try it yourself! Can you pick the corn at the end too?",
        "courseA_harvester_loops5a_markdown_instruction": "Look at all this corn? Can you pick it all by yourself?",
        "courseA_harvester_loops5b_markdown_instruction": "Can you change your code to make the harvester pick all the corn?",
        "courseA_harvester_loops6_markdown_instruction": "You will need **one** <xml><block type=\"maze_moveWest\"></block></xml> block and **one** <xml><block type=\"maze_moveNorth\"></block></xml> block to finish this puzzle!",
        "courseA_harvester_loops7_markdown_instruction": "Try it on your own! ",
        "courseA_harvester_loops8_markdown_instruction": "This is the same puzzle, but now you have to repeat **three** times instead of two! Use this block:\n\n<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">3</title>\n  </block></xml>",
        "courseA_harvester_loops9_markdown_instruction": "Can you figure out how to pick *all* this corn?",
        "courseA_harvester_seq1_markdown_instruction": "Help the harvester pick the piece of corn!",
        "courseA_harvester_seq10_markdown_instruction": "The harvester needs to pick all the corn! Do you see a pattern?",
        "courseA_harvester_seq11_markdown_instruction": "Try it by yourself! Pick all the corn.",
        "courseA_harvester_seq12_markdown_instruction": "*Thank you for helping me!* \n\nPick all the corn.",
        "courseA_harvester_seq13_markdown_instruction": "Help the harvester pick corn!",
        "courseA_harvester_seq2_markdown_instruction": "Use <xml><block type=\"maze_moveWest\"/></xml> **three** times to get the harvester to the corn! ",
        "courseA_harvester_seq3_markdown_instruction": "Use <xml><block type=\"maze_moveNorth\"/></xml> **three** times to get the harvester to the corn! Don't forget to pick the corn at the end.",
        "courseA_harvester_seq4_markdown_instruction": "Add *one* block to help the harvester pick the corn.",
        "courseA_harvester_seq5_markdown_instruction": "Can you figure out what is wrong with this code? Help the harvester pick the corn!",
        "courseA_harvester_seq6_markdown_instruction": "Try it yourself!",
        "courseA_harvester_seq7_markdown_instruction": "You have to move in two directions to get to the corn! Help the harvester pick the right direction.",
        "courseA_harvester_seq8_markdown_instruction": "Now the harvester needs to pick corn two times!",
        "courseA_harvester_seq9_markdown_instruction": "Add two blocks to finish this puzzle!",
        "courseA_maze_ramp2_2018_markdown_instruction": "Attach both <xml><block type=\"maze_moveEast\"/></xml> blocks to <xml><block type=\"when_run\"/></xml> to finish your code, then click \"▶ Run\".",
        "courseA_maze_ramp2a_2018_markdown_instruction": "Attach both <xml><block type=\"maze_moveEast\"/></xml> blocks to <xml><block type=\"when_run\"/></xml> to finish your code, then click ![](https://images.code.org/727d03b75b490aa49ed2e23e1290fdd8-image-1522888269949.11.32.png).",
        "courseA_maze_ramp3_2018_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by removing it from the other blocks and dragging it back to the toolbox.",
        "courseA_maze_ramp3a_2018_markdown_instruction": "Grab a <xml><block type=\"maze_moveNorth\"/></xml> from the toolbox and add it to the bottom of the other blocks to finish this code, then click \"▶ Run\".",
        "courseA_maze_ramp3b_2018_markdown_instruction": "There's an extra block at the end of this code!  \n\nDrag it back to the toolbox to throw it away.",
        "courseA_maze_ramp4_2018_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseA_maze_ramp4a_2018_markdown_instruction": "Can you figure out which block you need to add to the bottom of the other blocks to finish this code?",
        "courseA_maze_ramp5_2018_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseA_maze_ramp5a_2018_markdown_instruction": "Try this one all by yourself!",
        "courseA_maze_seq1_markdown_instruction": "*\"Play with these blocks and try to get me to the bad pig!\"*",
        "courseA_maze_seq10_2018_markdown_instruction": "**Challenge:** Avoid the TNT to get the bird to the pig!",
        "courseA_maze_seq11_2018_markdown_instruction": "Time for a shorter puzzle!  Move one way, then another to get the bird to the pig.\n",
        "courseA_maze_seq12_2018_markdown_instruction": "Get that pig!",
        "courseA_maze_seq1_2018_markdown_instruction": "*\"Play with these blocks and try to get me to the bad pig!\"*",
        "courseA_maze_seq5_2018_markdown_instruction": "Give this one a try.",
        "courseA_maze_seq5a_2018_markdown_instruction": "*\"Here piggy, piggy!\"*\n\nWhat can you add to the end of this code to get the bird to the pig?",
        "courseA_maze_seq6_2018_markdown_instruction": "Move one way, then another to get the bird to the pig!",
        "courseA_maze_seq8_2018_markdown_instruction": "Solve this level and get the bird to the pig!",
        "courseA_maze_seq_challenge1_markdown_instruction": "Debug this level. Remove the extra blocks, and add the missing blocks. Get the bird to the pig!",
        "courseA_maze_seq_challenge1_2018_markdown_instruction": "Debug this level. Remove the extra blocks, and add the missing blocks. Get the bird to the pig!",
        "courseA_playLab_events3_markdown_instruction": "Help Jorge the Dog get moving by connecting the <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> block to the <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml> event block that is already in the workspace.\n\nGet Jorge to the flag to finish this level!",
        "courseA_playLab_events3_2018_markdown_instruction": "Help Jorge the Dog get moving by connecting the <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> block to the <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml> event block that is already in the workspace.\n\nGet Jorge to the flag to finish this level!",
        "courseA_playLab_events4_markdown_instruction": "Now, add more blocks to get Jorge to move right when the right arrow button is clicked.",
        "courseA_playLab_events4_2018_markdown_instruction": "Now, add another event block to get Jorge to move right when the right arrow button is clicked.",
        "courseA_playLab_events5_markdown_instruction": "Add events to have Jorge move up and down when the up arrow and down arrow buttons are pressed.",
        "courseA_playLab_events5_2018_markdown_instruction": "Add events to have Jorge move up and down when the up arrow and down arrow buttons are pressed.",
        "courseA_playLab_events7_2018_markdown_instruction": "*Freeplay:* Add anything you want to this game.  Can you make the dinosaur disappear when Jorge runs into him?",
        "courseA_playlab_events_challenge1_markdown_instruction": "Clicking Olive will make Robin appear! Can you write code to show the rest of the characters too?\n\nIn this puzzle, make sure to click for hints! The hints will help you do this project step-by-step!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseA_playlab_events_challenge1_2018_markdown_instruction": "Clicking Olive will make Robin appear! Can you write code to show the rest of the characters too?\n\nIn this puzzle, make sure to click for hints! The hints will help you do this project step-by-step!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseA_playlab_events_challenge1a_markdown_instruction": "Where are my friends hiding? In this game, clicking on me will show my friend Olive the cat! Clicking Olive will make Robin appear! Can you write code to show the rest of my friends too?\n\n\nIn this puzzle, make sure to click for hints! The hints will help you do this project step-by-step!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseA_playlab_events_challenge2_markdown_instruction": "Give everyone something to do when you click on them. What will the animals say? What else will happen?\n\nIn this puzzle, make sure to click for hints. The hints will give you fun things to try!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseA_playlab_events_challenge2_2018_markdown_instruction": "Give everyone something to do when you click on them. What will the animals say? What else will happen?\n\nIn this puzzle, make sure to click for hints. The hints will give you fun things to try!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseA_playlab_events_challengeClone_markdown_instruction": "Where are my friends hiding? In this game, clicking on me will show my friend Olive the cat! Clicking Olive will make Robin appear! Can you write code to show the rest of my friends too?\n\n\nIn this puzzle, make sure to click for hints! The hints will help you do this project step-by-step!\n\n![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)",
        "courseB_Scrat_ramp1_2018_markdown_instruction": "To get Scrat to the acorn, snap the <xml><block type=\"maze_moveEast\"/></xml> block to the bottom of the <xml><block type=\"when_run\"/></xml> block, then press \"▶ Run\"!",
        "courseB_Scrat_ramp2_2018_markdown_instruction": "Snap both <xml><block type=\"maze_moveEast\"/></xml> blocks to the bottom of the <xml><block type=\"when_run\"/></xml> block to finish your code, then click \"▶ Run\".",
        "courseB_Scrat_ramp3a_2018_markdown_instruction": "Grab a <xml><block type=\"maze_moveNorth\"/></xml> from the toolbox and add it to the bottom of the other blocks to finish this code, then click \"▶ Run\".",
        "courseB_Scrat_ramp3b_2018_markdown_instruction": "There's an extra block at the end of this code!\n\nDrag it back to the toolbox to throw it away.",
        "courseB_Scrat_ramp4a_2018_markdown_instruction": "Can you figure out which block you need to add to the bottom of the other blocks to finish this code?",
        "courseB_Scrat_ramp5a_2018_markdown_instruction": "Try this one all by yourself!",
        "courseB_artist_loops6_markdown_instruction": "Behind the bushes there is a beautiful vine full of flowers.  Can you climb the vine and see where it goes?",
        "courseB_artist_loops6_2018_markdown_instruction": "Behind the bushes there is a beautiful vine full of flowers.  Can you climb the vine and see where it goes?",
        "courseB_artist_loops7_markdown_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "courseB_artist_loops7_2018_markdown_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "courseB_artist_loops_challenge1_markdown_instruction": "*\"It's time to toss the dice! Can you help me draw these?\"*",
        "courseB_artist_loops_challenge1_2018_markdown_instruction": "*\"It's time to toss the dice! Can you help me draw these?\"*",
        "courseB_artist_loops_challenge2_markdown_instruction": "Draw as many X's as you can. Can you get 3 in a row?",
        "courseB_artist_loops_challenge2_2018_markdown_instruction": "Draw as many X's as you can. Can you get 3 in a row?",
        "courseB_collector_loops1_markdown_instruction": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can.\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
        "courseB_collector_loops1_2018_markdown_instruction": "**Free Play:** Move Laurel around and get as much treasure as you can. Get at least one item with no mistakes to pass this level.  \n\n---\n\nDrag blocks into the workspace and try to figure out how to get treasure.  ",
        "courseB_collector_loops2_markdown_instruction": "Move Laurel to the treasure, then use the<xml><block type=\"collector_collect\"/></xml>block to pick it up.\n\n\nGet all four piles to pass this level.",
        "courseB_collector_loops2_2018_markdown_instruction": "Move Laurel to the treasure, then use the<xml><block type=\"collector_collect\"/></xml>block to pick it up.\n\n\nGet all four piles to pass this level.",
        "courseB_collector_loops3_markdown_instruction": "How can Laurel get all five piles of treasure using only one <xml><block type=\"maze_moveEast\"/></xml> block?",
        "courseB_collector_loops3_2018_markdown_instruction": "How can Laurel get all five piles of treasure using only one <xml><block type=\"maze_moveEast\"/></xml> block?",
        "courseB_collector_loops3_predict1_markdown_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "courseB_collector_loops_challenge2a_markdown_instruction": "*\"Let's get the treasure!\"*\n\nHelp Laurel get at least **5** pieces of treasure to finish this puzzle.",
        "courseB_collector_loops_challenge2a_2018_markdown_instruction": "*\"Let's get the treasure!\"*\n\nHelp Laurel get at least **5** pieces of treasure to finish this puzzle.",
        "courseB_collector_prog3_markdown_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "courseB_iceage_loops1_markdown_instruction": "Help Scrat across the slippery ice to get to the acorn!",
        "courseB_iceage_loops10_markdown_instruction": "Help Scrat get all the way over to the acorn!",
        "courseB_iceage_loops11_markdown_instruction": "Help Scrat get to the acorn!",
        "courseB_iceage_loops11_forVideo_markdown_instruction": "Help Scrat get to the acorn!",
        "courseB_iceage_loops12_markdown_instruction": "Get to the acorn any way you can!",
        "courseB_iceage_loops2_markdown_instruction": "Use both <xml><block type=\"maze_moveWest\"/></xml> and <xml><block type=\"maze_moveSouth\"/></xml> blocks to get to the acorn!",
        "courseB_iceage_loops3_markdown_instruction": "Can you get to the acorn with just one <xml><block type=\"maze_moveWest\"/></xml> block? Try using a loop!",
        "courseB_iceage_loops4_markdown_instruction": "Add one more block to get Scrat all the way to the acorn!",
        "courseB_iceage_loops5_markdown_instruction": "Can you add one more loop to get to the acorn?",
        "courseB_iceage_loops6_markdown_instruction": "Can you add a loop to get to the acorn?",
        "courseB_iceage_loops7_markdown_instruction": "Scrat really wants that acorn! ",
        "courseB_iceage_loops8_markdown_instruction": "Can you fix this code? ",
        "courseB_iceage_loops9_markdown_instruction": "The acorn is so far away! Can you use loops to help Scrat get there?",
        "courseB_maze_seq3_markdown_instruction": "*\"Fix the code to get me to the pig!\"*",
        "courseB_maze_seq3_2018_markdown_instruction": "*\"Fix the code to get me to the acorn!\"*",
        "courseB_maze_seq9_markdown_instruction": "**Challenge:** Move around the TNT to get the bird to the pig.",
        "courseB_maze_seq9_2018_markdown_instruction": "**Challenge:** Move around the broken ice to get Scrat to the acorn.",
        "courseB_maze_seq9_challenge1_markdown_instruction": "*Where's that pig hiding now?*",
        "courseB_maze_seqCold_markdown_instruction": "**Challenge:** Debug this level by adding blocks to get the bird to the pig!",
        "courseB_maze_seq_challenge1_markdown_instruction": "You only have four of each move block. Can you find a path before you run out of blocks?",
        "courseB_maze_seq_challenge1_2018_markdown_instruction": "You only have four of each move block. Can you find a path before you run out of blocks?",
        "courseB_playLab_events1_markdown_instruction": "This game is called \"Play Lab\".  \n\nSee if you can figure out what each block does.",
        "courseB_playLab_events1_2018_markdown_instruction": "This game is called \"Play Lab\".  \n\nSee if you can figure out what each block does.",
        "courseB_playlab_events3_markdown_instruction": "Use an event to make Daisy the Dragon switch to a random ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png) mood when you click on her.",
        "courseB_playlab_events3_2018_markdown_instruction": "Use an event to make Daisy the Dragon switch to a random ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png) mood when you click on her.",
        "courseB_playlab_events4_markdown_instruction": "Knight time!  \n\nAdd an event so that the knight moves toward the dragon when the left arrow is clicked.",
        "courseB_playlab_events4_2018_markdown_instruction": "Knight time!  Get the dragon to finish this level.\n\nAdd an event so that the knight moves toward the dragon when the left arrow is clicked.",
        "courseB_playlab_events5_2018_markdown_instruction": "Now add an event so that the knight runs away from the dragon when you press the right arrow.  \n\nMove the knight to the right to pass this level.",
        "courseB_playlab_events6_markdown_instruction": "Help your knight get all of the flags!\n\nTo do this, you'll need to add events to help the knight move up, down, left, and right.",
        "courseB_playlab_events6_2018_markdown_instruction": "Help your knight get all of the flags!\n\nTo do this, you'll need to add events to help the knight move up, down, left, and right.",
        "courseB_playlab_events7_markdown_instruction": "Make this game fun by setting the knight to vanish when he runs into the dragon on his way to get the flags! \n\nPlay a sound when they collide to make it feel more real.\n\nVisit all of the goals, then run into the dragon to pass the level.",
        "courseB_playlab_events_challenge1_markdown_instruction": "It's time for the Great Animal Race! Make the animals move down when you press `▼`. \n\nWho will run the fastest?",
        "courseB_playlab_events_challenge1_2018_markdown_instruction": "It's time for the Great Animal Race! Make the animals move down when you press `▼`. \n\nWho will run the fastest?",
        "courseB_playlab_events_challenge2_markdown_instruction": "Let's make the animals disappear when you click on them.\nTry playing with the dog now, then help the other animals join in the fun. You can also add sounds and score points to create a game of Animal Tag!\n\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)",
        "courseB_playlab_events_challenge2_2018_markdown_instruction": "Let's make the animals disappear when you click on them.\nTry playing with the dog now, then help the other animals join in the fun. You can also add sounds and score points to create a game of Animal Tag!\n\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)",
        "courseB_starWars_prog1_markdown_instruction": "![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go get the scrap metal, BB-8!\"_\n\nWatch out for walls and crates. Scrap metal looks like this: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseB_starWars_prog10_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_",
        "courseB_starWars_prog10_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_",
        "courseB_starWars_prog11_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going!\"_",
        "courseB_starWars_prog11_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going!\"_",
        "courseB_starWars_prog1_2018_markdown_instruction": "![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go get the scrap metal, BB-8!\"_\n\nWatch out for walls and crates. Scrap metal looks like this: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseB_starWars_prog2_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Get all the metal.\"_",
        "courseB_starWars_prog2_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Get all the metal.\"_",
        "courseB_starWars_prog3_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going, BB-8!\"_",
        "courseB_starWars_prog3_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going, BB-8!\"_",
        "courseB_starWars_prog4_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Get it, BB-8!\"_",
        "courseB_starWars_prog4_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Get it, BB-8!\"_",
        "courseB_starWars_prog5_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_",
        "courseB_starWars_prog5_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_",
        "courseB_starWars_prog6_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_",
        "courseB_starWars_prog6_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_",
        "courseB_starWars_prog7_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go get it!\"_",
        "courseB_starWars_prog7_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go get it!\"_",
        "courseB_starWars_prog8_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\n**Challenge**: Gather all the scrap metal.",
        "courseB_starWars_prog8_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\n**Challenge**: Gather all the scrap metal.",
        "courseB_starWars_prog9_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_",
        "courseB_starWars_prog9_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_",
        "courseC_PlayLab_events7_markdown_instruction": "The `repeat forever` block allows you to run code over and over forever.  Use this block to move Chomp the Dino (actor 2) up and down by 400 pixels forever.\n\n![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)",
        "courseC_PlayLab_events7_2018_markdown_instruction": "The `repeat forever` block allows you to run code over and over forever.  Use this block to move Chomp the Dino (actor 2) up and down by 400 pixels forever.\n\n![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)",
        "courseC_PlayLab_events8_markdown_instruction": "Can you have Waddles (actor 1) say \"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \n\nWhen you're done, play the game to make that happen.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)",
        "courseC_PlayLab_events8_2018_markdown_instruction": "Can you have Waddles (actor 1) say \"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \n\nWhen you're done, play the game to make that happen.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)",
        "courseC_PlayLab_events_challenge1_markdown_instruction": "Use a new block to make Waddles automatically move back to the start when he runs into the Dinosaur and when he scores a point. This will make your game more challenging and fun!\n\nPlay the game and move Waddles with the arrows until you score enough points. Waddles must be moved to the `middle left` position of the screen to complete this challenge.",
        "courseC_PlayLab_events_challenge1_2018_markdown_instruction": "Use a new block to make Waddles automatically move back to the start when he runs into the Dinosaur and when he scores a point. This will make your game more challenging and fun!\n\nPlay the game and move Waddles with the arrows until you score 5 or more points. Waddles must be moved to the `middle left` position of the screen to complete this challenge.",
        "courseC_artist_loop1_markdown_instruction": "Fantastic!  \n\nLet's add some style by changing the brush using the `set pattern` block before our loop starts.",
        "courseC_artist_loop1_2018_markdown_instruction": "*\"Fantastic!\"* \n\nLet's add some style by changing the brush using the <xml><block type=\"draw_line_style_pattern\"> <title name=\"VALUE\">DEFAULT</title></block></xml> block before our loop starts.",
        "courseC_artist_loops1a_2018_markdown_instruction": "**Free Play:** Let's build something bigger, one step at a time!  \n\nUse the `jump to 200 over 200 down` to get the artist to the center of the play area, then use the `draw a sticker` block to make a bird appear.  \n\n---\n\nPress \"Finish\" when you are happy with what you've made.",
        "courseC_artist_loops2_markdown_instruction": "Now that the zombie knows his way, help him dig **25 pixel long** holes along the path to plant more flowers!\n- Each hole should be 25 pixels long\n- Each hole has 25 pixels of space before the next hole",
        "courseC_artist_loops2a_markdown_instruction": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
        "courseC_artist_loops2a_2018_markdown_instruction": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
        "courseC_artist_loops5_markdown_instruction": "Great!  Now it's time to make a fence inside to keep the animals out.   \nMake any kind of fence that you want!\n\n",
        "courseC_artist_loops6_markdown_instruction": "What should the zombie put inside of the garden?  \n\nDraw anything you'd like inside of the fence.  Would you like some flowers or a few bugs? \n*(See hints for more suggestions.)*\n\n\n",
        "courseC_artist_loopsPre1a_markdown_instruction": "Now, put this code into  a `repeat` block and loop it **6** times.\n- Notice that we have added a 60 degree turn at the end of the looped code to get a full rotation.",
        "courseC_artist_loopsPre1a_2018_markdown_instruction": "Now, put this code into  a `repeat` block and loop it **6** times.\n- Notice that we have added a 60 degree turn at the end of the looped code to get a full rotation.",
        "courseC_artist_loopsPrePre1a_markdown_instruction": "Use the <xml><block type=\"jump_to_xy\" id=\"callMe\"><title name=\"XPOS\">200</title><title name=\"YPOS\">200</title></block></xml> block to get the artist to the center of the play area.  \nThen draw a line 50 pixels long with the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">50</title></block></xml> block.",
        "courseC_artist_loopsTemplateA_markdown_instruction": "Use the `jump to 200 over 200 down` to get the artist to the center of the play area, then use the `draw a sticker` block to make a bird appear. ",
        "courseC_artist_loopsTemplateA_2018_markdown_instruction": "Use the `jump to 200 over 200 down` to get the artist to the center of the play area, then use the `draw a sticker` block to make a bird appear. ",
        "courseC_artist_prog1_markdown_instruction": "*\"Hi, I'm an artist. You can write code to make me draw almost anything.\"*\n\nPlay with the blocks in the toolbox to see what they do!",
        "courseC_artist_prog1_2018_markdown_instruction": "*\"Hi, I'm an artist. You can write code to make me draw almost anything.\"*\n\nPlay with the blocks in the toolbox to see what they do!",
        "courseC_artist_prog2_markdown_instruction": "*\"Let's make a cage for my pet monster!\"*\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.  \n(Each line is 100 pixels long)",
        "courseC_artist_prog2_2018_markdown_instruction": "*\"Let's make a cage for my pet monster!\"*\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.  \n(Each line is 100 pixels long)",
        "courseC_artist_prog3_markdown_instruction": "*\"This spaceship needs a window!\"*\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "courseC_artist_prog3_2018_markdown_instruction": "*\"This spaceship needs a window!\"*\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "courseC_artist_prog4_markdown_instruction": "*\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"*\n\nFinish Starla's rocket so she can chase her pet.  \n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
        "courseC_artist_prog4_2018_markdown_instruction": "*\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"*\n\nFinish Starla's rocket so she can chase her pet.  \n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
        "courseC_artist_prog5_markdown_instruction": "*\"Maybe we should make a tag for each of our pets in case they get lost!\"*\n\nFinish this tag by drawing a rectangle around the outside.  \n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "courseC_artist_prog5_2018_markdown_instruction": "*\"Maybe we should make a tag for each of our pets in case they get lost!\"*\n\nFinish this tag by drawing a rectangle around the outside.  \n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "courseC_artist_prog6_markdown_instruction": "*\"Now a tag for Belle!\"*\n\nDraw this diamond with 200 pixel sides.",
        "courseC_artist_prog6_2018_markdown_instruction": "*\"Now a tag for Belle!\"*\n\nDraw this diamond with 200 pixel sides.",
        "courseC_artist_prog7_markdown_instruction": "**Challenge:** This tag is a special one!  \n\nCan you figure out how to draw the outline?  \n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
        "courseC_artist_prog7_2018_markdown_instruction": "**Challenge:** This tag is a special one!  \n\nCan you figure out how to draw the outline?  \n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
        "courseC_artist_prog8_markdown_instruction": "One more tag.  This is a triangle for Pi.  \n(Each side is 150 pixels)",
        "courseC_artist_prog8_2018_markdown_instruction": "One more tag.  This is a triangle for Pi.  \n(Each side is 150 pixels)",
        "courseC_artist_prog_challenge1-doghouse_markdown_instruction": "Let's build a dog house for Jorge!",
        "courseC_artist_prog_challenge1_markdown_instruction": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun! Each square has a side length of 100 pixels.",
        "courseC_artist_prog_challenge1_2018_markdown_instruction": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun! Each square has a side length of 100 pixels.",
        "courseC_artist_prog_challenge2_markdown_instruction": "*Help me paint the yellow lines on this road!*",
        "courseC_artist_prog_challenge2a_markdown_instruction": "*\"Help me paint the yellow lines on this road!\"*\n\nThe three line segments have lengths of 150, 100, and 200 pixels!",
        "courseC_artist_prog_challenge2a_2018_markdown_instruction": "*\"Help me paint the yellow lines on this road!\"*\n\nThe three line segments have lengths of 150, 100, and 200 pixels!",
        "courseC_collector_loops_challenge2_markdown_instruction": "*\"Let's hunt for treasure!\"*\n\nHelp the collector get at least **5** pieces of treasure.",
        "courseC_collector_loops_challenge2_2018_markdown_instruction": "*\"Let's hunt for treasure!\"*\n\nHelp the collector get at least **5** pieces of treasure.",
        "courseC_collector_prog1_markdown_instruction": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can. Use the `collect` block to pick up the treasure!\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
        "courseC_collector_prog1_2018_markdown_instruction": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can. Use the `collect` block to pick up the treasure!\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
        "courseC_collector_prog2_markdown_instruction": "Move Laurel to the treasure, then use <xml><block type=\"collector_collect\"/></xml> to pick it up.",
        "courseC_collector_prog2_2018_markdown_instruction": "Move Laurel to the treasure, then use <xml><block type=\"collector_collect\"/></xml> to pick it up.",
        "courseC_collector_prog3_markdown_instruction": "*\"Sequence matters!\"* \n\nThe blocks you need are already in the workspace, but not connected.  \nOrder these blocks to collect the treasure and solve the puzzle.",
        "courseC_collector_prog3_2018_markdown_instruction": "*\"Sequence matters!\"* \n\nThe blocks you need are already in the workspace, but not connected.  \nOrder these blocks to collect the treasure and solve the puzzle.",
        "courseC_collector_prog4_markdown_instruction": "*\"Sequence matters!\"*\n\nThe blocks you need are already in the workspace, but not connected.  \n\nPut these blocks in order to collect all of the treasure and solve the puzzle.",
        "courseC_collector_prog4_2018_markdown_instruction": "*\"Sequence matters!\"*\n\nThe blocks you need are already in the workspace, but not connected.  \n\nPut these blocks in order to collect all of the treasure and solve the puzzle.",
        "courseC_collector_prog5_markdown_instruction": "*\"Help me collect each bit of treasure!\"*\n\nThese blocks are in the wrong order. Can you fix them?",
        "courseC_collector_prog5_2018_markdown_instruction": "*\"Help me collect each bit of treasure!\"*\n\nThese blocks are in the wrong order. Can you fix them?",
        "courseC_collector_prog6_markdown_instruction": "*\"Help me collect all of the treasure!\"*\n\nThese blocks are in the wrong order. Reorder them to collect all of the treasure.",
        "courseC_collector_prog6_2018_markdown_instruction": "*\"Help me collect all of the treasure!\"*\n\nThese blocks are in the wrong order. Reorder them to collect all of the treasure.",
        "courseC_collector_prog7_markdown_instruction": "**Challenge:** *\"What is going on here?\"*\n\nEven if we put these in the right order, there will still be some missing.  \nUse blocks from the toolbox to collect all of the treasure.",
        "courseC_collector_prog7_2018_markdown_instruction": "**Challenge:** *\"What is going on here?\"*\n\nEven if we put these in the right order, there will still be some missing.  \nUse blocks from the toolbox to collect all of the treasure.",
        "courseC_collector_prog8_markdown_instruction": "*\"Keep up the good work! Help me collect all of the treasure.\"*",
        "courseC_collector_prog8_2018_markdown_instruction": "*\"Keep up the good work! Help me collect all of the treasure.\"*",
        "courseC_collector_prog9_markdown_instruction": "*\"Let's get all of the treasure!\"*",
        "courseC_collector_prog9_2018_markdown_instruction": "*\"Let's get all of the treasure!\"*",
        "courseC_collector_progA_markdown_instruction": "Help Laurel collect all of the treasure.",
        "courseC_collector_progB_markdown_instruction": "You're almost done!  \n\nCollect as many coins as you can to finish the stage!",
        "courseC_collector_prog_challenge2_markdown_instruction": "There are 20 pieces of treasure in this cave. Collect at least **10** to finish the challenge!",
        "courseC_collector_prog_challenge2_2018_markdown_instruction": "There are 20 pieces of treasure in this cave. Collect at least **10** to finish the challenge!",
        "courseC_flappy_events1_markdown_instruction": "Attach the `flap a normal amount` block to the `when click` event, then press \"Run\".   \n\n---\n\nClick or tap on the play space to move Flappy to the target.",
        "courseC_flappy_events10_markdown_instruction": "Create your own Flappy game! \n\nYou can change the visuals and the rules...even the gravity! \nWhen you're done, click \"Finish\" to share with friends on their phones.",
        "courseC_flappy_events10_2018_markdown_instruction": "Create your own Flappy game! \n\nYou can change the visuals and the rules...even the gravity! \nWhen you're done, click \"Finish\" to share with friends on their phones.",
        "courseC_flappy_events1_2018_markdown_instruction": "Attach the `flap a normal amount` block to the `when click` event, then press \"Run\".   \n\n---\n\nClick or tap on the play space to move Flappy to the target.",
        "courseC_flappy_events2_markdown_instruction": "The `when run` event allows you to run code as soon as your game starts.  \n\nTry adding a block that sets the level speed when the \"Run\" button is pressed. \n\n---\n\nPlay the game and flap to the target to continue.",
        "courseC_flappy_events2_2018_markdown_instruction": "The `when run` event allows you to run code as soon as your game starts.  \n\nTry adding a block that sets the level speed when the \"Run\" button is pressed. \n\n---\n\nPlay the game and flap to the target to continue.",
        "courseC_flappy_events3_markdown_instruction": "Now we've added the ground. \n\nAttach the `end game` block to the `when hit the ground` event. \n\n---\n\nPlay the game and crash the bird into the ground to continue.",
        "courseC_flappy_events3_2018_markdown_instruction": "Now we've added the ground. \n\nAttach the `end game` block to the `when hit the ground` event. \n\n---\n\nPlay the game and crash the bird into the ground to continue.",
        "courseC_flappy_events4_markdown_instruction": "Flappy will fly right through obstacles unless you write code to make him crash. \n\nAttach a block to the `when hit an obstacle` event so that the game ends when Flappy crashes into the first set of pipes.",
        "courseC_flappy_events4_2018_markdown_instruction": "Flappy will fly right through obstacles unless you write code to make him crash. \n\nAttach a block to the `when hit an obstacle` event so that the game ends when Flappy crashes into the first set of pipes.",
        "courseC_flappy_events5_markdown_instruction": "We've added a scoreboard to count points when Flappy passes obstacles.  \n\nAdd a block to the `when pass an obstacle` event that scores a point, then press \"Run\" to fly Flappy through the first set of pipes.",
        "courseC_flappy_events5_2018_markdown_instruction": "We've added a scoreboard to count points when Flappy passes obstacles.  \n\nAdd a block to the `when pass an obstacle` event that scores a point, then press \"Run\" to fly Flappy through the first set of pipes.",
        "courseC_flappy_events6_markdown_instruction": "Click the down arrow inside of the `flap a normal amount` block to pick a different flapping power.  \n\nSee if you can still score a point after making Flappy flap either a smaller or larger amount each time you click.",
        "courseC_flappy_events6_2018_markdown_instruction": "Click the down arrow inside of the `flap a normal amount` block to pick a different flapping power.  \n\nSee if you can still score a point after making Flappy flap either a smaller or larger amount each time you click.",
        "courseC_flappy_events7_markdown_instruction": "Next, try changing the scene by attaching a block to the `when run` event.",
        "courseC_flappy_events7_2018_markdown_instruction": "Next, try changing the scene by attaching a block to the `when run` event.",
        "courseC_flappy_events8_markdown_instruction": "You can set the background under any event, not just when the game starts. \n\nTry setting a **random** scene when other events happen...for example, when passing an obstacle.",
        "courseC_flappy_events8_2018_markdown_instruction": "You can set the background under any event, not just when the game starts. \n\nTry setting a **random** scene when other events happen...for example, when passing an obstacle.",
        "courseC_flappy_events9_markdown_instruction": "To mix things up, instead of ending the game when Flappy hits an obstacle, try setting the score back to 0.",
        "courseC_flappy_events9_2018_markdown_instruction": "To mix things up, instead of ending the game when Flappy hits an obstacle, try setting the score back to 0.",
        "courseC_harvester_loops1_markdown_instruction": "Loops can be used to repeat more than moves.  \n\nUse loops to collect all four of the pumpkins.",
        "courseC_harvester_loops10_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops10_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops11_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops11_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops1_2018_markdown_instruction": "Loops can be used to repeat more than moves.  \n\nUse loops to collect all four of the pumpkins.",
        "courseC_harvester_loops2_markdown_instruction": "Can you combine two different loops to move toward the pumpkins, then collect them all?",
        "courseC_harvester_loops2_2018_markdown_instruction": "Can you combine two different loops to move toward the pumpkins, then collect them all?",
        "courseC_harvester_loops3_markdown_instruction": "Collect all of the pumpkins.",
        "courseC_harvester_loops3_2018_markdown_instruction": "Collect all of the pumpkins.",
        "courseC_harvester_loops4_markdown_instruction": "Now there is corn growing, too!\n\nCollect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops4_2018_markdown_instruction": "Now there is corn growing, too!\n\nCollect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops5_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops5_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops6_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops6_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops7_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops7_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops8_markdown_instruction": "**Challenge:** Collect all of the corn and all of the pumpkins.\n\nYou can complete this challenge any way you want, but it will either take a lot of work or a lot of thinking!",
        "courseC_harvester_loops8_2018_markdown_instruction": "**Challenge:** Collect all of the corn and all of the pumpkins.\n\nYou can complete this challenge any way you want, but it will either take a lot of work or a lot of thinking!",
        "courseC_harvester_loops9_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops9_2018_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_harvester_loops_challenge1_markdown_instruction": "Collect all of the corn.",
        "courseC_harvester_loops_challenge2_markdown_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "courseC_harvester_loops_challenge2_2018_markdown_instruction": "Collect all of the lettuce. Avoid the trees and fields!",
        "courseC_harvester_loops_forVid_markdown_instruction": "Collect all of the corn and all of the pumpkins.",
        "courseC_maze_debugging1_markdown_instruction": "This code isn't quite right!  \n\nFix the code to help Scrat get to the acorn.",
        "courseC_maze_debugging1_2018_markdown_instruction": "This code isn't quite right!  \n\nFix the code to help Scrat get to the acorn.",
        "courseC_maze_debugging3_markdown_instruction": "Something is not quite right. \n\nRemove blocks to get Scrat to the acorn!",
        "courseC_maze_debugging3_2018_markdown_instruction": "Something is not quite right. \n\nRemove blocks to get Scrat to the acorn!",
        "courseC_maze_debugging_challenge2_markdown_instruction": "If Scrat turns too often, he might get dizzy! Help him reach the acorn with only four `turn` commands.",
        "courseC_maze_debugging_challenge2_2018_markdown_instruction": "If Scrat turns too often, he might get dizzy! Help him reach the acorn with only four `turn` commands.",
        "courseC_maze_loops2_markdown_instruction": "With the `repeat` block, you can loop code over and over.\n\nCan you get the bird to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "courseC_maze_loops2_predict1_markdown_instruction": "Suddenly, a magical block appears!  \nWith the `repeat` block, you can loop code over and over.\n\nCan you get the bird to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "courseC_maze_loops3_markdown_instruction": "*\"Get me to the pig!\"*\n\nSolve this puzzle by creating a loop!",
        "courseC_maze_loops4_markdown_instruction": "In this puzzle, two `repeat` loops will help you get the bird to the pig with the fewest number of blocks!",
        "courseC_maze_loops5_markdown_instruction": "*\"Get me to the pig as quickly as possible!\"*",
        "courseC_maze_loops6_markdown_instruction": "*\"This pig is ruffling my feathers!\"*\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_maze_loops7_markdown_instruction": "*\"Get me to the pig!\"*\n\nUse what you learned in other puzzles!",
        "courseC_maze_loops8_markdown_instruction": "**Challenge:** Combine ideas from the last few puzzles to complete this level.",
        "courseC_maze_loops_challenge2_markdown_instruction": "Let's hunt for treasure - using loops! Help the collector by debugging this code. Get all of the treasure!",
        "courseC_maze_programming1_markdown_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseC_maze_programming1_2018_markdown_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseC_maze_programming2_markdown_instruction": "Drag an extra <xml><block type=\"maze_moveForward\"/></xml> block out of the toolbox to finish your code.",
        "courseC_maze_programming2_2018_markdown_instruction": "Drag an extra <xml><block type=\"maze_moveForward\"/></xml> block out of the toolbox to finish your code.",
        "courseC_maze_programming3_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by unhooking it from the grey blocks and dragging it back to the toolbox.",
        "courseC_maze_programming3_2018_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by unhooking it from the grey blocks and dragging it back to the toolbox.",
        "courseC_maze_programming4_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseC_maze_programming4_2018_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseC_maze_programming5_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseC_maze_programming5_2018_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseC_maze_programming6_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nGet the bird to the pig and avoid the TNT.",
        "courseC_maze_programming6_2018_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nGet the bird to the pig and avoid the TNT.",
        "courseC_maze_programming7_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
        "courseC_maze_programming7_2018_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
        "courseC_maze_programming8_markdown_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_2018_markdown_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_predict1_markdown_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming8_predict1_2018_markdown_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "courseC_maze_programming9_markdown_instruction": "*\"Now, help me sneak up on the pig any way you want to!\"*",
        "courseC_maze_programming9_2018_markdown_instruction": "*\"Now, help me sneak up on the pig any way you want to!\"*",
        "courseC_maze_programming_challenge1_markdown_instruction": "The bird needs your help! The pig is hiding, and the goal is to find it. ",
        "courseC_maze_programming_challenge1_2018_markdown_instruction": "The bird needs your help! The pig is hiding, and the goal is to find it. ",
        "courseC_maze_programming_challenge2_markdown_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "courseC_maze_programming_challenge2_2018_markdown_instruction": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
        "courseC_puppy_loops8_markdown_instruction": "**Challenge:** Combine ideas from the last few puzzles to complete this level.",
        "courseC_puppy_loops8courseC_maze_loops8_markdown_instruction": "**Challenge:** Combine ideas from the last few puzzles to complete this level.",
        "courseC_starWars_loops1_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go get the scrap metal, BB-8!\"_ \n\nUse five of the same blocks to get the scrap metal. Scrap metal glows like this: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseC_starWars_loops10_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n _\"Go BB-8!\"_\n\nYou are doing great! Keep it up!",
        "courseC_starWars_loops10_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n _\"Go BB-8!\"_\n\nYou are doing great! Keep it up!",
        "courseC_starWars_loops11_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going, BB-8!\"_\n\nYou are almost there! This time, choose any path you like!",
        "courseC_starWars_loops11_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going, BB-8!\"_\n\nYou are almost there! This time, choose any path you like!",
        "courseC_starWars_loops1_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go get the scrap metal, BB-8!\"_ \n\nUse five of the same blocks to get the scrap metal. Scrap metal glows like this: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseC_starWars_loops2_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go BB-8!\"_\n\nTo get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
        "courseC_starWars_loops2_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go BB-8!\"_\n\nTo get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
        "courseC_starWars_loops4_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\nIn this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
        "courseC_starWars_loops4_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\nIn this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
        "courseC_starWars_loops5_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go BB-8!\"_",
        "courseC_starWars_loops5_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Go BB-8!\"_",
        "courseC_starWars_loops6_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_starWars_loops6_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Can you get it all?\"_\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
        "courseC_starWars_loops7_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_\n\nCan you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
        "courseC_starWars_loops7_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"You can do it!\"_\n\nCan you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
        "courseC_starWars_loops8_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\n**Challenge:** Combine ideas from the last few puzzles to complete this level.",
        "courseC_starWars_loops8_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep it up, BB-8.\"_\n\n**Challenge:** Combine ideas from the last few puzzles to complete this level.",
        "courseC_starWars_loops9_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going!\"_\n\nUse what you have learned to pick up all of the scrap metal!",
        "courseC_starWars_loops9_2018_markdown_instruction": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Keep going!\"_\n\nUse what you have learned to pick up all of the scrap metal!",
        "courseD_Frozen_nested1_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n<hr/>\n\nYou can try making a polygon, like one of these:  \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)  \n\n  \n  \nOr even an abstract shape, like one of these:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\n",
        "courseD_Frozen_nested2_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n- If you jump forward by **less** than the width of your shape, they might overlap\n- If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>  <br/>\n\n\nOr, your shapes might move around like one of these: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)",
        "courseD_Frozen_nested4_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
        "courseD_Frozen_nested5_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_\n",
        "courseD_Frozen_nested7_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n- The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "courseD_Frozen_nested9_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?\n",
        "courseD_artist_1_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a hexagon with 50 pixel long sides.  \n\n---\n\nTo draw a hexagon, you will need to: \n- move forward by **50** pixels\n- turn right by **60** degrees\n- repeat a total of **6** times\n\n",
        "courseD_artist_2_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Good job!”_\n\nAfter your hexagon, turn right by **60** degrees, then draw a line that is **150** pixels long.   \n\nFinish by putting Elsa back to the center of the play area, using the <xml><block type=\"jump_to\"><title name=\"VALUE\">middle center</title></block></xml> block.\n\n\n",
        "courseD_artist_3_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Let’s make a snowflake.”_\n\nTo turn this code into a snowflake, nest all of the code inside of another `repeat` loop and run it a total of **6** times.  You should only need to add one block.\n\n",
        "courseD_artist_4_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Let's make our snowflakes special!\"_\n\n**Inspiration:** Where do you need to add code if you want to draw a tiny square at the tip of each long line?\n\n---\nYou can try whatever you want in this puzzle, but here is an idea:\n\nTry making a tiny square at the end of each line\n- Each side should be 15 pixels long\n- You should turn by 90 degrees\n- Repeat those actions a total of 4 times",
        "courseD_artist_7_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n- The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "courseD_artist_9_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?\n",
        "courseD_artist_binary1_markdown_instruction": "We've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.\n\nUse the blocks below to have the artist draw \"01010101\" in binary in the first row.",
        "courseD_artist_binary1_2018_markdown_instruction": "We've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.\n\nUse the blocks below to have the artist draw \"01010101\" in binary in the first row.",
        "courseD_artist_binary2_markdown_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n___\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n___\n**Run this code to see how the artist uses binary to draw this pattern.**",
        "courseD_artist_binary2_2018_markdown_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n___\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n___\n**Run this code to see how the artist uses binary to draw this pattern.**",
        "courseD_artist_binary_challenge1_markdown_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "courseD_artist_binary_challenge1_2018_markdown_instruction": "You can only use each binary value (0 or 1) once each in this puzzle. Try using nested loops to complete this drawing.",
        "courseD_artist_binary_challenge2_markdown_instruction": "There are 256 bits represented on this grid - that means it's easy for a small change to cause big problems. Are you persistent enough to restore this logo back to normal?\n\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)",
        "courseD_artist_binary_challenge2_2018_markdown_instruction": "There are 256 bits represented on this grid - that means it's easy for a small change to cause big problems. Are you persistent enough to restore this logo back to normal?\n\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)",
        "courseD_artist_binary_challenge3_markdown_instruction": "There are 256 bits represented on this grid - that means it's easy for a small change to cause big problems. Are you persistent enough to restore this logo back to normal?\n\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)",
        "courseD_artist_functions10_markdown_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n- To make each hexagon, repeat the 6 times, turning 60 degrees.\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "courseD_artist_functions2_markdown_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n<hr/>\n\nThe squares are 75 pixels apart.",
        "courseD_artist_functions3_markdown_instruction": "We will come back to functions shortly. Let's take a break to practice making this star. \n\nYou can make this drawing by adding a repeat block.",
        "courseD_artist_functions4_markdown_instruction": "Now that you can draw a star, try drawing four stars!\n\n- Each branch of the star is 25 pixels long\n- Turn 45 degrees between branches\n- Jump 100 pixels between each star",
        "courseD_artist_functions5_markdown_instruction": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.",
        "courseD_artist_functions6_markdown_instruction": "You are doing great! \n\nMake this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseD_artist_functions8_markdown_instruction": "**Challenge:** Create as many functions as you think you need to make this drawing of 50 pixel squares.",
        "courseD_artist_functions9_markdown_instruction": "Create this image using only the blocks provided.\n\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "courseD_artist_nestedLoops1a_markdown_instruction": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next. ",
        "courseD_artist_nestedLoops1a_2018_markdown_instruction": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next. ",
        "courseD_artist_nestedLoops2_markdown_instruction": "This time, complete the puzzle with the fewest number of blocks possible.\n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.\nSee how much easier this is with **nested loops**?",
        "courseD_artist_nestedLoops2_2018_markdown_instruction": "This time, complete the puzzle with the fewest number of blocks possible.\n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.\nSee how much easier this is with **nested loops**?",
        "courseD_artist_nestedLoops4_markdown_instruction": "Great!  Do the same thing with these circles. \n\n- Each circle is made by moving 1 pixel before turning 1 degree, 360 times.\n- Each circle begins just 50 pixels from where the last one ended",
        "courseD_artist_nestedLoops4_2018_markdown_instruction": "Great!  Do the same thing with these circles. \n\n- Each circle is made by moving 1 pixel before turning 1 degree, 360 times.\n- Each circle begins just 50 pixels from where the last one ended",
        "courseD_artist_nestedLoops5_markdown_instruction": "What happens if you also turn 90 degrees between circles?\n\n(To get this image, you still need to jump 50 pixels between circles)",
        "courseD_artist_nestedLoops5_2018_markdown_instruction": "What happens if you also turn 90 degrees between circles?\n\n(To get this image, you still need to jump 50 pixels between circles)",
        "courseD_artist_nestedLoops7_markdown_instruction": "Use what you've learned to make this drawing.\n\n- The squares each have **100 pixel sides** and **90 degree angles**\n- You will need to turn **60 degrees between each square**. Why? Because there are 6 squares, and 360 degrees (a full turn around) divided by 6 is 60 degrees.\n- Make sure you jump **50 pixels to get to the next square**",
        "courseD_artist_nestedLoops7_2018_markdown_instruction": "Use what you've learned to make this drawing.\n\n- The squares each have **100 pixel sides** and **90 degree angles**\n- You will need to turn **60 degrees between each square**. Why? Because there are 6 squares, and 360 degrees (a full turn around) divided by 6 is 60 degrees.\n- Make sure you jump **50 pixels to get to the next square**",
        "courseD_artist_nestedLoops8_markdown_instruction": "Using what you have learned in the last couple of puzzles, build this image from the beginning.\n\n- Each hexagon has **50 pixel sides** and **60 degree turns**",
        "courseD_artist_nestedLoops8_2018_markdown_instruction": "Using what you have learned in the last couple of puzzles, build this image from the beginning.\n\n- Each hexagon has **50 pixel sides** and **60 degree turns**",
        "courseD_artist_nestedLoops9_markdown_instruction": "**Challenge:** Can you figure out how to make a picture like this?\n\n- Both shapes have **50 pixel sides**\n- Between each pair of shapes, you will need to jump forward the length of a side, and turn 45 degrees.",
        "courseD_artist_nestedLoops9_2018_markdown_instruction": "**Challenge:** Can you figure out how to make a picture like this?\n\n- Both shapes have **50 pixel sides**\n- Between each pair of shapes, you will need to jump forward the length of a side, and turn 45 degrees.",
        "courseD_artist_nestedLoops9_predict1_markdown_instruction": "**Challenge:** Can you figure out how to make a picture like this?\n\n- Both shapes have 50 pixel sides",
        "courseD_artist_nestedLoops9_predict1_2018_markdown_instruction": "**Challenge:** Can you figure out how to make a picture like this?\n\n- Both shapes have 50 pixel sides",
        "courseD_artist_nestedLoops_challenge1_markdown_instruction": "Can you figure out how to make a picture like this?\n\n- Both shapes have **50 pixel sides.**\n- The *octagons* are made with **45 degree** turns.\n- The *triangles* are made with **120 degree** turns.",
        "courseD_artist_nestedLoops_challenge1_2018_markdown_instruction": "Can you figure out how to make a picture like this?\n\n- Both shapes have **50 pixel sides.**\n- The *octagons* are made with **45 degree** turns.\n- The *triangles* are made with **120 degree** turns.",
        "courseD_artist_nestedLoops_challenge2_markdown_instruction": "This code is just a little bit off!  Can you fix it to make the correct drawing in the workspace?\n\n- The first inner loop should make an octagon.\n- The second inner loop should make a hexagon.\n- The third inner loop should make a square.",
        "courseD_artist_nestedLoops_challenge2_2018_markdown_instruction": "This code is just a little bit off!  Can you fix it to make the correct drawing in the workspace?\n\n- The first inner loop should make an octagon.\n- The second inner loop should make a hexagon.\n- The third inner loop should make a square.",
        "courseD_artist_project1_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n<hr/>\n\nYou can try making a polygon, like one of these:  \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)  \n\n  \n  \nOr even an abstract shape, like one of these:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\n",
        "courseD_artist_project1_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n<hr/>\n\nYou can try making a polygon, like one of these:  \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)  \n\n  \n  \nOr even an abstract shape, like one of these:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)",
        "courseD_artist_project2_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n- If you jump forward by **less** than the width of your shape, they might overlap\n- If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>  <br/>\n\n\nOr, your shapes might move around like one of these: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)",
        "courseD_artist_project2_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n- If you jump forward by **less** than the width of your shape, they might overlap\n- If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>  <br/>\n\n\nOr, your shapes might move around like one of these: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)",
        "courseD_artist_project2a_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n- The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "courseD_artist_project2a_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n- The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "courseD_artist_project4_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
        "courseD_artist_project4_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
        "courseD_artist_project4a_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?\n",
        "courseD_artist_project4a_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n- What happens if you use two different angles in your stair step pattern?\n- What happens if you make your diamond pattern longer or shorter?\n- What does it look like to draw two snowflakes on top of one another?",
        "courseD_artist_project5_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_\n",
        "courseD_artist_project5_2018_markdown_instruction": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_",
        "courseD_artist_project_embedded_markdown_instruction": "Here's what you will soon be making!",
        "courseD_artist_ramp11_markdown_instruction": "Great!  Now let's make a square using Artist!  The blocks are a little different, but the idea is the same.\n___\nEach side of the square has a length of 200 pixels, and you will need to turn 90 degrees to make each angle.",
        "courseD_bee_conditionals1_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals10_markdown_instruction": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
        "courseD_bee_conditionals10_2018_markdown_instruction": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
        "courseD_bee_conditionals1_predict1_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals1_predict1_2018_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseD_bee_conditionals2_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar *once*.  \n\nRemember: Not all clouds hide the same thing!",
        "courseD_bee_conditionals2_2018_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar *once*.  \n\nRemember: Not all clouds hide the same thing!",
        "courseD_bee_conditionals2_test_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar *once*.  \n\nRemember: Not all clouds hide the same thing!",
        "courseD_bee_conditionals3_markdown_instruction": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar *once*.",
        "courseD_bee_conditionals3_2018_markdown_instruction": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar *once*.",
        "courseD_bee_conditionals4_markdown_instruction": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
        "courseD_bee_conditionals4_2018_markdown_instruction": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
        "courseD_bee_conditionals6_markdown_instruction": "*\"Now I just want to make honey.\"*\n\nSome of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud! If there is a honeycomb, the bee will only need to make honey *once*.",
        "courseD_bee_conditionals6_2018_markdown_instruction": "*\"Now I just want to make honey.\"*\n\nSome of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud! If there is a honeycomb, the bee will only need to make honey *once*.",
        "courseD_bee_conditionals7_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: if there is a flower, the bee only needs to get nectar *once*. If there is a honeycomb, the bee only needs to make honey *once*.",
        "courseD_bee_conditionals7_2018_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: if there is a flower, the bee only needs to get nectar *once*. If there is a honeycomb, the bee only needs to make honey *once*.",
        "courseD_bee_conditionals7_predict2_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: there will only ever **bee** *one* honeycomb or *one* flower behind each cloud.",
        "courseD_bee_conditionals7_predict2_2018_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: there will only ever be *one* honeycomb or *one* flower behind each cloud.",
        "courseD_bee_conditionals8_markdown_instruction": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower.\nOtherwise, make honey once (because there is a honeycomb).",
        "courseD_bee_conditionals8_2018_markdown_instruction": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower.\nOtherwise, make honey once (because there is a honeycomb).",
        "courseD_bee_conditionals9_markdown_instruction": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb. There will only ever be one flower or one honeycomb behind each cloud.",
        "courseD_bee_conditionals9_2018_markdown_instruction": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb. There will only ever be one flower or one honeycomb behind each cloud.",
        "courseD_bee_conditionals_challenge1_markdown_instruction": "Collect all of the nectar and make all of the honey. You can only collect nectar from flowers and make honey from honeycombs. Check every space to see if there is a flower or honeycomb.",
        "courseD_bee_conditionals_challenge1_2018_markdown_instruction": "Collect all of the nectar and make all of the honey. You can only collect nectar from flowers and make honey from honeycombs. Check every space to see if there is a flower or honeycomb.",
        "courseD_bee_conditionals_challenge2_markdown_instruction": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
        "courseD_bee_conditionals_challenge2_2018_markdown_instruction": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
        "courseD_bee_conditionals_challenge3_markdown_instruction": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
        "courseD_bee_debugging1_markdown_instruction": "*\"These blocks are really bugging me!\"*\n\nFix the error(s) to collect all of the nectar.",
        "courseD_bee_debugging2_markdown_instruction": "*\"Ooh, this one stings!\"*\n\nFix the error(s) to collect all of the nectar.",
        "courseD_bee_debugging3_markdown_instruction": "*\"This puzzle is a bit sticky.\"*\n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "courseD_bee_debugging4_markdown_instruction": "*\"This could be sweet!\"*\n\nFix the error(s) to make all of the honey.",
        "courseD_bee_debugging5_markdown_instruction": "**Challenge:** *\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_bee_debugging6_markdown_instruction": "**Challenge:**  Fix the errors to collect all of the nectar and make all of the honey.",
        "courseD_bee_debugging7_markdown_instruction": "*\"Such a sticky situation!\"*\n\nHelp the bee find his mistakes.",
        "courseD_bee_debugging8_markdown_instruction": "*\"So many lovely flowers!\"*\n\nHelp the bee fix the code to get all the nectar.",
        "courseD_bee_debugging9_markdown_instruction": "*\"It's nectar-topia!\"*\n\nHelp the bee fix the code to get all the nectar.",
        "courseD_bee_debugging_challenge1_markdown_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "courseD_bee_debugging_challenge1_2018_markdown_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "courseD_bee_debugging_challenge1a_markdown_instruction": "*\"Buzz buzz! I know how to get nectar, now help me make honey!\"*\n\nWatch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
        "courseD_bee_debugging_challenge2_markdown_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of honey?",
        "courseD_bee_nestedLoops1_markdown_instruction": "\"_This is going to **BEE** great!_\"\n\nHelp the bee collect all of the nectar.",
        "courseD_bee_nestedLoops1_2018_markdown_instruction": "\"_This is going to **BEE** great!_\"\n\nHelp the bee collect all of the nectar.",
        "courseD_bee_nestedLoops2_markdown_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_2018_markdown_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_predict1_markdown_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops2_predict1_2018_markdown_instruction": "This time, help the bee collect all of the nectar using as few blocks as possible.",
        "courseD_bee_nestedLoops3_markdown_instruction": "*\"Can you BEE-lieve all of these flowers?\"*\n\nCollect all of the nectar from each flower. ",
        "courseD_bee_nestedLoops5_markdown_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops6_markdown_instruction": "Make all of the nectar.",
        "courseD_bee_nestedLoops6_2018_markdown_instruction": "*\"Must eat sunflower!\"*\n\nGet the zombie to the sunflower using only the blocks available.",
        "courseD_bee_nestedLoops7_markdown_instruction": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
        "courseD_bee_nestedLoops7_2018_markdown_instruction": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
        "courseD_bee_nestedLoops8_markdown_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops8_2018_markdown_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "courseD_bee_nestedLoops9_markdown_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_2018_markdown_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_predict2_markdown_instruction": "Make all of the honey.",
        "courseD_bee_nestedLoops9_predict2_2018_markdown_instruction": "Make all of the honey.",
        "courseD_bee_nested_loops_challenge1_markdown_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_bee_nested_loops_challenge2_markdown_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_bounce_events1_markdown_instruction": "Get to the flag! Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the flag.",
        "courseD_bounce_events10s_markdown_instruction": "There is now a hoop at the top.  \n\nAttach the `score point` block to the `when ball in goal` event and the `score opponent point` block to the `when ball misses hand` event to make a game. \n\n---\n\nSee how many points you can score before your opponent scores twice.",
        "courseD_bounce_events10s_2018_markdown_instruction": "There is now a hoop at the top.  \n\nAttach the `score point` block to the `when ball in goal` event and the `score opponent point` block to the `when ball misses hand` event to make a game. \n\n---\n\nSee how many points you can score before your opponent scores twice.",
        "courseD_bounce_events11s_markdown_instruction": "Now, you are in control of the ball!  Attach the `throw new ball` block in all of the places where the game needs a new ball.\n\n---\n\nSee how many points you can score before your opponent scores twice!",
        "courseD_bounce_events11s_2018_markdown_instruction": "Now, you are in control of the ball!  Attach the `throw new ball` block in all of the places where the game needs a new ball.\n\n---\n\nSee how many points you can score before your opponent scores twice!",
        "courseD_bounce_events1s_markdown_instruction": "Get the ball to the hoop!   \nAttach a block to the `when left arrow` event and press \"Run\" to move the player to the net.",
        "courseD_bounce_events1s_2018_markdown_instruction": "Get to the hoop!     \n\nAttach a block to the `when left arrow` event and press \"Run\" to move the player to the net.",
        "courseD_bounce_events2s_markdown_instruction": "Now, attach a block to the `when right event` so that the hand can get to both baskets.",
        "courseD_bounce_events2s_2018_markdown_instruction": "Now, attach a block to the `when right event` so that the hand can get to both baskets.",
        "courseD_bounce_events5s_markdown_instruction": "We're going to send a basketball flying down towards the hand.  Attach a block to the `when ball hits hand` event to ensure the ball reaches the basket.",
        "courseD_bounce_events5s_2018_markdown_instruction": "We're going to send a basketball flying down towards the hand.  Attach a block to the `when ball hits hand` event to ensure the ball reaches the basket.",
        "courseD_bounce_events6s_markdown_instruction": "Now the basket is at the top.  \n\nAttach code to make the ball bounce when it hits the wall so you can solve this puzzle.",
        "courseD_bounce_events6s_2018_markdown_instruction": "Now the basket is at the top.  \n\nAttach code to make the ball bounce when it hits the wall so you can solve this puzzle.",
        "courseD_bounce_events7s_markdown_instruction": "Attach sound blocks to make the net swish when you hit the basket and have the whistle blow when the ball misses your hand.  \n\n---\n\nBounce the ball until it hits the finish target.",
        "courseD_bounce_events7s_2018_markdown_instruction": "Attach sound blocks to make the net swish when you hit the basket and have the whistle blow when the ball misses your hand.  \n\n---\n\nBounce the ball until it hits the finish target.",
        "courseD_collector_debugging1_markdown_instruction": "*\"Oh no! I see a problem.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging10_predict1_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging10_predict1_2018_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging1_2018_markdown_instruction": "*\"Oh no! I see a problem.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging1a_markdown_instruction": "*\"Oh no! I see a problem.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging1a_2018_markdown_instruction": "*\"Oh no! I see a problem.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2_markdown_instruction": "*\"You can do this!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2_2018_markdown_instruction": "*\"You can do this!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2a_markdown_instruction": "*\"You can do this!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging2a_2018_markdown_instruction": "*\"You can do this!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3_markdown_instruction": "*\"Be persistent and you will figure this out.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3_2018_markdown_instruction": "*\"Be persistent and you will figure this out.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3a_markdown_instruction": "*\"Be persistent and you will figure this out.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging3a_2018_markdown_instruction": "*\"Be persistent and you will figure this out.\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4_markdown_instruction": "*\"Don't get frustrated. You can do it!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4_2018_markdown_instruction": "*\"Don't get frustrated. You can do it!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4a_markdown_instruction": "*\"Don't get frustrated. You can do it!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging4a_2018_markdown_instruction": "*\"Don't get frustrated. You can do it!\"*\n\nFix the error(s) to collect all of the treasure.",
        "courseD_collector_debugging5_markdown_instruction": "*\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5_2018_markdown_instruction": "*\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5a_markdown_instruction": "*\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging5a_2018_markdown_instruction": "*\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging6_markdown_instruction": "**Challenge:**  All of the blocks that you need are already here...Now use your debugging skills to fix the errors and collect all of the treasure.",
        "courseD_collector_debugging6_2018_markdown_instruction": "**Challenge:**  All of the blocks that you need are already here...Now use your debugging skills to fix the errors and collect all of the treasure.",
        "courseD_collector_debugging6a_markdown_instruction": "Challenge: Use the code in the work area to get at least **6** pieces of treasure!",
        "courseD_collector_debugging6a_2018_markdown_instruction": "Challenge: Use the code in the work area to get at least **6** pieces of treasure!",
        "courseD_collector_debugging7_markdown_instruction": "**Challenge**: All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_collector_debugging8_markdown_instruction": "*\"So much treasure!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging8_2018_markdown_instruction": "*\"So much treasure!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging8a_markdown_instruction": "*\"So much treasure!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging8a_2018_markdown_instruction": "*\"So much treasure!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging9_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging9_2018_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging9a_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_debugging9a_2018_markdown_instruction": "*\"It's treasure island!\"*\n\nHelp Laurel fix the code to get all the treasure.",
        "courseD_collector_nested_loops_challenge2_markdown_instruction": "*\"Let's hunt for treasure - using loops!\"* \n\nHelp the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "courseD_collector_nested_loops_challenge2_2018_markdown_instruction": "*\"Let's hunt for treasure - using loops!\"* \n\nHelp the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "courseD_collector_nested_loops_challenge2a_markdown_instruction": "*\"Let's hunt for treasure - using loops!\"* \n\nHelp Laurel collect at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
        "courseD_collector_ramp10_markdown_instruction": "Walk Laurel around this square collecting the treasure as you find it.",
        "courseD_collector_ramp8_markdown_instruction": "This puzzle is a lot like the last one, but now it stars Laurel the Adventurer!\n___\n\nTake the same path as before, but this time, use a repeat loop to collect treasure when you get to it.\n",
        "courseD_collector_ramp9_markdown_instruction": "Now there's more treasure.  Can you help Laurel collect it all?",
        "courseD_collector_until_challenge1_markdown_instruction": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of honey?",
        "courseD_debugging_1_markdown_instruction": "*\"These blocks are really bugging me!\"*\n\nFix the error(s) to collect all of the nectar.",
        "courseD_debugging_2_markdown_instruction": "*\"Ooh, this one stings!\"*\n\nFix the error(s) to collect all of the nectar.",
        "courseD_debugging_3_markdown_instruction": "*\"These blocks are really bugging me.\"*\n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "courseD_debugging_4_markdown_instruction": "*\"This could be sweet!\"*\n\nFix the error(s) to make all of the honey.",
        "courseD_debugging_5_markdown_instruction": "**Challenge:** *\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "courseD_debugging_6_markdown_instruction": "**Challenge:**  Fix the errors to collect all of the nectar and make all of the honey.",
        "courseD_farmer_condLoops1_markdown_instruction": "*\"Corn you help me harvest today?\"*\n\nHelp the harvester check her row of corn to see if anything is ready to pick.  Use conditionals to look at each sprout.  Every stalk will have either **0 or 1** pieces of corn ready to harvest.",
        "courseD_farmer_condLoops1_2018_markdown_instruction": "*\"Corn you help me harvest today?\"*\n\nHelp the harvester check her row of corn to see if anything is ready to pick.  Use conditionals to look at each sprout.  Every stalk will have either **0 or 1** pieces of corn ready to harvest.",
        "courseD_farmer_condLoops2_markdown_instruction": "*\"Lettuce collect both crops from this row!\"*\n\nThis garden is all mixed up, it has both **corn and lettuce**!  \n\nHelp the harvester pick the items that are ready for harvesting.  Each plant will have either **one** corn or **one** lettuce.",
        "courseD_farmer_condLoops2_2018_markdown_instruction": "*\"Lettuce collect both crops from this row!\"*\n\nThis garden is all mixed up, it has both **corn and lettuce**!  \n\nHelp the harvester pick the items that are ready for harvesting.  Each plant will have either **one** corn or **one** lettuce.",
        "courseD_farmer_condLoops3_markdown_instruction": "*\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"*\n\nEach plant will have either one piece of corn, one head of lettuce, or one pumpkin.",
        "courseD_farmer_condLoops3_2018_markdown_instruction": "*\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"*\n\nEach plant will have either one piece of corn, one head of lettuce, or one pumpkin.",
        "courseD_farmer_condLoops4a_markdown_instruction": "*\"Gosh! Now the crops are growing in clusters!\"*  \n\nHelp the farmer pick all of the lettuce in each cluster before moving on to the next bunch. Keep it up until you get to the pumpkin!",
        "courseD_farmer_condLoops5_markdown_instruction": "*\"What a bountiful crop!\"*\n\nThis field has clusters of corn and lettuce growing together -- with one pumpkin at the end.  Can you harvest everything?",
        "courseD_farmer_condLoops5_2018_markdown_instruction": "*\"What a bountiful crop!\"*\n\nThis field has clusters of corn and lettuce growing together -- with one pumpkin at the end.  Can you harvest everything?",
        "courseD_farmer_condLoops6_markdown_instruction": "*\"Let's take this one step further!\"*\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "courseD_farmer_condLoops6_2018_markdown_instruction": "*\"Let's take this one step further!\"*\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "courseD_farmer_condLoops7_markdown_instruction": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops7_2018_markdown_instruction": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops8_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops8_2018_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_2018_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_predict1_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops9_predict1_2018_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "courseD_farmer_condLoops_challenge1_markdown_instruction": "The pumpkins mark the place where you should `turn right`. Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
        "courseD_farmer_condLoops_challenge1_2018_markdown_instruction": "The pumpkins mark the place where you should `turn right`. Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
        "courseD_farmer_condLoops_challenge2_markdown_instruction": "*\"It's a very varied vegetable maze!\"* \n\nTurn right at pumpkins, turn left at lettuce. Collect everything to complete the level.",
        "courseD_farmer_condLoops_challenge2_2018_markdown_instruction": "*\"It's a very varied vegetable maze!\"* \n\nTurn right at pumpkins, turn left at lettuce. Collect everything to complete the level.",
        "courseD_farmer_condLoops_challenge2_clone_markdown_instruction": "It's a vegetable maze. Turn right at pumpkins, turn left at the lettuce. Collect everything to complete the level.",
        "courseD_farmer_conditionals1_markdown_instruction": "*\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"*  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_conditionals3_markdown_instruction": "*\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"*\n\nUse as few blocks as possible to solve this puzzle.",
        "courseD_farmer_conditionals4_markdown_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_conditionals6_markdown_instruction": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
        "courseD_farmer_conditionals8_markdown_instruction": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_until_challenge2_markdown_instruction": "Use `If/Else` blocks to follow the curvy path. At each corner, use the `remove 1` block in a loop to clear the piles.",
        "courseD_farmer_until_challenge2_2018_markdown_instruction": "Use `If/Else` blocks to follow the curvy path. At each corner, use the `remove 1` block in a loop to clear the piles.",
        "courseD_farmer_while1_markdown_instruction": "*\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"*  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_while1_2018_markdown_instruction": "*\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"*  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
        "courseD_farmer_while3_markdown_instruction": "*\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"*\n\nUse as few blocks as possible to solve this puzzle.",
        "courseD_farmer_while3_2018_markdown_instruction": "*\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"*\n\nUse as few blocks as possible to solve this puzzle.",
        "courseD_farmer_while4_markdown_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_2018_markdown_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_predict1_markdown_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while4_predict1_2018_markdown_instruction": "*\"I don't know how much dirt is in this pile!\"*\n\nHelp the farmer remove this entire pile using a `while` loop.",
        "courseD_farmer_while6_markdown_instruction": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
        "courseD_farmer_while6_2018_markdown_instruction": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
        "courseD_farmer_while8_markdown_instruction": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_while8_2018_markdown_instruction": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
        "courseD_farmer_while_challenge1_markdown_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge1_2018_markdown_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge2_markdown_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_farmer_while_challenge2_2018_markdown_instruction": "Fill all of the holes and remove all of the piles.",
        "courseD_harvester_nested_loops_challenge1-broken_markdown_instruction": "*\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"*",
        "courseD_harvester_nested_loops_challenge1_markdown_instruction": "*\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"*",
        "courseD_harvester_nested_loops_challenge1_2018_markdown_instruction": "*\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"*",
        "courseD_iceage_loops1_markdown_instruction": "Help Scrat across the slippery ice to get to the acorn!",
        "courseD_iceage_loops10_markdown_instruction": "Help Scrat get all the way over to the acorn!",
        "courseD_iceage_loops11_markdown_instruction": "Help Scrat get to the acorn!",
        "courseD_iceage_loops12_markdown_instruction": "Get to the acorn any way you can!",
        "courseD_iceage_loops2_markdown_instruction": "Use a <xml><block type=\"maze_turn\">\n    <title name=\"DIR\">turnLeft</title>\n  </block></xml> block to get to the acorn!",
        "courseD_iceage_loops3_markdown_instruction": "Can you get to the acorn with just one <xml><block type=\"maze_moveForward\"/></xml> block? Try using a loop!",
        "courseD_iceage_loops4_markdown_instruction": "Add one more block to get Scrat all the way to the acorn!",
        "courseD_iceage_loops6_markdown_instruction": "Can you add a loop to get to the acorn?",
        "courseD_iceage_loops7_markdown_instruction": "Scrat really wants that acorn! ",
        "courseD_iceage_loops8_markdown_instruction": "Can you fix this code? ",
        "courseD_iceage_loops9_markdown_instruction": "The acorn is so far away! Can you use loops to help Scrat get there?",
        "courseD_maze_loops_challenge1_markdown_instruction": "Let's hunt for treasure - using loops! Help the collector reach at least two piles of treasure using only the blocks in your toolbox.",
        "courseD_maze_nestedLoops3_markdown_instruction": "*\"Zombie hungry!\"*\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
        "courseD_maze_nestedLoops3_2018_markdown_instruction": "*\"Zombie hungry!\"*\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
        "courseD_maze_nestedLoops4_markdown_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "courseD_maze_nestedLoops4_2018_markdown_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "courseD_maze_nestedLoops6_markdown_instruction": "*\"Must eat sunflower!\"*\n\nGet the zombie to the sunflower using only the blocks available.",
        "courseD_maze_nestedLoops6_2018_markdown_instruction": "*\"Must eat sunflower!\"*\n\nGet the zombie to the sunflower using only the blocks available.",
        "courseD_maze_ramp1_markdown_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_maze_ramp1_2018_markdown_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_maze_ramp2_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_maze_ramp2_2018_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_maze_ramp3_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by removing it from the other blocks and dragging it back to the toolbox.",
        "courseD_maze_ramp3_2018_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by removing it from the other blocks and dragging it back to the toolbox.",
        "courseD_maze_ramp4_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseD_maze_ramp4_2018_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseD_maze_ramp5_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseD_maze_ramp5_2018_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseD_maze_ramp5a_markdown_instruction": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
        "courseD_maze_ramp5a_2018_markdown_instruction": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
        "courseD_maze_ramp5b_markdown_instruction": "**Challenge:** Navigate this maze to help the bird find the pig!",
        "courseD_maze_ramp5b_2018_markdown_instruction": "**Challenge:** Navigate this maze to help the bird find the pig!",
        "courseD_maze_ramp5c_markdown_instruction": "Help the bird get to the pig.",
        "courseD_maze_ramp5c_2018_markdown_instruction": "Help the bird get to the pig.",
        "courseD_maze_ramp5d_markdown_instruction": "Get the bird to the pig.",
        "courseD_maze_ramp5d_2018_markdown_instruction": "Get the bird to the pig.",
        "courseD_maze_ramp6_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several of the same block in a row, try using a `repeat` loop, instead.  This will do the same thing with less code!",
        "courseD_maze_ramp6a_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several of the same blocks in a row, try using a `repeat` loop, instead.  This will do the same thing with less code!",
        "courseD_maze_ramp7_markdown_instruction": "*\"It's time to get angry!\"*  \n\n\nUse what you've learned to get the bird to the pig!",
        "courseD_maze_until10_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_2018_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_predict2_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until10_predict2_2018_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until2_markdown_instruction": "Now, use the `repeat until` loop to do the same thing without specifying how many times to move forward and turn.",
        "courseD_maze_until4_markdown_instruction": "*\"Dear person. Me zombie. Me hungry. Must... get... to sunflower...\"*\n\nCan you get the zombie to the sunflower using only the blocks that are available?",
        "courseD_maze_until4_2018_markdown_instruction": "*\"Dear person. Me zombie. Me hungry. Must... get... to sunflower...\"*\n\nCan you get the zombie to the sunflower using only the blocks that are available?",
        "courseD_maze_until5_markdown_instruction": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
        "courseD_maze_until5_2018_markdown_instruction": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
        "courseD_maze_until6_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until6_2018_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until7_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until7_2018_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until8_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until8_2018_markdown_instruction": "Help the zombie get to the sunflower.",
        "courseD_maze_until9_markdown_instruction": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
        "courseD_maze_until9_2018_markdown_instruction": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
        "courseD_maze_until_challenge_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.\nMarkdown instructions",
        "courseD_maze_until_challenge1-delete-this-copy_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.\nMarkdown instructions",
        "courseD_maze_until_challenge1_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge1_2018_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.",
        "courseD_maze_until_challenge2_markdown_instruction": "No hints, just challenge. Get the zombie to the sunflower.\nMarkdown instructions",
        "courseD_playLab_cond1_markdown_instruction": "To start our game, Pirate Pegleg (actor 1) needs to be able to get around in all directions.   Connect the blocks to the correct events to get Pegleg moving.  \n\n---\nHelp Pegleg gather the flags to solve this puzzle.",
        "courseD_playLab_cond1_2018_markdown_instruction": "To start our game, Pirate Pegleg (actor 1) needs to be able to get around in all directions.   Connect the blocks to the correct events to get Pegleg moving.  \n\n---\nHelp Pegleg gather the flags to solve this puzzle.",
        "courseD_playLab_cond2_markdown_instruction": "Time to add points!  \n\nEdit the code to give Pegleg (actor 1) a point when he makes it to the dragon (actor 2). ",
        "courseD_playLab_cond2_2018_markdown_instruction": "Time to add points!  \n\nEdit the code to give Pegleg (actor 1) a point when he makes it to the dragon (actor 2). ",
        "courseD_playLab_cond3_markdown_instruction": "Use a `repeat forever` loop to make the dragon (actor 2) change between random emotions every second.  ",
        "courseD_playLab_cond3_2018_markdown_instruction": "Use a `repeat forever` loop to make the dragon (actor 2) change between random emotions every second.  ",
        "courseD_playLab_cond3a_markdown_instruction": "It's time to use what we've learned about conditionals to make this game amazing. \n\nAdd code so that when Pegleg gets to the dragon, he gets two points *if* the dragon is happy. Otherwise, he should get only one point added to his score.",
        "courseD_playLab_cond3a_2018_markdown_instruction": "It's time to use what we've learned about conditionals to make this game amazing. \n\nAdd code so that when Pegleg gets to the dragon, he gets two points *if* the dragon is happy. Otherwise, he should get only one point added to his score.",
        "courseD_playLab_cond3b_markdown_instruction": "Use a `repeat forever` loop to make the dragon (actor 2) move up and down forever! Add a `wait for 1 second` block in between the `move up` and `move down` blocks for the dragon.",
        "courseD_playLab_cond4_markdown_instruction": "This is about to get interesting!\n\nAdd some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
        "courseD_playLab_cond4_2018_markdown_instruction": "This is about to get interesting!\n\nAdd some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
        "courseD_playLab_cond5_markdown_instruction": "Now we need a way to win.\n\nAdd a `repeat forever` loop that continuously checks **if** the score is greater than 5, then ends the game as a **win** when it is.",
        "courseD_playLab_cond5_2018_markdown_instruction": "Now we need a way to win.\n\nAdd a `repeat forever` loop that continuously checks **if** the score is greater than 5, then ends the game as a **win** when it is.",
        "courseD_playLab_cond6a_markdown_instruction": "We don't want the pirate to stay in the \"safe zone\" too long!  \n\nAdd code to the `if` statement below so that if the pirate (actor 1) is in the safe zone, the program will wait one second, then deduct a point as long as he stays beneath the octopus line.",
        "courseD_playLab_cond6a_2018_markdown_instruction": "We don't want the pirate to stay in the \"safe zone\" too long!  \n\nAdd code to the `if` statement below so that if the pirate (actor 1) is in the safe zone, the program will wait one second, then deduct a point as long as he stays beneath the octopus line.",
        "courseD_playLab_cond6cloneForTest_markdown_instruction": "Can we make this work?",
        "courseD_playLab_condFP_2018_markdown_instruction": "Now, build your own game to show off to your friends!\n\n---\n\nYou could:\n  - Have the pirate and ninja work together to get points from the octopus\n  - Have both octopuses follow the pirate, doing double damage to the ninja when they collide\n  - Have each character disappear when touched by the ninja\n  - Invent your own game!",
        "courseD_scrat_ramp1_markdown_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_scrat_ramp1_2018_markdown_instruction": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
        "courseD_scrat_ramp2_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_scrat_ramp2_2018_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseD_scrat_ramp3_markdown_instruction": "There is one extra block that is going to cause Scrat to crash.  \nThrow it away by disconnecting it from the other blocks and dragging it back to the toolbox.",
        "courseD_scrat_ramp3_2018_markdown_instruction": "There is one extra block that is going to cause Scrat to crash.  \nThrow it away by disconnecting it from the other blocks and dragging it back to the toolbox.",
        "courseD_scrat_ramp4_markdown_instruction": "Avoid the cracked ice to keep Scrat safe!",
        "courseD_scrat_ramp4_2018_markdown_instruction": "Avoid the cracked ice to keep Scrat safe!",
        "courseD_scrat_ramp5_markdown_instruction": "Avoid the cracked ice!",
        "courseD_scrat_ramp5_2018_markdown_instruction": "Avoid the cracked ice!",
        "courseD_scrat_ramp6_markdown_instruction": "Help Scrat get to the acorn using a loop!",
        "courseD_scrat_ramp6_2018_markdown_instruction": "Help Scrat get to the acorn using a loop!",
        "courseD_scrat_ramp7_markdown_instruction": "Help Scrat get to the acorn!",
        "courseD_scrat_ramp7_2018_markdown_instruction": "Help Scrat get to the acorn!",
        "courseD_scrat_ramp8_markdown_instruction": "**Challenge:** Use what you've learned to get Scrat to the acorn!",
        "courseD_scrat_ramp8_2018_markdown_instruction": "**Challenge:** Use what you've learned to get Scrat to the acorn!",
        "courseE_artist_concept1_markdown_instruction": "Recreate this image. \n\n- The hexagons have sides of 50 pixels\n- The hexagons are 100 pixels apart\n- The pen widths of the hexagons are 1 pixel, 4 pixels, and 8 pixels.",
        "courseE_artist_concept1_2018_markdown_instruction": "Recreate this image. \n\n- The hexagons have sides of 50 pixels\n- The hexagons are 100 pixels apart\n- The pen widths of the hexagons are 1 pixel, 4 pixels, and 8 pixels.",
        "courseE_artist_concept4_markdown_instruction": "Recreate this drawing. \n\nEach square has a side length of **20 pixels** and there are **15 squares per row**.",
        "courseE_artist_concept4_2018_markdown_instruction": "Recreate this drawing. \n\nEach square has a side length of **20 pixels** and there are **15 squares per row**.",
        "courseE_artist_concept_challenge1_markdown_instruction": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!\n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You don't have to draw it perfectly the first time.",
        "courseE_artist_concept_challenge1_2018_markdown_instruction": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!\n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You don't have to draw it perfectly the first time.",
        "courseE_artist_concept_challenge2_markdown_instruction": "Create five pinwheel designs using the code below.",
        "courseE_artist_concept_challenge2_2018_markdown_instruction": "Create five pinwheel designs using the code below.",
        "courseE_artist_functions1_markdown_instruction": "*\"Me zombie artist. Me love drawing!\"*\n\nHelp the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.\n\n",
        "courseE_artist_functions10_markdown_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n- To make each hexagon, repeat the side 6 times, turning 60 degrees.\n- Jump 25 pixels between each hexagon.\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "courseE_artist_functions10_2018_markdown_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n- To make each hexagon, repeat the side 6 times, turning 60 degrees.\n- Jump 25 pixels between each hexagon.\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "courseE_artist_functions1_2018_markdown_instruction": "*\"Me zombie artist. Me love drawing!\"*\n\nHelp the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.\n\n",
        "courseE_artist_functions2_markdown_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n___\n\nThe squares are 75 pixels apart.",
        "courseE_artist_functions2_2018_markdown_instruction": "Here is a function called `draw a square`. Use it to complete this drawing. \n___\n\nThe squares are 75 pixels apart.",
        "courseE_artist_functions3_markdown_instruction": "We will come back to functions shortly. Let's take a break to practice making this star. \n\nYou can make this drawing by adding a repeat block.",
        "courseE_artist_functions3_2018_markdown_instruction": "Build a function that will create this star.\n\n---\n\n- Each arm of the star is 25 pixels long\n- You need to turn 45 degrees to get 8 arms\n- It is okay to go forward and backward over the same arm",
        "courseE_artist_functions4_markdown_instruction": "Now that you can draw a star, try drawing four stars!\n\n- Each branch of the star is 25 pixels long\n- Turn 45 degrees between branches\n- Jump 100 pixels between each star",
        "courseE_artist_functions4_2018_markdown_instruction": "Now that you can draw a star, try drawing four stars!\n\n- Each branch of the star is 25 pixels long\n- Turn 45 degrees between branches\n- Jump 100 pixels between each star",
        "courseE_artist_functions5_markdown_instruction": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.",
        "courseE_artist_functions5_2018_markdown_instruction": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.\n\n---\n\n- The jump between the first and second star is **200** pixels\n- The jump between the second and third is **100** pixels",
        "courseE_artist_functions6_markdown_instruction": "You are doing great! \n\nMake this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseE_artist_functions6_2018_markdown_instruction": "You are doing great! \n\nMake this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "courseE_artist_functions7_markdown_instruction": "Let's take the code for the window and add it to function `draw a window`. Now, we can call the function any time we need to draw a window without having to write the code again. \n\n![](https://images.code.org/615a5e93abdaffeed438a976a56fc1f5-image-1497998528859.gif)\n\nTry solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n- The top windows are 50 pixels away from each other.  \n- The bottom windows are 100 pixels below the top set.",
        "courseE_artist_functions7_2018_markdown_instruction": "Drawing all of these windows individually would be a pain!  \n\nTry solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n---  \n- Each window is made up of four **25** pixel squares.\n- The top windows are a **100** pixel jump away from each other.  \n- The bottom windows are a **150** pixel jump below the top set.",
        "courseE_artist_functions8_markdown_instruction": "**Challenge:** Did you know that you can call functions from *inside* other functions?!\n\nCreate as many functions as you think you need to make this drawing of 50 pixel squares.",
        "courseE_artist_functions8a_2018_markdown_instruction": "*\"Functions easy!\"*\n\nWe are going to build up to something fancy!  Start by creating a function for this square.",
        "courseE_artist_functions8b_2018_markdown_instruction": "*\"Zombie get dizzy.\"*\n\nCall the `draw a square` function from inside your `draw a line of squares` function to make this even easier!\n\n---\n\n- The squares are *50* pixels apart.",
        "courseE_artist_functions8c_2018_markdown_instruction": "Add one more function that creates this stack of staggered squares using the `draw a line of squares` function.",
        "courseE_artist_functions9_markdown_instruction": "Create this image using the limited blocks provided. \n\n- Each triangle has sides of **50 pixels**  \n- To draw a diamond, you will need to alternate between turning **60 degrees and 120 degrees**.",
        "courseE_artist_functions9_2018_markdown_instruction": "**Challenge:** Create this image using the limited blocks provided. \n\n- Each triangle has sides of **50 pixels**  \n- To draw a diamond, you will need to alternate between turning **60 degrees and 120 degrees**.",
        "courseE_artist_functionsProj_2018_markdown_instruction": "**Inspiration:** Use what you've learned to make whatever you want!  \n\nCan you make something like this pinwheel?",
        "courseE_artist_functions_challenge_markdown_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge1_markdown_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge1_2018_markdown_instruction": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
        "courseE_artist_functions_challenge2_markdown_instruction": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
        "courseE_artist_functions_challenge2_2018_markdown_instruction": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
        "courseE_artist_functions_predict1_markdown_instruction": "Here is a puzzle that uses a function that we have defined. \n",
        "courseE_artist_functions_predict1_2018_markdown_instruction": "Here is a puzzle that uses a function that we have defined. ",
        "courseE_artist_ramp10_markdown_instruction": "Did you know you can put loops inside of other loops to make them more powerful?  That's called making a \"nested loop\".\n\n___\n\nDrag the code for the last triangle into a new loop to spin it around and make a snowflake!\n\n*(You will need to spin it 6 times, turning 60 degrees each time, to get this pattern.)*",
        "courseE_bee_concept1_markdown_instruction": "*\"Can you BEE-lieve all of these flowers?\"*\n\nCollect all of the nectar from each flower. ",
        "courseE_bee_concept1_2018_markdown_instruction": "*\"Can you BEE-lieve all of these flowers?\"*\n\nCollect all of the nectar from each flower. ",
        "courseE_bee_concept2_markdown_instruction": "Help the bee make all of the honey.  \n\nYou can only make honey at a honeycomb, but you can check any space to see if there is a honeycomb.",
        "courseE_bee_concept2_2018_markdown_instruction": "Help the bee make all of the honey.  \n\nYou can only make honey at a honeycomb, but you can check any space to see if there is a honeycomb.",
        "courseE_bee_concept5_markdown_instruction": "Can you help the bee collect the nectar from the flowers? \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "courseE_bee_concept5_2018_markdown_instruction": "Can you help the bee collect the nectar from the flowers? \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "courseE_bee_functions10_markdown_instruction": "*\"Show me the HONEY!\"*\n\nSolve this puzzle by creating a function that causes the bee to: \n- turn toward the branch in the path\n- move forward\n- make all of the honey\n- return to the main path \n- turn back to the original direction",
        "courseE_bee_functions10_2018_markdown_instruction": "*\"Show me the HONEY!\"*\n\nSolve this puzzle by creating a function that causes the bee to: \n- turn toward the branch in the path\n- move forward\n- make all of the honey\n- return to the main path \n- turn back to the original direction",
        "courseE_bee_functions2_markdown_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 2 nectar` function to collect the nectar from each flower.",
        "courseE_bee_functions2_2018_markdown_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 2 nectar` function to collect the nectar from each flower.",
        "courseE_bee_functions3_markdown_instruction": "Build the `get 5` function to use in this puzzle.",
        "courseE_bee_functions3_2018_markdown_instruction": "Build the `get 5` function to use in this puzzle.",
        "courseE_bee_functions4_markdown_instruction": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the `move and get nectar` function to collect all of the nectar.",
        "courseE_bee_functions4_2018_markdown_instruction": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the `move and get nectar` function to collect all of the nectar.",
        "courseE_bee_functions8_markdown_instruction": "**Challenge:** These flowers can have a different amount of nectar each time you run the puzzle.   \n\nCreate a function that collects all of the nectar from each flower.",
        "courseE_bee_functions8_2018_markdown_instruction": "**Challenge:** These flowers can have a different amount of nectar each time you run the puzzle.   \n\nCreate a function that collects all of the nectar from each flower.",
        "courseE_bee_functions9b_markdown_instruction": "*\"I can't BEE-lieve how full this field is!\"*\n\nLook very carefully at this puzzle to see if you can use what you learned to solve it.",
        "courseE_bee_functions_challenge1_markdown_instruction": "You are on your own for this challenge.  This could \"bee\" harder than it looks!",
        "courseE_bee_functions_challenge1_2018_markdown_instruction": "You are on your own for this challenge.  This could \"bee\" harder than it looks!",
        "courseE_bee_ramp14_markdown_instruction": "The same technique works with nectar and honey!  \n\nLook at all of these clouds. Some of them will turn into honey, and others into nectar.   \nHelp the bee follow the path and solve this puzzle.\n\n\n\n",
        "courseE_bee_ramp14_2018_markdown_instruction": "The same technique works with nectar and honey!  \n\nLook at all of these clouds. Some of them will turn into honey, and others into nectar.   \nHelp the bee follow the path and solve this puzzle.\n\n\n\n",
        "courseE_bee_ramp17_markdown_instruction": "For the final puzzle in this stage, use what you have learned to collect all of the nectar and make all of the honey.  ",
        "courseE_collector_ramp10_markdown_instruction": "Take the same path as before, but this time collect all of the treasure as you find it.\n",
        "courseE_collector_ramp8_markdown_instruction": "This puzzle is a lot like the last one, but now it stars Laurel the Adventurer!\n<hr/>\n\nTake the same path as before, but this time, use a repeat loop to collect treasure when you get to it.\n",
        "courseE_collector_ramp9_markdown_instruction": "Take the same path as before, but this time collect all of the treasure as you find it.\n",
        "courseE_farmer_concept4_markdown_instruction": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
        "courseE_farmer_functions1_markdown_instruction": "*\"Have we met before? I'm the harvester!\"*\n\nHelp the harvester get to the pumpkin and pick it.",
        "courseE_farmer_functions10a1_2018_markdown_instruction": "**Challenge:** Use everything that you've learned so far to solve this puzzle in 19 blocks or less!",
        "courseE_farmer_functions10b_markdown_instruction": "Use your new function twice to solve this puzzle.",
        "courseE_farmer_functions10b_2018_markdown_instruction": "Use your new function twice to solve this puzzle.",
        "courseE_farmer_functions11_predict_markdown_instruction": "Figure out which function to use and which one to delete, then solve this puzzle!",
        "courseE_farmer_functions11_predict_2018_markdown_instruction": "Figure out which function to use and which one to delete, then solve this puzzle!",
        "courseE_farmer_functions1_2018_markdown_instruction": "*\"Have we met before? I'm the harvester!\"*\n\nHelp the harvester get to the pumpkin and pick it.",
        "courseE_farmer_functions2a_markdown_instruction": "*\"I feel so functional!\"*\n\nWe're going to check lots of squares for crops in the next few puzzles.  Let's move everything into a function to make it easier.",
        "courseE_farmer_functions2aALT_markdown_instruction": "*\"I feel so functional!\"*\n\nWe're going to check lots of squares for crops in the next few puzzles.  Let's move everything into a function to make it easier.",
        "courseE_farmer_functions3b_markdown_instruction": "*\"Oooh, veggies are cropping up everywhere!\"*\n\nNow help the farmer pick the corn, lettuce, **and** pumpkin.",
        "courseE_farmer_functions3c_markdown_instruction": "Now, fill-in the function yourself by pulling the blocks from the code and dropping them into the **function definition**.  \n\nDon't forget to add the little **function call** blocks to use the function in your program when you're done.",
        "courseE_farmer_functions3c1_2018_markdown_instruction": "Did you notice that there was a lot of repeated code in that last puzzle?  We can save space by calling that code `pick along path` and using a new function to call the other functions!\n\nUse `pick along path` to solve this puzzle again using fewer blocks.",
        "courseE_farmer_functions3c_2018_markdown_instruction": "Great!  Try your functions out on a longer path.",
        "courseE_farmer_functions4b_markdown_instruction": "Use your new function to solve this puzzle.",
        "courseE_farmer_functions4b_2018_markdown_instruction": "Use your new function to solve this puzzle.",
        "courseE_farmer_functions5b_markdown_instruction": "*\"They're multiplying!\"*\n\nThe crops are now growing in clusters.  Add some new `while` loops to your function to make sure you get all of the produce.",
        "courseE_farmer_functions5c_markdown_instruction": "Your function will come in handy here.",
        "courseE_farmer_functions5c_2018_markdown_instruction": "Your function will come in handy here.",
        "courseE_farmer_functions6b_markdown_instruction": "Pick all of the produce.",
        "courseE_farmer_functions7a1_2018_markdown_instruction": "*\"Functions __lettuce__ do more with less work!\"*\n\nCreate a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
        "courseE_farmer_functions7b_markdown_instruction": "*\"This harvest is a-MAZE-ing!\"*\n\nHelp the harvester find her way down this confusing path and to the pumpkin by turning **left** at the corn and **right** at the lettuce.  \n\n*(Don't forget to collect all of the produce along the way!)*",
        "courseE_farmer_functions7b_2018_markdown_instruction": "*\"This harvest is a-MAZE-ing!\"*\n\nHelp the harvester find her way down this confusing path and to the pumpkin by turning **left** at the corn and **right** at the lettuce.  \n\n*(Don't forget to collect all of the produce along the way!)*",
        "courseE_farmer_functions8a1_2018_markdown_instruction": "Try writing your function again. Is it still helpful?  How can you make it work for this puzzle?",
        "courseE_farmer_functions8b_markdown_instruction": "**Challenge:** Not all corners are marked in this maze, that means that you will need to use your navigation code more than once to get where you need to go.  \n\nCan you figure out what you need to do?",
        "courseE_farmer_functions8b_2018_markdown_instruction": "**Challenge:** Not all corners are marked in this maze, that means that you will need to use your navigation code more than once to get where you need to go.  \n\nCan you figure out what you need to do?",
        "courseE_farmer_functions9b_markdown_instruction": "Take a good look at this puzzle.  Can you figure out the pattern?",
        "courseE_farmer_functions9b_2018_markdown_instruction": "Take a good look at this puzzle.  Can you figure out the pattern?",
        "courseE_farmer_functions9b_clone_markdown_instruction": "Take a good look at this puzzle.  Can you figure out the pattern?",
        "courseE_farmer_predict1_markdown_instruction": "Help the farmer walk the path to find all of the lettuce\n\nIn this puzzle, lettuce is growing at the end of every path.  If there is a path in front of her, the farmer can keep moving forward.  Otherwise, she needs to pick all of the lettuce, then turn to stay on the path. \n\n\n\n",
        "courseE_farmer_predict1_2018_markdown_instruction": "Help the farmer walk the path to find all of the lettuce\n\nIn this puzzle, lettuce is growing at the end of every path.  If there is a path in front of her, the farmer can keep moving forward.  Otherwise, she needs to pick all of the lettuce, then turn to stay on the path. \n\n\n\n",
        "courseE_farmer_ramp11a_markdown_instruction": "Oh my!  This pile is so big that it's hard to guess how much dirt is in it.  \n\n___\n\nWe've added a new block to the toolbox called the `while there is a pile` block.  Use this to remove dirt only while there is still some to scoop! ",
        "courseE_farmer_ramp11a_2018_markdown_instruction": "Oh my!  This pile is so big that it's hard to guess how much dirt is in it.  \n\n___\n\nWe've added a new block to the toolbox called the `while there is a pile` block.  Use this to remove dirt only while there is still some to scoop! ",
        "courseE_farmer_ramp11b_markdown_instruction": "Let's try that again, but with more piles!",
        "courseE_farmer_ramp11b_2018_markdown_instruction": "Let's try that again, but with more piles!",
        "courseE_farmer_ramp12_markdown_instruction": "Pick all of the lettuce.",
        "courseE_farmer_ramp12_2018_markdown_instruction": "Pick all of the lettuce.",
        "courseE_farmer_ramp12_forswap_markdown_instruction": "Pick all of the lettuce.",
        "courseE_farmer_ramp12_forswap_2018_markdown_instruction": "Pick all of the lettuce.",
        "courseE_farmer_ramp12a_markdown_instruction": "Help the farmer walk the path to find all of the lettuce\n\nIn this puzzle, lettuce is growing at the end of every path.  If there is a path in front of her, the farmer can keep moving forward.  Otherwise, she needs to pick all of the lettuce, then turn to stay on the path. ",
        "courseE_farmer_ramp12a_2018_markdown_instruction": "Help the farmer walk the path to find all of the lettuce\n\nIn this puzzle, lettuce is growing at the end of every path.  If there is a path in front of her, the farmer can keep moving forward.  Otherwise, she needs to pick all of the lettuce, then turn to stay on the path. ",
        "courseE_farmer_ramp12b_markdown_instruction": "Now the harvester needs to pick all of the lettuce.  Use `while there is lettuce` inside of a `repeat` loop to get it all!",
        "courseE_farmer_ramp12b_2018_markdown_instruction": "Now the harvester needs to pick all of the lettuce.  Use `while there is lettuce` inside of a `repeat` loop to get it all!",
        "courseE_farmer_ramp12c_markdown_instruction": "The lettuce is now only at the end of the path.  \nTravel down the path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12c_2018_markdown_instruction": "The lettuce is now only at the end of the path.  \nTravel down the path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12d_markdown_instruction": "The lettuce is scattered all over the garden.  \nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12d_2018_markdown_instruction": "The lettuce is scattered all over the garden.  \nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12e_markdown_instruction": "The lettuce is scattered all over the garden.  \nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12e_2018_markdown_instruction": "The lettuce is scattered all over the garden.  \nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
        "courseE_farmer_ramp12f_markdown_instruction": "**Challenge**: The only way to get all of the crops is to move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12f_2018_markdown_instruction": "**Challenge**: The only way to get all of the crops is to move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12g_markdown_instruction": "Move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp12g_2018_markdown_instruction": "Move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
        "courseE_farmer_ramp13_markdown_instruction": "Goodness!  Look at all of these sprouts. Some of them will turn into corn, and others into lettuce.  \n\nTravel to the ends of the path to pick lettuce while there is lettuce, and pick corn while there is corn. \n\n",
        "courseE_farmer_ramp13_2018_markdown_instruction": "Goodness!  Look at all of these sprouts. Some of them will turn into corn, and others into lettuce.  \n\nTravel to the ends of the path to pick lettuce while there is lettuce, and pick corn while there is corn. \n\n",
        "courseE_farmer_ramp15_markdown_instruction": "Solve this puzzle using only the blocks available.\n\nThis level will help give you practice with the `repeat until` block.  Collect all of the corn and lettuce until you get to the pumpkin. (Don't forget to collect the pumpkin, too!)",
        "courseE_farmer_ramp15_2018_markdown_instruction": "Solve this puzzle using only the blocks available.\n\nThis level will help give you practice with the `repeat until` block.  Collect all of the corn and lettuce until you get to the pumpkin. (Don't forget to collect the pumpkin, too!)",
        "courseE_farmer_ramp16_markdown_instruction": "**Challenge:** Solve this puzzle with the fewest number of blocks.",
        "courseE_maze_ramp1_markdown_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseE_maze_ramp13_markdown_instruction": "Time for one last puzzle to pull it all together!\n\nUse nested loops to get the bird to the pig.",
        "courseE_maze_ramp1_2018_markdown_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "courseE_maze_ramp2_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseE_maze_ramp2_2018_markdown_instruction": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
        "courseE_maze_ramp3_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "courseE_maze_ramp3_2018_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "courseE_maze_ramp4_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseE_maze_ramp4_2018_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseE_maze_ramp5_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseE_maze_ramp5_2018_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseE_maze_ramp6_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several blocks in a row, try moving them inside of a `repeat` loop.  This will do the same thing with less code!",
        "courseE_maze_ramp6_2018_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several blocks in a row, try moving them inside of a `repeat` loop.  This will do the same thing with less code!",
        "courseE_maze_ramp7_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** Use what you've learned to get the bird to the pig!",
        "courseE_maze_ramp7_2018_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** Use what you've learned to get the bird to the pig!",
        "courseE_multi_maze_ramp5_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseE_playLab_challenge1_markdown_instruction": "_The **squirrels** are terrified to see that a **dinosaur** has come to town! Can the brave **knight** keep them all from panicking?_\n\nRules:\n1. *Touching the squirrels scores you points.*\n2. *Touching the dinosaur takes many points away.*\n\nHere is a different kind of game that has already been started for you! Play it to see how it works. \n\n\nSomething should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "courseE_playLab_challenge1_2018_markdown_instruction": "_The **squirrels** are terrified to see that a **dinosaur** has come to town! Can the brave **knight** keep them all from panicking?_\n\nRules:\n1. *Touching the squirrels scores you points.*\n2. *Touching the dinosaur takes many points away.*\n\nHere is a different kind of game that has already been started for you! Play it to see how it works. \n\n\nSomething should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
        "courseE_playLab_scaffold1_markdown_instruction": "It is amazing how much you have learned! Let's make a game step by step.\n\nUsing new blocks in your toolbox, choose a new background, then pick an actor to be in your game.",
        "courseE_playLab_scaffold1_2018_markdown_instruction": "It is amazing how much you have learned! Let's make a game step by step.\n\nUsing new blocks in your toolbox, choose a new background, then pick an actor to be in your game.",
        "courseE_playLab_scaffold2_markdown_instruction": "Use  blocks like event handlers and actions to make your player move according to the arrows on your keyboard.  \n\nGet the player to the targets to complete this puzzle.",
        "courseE_playLab_scaffold2_2018_markdown_instruction": "Use  blocks like event handlers and actions to make your player move according to the arrows on your keyboard.  \n\nGet the player to the targets to complete this puzzle.",
        "courseE_playLab_scaffold3_markdown_instruction": "Let's add some more characters to your game!\n\nUse the `set actor` block to add more characters then move to the goal to complete this puzzle.",
        "courseE_playLab_scaffold3_2018_markdown_instruction": "Let's add some more characters to your game!\n\nUse the `set actor` block to add more characters then move to the goal to complete this puzzle.",
        "courseE_playLab_scaffold4_markdown_instruction": "Multiple characters and getting the actors moving is a great start to a game, but we need to do more to make this feel like a real game. Let's add a score!\n\nUse event blocks like the `when actor touches` to change the score. Score 10 points to complete this puzzle.",
        "courseE_playLab_scaffold4_2018_markdown_instruction": "Multiple characters and getting the actors moving is a great start to a game, but we need to do more to make this feel like a real game. Let's add a score!\n\nUse event blocks like the `when actor touches` to change the score. Score 10 points to complete this puzzle.",
        "courseE_playLab_scaffold5_markdown_instruction": "Great job! You have all the basic components of a working game. Now spend some time making sure the game works the way you want. Include a way to win or lose your game, then play until you meet one of those conditions.",
        "courseE_playLab_scaffold5_2018_markdown_instruction": "Great job! You have all the basic components of a working game. Now spend some time making sure the game works the way you want. Include a way to win or lose your game, then play until you meet one of those conditions.",
        "courseE_playLab_scaffold6_markdown_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "courseE_playLab_scaffold6_2018_markdown_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "courseE_playlab_challenge2_markdown_instruction": "Can you figure out how this \"Fortune Teller\" app works? Try adding some of the following features to this game:\n\n* Change the \"yes\" and \"no\" answers to something more interesting.\n* Let the player ask another question after the actor says the fortune.\n* Give the witch two more things to say when she is in an `angry` or `normal` mood.\n* Give the wizard his own set of fortunes.\n* Make each actor change mood randomly.\n\nCheck the hints if you need help with these challenges!",
        "courseE_playlab_variables_challenge2_markdown_instruction": "Can you figure out how this \"Fortune Teller\" app works? Try adding some of the following features to this game:\n\n* Change the \"yes\" and \"no\" answers to something more interesting.\n* Let the player ask another question after the actor says the fortune.\n* Give the witch two more things to say when she is in an `angry` or `normal` mood.\n* Give the wizard his own set of fortunes.\n* Make each actor change mood randomly.\n\nCheck the hints if you need help with these challenges!",
        "courseF_IceAge_1_markdown_instruction": "Sid (actor 1) wants to gather everyone for a new adventure. Can you help him say \"Hello!\" by dragging the `actor 1 say` block out and connecting it to the bottom of the `when run` event?   \n\nDon't forget to type \"Hello!\" inside!",
        "courseF_IceAge_10_markdown_instruction": "Sid wants to let his grandmother, Granny, know that he loves her.   \n\nUse the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2)! \nSet Granny's mood to happy when she gets hit with the hearts.",
        "courseF_IceAge_11_markdown_instruction": "Time to create your own game or story!  \n\nWhen you're done, click \"Finish\" to let friends try your game on their phones, tablets, or computers!\nDon't know what to make? Click the hints for details.",
        "courseF_IceAge_2_markdown_instruction": "Manny (actor 2) found Sid (actor 1) and wants to invite him on an adventure. Help them greet each other by using the the `actor ___ say` block twice.",
        "courseF_IceAge_3_markdown_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "courseF_IceAge_4_markdown_instruction": "Diego (actor 1) is searching for Manny (actor 2). Can you help bring the two together? Connect a block to the `when actor touches` event to play a sound when they find each other.",
        "courseF_IceAge_5_markdown_instruction": "The `repeat forever` block allows you to run code continuously. Can you put blocks inside of it to help Granny get some exercise by moving left and right repeatedly?",
        "courseF_IceAge_6_markdown_instruction": "Can you help Sid call for his friends when you click on him?  \n\nOnce you're done, press \"Run\" to play.  Click on Sid to see your code work!",
        "courseF_IceAge_7_markdown_instruction": "Scrat is still looking for acorns! \nHelp him scamper around by attaching a `move actor 1` block to each of the events and changing the direction to work for each arrow key. \nWhen you’re done, click \"Run\" and try to collect all of the acorns.",
        "courseF_IceAge_8_markdown_instruction": "Here is your code from the last puzzle, as well as the code to move Granny left and right. \nCan you finish the program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? \nPress \"Run\" to play the game.",
        "courseF_IceAge_9_markdown_instruction": "Everyone needs to move faster because an ice storm is coming! \nChange the scene to an icy background and set Sid’s (actor 1) speed to fast.\nPress \"Run\" and move Sid to Diego to warn him.",
        "courseF_IceAge_template_markdown_instruction": "Scrat is still looking for acorns! \nHelp him scamper around by attaching a `move actor 1` block to each of the events and changing the direction to work for each arrow key. \nWhen you’re done, click \"Run\" and try to collect all of the acorns.",
        "courseF_artist_for1_markdown_instruction": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  \n",
        "courseF_artist_for10_markdown_instruction": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)",
        "courseF_artist_for10_2018_markdown_instruction": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)",
        "courseF_artist_for1_2018_markdown_instruction": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  \n",
        "courseF_artist_for2_markdown_instruction": "Use a `repeat` loop inside of a `for` loop to create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
        "courseF_artist_for2_2018_markdown_instruction": "Use a `repeat` loop inside of a `for` loop to create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
        "courseF_artist_for3_markdown_instruction": "Create these triangles that go from 20 pixel sides to 200 pixel sides, where each triangle is 20 pixels larger than the last.",
        "courseF_artist_for3_2018_markdown_instruction": "Create these triangles that go from 20 pixel sides to 200 pixel sides, where each triangle is 20 pixels larger than the last.",
        "courseF_artist_for5_markdown_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n___\nHint:  You need to remove something!",
        "courseF_artist_for5_2018_markdown_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n___\nHint:  You need to remove something!",
        "courseF_artist_for6_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nRecreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
        "courseF_artist_for6_2018_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nRecreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
        "courseF_artist_for7_markdown_instruction": "Make three small changes to the code from the last level to get this!  ",
        "courseF_artist_for7_2018_markdown_instruction": "Make three small changes to the code from the last level to get this!  ",
        "courseF_artist_for9_markdown_instruction": "**Inspiration:** Use the counter inside the `set alpha` block to get something like this faded center.  \n(This hexagon pattern was made using a 60 degree turn.)",
        "courseF_artist_for9_2018_markdown_instruction": "**Inspiration:** Use the counter inside the `set alpha` block to get something like this faded center.  \n(This hexagon pattern was made using a 60 degree turn.)",
        "courseF_artist_for_Template_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nTry using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "courseF_artist_for_Template_2018_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nTry using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "courseF_artist_for_challenge1_markdown_instruction": "Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
        "courseF_artist_for_challenge1_2018_markdown_instruction": "Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
        "courseF_artist_for_challenge2_markdown_instruction": "Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
        "courseF_artist_for_challenge2_2018_markdown_instruction": "Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
        "courseF_artist_fwp1_markdown_instruction": "Today, we're going to keep using the powerful function editor. See if you remember how to edit the `draw a square` function to find the bugs.",
        "courseF_artist_fwp1_2018_markdown_instruction": "Today, we're going to keep using the powerful function editor. See if you remember how to edit the `draw a square` function to find the bugs.",
        "courseF_artist_fwp2_markdown_instruction": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides.",
        "courseF_artist_fwp2_2018_markdown_instruction": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides.",
        "courseF_artist_fwp2_predict1_markdown_instruction": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides. Replace the '???' with the correct values to draw the picture.",
        "courseF_artist_fwp2_predict1_2018_markdown_instruction": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides. Replace the '???' with the correct values to draw the picture.",
        "courseF_artist_fwp3_markdown_instruction": "Now try creating the function from scratch!  \n\nCreate a function called `draw a square` and use it to outline these four boxes.  \nMake sure to add a parameter for `length`!\n\n___\nStarting from the upper right, the box widths are 50, 100, 150, and 200.",
        "courseF_artist_fwp3_2018_markdown_instruction": "Now try creating the function from scratch!  \n\nCreate a function called `draw a square` and use it to outline these four boxes.  \nMake sure to add a parameter for `length`!\n\n___\nStarting from the upper right, the box widths are 50, 100, 150, and 200.",
        "courseF_artist_fwp4_markdown_instruction": "Great job!  Now edit this function to add a parameter for the number of sides in your polygon.\n\nThe sides of all the shapes are 100 pixels long.",
        "courseF_artist_fwp4_2018_markdown_instruction": "Great job!  Now edit this function to add a parameter for the number of sides in your polygon.\n\nThe sides of all the shapes are 100 pixels long.",
        "courseF_artist_fwp5_markdown_instruction": "Use the function from the last puzzle to draw this series of shapes.  \n\n\nThe triangle has 21 pixel sides, and the sides in each following shape are 7 pixels longer than the last.   \nUse the `multiplication` block to make this all happen with just one function call.\n___\nThe `multipication` block looks like this <xml><block type=\"math_arithmetic\" inline=\"true\">\n      <title name=\"OP\">MULTIPLY</title>\n    </block></xml>",
        "courseF_artist_fwp5_2018_markdown_instruction": "Use the function from the last puzzle to draw this series of shapes.  \n\n\nThe triangle has 21 pixel sides, and the sides in each following shape are 7 pixels longer than the last.   \nUse the `multiplication` block to make this all happen with just one function call.\n___\nThe `multipication` block looks like this <xml><block type=\"math_arithmetic\" inline=\"true\">\n      <title name=\"OP\">MULTIPLY</title>\n    </block></xml>",
        "courseF_artist_fwp6_markdown_instruction": "**Challenge:** Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.\n\n- The square goes from 3 pixels to 90 pixels.\n- The hexagon goes from 3 pixels to 100 pixels.\n- The triangle goes from 3 pixels to 95 pixels.",
        "courseF_artist_fwp6_2018_markdown_instruction": "**Challenge:** Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.\n\n- The square goes from 3 pixels to 90 pixels.\n- The hexagon goes from 3 pixels to 100 pixels.\n- The triangle goes from 3 pixels to 95 pixels.",
        "courseF_artist_fwp7_markdown_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.\n\n- The smallest side in the center of this square is 50 pixels long\n- The longest side at the outside of this spiral is 200 pixels long",
        "courseF_artist_fwp7_2018_markdown_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.\n\n- The smallest side in the center of this square is 50 pixels long\n- The longest side at the outside of this spiral is 200 pixels long",
        "courseF_artist_fwp8_markdown_instruction": "Freeplay! Can you figure out how to make this drawing using the function that you just created?\n\n- The red spiral goes from 50 to 200 pixels\n- The blue spiral goes from 25 to 150 pixels\n- The green spiral goes from 100 to 350 pixels",
        "courseF_artist_fwp8_2018_markdown_instruction": "Freeplay! Can you figure out how to make this drawing using the function that you just created?\n\n- The red spiral goes from 50 to 200 pixels\n- The blue spiral goes from 25 to 150 pixels\n- The green spiral goes from 100 to 350 pixels",
        "courseF_artist_fwp9_markdown_instruction": "**Freeplay:** Below there are functions you've written, and more for you to play with. Play with the pen width to see how different your drawings look! Suggestions are in the hints!",
        "courseF_artist_fwp9_2018_markdown_instruction": "**Freeplay:** Below there are functions you've written, and more for you to play with. Play with the pen width to see how different your drawings look! Suggestions are in the hints!",
        "courseF_artist_fwp_challenge1_markdown_instruction": "Try running this program. Make changes to see what happens. Can you figure out how it works? You can also delete it and replace it with something totally different.",
        "courseF_artist_fwp_challenge1_2018_markdown_instruction": "Try running this program. Make changes to see what happens. Can you figure out how it works? You can also delete it and replace it with something totally different.",
        "courseF_artist_ramp10_markdown_instruction": "Did you know you can put loops inside of other loops to make them more powerful?  That's called making a \"nested loop\".\n\n___\n\nDrag the code for the last triangle into a new loop to spin it around and make a snowflake!\n\n*(You will need to spin it 6 times at 60 degrees to get this pattern.)*",
        "courseF_artist_ramp10_2018_markdown_instruction": "Did you know you can put loops inside of other loops to make them more powerful?  That's called making a \"nested loop\".\n\n___\n\nDrag the code for the last triangle into a new loop to spin it around and make a snowflake!\n\n*(You will need to spin it 6 times at 60 degrees to get this pattern.)*",
        "courseF_artist_ramp8_markdown_instruction": "Great!  Now let's make a square using Artist!  The blocks for artist are a little different than other puzzles, but the idea is the same.\n___\nEach side of the square has a length of 200 pixels, and you will need to turn 90 degrees to make each angle.",
        "courseF_artist_ramp8_2018_markdown_instruction": "Great!  Now let's make a square using Artist!  The blocks for artist are a little different than other puzzles, but the idea is the same.\n___\nEach side of the square has a length of 200 pixels, and you will need to turn 90 degrees to make each angle.",
        "courseF_artist_variables10_markdown_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n-  What happens if you start out with `length` less than 150? \n-  What if you multiply your variable by 1.25 each time through?\n-  What will your code do if you turn 119 degrees?",
        "courseF_artist_variables10_2018_markdown_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n-  What happens if you start out with `length` less than 150? \n-  What if you multiply your variable by 1.25 each time through?\n-  What will your code do if you turn 119 degrees?",
        "courseF_artist_variables2_markdown_instruction": "Now use another loop to draw three of those triangles right next to each other.   \n\nYou can nest the code from your last puzzle inside.",
        "courseF_artist_variables2_2018_markdown_instruction": "Now use another loop to draw three of those triangles right next to each other.   \n\nYou can nest the code from your last puzzle inside.",
        "courseF_artist_variables4_markdown_instruction": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
        "courseF_artist_variables4_2018_markdown_instruction": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
        "courseF_artist_variables6_markdown_instruction": "**OOPS!**  \n\nWe actually need the triangles to be 60 pixels wide, with 60 pixel jumps.  \n\nAren't you glad you're using a variable?",
        "courseF_artist_variables6_2018_markdown_instruction": "**OOPS!**  \n\nWe actually need the triangles to be 60 pixels wide, with 60 pixel jumps.  \n\nAren't you glad you're using a variable?",
        "courseF_artist_variables6a_markdown_instruction": "Use what you've learned to build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables6a_2018_markdown_instruction": "Use what you've learned to build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables7_markdown_instruction": "Let's start this section by drawing a triangle with 150 pixel sides. \n\nBe sure to use the `length` variable and a repeat loop.",
        "courseF_artist_variables7_2018_markdown_instruction": "Let's start this section by drawing a triangle with 150 pixel sides. \n\nBe sure to use the `length` variable and a repeat loop.",
        "courseF_artist_variables8_markdown_instruction": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.\n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nThe length of the first side of the triangle is 150 pixels.",
        "courseF_artist_variables8_2018_markdown_instruction": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.\n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nThe length of the first side of the triangle is 150 pixels.",
        "courseF_artist_variables9_markdown_instruction": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variables9_2018_markdown_instruction": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variablesFP_markdown_instruction": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
        "courseF_artist_variablesFP_2018_markdown_instruction": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
        "courseF_artist_variables_10_markdown_instruction": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n-  What happens if you start out with `length` less than 150? \n-  What if you multiply your variable by 1.25 each time through?\n-  What will your code do if you turn 119 degrees?",
        "courseF_artist_variables_2_markdown_instruction": "Now use another loop to draw three of those triangles right next to each other.   \n\nYou can nest the code from your last puzzle inside.",
        "courseF_artist_variables_3_markdown_instruction": "Before things get tricky, can you move the length of 50 into a variable so we can use it in the next few puzzles?  \n<br/>\n\n<img src=\"https://images.code.org/e6eac1f6aeb68a9a7584516e28663c14-image-1477533059853.gif\" width=\"65%\"/>",
        "courseF_artist_variables_4_markdown_instruction": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
        "courseF_artist_variables_5_markdown_instruction": "Add another set of loops at the end of your code to add three more triangles. This time, move forward and up!",
        "courseF_artist_variables_6_markdown_instruction": "OOPS! We actually need the triangles to be 60 pixels wide, with 60 pixel jumps.  \nAren't you glad you're using a variable?",
        "courseF_artist_variables_6a_markdown_instruction": "Use what you've learned to build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
        "courseF_artist_variables_7_markdown_instruction": "Let's start this section by drawing a triangle with 150 pixels sides. \n\nBe sure to use the `length` variable and a repeat loop.",
        "courseF_artist_variables_8_markdown_instruction": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.\n\n![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png)",
        "courseF_artist_variables_9_markdown_instruction": "Time to make some art!  \nSee what happens when you repeat the code from the last puzzle 30 times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
        "courseF_artist_variables_FP_markdown_instruction": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
        "courseF_artist_variables_challenge1_markdown_instruction": "Challenge alert! Can you create a `length` variable and use it to create this interesting pattern?",
        "courseF_artist_variables_challenge1_2018_markdown_instruction": "Challenge alert! Can you create a `length` variable and use it to create this interesting pattern?",
        "courseF_artist_variables_challenge1a_markdown_instruction": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\nYou've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "courseF_artist_variables_challenge2_markdown_instruction": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\nYou've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "courseF_artist_variables_challenge2_2018_markdown_instruction": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\nYou've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
        "courseF_artistembed_variables9_markdown_instruction": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
        "courseF_bee_conditionals10_markdown_instruction": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
        "courseF_bee_conditionals10_2018_markdown_instruction": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
        "courseF_bee_conditionals1_predict1_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseF_bee_conditionals1_predict1_2018_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "courseF_bee_conditionals2_markdown_instruction": "*\"It's too cloudy to see any flowers!\"*\n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar **once**.  \n\nRemember: Not all clouds hide the same thing!",
        "courseF_bee_conditionals2_2018_markdown_instruction": "*\"It's too cloudy to see any flowers!\"*\n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar **once**.  \n\nRemember: Not all clouds hide the same thing!",
        "courseF_bee_conditionals3_markdown_instruction": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar **once**.",
        "courseF_bee_conditionals3_2018_markdown_instruction": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar **once**.",
        "courseF_bee_conditionals4_markdown_instruction": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
        "courseF_bee_conditionals4_2018_markdown_instruction": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
        "courseF_bee_conditionals7_predict2_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb!\n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseF_bee_conditionals7_predict2_2018_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb!\n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "courseF_bee_conditionals8_markdown_instruction": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower. Otherwise, make honey once (because there is a honeycomb).",
        "courseF_bee_conditionals8_2018_markdown_instruction": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower. Otherwise, make honey once (because there is a honeycomb).",
        "courseF_bee_for10_markdown_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.",
        "courseF_bee_for10_2018_markdown_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.",
        "courseF_bee_for11_markdown_instruction": "If your loop is counting down, the increment is **subtracted** from your counter variable each time through. \n\nWhat should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "courseF_bee_for11_2018_markdown_instruction": "If your loop is counting down, the increment is **subtracted** from your counter variable each time through. \n\nWhat should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "courseF_bee_for2_markdown_instruction": "Write the code to help the bee collect all of the nectar.\n\nYou will need lots of blocks for this challenge, but we'll learn an easier way in the next puzzle.",
        "courseF_bee_for2_2018_markdown_instruction": "Write the code to help the bee collect all of the nectar.\n\nYou will need lots of blocks for this challenge, but we'll learn an easier way in the next puzzle.",
        "courseF_bee_for3_markdown_instruction": "Ah, the `for` loop makes this much easier!  \n\nTry this puzzle using the `for` loop and the `counter` variable to see how much shorter your code becomes.",
        "courseF_bee_for6_markdown_instruction": "You can also use a `for` loop to count down. \n\nTry gathering this nectar by counting down from **5** to **1** by **1**.",
        "courseF_bee_for6_2018_markdown_instruction": "You can also use a `for` loop to count down. \n\nTry gathering this nectar by counting down from **5** to **1** by **1**.",
        "courseF_bee_for7_markdown_instruction": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the **increment**.\n\nTry collecting these flowers using an **increment** of 2.",
        "courseF_bee_for7_2018_markdown_instruction": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the **increment**.\n\nTry collecting these flowers using an **increment** of 2.",
        "courseF_bee_for8_markdown_instruction": "You've got this!  \n\nWhat should your **increment** be to collect 3, 6, 9, 12, 15 nectar?\n",
        "courseF_bee_for8_2018_markdown_instruction": "You've got this!  \n\nWhat should your **increment** be to collect 3, 6, 9, 12, 15 nectar?\n",
        "courseF_bee_for9_markdown_instruction": "Now, let's combine the `counter` variable with a `math` block! \n\nHow can you use the `counter` variable to navigate this garden with the fewest number of blocks possible?",
        "courseF_bee_for9_2018_markdown_instruction": "Now, let's combine the `counter` variable with a `math` block! \n\nHow can you use the `counter` variable to navigate this garden with the fewest number of blocks possible?",
        "courseF_bee_for_challenge1_markdown_instruction": "You can use this `for loop` to collect all of the nectar. Un-bee-lievable!\n\nThere are a few actions that you will want to `repeat 'counter' times`.",
        "courseF_bee_for_challenge1_2018_markdown_instruction": "You can use this `for loop` to collect all of the nectar. Un-bee-lievable!\n\nThere are a few actions that you will want to `repeat 'counter' times`.",
        "courseF_bee_for_challenge2_markdown_instruction": "Solve this puzzle with the fewest number of blocks possible.",
        "courseF_bee_for_challenge2_2018_markdown_instruction": "Solve this puzzle with the fewest number of blocks possible.",
        "courseF_bee_for_challenge3_markdown_instruction": "**For-Loops Super Challenge:** Solve this puzzle with the fewest number of blocks possible.",
        "courseF_bee_functions2_markdown_instruction": "To make things easier, it's time to learn about functions!\n\nFrom here on out, you will be using a new *function editor*.  This editor is a separate window that will appear when you go to edit a function.  You won't see all of the code from your function while you're coding in the workspace, but don't worry...it's still there!  \n___\n\nLet's practice with this function that gets nectar only if the bee is at a flower.  To see the code inside, click the blue \"edit\" button!\n\nUse the `get only nectar` function to collect the nectar from each flower.",
        "courseF_bee_functions2_2018_markdown_instruction": "To make things easier, it's time to learn about functions!\n\nFrom here on out, you will be using a new *function editor*.  This editor is a separate window that will appear when you go to edit a function.  You won't see all of the code from your function while you're coding in the workspace, but don't worry...it's still there!  \n___\n\nLet's practice with this function that gets nectar only if the bee is at a flower.  To see the code inside, click the blue \"edit\" button!\n\nUse the `get only nectar` function to collect the nectar from each flower.",
        "courseF_bee_functions3_markdown_instruction": "Now it's your turn to make a function to get some honey **only** if there is a honeycomb!  Click \"edit\" to build the `only make honey` function, then use it to solve this puzzle.",
        "courseF_bee_functions3_2018_markdown_instruction": "Now it's your turn to make a function to get some honey **only** if there is a honeycomb!  Click \"edit\" to build the `only make honey` function, then use it to solve this puzzle.",
        "courseF_bee_functions3a_markdown_instruction": "Each cloud could be hiding either one flower or one honeycomb!  Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.\n\nUse your function to solve the puzzle!",
        "courseF_bee_functions3a_2018_markdown_instruction": "Each cloud could be hiding either one flower or one honeycomb!  Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.\n\nUse your function to solve the puzzle!",
        "courseF_bee_functions4_markdown_instruction": "Did you know that you can call a function from *inside* another function?  \n\nUse your `check nectar or honey` function inside the new `move and check` function to help the bee turn, go get what's under the cloud, then back-up and turn back around!",
        "courseF_bee_functions4_2018_markdown_instruction": "Did you know that you can call a function from *inside* another function?  \n\nUse your `check nectar or honey` function inside the new `move and check` function to help the bee turn, go get what's under the cloud, then back-up and turn back around!",
        "courseF_bee_functions5a_markdown_instruction": "Now, build `move and check` so that it takes the bee to the cloud whenever there is a path to the right, then use it to solve this puzzle!",
        "courseF_bee_functions5a_2018_markdown_instruction": "Now, build `move and check` so that it takes the bee to the cloud whenever there is a path to the right, then use it to solve this puzzle!",
        "courseF_bee_functions6_markdown_instruction": "*\"This field is a-MAZE-ing!\"*\n\nBuild your own function to help the bee through the maze by turning left at flowers and right at honeycomb.  Don't forget to collect nectar and make honey along the way!",
        "courseF_bee_functions6_2018_markdown_instruction": "*\"This field is a-MAZE-ing!\"*\n\nBuild your own function to help the bee through the maze by turning left at flowers and right at honeycomb.  Don't forget to collect nectar and make honey along the way!",
        "courseF_bee_functions7_markdown_instruction": "Rebuild your function from the last puzzle to solve this maze.\n\nTurn left at the honeycomb and right at the flowers.  \n**Note:** Some corners are unmarked!",
        "courseF_bee_functions7_2018_markdown_instruction": "Rebuild your function from the last puzzle to solve this maze.\n\nTurn left at the honeycomb and right at the flowers.  \n**Note:** Some corners are unmarked!",
        "courseF_bee_functions8a_markdown_instruction": "Underneath this cloud, there might be a flower with an unknown amount of nectar, or a honeycomb with an unknown amount of honey.  \n\nCan you write a program that can handle either?",
        "courseF_bee_functions8a_2018_markdown_instruction": "Underneath this cloud, there might be a flower with an unknown amount of nectar, or a honeycomb with an unknown amount of honey.  \n\nCan you write a program that can handle either?",
        "courseF_bee_functionsPre7_markdown_instruction": "Now try building a function to solve this maze.  How is it different from last time?  \n\nTurn left at the honeycomb and right at the flowers.  \n**Note:** Some corners are unmarked!",
        "courseF_bee_functionsPre7_2018_markdown_instruction": "Now try building a function to solve this maze.  How is it different from last time?  \n\nTurn left at the honeycomb and right at the flowers.  \n**Note:** Some corners are unmarked!",
        "courseF_bee_functions_3_2018_markdown_instruction": "*\"Such an a-MAZE-ing garden!\"*\n\nIn this puzzle, each patch needs the variable to be one less than the patch before. Subtract one from the variable each time through the loop if you want to use the same function to solve this level.",
        "courseF_bee_functions_challenge1_markdown_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
        "courseF_bee_functions_challenge1_2018_markdown_instruction": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
        "courseF_bee_functions_challenge2_markdown_instruction": "Use everything you have learned to complete this puzzle!",
        "courseF_bee_functions_challenge2_2018_markdown_instruction": "Use everything you have learned to complete this puzzle!",
        "courseF_bee_functions_challenge2_recursion_markdown_instruction": "Underneath this cloud, there might be a flower with an unknown amount of nectar, or a honeycomb with an unknown amount of honey.  \n\nCan you write a program that can handle either?",
        "courseF_bee_fwp1_markdown_instruction": "Check beneath the clouds to see if the flowers have any nectar.  \n\nFor this whole stage, each flower will have exactly **one** unit of nectar, and each honeycomb will need exactly **one** unit of honey. \n\n\n",
        "courseF_bee_fwp1_2018_markdown_instruction": "Check beneath the clouds to see if the flowers have any nectar.  \n\nFor this whole stage, each flower will have exactly **one** unit of nectar, and each honeycomb will need exactly **one** unit of honey. \n\n\n",
        "courseF_bee_fwp2_markdown_instruction": "Here's some code that solves the last puzzle.  \nLet's pull it into a function, then call the function to check this row for nectar.  \n___\nThis may seem like a strange step now, but it will be really helpful soon!",
        "courseF_bee_fwp2_2018_markdown_instruction": "Here's some code that solves the last puzzle.  \nLet's pull it into a function, then call the function to check this row for nectar.  \n___\nThis may seem like a strange step now, but it will be really helpful soon!",
        "courseF_bee_fwp3_markdown_instruction": "Time to put the function to the test! \n\nLet's see if it makes collecting these three rows of nectar any easier.",
        "courseF_bee_fwp3_2018_markdown_instruction": "Time to put the function to the test! \n\nLet's see if it makes collecting these three rows of nectar any easier.",
        "courseF_bee_fwp4_markdown_instruction": "*\"How is your function holding up?\"*   \n\nWe need to make some adjustments here. Click \"edit\" to add a `length` parameter to the function so that it will still work when the row is a different length.",
        "courseF_bee_fwp4_2018_markdown_instruction": "*\"How is your function holding up?\"*   \n\nWe need to make some adjustments here. Click \"edit\" to add a `length` parameter to the function so that it will still work when the row is a different length.",
        "courseF_bee_fwp5_markdown_instruction": "*\"You're doing great so far!\"*\n\nLet's use this function to collect the nectar.",
        "courseF_bee_fwp5_2018_markdown_instruction": "*\"You're doing great so far!\"*\n\nLet's use this function to collect the nectar.",
        "courseF_bee_fwp6_markdown_instruction": "You can make code shorter and more efficient when you combine functions with other programming elements.  \n___\nWhat blocks can you use with your function to build a short and sweet solution to this puzzle?",
        "courseF_bee_fwp6_2018_markdown_instruction": "You can make code shorter and more efficient when you combine functions with other programming elements.  \n___\nWhat blocks can you use with your function to build a short and sweet solution to this puzzle?",
        "courseF_bee_fwp7_markdown_instruction": "**Challenge:** Something looks a little different. Modify your function to make honey as well.",
        "courseF_bee_fwp7_2018_markdown_instruction": "**Challenge:** Something looks a little different. Modify your function to make honey as well.",
        "courseF_bee_fwp_challenge1_markdown_instruction": "Use one `for loop` in a function to collect all of the corn. The same `for loop` can count to different maximum values by using the `length` parameter.",
        "courseF_bee_fwp_challenge1_2018_markdown_instruction": "Use one `for loop` in a function to collect all of the corn. The same `for loop` can count to different maximum values by using the `length` parameter.",
        "courseF_bee_fwp_challenge2_markdown_instruction": "*\"**Lettuce** see if you can handle this one final test! Give it everything you've got!\"*\n\nUse one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.\n\nGood luck!",
        "courseF_bee_fwp_challenge2_2018_markdown_instruction": "*\"**Lettuce** see if you can handle this one final test! Give it everything you've got!\"*\n\nUse one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.\n\nGood luck!",
        "courseF_bee_variables_3_2018_markdown_instruction": "*\"Such an a-MAZE-ing garden!\"*\n\nIn this puzzle, each patch needs the variable to be one less than the patch before. Subtract one from the variable each time through the loop if you want to use the same function to solve this level.",
        "courseF_bee_variables_4_2018_markdown_instruction": "\"Un-BEE-lievable!\"\n\nEdit the code to make it work for this puzzle.",
        "courseF_maze_ramp1_markdown_instruction": "For this puzzle, connect all of the blocks from the workspace together below the <xml><block type=\"when_run\"/></xml> block and click \"Run\" to watch it go!",
        "courseF_maze_ramp13_markdown_instruction": "Time for another Angry Birds puzzle to pull it all together!\n\nUse nested loops to get the bird to the pig.",
        "courseF_maze_ramp15_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** Use what you've learned to get the bird to the pig!",
        "courseF_maze_ramp1_2018_markdown_instruction": "For this puzzle, connect all of the blocks from the workspace together below the <xml><block type=\"when_run\"/></xml> block and click \"Run\" to watch it go!",
        "courseF_maze_ramp2_markdown_instruction": "Drag a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">7</title></block></xml> block out of the toolbox and attach it to the <xml><block type=\"when_run\"/></xml> event.\n\nPlace the <xml><block type=\"maze_moveForward\"/></xml> block inside the loop to finish your code.",
        "courseF_maze_ramp2_2018_markdown_instruction": "Drag a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">7</title></block></xml> block out of the toolbox and attach it to the <xml><block type=\"when_run\"/></xml> event.\n\nPlace the <xml><block type=\"maze_moveForward\"/></xml> block inside the loop to finish your code.",
        "courseF_maze_ramp4_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseF_maze_ramp4_2018_markdown_instruction": "*\"Trace the path and lead me to the silly pig.\"* \n\nAvoid TNT or feathers will fly!",
        "courseF_maze_ramp5_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseF_maze_ramp5_2018_markdown_instruction": "*\"Follow this path to get me to the pig!\"*\n\nAvoid the TNT.",
        "courseF_maze_ramp6_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several blocks in a row, try moving them inside of a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop.  This will do the same thing with less code!",
        "courseF_maze_ramp6_2018_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*\n\nWhen you have several blocks in a row, try moving them inside of a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop.  This will do the same thing with less code!",
        "courseF_maze_ramp7_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** Use what you've learned to get the bird to the pig!",
        "courseF_playlab_brokenText_markdown_instruction": "In the rest of this stage, we will use multiple `ask` blocks and multiple `if/else` statements to create a game that **you** control!\n\nStart by setting the \"codename\" variable to a word that you can remember.  Then, use an `ask` block to get a codename from the users.  You will need an `if/else` block to see if the codename entered matches the codename that you have set.",
        "courseF_playlab_variables0_markdown_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!  \n\nDecode his speech by changing these pieces of text in the code:\n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "courseF_playlab_variables1_markdown_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!  \n\nDecode his speech by changing these pieces of text in the code:\n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "courseF_playlab_variables1a_markdown_instruction": "Variables can be used to store text that you want to use later.  \n\nHave Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
        "courseF_playlab_variables1a_2018_markdown_instruction": "Variables can be used to store text that you want to use later.  \n\nHave Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
        "courseF_playlab_variables2_markdown_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places!   \n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "courseF_playlab_variables2a_markdown_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places!   \n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "courseF_playlab_variables2b RYAN CLONE_markdown_instruction": "We can make sentences more interesting by mixing pieces of text with variables.\n\nInsert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables2b_markdown_instruction": "We can make sentences more interesting by mixing pieces of text with variables.\n\nInsert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables2b_2018_markdown_instruction": "We can make sentences more interesting by mixing pieces of text with variables.\n\nInsert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
        "courseF_playlab_variables3_markdown_instruction": "Great!  Now that you understand how to have a character use a variable to speak, we can introduce the `ask` block.  \n\nThe `ask` block will automatically store whatever the user answers into the variable of your choice.  \n\nRun this program and enter something for Pegleg to say.\n\n",
        "courseF_playlab_variables3b_markdown_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3bEdit_markdown_instruction": "Help Kiki have a conversation with Brian by using the variable `A1` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3b_josh_markdown_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables3b_josh_2018_markdown_instruction": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
        "courseF_playlab_variables4_markdown_instruction": "Now we're going to join a variable to the beginning of Pegleg's next sentence using the `create text with` block. \n\nCan you find the correct variable in the toolbox to fill in the slot?\n\n",
        "courseF_playlab_variables4b_markdown_instruction": "Now, Pirate Pegleg has some questions for Brian.\n\nThis code uses an `ask` block, so you can type Brian's answers after you click \"Run\". \n\nPut the variables in the correct places to create this conversation.",
        "courseF_playlab_variables4b_2018_markdown_instruction": "Now, Pirate Pegleg has some questions for Brian.\n\nThis code uses an `ask` block, so you can type Brian's answers after you click \"Run\". \n\nPut the variables in the correct places to create this conversation.",
        "courseF_playlab_variables5_markdown_instruction": "Now we're going to add a variable into the middle of Pegleg's sentence using more than one `create text with` block. \n\nHere is how you link `create text with` blocks together to form longer sentences:\n\n![](https://images.code.org/1c9bdc9e73d60b5ed053c3c4e9e1dcd4-image-1476993588379.gif)",
        "courseF_playlab_variables5b_markdown_instruction": "Pirate Pegleg is going to ask **you** some questions.\n\nPut all of the variables in the correct place so that his story makes sense.",
        "courseF_playlab_variables5c RYAN Copy_markdown_instruction": "Let's combine the `ask` block with an `if/else` statement to make a game!\n\nPirate Pegleg is going to ask you a question.  Drag a copy of the `answer` variable into the conditional for the `if` statement to check whether or not you entered the correct color.",
        "courseF_playlab_variables5c_markdown_instruction": "Let's combine the `ask` block with an `if/else` statement to have some fun!\n\nPirate Pegleg is going to ask you a question.  Drag a copy of the `answer` variable into the conditional for the `if` statement to check whether or not you entered the correct color.",
        "courseF_playlab_variables5c_2018_markdown_instruction": "Let's combine the `ask` block with an `if/else` statement to have some fun!\n\nPirate Pegleg is going to ask you a question.  Drag a copy of the `answer` variable into the conditional for the `if` statement to check whether or not you entered the correct color.",
        "courseF_playlab_variables6b_markdown_instruction": "You cannot fit much text in an actor's speech bubble, so sometimes you need to make the actor say something more than once.  \n\nWe have provided some starter questions and variables for you. Join them together to make a fun story that takes more than one speech bubble to tell.",
        "courseF_playlab_variables6c_markdown_instruction": "In the rest of this stage, we will use multiple `ask` blocks and multiple `if/else` statements to create a game that **you** control!\n\nStart by setting the \"codename\" variable to a word that you can remember.  Then, use an `ask` block to get a codename from the users.  You will need an `if/else` block to see if the codename entered matches the codename that you have set.",
        "courseF_playlab_variables6c_2018_markdown_instruction": "In the rest of this stage, we will use multiple `ask` blocks and multiple `if/else` statements to create a game that **you** control!\n\nStart by setting the \"codename\" variable to a word that you can remember.  Then, use an `ask` block to get a codename from the users.  You will need an `if/else` block to see if the codename entered matches the codename that you have set.",
        "courseF_playlab_variables7b_markdown_instruction": "Time to make your own project!  \n\nCreate some questions and weave the answers together into your very own story.\n\nIf you need ideas, click the hints icon.",
        "courseF_playlab_variables7b_2018_markdown_instruction": "Time to make your own project!  \n\nCreate some questions and weave the answers together into your very own story.\n\nIf you need ideas, click the hints icon.",
        "courseF_playlab_variables7c_markdown_instruction": "Add another `ask` block to ask the user to guess a color.  \n\nKeep your `if/else` statement such that your codename always wins the game, but every other codename always loses.",
        "courseF_playlab_variables7c_2018_markdown_instruction": "Add another `ask` block to ask the user to guess a color.  \n\nKeep your `if/else` statement such that your codename always wins the game, but every other codename always loses.",
        "courseF_playlab_variables8b_markdown_instruction": "Use what you've learned to create an improv scene between the actors.\n\n**Improv:** *A scene that actors make up on stage using information from the audience.*",
        "courseF_playlab_variables8c_markdown_instruction": "Use the `join` block (in the toolbox under \"Text\") to make the win/lose messages more personal by incorporating both the `codename` and the `color` variables into the responses.",
        "courseF_playlab_variables8c_2018_markdown_instruction": "Use the `join` block (in the toolbox under \"Text\") to make the win/lose messages more personal by incorporating both the `codename` and the `color` variables into the responses.",
        "courseF_playlab_variables_challenge1_markdown_instruction": "Use these blocks to make the actors share a knock-knock joke. Change the punchline and setup to tell your own joke!",
        "courseF_playlab_variables_challenge1_2018_markdown_instruction": "Use these blocks to make the actors share a knock-knock joke. Change the punchline and setup to tell your own joke!",
        "courseF_playlab_variables_challenge2_markdown_instruction": "Now for a game of tag! Tag Cat (actor 2) to get 2 points. Tag Penguin (actor 3) to get 3 points.  Get exactly 10 points to win!  \n \nBut be careful, when Cat and Penguin tag each other, they take points away.\n\n---\n\nAdd the blocks necessary to make this game work the way it's been explained.\n- How will you get Dog to move in all directions using the arrow keys?\n- How will you add points when Dog tags Cat or Penguin?\n- How will you subtract points when Cat and Penguin touch?",
        "courseF_playlab_variables_challenge2_2018_markdown_instruction": "Now for a game of tag! Tag Cat (actor 2) to get 2 points. Tag Penguin (actor 3) to get 3 points.  Get exactly 10 points to win!  \n \nBut be careful, when Cat and Penguin tag each other, they take points away.\n\n---\n\nAdd the blocks necessary to make this game work the way it's been explained.\n- How will you get Dog to move in all directions using the arrow keys?\n- How will you add points when Dog tags Cat or Penguin?\n- How will you subtract points when Cat and Penguin touch?",
        "courseF_playlab_variables_challenge3_markdown_instruction": "Can you figure out how this \"Fortune Teller\" app works? Try adding some of the following features to this game:\n\n* Change the \"yes\" and \"no\" answers to something more interesting.\n* Let the player ask another question after the actor says the fortune.\n* Give the witch two more things to say when she is in an `angry` or `normal` mood.\n* Give the wizard his own set of fortunes.\n* Make each actor change mood randomly.\n\nCheck the hints if you need help with these challenges!",
        "course_playlab_variables1_markdown_instruction": "This is Pirate Pegleg.  He's awfully hard to understand these days!  \n\nDecode his speech by changing these pieces of text in the code:\n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "course_playlab_variables2_markdown_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places!   \n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "course_playlab_variables3_markdown_instruction": "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places!   \n- \"arrrg\" should be \"a\" \n- \"ye\" should be \"e\"\n\n",
        "coursea_maze_ramp1_2018_markdown_instruction": "To get the bird to the pig, snap the <xml><block type=\"maze_moveEast\"/></xml> block to the bottom of the <xml><block type=\"when_run\"/></xml> block, then press \"▶ Run\"!",
        "coursef_maze_ramp3_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "coursef_maze_ramp3_2018_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "csd-post-survey-2017-FR_markdown_instruction": "Anything else you'd like to say about your experience in the course?",
        "csd-post-survey-2017-FR_2018_markdown_instruction": "Please provide any other feedback you have about your experience in the course.",
        "csd-post-survey-2018-topics-liked-FR_markdown_instruction": "Please provide any other feedback you have about the units of this course.",
        "csd-post-survey-2018-topics-want-FR_markdown_instruction": "What other topics are you interested in learning about in the future?",
        "csd-pulse-check-survey-1-free-response U1Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U1Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U2Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U2Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U3Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U3Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U4Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U4Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U4Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U4Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U5Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U5Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U5Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U5Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U6Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U6Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U6Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response U6Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csd-pulse-check-survey-1-free-response_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-post-survey-2017-FR_markdown_instruction": "Anything else you'd like to say about your experience in the course?",
        "csp-post-survey-2017-FR_2018_markdown_instruction": "Final thoughts about the course or your experience.",
        "csp-post-survey-2017-q36-e_markdown_instruction": "I worry because of another reason:",
        "csp-post-survey-2017-q36-e_2018_markdown_instruction": "I worry because of another reason:",
        "csp-post-survey-2018-PT-feedback-FR_markdown_instruction": "Any other feedback about the AP Exam or Performance Tasks?",
        "csp-post-survey-2018-topics-liked-FR_markdown_instruction": "Please provide any other feedback you have about the units of this course.",
        "csp-post-survey-2018-topics-want-FR_markdown_instruction": "What other topics are you interested in learning about in the future?",
        "csp-pre-survey-2017-q36-e_markdown_instruction": "I worry because of another reason:",
        "csp-pre-survey-2017-q36-e_2018_markdown_instruction": "I worry because of another reason:",
        "csp-pre-survey-2017-q38_markdown_instruction": "If yes, what computer science course(s) had you taken before your current computer science class?",
        "csp-pre-survey-2017-q38_2018_markdown_instruction": "If yes, what computer science course(s) had you taken before your current computer science class?",
        "csp-pulse-check-survey-1-q6-FR-U1Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-1-q6-FR-U1Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-2-q6-FR-U2Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-2-q6-FR-U2Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-3-q6-FR-U2Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-3-q6-FR-U2Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-4-q6-FR-U3Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-4-q6-FR-U3Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-5-q6-FR-U4Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-5-q6-FR-U4Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-6-q6-FR-U4Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-6-q6-FR-U5Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-6-q6-FR-U5Ch1_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-7-q6-FR-U5Ch1_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-7-q6-FR-U5Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-7-q6-FR-U5Ch2_2018_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp-pulse-check-survey-8-q6-FR-U5Ch2_markdown_instruction": "Anything else you’d like your teacher to know?",
        "csp_U3_square_v_rect_FR_markdown_instruction": "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\" style=\"float: right\">\n\nIn this lesson you wrote code to make the turtle draw squares. Briefly describe how the code for drawing a rectangle would be different than drawing a square.  (Example rectangle at right)",
        "csp_U3_square_v_rect_FR_2018_markdown_instruction": "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\" style=\"float: right\">\n\nIn this lesson you wrote code to make the turtle draw squares. Briefly describe how the code for drawing a rectangle would be different than drawing a square.  (Example rectangle at right)",
        "cspu3_assess1_filltable_markdown_instruction": "Use Top-Down Design strategy to fill in the table below. The first line is given to you. You may use as many or as few rows in the table as you see fit.\n\n_NOTE: Use a new line for each entry to the table. Write each line in the format of \"Function Name : Description\"_\n\n**Top-Down Design Strategy:**\n\n* Look at the big picture…\n* Identify a sub-task…\n* Break down that sub-task into smaller sub-task(s)...\n* Keep going until you’re down to the commands you already have access to.\n\n| Function Name   | Description / Justification |\n|-----------------|-----------------------------|\n| drawSnowflake() | Draw a 6 pointed snowflake  |\n| (Your answer)   | (Your answer)               |\n\n\n",
        "cspu3_assess1_filltable_2018_markdown_instruction": "Use Top-Down Design strategy to fill in the table below. The first line is given to you. You may use as many or as few rows in the table as you see fit.\n\n_NOTE: Use a new line for each entry to the table. Write each line in the format of \"Function Name : Description\"_\n\n**Top-Down Design Strategy:**\n\n* Look at the big picture…\n* Identify a sub-task…\n* Break down that sub-task into smaller sub-task(s)...\n* Keep going until you’re down to the commands you already have access to.\n\n| Function Name   | Description / Justification |\n|-----------------|-----------------------------|\n| drawSnowflake() | Draw a 6 pointed snowflake  |\n| (Your answer)   | (Your answer)               |\n\n\n",
        "cspu3_assess1_filltable_exam_prep_markdown_instruction": "Use Top-Down Design strategy to fill in the table below. The first line is given to you. You may use as many or as few rows in the table as you see fit.\n\n_NOTE: Use a new line for each entry to the table. Write each line in the format of \"Function Name : Description\"_\n\n**Top-Down Design Strategy:**\n\n* Look at the big picture…\n* Identify a sub-task…\n* Break down that sub-task into smaller sub-task(s)...\n* Keep going until you’re down to the commands you already have access to.\n\n| Function Name   | Description / Justification |\n|-----------------|-----------------------------|\n| drawSnowflake() | Draw a 6 pointed snowflake  |\n| (Your answer)   | (Your answer)               |\n\n\n",
        "cspu3_assess1_freeresponse_markdown_instruction": "Explain how abstraction allows for the creation of increasingly complex systems.  Reference top-down design strategy in your response.",
        "cspu3_assess1_freeresponse_2018_markdown_instruction": "Explain how abstraction allows for the creation of increasingly complex systems.  Reference top-down design strategy in your response.",
        "cspu3_assess1_freeresponse_exam_prep_markdown_instruction": "Explain how abstraction allows for the creation of increasingly complex systems.  Reference top-down design strategy in your response.",
        "cspu5_assess1_shortresponse_markdown_instruction": "**Short Response:** \n\nTwo students, Kaleb and Hunter, are arguing in class about an App Lab project. Kaleb states, “Huh, a button and an image are basically the same thing!”.  Hunter replies, “That doesn’t make any sense at all!”.\n\tExplain what Kaleb may have meant by that statement.",
        "cspu5_assess1_shortresponse_2018_markdown_instruction": "**Short Response:** \n\nTwo students, Kaleb and Hunter, are arguing in class about an App Lab project. Kaleb states, “Huh, a button and an image are basically the same thing!”.  Hunter replies, “That doesn’t make any sense at all!”.\n\tExplain what Kaleb may have meant by that statement.",
        "cspu5_assess1_shortresponse_exam_prep_markdown_instruction": "**Short Response:** \n\nTwo students, Kaleb and Hunter, are arguing in class about an App Lab project. Kaleb states, “Huh, a button and an image are basically the same thing!”.  Hunter replies, “That doesn’t make any sense at all!”.\n\tExplain what Kaleb may have meant by that statement.",
        "cspu5_assess2_flowChart_markdown_instruction": "The human question below has a yes/no answer. Create a flowchart that shows the logical progression of the questions that need to be answered to arrive at yes or no. Your diagram should consider the day of the week, time of day, and account for both possible outcomes.\n\n| Question                         | Question |\n|----------------------------------|----------|\n| Should I be at school right now? |   (Input your flowchart here)     |",
        "cspu5_assess2_match_markdown_instruction": "The following statements are true about event handlers, if-statements, or both in App Lab.  Place the letter next to each statement into the appropriate area of the table below.\n\n**Statements:**\n\n* A. Runs code in response to a user action\n* B. Runs code in response to statement being evaluated to True\n* C. Evaluated sequentially once execution is “inside” the statement\n* D. Can be triggered at any time\n* E. Used to run a block of code\n\n_Note: Make a new line for each box._\n\n    Event Handlers: x, x\n    if Statements: x, x\n    Both: x, x\n",
        "cspu5_assess2_pseudocode2_markdown_instruction": "A _pseudocode_ program is started below that asks the user for input and stores the value in a variable.  Continue writing pseudocode to accomplish this task: \n\nIf the hour is within the school day (8 to 15) then display  “Nice to see you!”, Otherwise, display “It’s time to go home!\n\n    DISPLAY (“Enter the hour of day (0-23)”)\n    hour <- INPUT ()",
        "cspu5_assess2_pseudocode2_2018_markdown_instruction": "A _pseudocode_ program is started below that asks the user for input and stores the value in a variable.  Continue writing pseudocode to accomplish this task: \n\nIf the hour is within the school day (8 to 15) then display  “Nice to see you!”, Otherwise, display “It’s time to go home!\n\n    DISPLAY (“Enter the hour of day (0-23)”)\n    hour <- INPUT ()",
        "cspu5_assess2_pseudocode2_exam_prep_markdown_instruction": "A _pseudocode_ program is started below that asks the user for input and stores the value in a variable.  Continue writing pseudocode to accomplish this task: \n\nIf the hour is within the school day (8 to 15) then display  “Nice to see you!”, Otherwise, display “It’s time to go home!\n\n    DISPLAY (“Enter the hour of day (0-23)”)\n    hour <- INPUT ()",
        "cspu5_assess2_shortAnswer_markdown_instruction": "**Short answer:** When might a programmer create a global variable instead of a local variable?",
        "cspu5_assess2_shortAnswer2_markdown_instruction": "**Short Answer:**\n\nIn the previous class periods, you developed a digital assistant that is able to “intelligently” respond to a limited set of questions and statements.  Assume you have created a much more robust digital assistant with capabilities similar to those of Siri.  Describe two possible user inputs:  one question that a digital assistant could “intelligently” answer easily, and another that it could not. Explain what makes the first easy and the second difficult for a digital assistant. (Consider the code used to develop your digital assistant.)",
        "cspu5_assess2_shortAnswer_2018_markdown_instruction": "**Short answer:** When might a programmer create a global variable instead of a local variable?",
        "cspu5_assess2_shortAnswer_exam_prep_markdown_instruction": "**Short answer:** When might a programmer create a global variable instead of a local variable?",
        "cspu5_assess2_trueFalse_markdown_instruction": "For each expression below, circle whether it evaluates to true or false. The variable temperature is initialized as shown.\n\n    var temperature = 30;\n\nExpressions:\n\n* (temperature > 0) && (temperature < 32)\n* (temperature > 0) || (temperature < 32)\n* (temperature != 0) && (temperature < 32)\n* (temperature == 0) || (temperature > 32)\n* (temperature < 0) || (temperature > 32)\n\n_Note: Write \"true\" or \"false\" on a new line for each expression._",
        "cspu5_assess3_shortAnswer_markdown_instruction": "**Short Answer:**  Computer models and simulations are used to formulate, refine, and test hypotheses.  Describe a scenario that could be modeled by a computer and explain one benefit and one drawback of doing the simulation on a computer instead of real world. \n",
        "cspu5_assess3_shortAnswer_2018_markdown_instruction": "**Short Answer:**  Computer models and simulations are used to formulate, refine, and test hypotheses.  Describe a scenario that could be modeled by a computer and explain one benefit and one drawback of doing the simulation on a computer instead of real world. \n",
        "cspu5_assess3_shortAnswer_exam_prep_markdown_instruction": "**Short Answer:**  Computer models and simulations are used to formulate, refine, and test hypotheses.  Describe a scenario that could be modeled by a computer and explain one benefit and one drawback of doing the simulation on a computer instead of real world. \n",
        "cspu5_assess4_scoreToGrade_markdown_instruction": "**Short Answer:** Jimmy wrote the procedure scoreToGrade which accepts as a parameter score - a quiz score in the range 0-100.  The procedure is supposed to return a letter grade. He feels confident his program is correct because he has tested it using the scores 3, 29, and 67. Sally believes the program is incorrect because she tested the values 73 and 86.  The code is syntactically correct, and the programs runs without generating an error, but the results are sometimes wrong.  Why does the procedure return the correct values for Jimmy’s tests but not Sally’s? \n\n    PROCEDURE scoreToGrade (percent)\n    {\n        IF (percent < 60)\n        {\n            RETURN (\"F\")\n        }\n        ELSE IF (percent >= 60)\n        {\n        \tRETURN (\"D\")\n        }\n        ELSE IF (percent >= 70)\n        {\n            RETURN (\"C\")\n        }\n        ELSE IF (percent >= 80)\n        {\n            RETURN (\"B\")\n        }\n        ELSE\n        {\n        \tRETURN (\"A\")\n        }\n    }",
        "cspu5_assess4_scoreToGrade_2018_markdown_instruction": "**Short Answer:** Jimmy wrote the procedure scoreToGrade which accepts as a parameter score - a quiz score in the range 0-100.  The procedure is supposed to return a letter grade. He feels confident his program is correct because he has tested it using the scores 3, 29, and 67. Sally believes the program is incorrect because she tested the values 73 and 86.  The code is syntactically correct, and the programs runs without generating an error, but the results are sometimes wrong.  Why does the procedure return the correct values for Jimmy’s tests but not Sally’s? \n\n    PROCEDURE scoreToGrade (percent)\n    {\n        IF (percent < 60)\n        {\n            RETURN (\"F\")\n        }\n        ELSE IF (percent >= 60)\n        {\n        \tRETURN (\"D\")\n        }\n        ELSE IF (percent >= 70)\n        {\n            RETURN (\"C\")\n        }\n        ELSE IF (percent >= 80)\n        {\n            RETURN (\"B\")\n        }\n        ELSE\n        {\n        \tRETURN (\"A\")\n        }\n    }",
        "cspu5_assess4_scoreToGrade_exam_prep_markdown_instruction": "**Short Answer:** Jimmy wrote the procedure scoreToGrade which accepts as a parameter score - a quiz score in the range 0-100.  The procedure is supposed to return a letter grade. He feels confident his program is correct because he has tested it using the scores 3, 29, and 67. Sally believes the program is incorrect because she tested the values 73 and 86.  The code is syntactically correct, and the programs runs without generating an error, but the results are sometimes wrong.  Why does the procedure return the correct values for Jimmy’s tests but not Sally’s? \n\n    PROCEDURE scoreToGrade (percent)\n    {\n        IF (percent < 60)\n        {\n            RETURN (\"F\")\n        }\n        ELSE IF (percent >= 60)\n        {\n        \tRETURN (\"D\")\n        }\n        ELSE IF (percent >= 70)\n        {\n            RETURN (\"C\")\n        }\n        ELSE IF (percent >= 80)\n        {\n            RETURN (\"B\")\n        }\n        ELSE\n        {\n        \tRETURN (\"A\")\n        }\n    }",
        "cspu5_assess4_shortAnswerShopping_markdown_instruction": "**Short Answer:** Cecelia would like to write an app to help manage a trip to the grocery store.  The app will maintain a shopping list (a list of words) of all the items to buy.  Describe how Cecelia might use a second list in the app.  What else might be tracked? Describe how the list would be used and updated in the app.\n",
        "cspu5_assess4_shortAnswerShopping_2018_markdown_instruction": "**Short Answer:** Cecelia would like to write an app to help manage a trip to the grocery store.  The app will maintain a shopping list (a list of words) of all the items to buy.  Describe how Cecelia might use a second list in the app.  What else might be tracked? Describe how the list would be used and updated in the app.\n",
        "cspu5_assess4_shortAnswerShopping_exam_prep_markdown_instruction": "**Short Answer:** Cecelia would like to write an app to help manage a trip to the grocery store.  The app will maintain a shopping list (a list of words) of all the items to buy.  Describe how Cecelia might use a second list in the app.  What else might be tracked? Describe how the list would be used and updated in the app.\n",
        "expresslink_markdown_instruction": "<a href=\"https://studio.code.org/s/express\"><img src=\"https://images.code.org/32b135ea9a16684b30f89ffe0f6606b1-image-1507039514762.05.01 AM.png\"/><img src=\"https://images.code.org/cfea3adf1aec120e23e039ed06856f6f-image-1507039555039.05.48 AM.png\"/></a>",
        "frozen circle function in circle_markdown_instruction": "Now let's create 20 overlapping circles, turning 18 degrees between each circle.",
        "frozen circle function with parameter_markdown_instruction": "Here's a ”Create circle” block that can make circles of different sizes. Can you use this to create a small circle of size 5 and a larger circle of size 10?",
        "frozen circle function_markdown_instruction": "Use the new “Create a circle” block to create 10 overlapping circles. Don't forget to jump forward between circles.",
        "frozen circle_markdown_instruction": "A circle is a special shape. Can you figure out what number to replace the question marks with to draw a circle?",
        "frozen cross rotate dense_markdown_instruction": "Let's repeat it 90 times! How many times does 90 go into 360? Hint: It's a really small number.",
        "frozen cross rotate_markdown_instruction": "Now try repeating it 10 times. How many degrees do you need to turn between each line?",
        "frozen cross_markdown_instruction": "Wrap a “Repeat” block around these commands to create a plus sign. Did you notice Elsa can move forward and backward?",
        "frozen diamond mini snowflake_markdown_instruction": "Did you know every snowflake is a different shape? Let's create a new snowflake by using another “Repeat\" block to repeat a parallelogram 4 times, turning right by 90 degrees between each parallelogram.",
        "frozen diamond snowflake_markdown_instruction": "Now, let's create a new snowflake by using the repeat block to repeat a parallelogram 10 times, turning right by 36 degrees between each one.",
        "frozen diamond_markdown_instruction": "Use a repeat around these blocks to create a parallelogram. It's just like a rectangle but has different angles. This one has 60 degree and 120 degree angles instead of all 90 degree angles.",
        "frozen freeplay_markdown_instruction": "You've officially become a master artist! Create a winter wonderland.",
        "frozen perpendicular_markdown_instruction": "Now let's see if we can create two lines that are at a 90 degree angle to each other. You will need to use the \"Turn\" block as well as the \"Move\" block.",
        "frozen snowflake branch_markdown_instruction": "Try using the ”Create a snowflake branch” block to create three branches, which starts to look like a snowflake.",
        "frozen snowflake full_markdown_instruction": "Now let's repeat it 8 times to make a beautiful snowflake!",
        "frozen snowflower_markdown_instruction": "Intricate snow patterns can be created with very simple shapes. Can you make a pattern by repeating 5 circles of size 5 and 5 circles of size 10?",
        "frozen square iterative_markdown_instruction": "It seems like we're halfway to making a square. Let's put 4 lines together to create a square.",
        "frozen square loop 3x_markdown_instruction": "Let's create three squares, turning after each square. Be sure to turn by 120 degrees before each new square.",
        "frozen square loop_markdown_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "frozen square snowflake_markdown_instruction": "Can you create a snowflake using the “Repeat” block to make a square 10 times, and the “Turn” block to turn 36 degrees between each square?",
        "gl jr clone me ram2_markdown_instruction": "Clone this level, and then make your own programs!",
        "gl jr clone me_markdown_instruction": "Clone this level, and then make your own programs!",
        "grade1_adventurer_loops2_markdown_instruction": "How can Laurel collect all five piles of gold using only one `E -->` block?",
        "grade1_artist_loops6_markdown_instruction": "**Challenge:**  It's a hidden garden! Let's walk around.",
        "grade1_artist_loops7a_markdown_instruction": "**Challenge:**  Lovely! Let's take a walk around the garden.",
        "grade1_maze_sequence8_markdown_instruction": "**Challenge:** Debug this level by adding blocks to get me to the pig!",
        "grade1_maze_sequenceA_markdown_instruction": "**Challenge:** Move me around the TNT to get to the pig.",
        "grade1_playlab_eventsFP_markdown_instruction": "Use your imagination. What can you do to make this game more fun?\n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Conversation</strong> - Add blocks so that the characters say \"Hello!\" when they run into each other. </li>\n            <li><strong>Where's the Dragon?</strong> - Have the dragon dissapear when the up arrow key is pressed.</li>\n            <li><strong>Super Dragon</strong> - Make the dragon move at a faster speed and then try to catch him with the knight. </li>\n        </ul>\n\t</h5>\n</details>\n</h5>",
        "grade2_CaringForNewPet_0_markdown_instruction": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
        "grade2_CaringForNewPet_1_markdown_instruction": "Drag an extra `move forward` block out of the toolbox to finish your code.",
        "grade2_CaringForNewPet_11_markdown_instruction": "*\"Keep calm and help me find the bad pig.\"*",
        "grade2_CaringForNewPet_2_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "grade2_CaringForNewPet_2courseC_maze_programming3_markdown_instruction": "*\"This pig is ruffling my feathers.\"*\n\nThere is one extra block that is going to cause the bird to crash.  \nThrow it away by dragging it back to the toolbox.",
        "grade2_CaringForNewPet_3_markdown_instruction": "*\"Trace the path and lead me to the silly pig. Avoid TNT or feathers will fly!\"*",
        "grade2_CaringForNewPet_3D_markdown_instruction": "*\"Follow this path to get me to the pig!\"*",
        "grade2_CaringForNewPet_4_markdown_instruction": "*\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"*",
        "grade2_CaringForNewPet_6_markdown_instruction": "**Challenge:** Guide me to the green evilness! (Watch out for TNT)",
        "grade2_CaringForNewPet_7D_markdown_instruction": "*\"It's time to get angry!\"*\n\n**Challenge:** This code has a lot of bugs. You'll need to remove blocks and add blocks.",
        "grade2_MakeDogTag_1_markdown_instruction": "*\"Let's make a cage for my pet monster!\"*\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.  \n(Each line is 100 pixels long)",
        "grade2_MakeDogTag_2_markdown_instruction": "*\"This spaceship needs a window!\"*\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
        "grade2_MakeDogTag_3_markdown_instruction": "*\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"*\n\nFinish Starla's rocket so she can chase her pet.  \n(Each side of the triangle is 100 pixels long and has 120 degree outer angles)",
        "grade2_MakeDogTag_4_markdown_instruction": "*\"Maybe we should make a tag for each of our pets in case they get lost!\"*\n\nFinish this tag by drawing a rectangle around the outside.  \n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
        "grade2_MakeDogTag_5_markdown_instruction": "*\"Now a tag for Belle!\"*\n\nDraw this diamond with 200 pixel sides.",
        "grade2_MakeDogTag_6_markdown_instruction": "**Challenge:** This tag is a special one!  Can you figure out how to draw the outline?  \n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
        "grade2_MakeDogTag_7_markdown_instruction": "One more tag.  This is a triangle for Pi.  \n(Each side is 150 pixels)",
        "grade2_MakeDogTag_8_markdown_instruction": "Now let's connect a bunch of V's together in a loop.",
        "grade2_MakeDogTag_9_markdown_instruction": "Time to make something snazzy! \n\nRebuild the code from the last puzzle, but this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24 times instead of 8.",
        "grade2_MakeDogTag_BFP_markdown_instruction": "*\"Hi, I'm an artist. You can write code to make me draw almost anything.\"*\n\nPlay with the blocks in the toolbox to see what they do!",
        "grade2_MakeDogTag_FP_markdown_instruction": "**Freeplay:** What shape will you make the tag for your pet?\n<br/><br/>\n\n\nHere are some ideas you could try if you get stuck:\n![](https://images.code.org/e36330061c21807fac24d804e301e572-image-1475814869558.26.01.png)",
        "grade2_PuppyLoops_10_markdown_instruction": "My teacher says that I should finish what I start!\n\nHelp me finish my pinwheel. Can you figure out what's wrong?",
        "grade2_PuppyLoops_2_markdown_instruction": "Suddenly, a magical block appears!  With the `repeat` block, you can loop code over and over.\n\nCan you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade2_PuppyLoops_3_markdown_instruction": "Get me to the pig! Solve this puzzle by creating a loop!",
        "grade2_PuppyLoops_4_markdown_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade2_PuppyLoops_8_markdown_instruction": "This code for the cat's whiskers is wrong. \n\nFix this code to draw whiskers that are all the same length.",
        "grade2_PuppyLoops_9_markdown_instruction": "Looks like the C in code is drawn backwards!\n\nCan you make it look like a C again?",
        "grade2_collector_10_markdown_instruction": "You're almost done!  \n\nCollect as many pieces of treasure as you can to finish the stage!",
        "grade2_collector_10_2018_markdown_instruction": "You're almost done!  \n\nCollect as many pieces of treasure as you can to finish the stage!",
        "grade2_collector_2_markdown_instruction": "Move Laurel to the gold, then use `collect` to pick it up.",
        "grade2_collector_3_markdown_instruction": "*\"Sequence matters!\"*\n\nThe blocks you need are already in the workspace, but not connected.  Put these blocks in order to collect all of the gold and solve the puzzle.",
        "grade2_collector_4_markdown_instruction": "Sequence matters! The blocks you need are already in the workspace, but not connected.  Order these blocks to solve the puzzle.",
        "grade2_collector_5_markdown_instruction": "*\"Help me collect each gold coin!\"*\n\nThese blocks are in the wrong order. Can you fix them?",
        "grade2_collector_6_markdown_instruction": "\"Help me collect all of the treasure!\"\n\nThese blocks are in the wrong order. Reorder them to collect all of the treasure.",
        "grade2_collector_7_markdown_instruction": "**Challenge:** What is going on here?   \n\nEven if we put these in the right order, there will still be some missing.  \nUse blocks from the toolbox to collect all of the treasure.",
        "grade2_collector_8_markdown_instruction": "*\"Keep up the good work! Help me collect all of the coins.\"*",
        "grade2_collector_9_markdown_instruction": "*\"Let's get all of the coins!\"*",
        "grade2_collector_9a_markdown_instruction": "**Challenge:** Grab all of the coins.",
        "grade2_collector_A_markdown_instruction": "Help Laurel collect all of the treasure.",
        "grade2_collector_A_2018_markdown_instruction": "Help Laurel collect all of the treasure.",
        "grade2_collector_pre1_markdown_instruction": "*\"Hi, I'm Laurel. Today I'm searching for treasure at the dog park!\"*  \n\nPlay around with the blocks to see if you can help Laurel collect some gold.",
        "grade2_link_RunMarco_partner_markdown_instruction": "<a href=\"https://www.allcancode.com/runmarco\"></a><img src=\"https://images.code.org/c754e82a395ab69e5c1e3b2dfe8bf9ff-image-1486603338831.22.10.png\" width=\"400px\"/></a>",
        "grade2_maze_debuggingFP_markdown_instruction": "*\"Now, help me sneak up on the pig any way you want to!\"*",
        "grade2_maze_intro10_markdown_instruction": "Solve this puzzle.",
        "grade2_maze_intro2_markdown_instruction": "Welcome to Code Studio! Here you will learn to use blocks to build programs. Press `Ok`, then find the `Run` button to run your first program.",
        "grade2_maze_intro3_markdown_instruction": "The `workspace` is where you will create all of your programs. Find the workspace, then see what the program does.",
        "grade2_maze_intro4_markdown_instruction": "The `toolbox` is where blocks are stored. You can drag them into the `workspace` to create programs.",
        "grade2_maze_intro6_markdown_instruction": "That’s it!  Now we’re ready to try to solve a few puzzles.",
        "grade2_maze_intro7_markdown_instruction": "This time, try something a bit more challenging.",
        "grade2_maze_intro8_markdown_instruction": "This is a challenge puzzle.  It is meant to be hard and will probably take you a couple of tries to solve.  If you don’t solve it after several tries, don’t worry!  It will be in the Play Zone at the end of the stage and you can try it again when you’ve had more practice.",
        "grade2_maze_intro9_markdown_instruction": "Solve this puzzle.",
        "grade2_playlab_project_3_markdown_instruction": "Can you have Waddles (actor 1) say \"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \n\nWhen you're done, play the game to make that happen.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)",
        "grade2_puppy_loops2_markdown_instruction": "Suddenly, a magical block appears!  With the `repeat` block, you can loop code over and over.\n\nCan you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade2_puppy_loops3_markdown_instruction": "*\"Get me to the pig!\"*\n\nSolve this puzzle by creating a loop!",
        "grade2_puppy_loops4_markdown_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade2_puppy_loops5_markdown_instruction": "*\"Get me to the pig as quickly as possible!\"*",
        "grade2_puppy_loops6_markdown_instruction": "*\"This pig is ruffling my feathers!\"*\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
        "grade2_puppy_loops7_markdown_instruction": "*\"Get me to the pig!\"*\n\nUse what you learned in other puzzles!",
        "grade3_ConditionalsElse_1_markdown_instruction": "This cloud is blocking my view! \n\nCheck to see if there's a flower under the cloud, and only get nectar if there's a flower.   \nBe careful, it can change!",
        "grade3_ConditionalsElse_2_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "grade3_ConditionalsElse_4_markdown_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar only if it is a flower.  \nElse, make honey (because it is a honeycomb).",
        "grade3_ConditionalsElse_5_markdown_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_ConditionalsElse_6_markdown_instruction": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
        "grade3_ConditionalsElse_7_markdown_instruction": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
        "grade3_ConditionalsElse_8_markdown_instruction": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
        "grade3_ConditionalsElse_9_markdown_instruction": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. \n",
        "grade3_ConditionalsElse_TeacherIDo_markdown_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_Conditionals_1_markdown_instruction": "I'm a hungry bee! \n\n\nHelp me collect all of the nectar from the flowers using the fewest number of blocks.",
        "grade3_Conditionals_10_markdown_instruction": "There's a lot happening here!\n\nUse what you've learned to collect all of the nectar and then make the honey.",
        "grade3_Conditionals_11 BAD_markdown_instruction": "**Assessment:** Use a `while` loop to collect all of the nectar from these flowers.",
        "grade3_Conditionals_11_markdown_instruction": "Let's put everything together!\n\nUse what you've learned to help me collect nectar only from flowers that have it, using as few blocks as possible.  \n\nDon't forget to make honey at the end.",
        "grade3_Conditionals_12_markdown_instruction": "This stair step pattern should look familiar.  \n\nCan you collect nectar only from the flowers that have some, using as few blocks as possible?",
        "grade3_Conditionals_13_markdown_instruction": "**Assessment:** Collect all of the nectar.  \nBe careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "grade3_Conditionals_2_markdown_instruction": "Look at all of that nectar!\n\nHelp me collect the nectar and make the honey using as few blocks as you can.  ",
        "grade3_Conditionals_3_markdown_instruction": "These magic purple flowers change!\n\nEach time you try the puzzle, purple flowers can have either 1 nectar or none at all...but you won't know the number until you run the code! \n\nBe careful not to collect nectar from a purple flower if it doesn't have any. \nYou must first check if the nectar is equal to 1 using the `if nectar` block.",
        "grade3_Conditionals_8_markdown_instruction": "I wonder what's out there!\n\nHelp me fly around the yard and collect nectar only from the flowers that have some. ",
        "grade3_Debugging_1_markdown_instruction": "These blocks are really bugging me!\n\nFix the error(s) to collect all of the nectar.",
        "grade3_Debugging_10_markdown_instruction": "**Challenge:** *\"This puzzle is making me loopy!\"*\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
        "grade3_Debugging_11_markdown_instruction": "**Challenge:**  Fix the errors to collect all of the nectar and make all of the honey.",
        "grade3_Debugging_2_markdown_instruction": "*\"These blocks are really bugging me!\"*\n\nFix the error(s) to collect all of the nectar.",
        "grade3_Debugging_3_markdown_instruction": "*\"Ooh, this one stings!\"*\n\nFix the error(s) to collect all of the nectar.",
        "grade3_Debugging_4_markdown_instruction": "*\"These blocks are really bugging me.\"*\n\nFix the error(s) to collect all of the nectar and make all of the honey.",
        "grade3_Debugging_5_markdown_instruction": "That flower looks tasty! \n\nFix the error(s) to collect all of the nectar.  \nYou can now use both run and step.",
        "grade3_Debugging_6_markdown_instruction": "What a sweet challenge!\n\nFix the error(s) to collect all of the nectar.",
        "grade3_Debugging_8_markdown_instruction": "*\"This could be sweet!\"*\n\nFix the error(s) to make all of the honey.",
        "grade3_Debugging_9_markdown_instruction": "\"Bee\" patient with this one!\n\nYou will need to fix a couple of things in this program to collect all of the nectar and make all of the honey.",
        "grade3_Loops_10_markdown_instruction": "Such a busy bee!\n\nHelp Bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "grade3_Loops_11_markdown_instruction": "The shape of this path is different from the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "grade3_Loops_3_markdown_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "grade3_Loops_4_markdown_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "grade3_Loops_5_markdown_instruction": "What a beautiful field of flowers!\n\nHelp the bee visit each one.\n\nCan you find a way to do it with fewer than 7 blocks?",
        "grade3_Loops_6_markdown_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "grade3_Loops_7_markdown_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "grade3_Loops_TeacherIDo_markdown_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "grade3_RunningFarm_1_markdown_instruction": "*\"Corn you help me harvest today?\"*\n\nUse conditionals to make sure that you pick all of the corn, but don't disturb the stalks where nothing is growing yet.",
        "grade3_RunningFarm_10_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_11a_markdown_instruction": "Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_2_markdown_instruction": "*\"Lettuce collect both crops from this row!\"*\n\nHelp the farmer collect both corn and lettuce from the field.",
        "grade3_RunningFarm_4_markdown_instruction": "*\"Gosh! Now the crops are growing in clusters!\"*  \n\nHelp the farmer pick all of the lettuce in each cluster before moving on to the next bunch.",
        "grade3_RunningFarm_5_markdown_instruction": "*\"What a bountiful crop!\"*\n\nThis field has clusters of corn, lettuce, and pumpkins all growing together.  Can you collect them all?",
        "grade3_RunningFarm_6_markdown_instruction": "*\"Let's take this one step further!\"*\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
        "grade3_RunningFarm_7_markdown_instruction": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
        "grade3_RunningFarm_8_markdown_instruction": "Harvesting one type of crop at a time takes too long. Can you help me harvest both wheat and potatoes in one run? I wonder if you can stack another While There is... loop on top of another one?",
        "grade3_RunningFarm_9_markdown_instruction": "Can you help me one last time? I want to collect as many crops as I can before the weeds take over this field. How many do you think we can get?",
        "grade3_bee_conditionals_new1a_markdown_instruction": "You can only collect nectar from flowers, but you can check any space to see if there is a flower.",
        "grade3_bee_conditionals_new2a_markdown_instruction": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
        "grade3_bee_conditionals_new3b_markdown_instruction": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
        "grade3_bee_conditionals_quantum1_markdown_instruction": "*\"This cloud is blocking my view!\"*\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
        "grade3_bee_conditionals_quantum2_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "grade3_bee_conditionals_quantum3_markdown_instruction": "*\"Now I just want to make honey.\"*\n\nSome of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
        "grade3_bee_conditionals_quantum4_markdown_instruction": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
        "grade3_bee_conditionals_quantum5_markdown_instruction": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade3_maze_Loop1_markdown_instruction": "**Assessment:**  Get me to the sunflower using only 5 blocks! ",
        "grade3_maze_loops1_markdown_instruction": "*\"Must...eat...sunflower!\"*\n\nGet the zombie to the sunflower.",
        "grade3_maze_loops2_markdown_instruction": "Get the zombie to the sunflower using the fewest blocks possible!  ",
        "grade3_maze_loops2a_markdown_instruction": "*\"Zombie hungry!\"*\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
        "grade3_maze_loops3_markdown_instruction": "*\"Must eat sunflower!\"*\n\nGet the zombie to the sunflower using only the blocks available.",
        "grade3_maze_nestedLoops2_markdown_instruction": "Suddenly, a magical block appears!  With the `repeat` block, you can loop code over and over.\n\nCan you get to the pig by creating a loop that uses only one `move forward` block inside of a `repeat`?",
        "grade3_maze_nestedLoops3_markdown_instruction": "Get me to the pig! You can only use one `move forward` block this time",
        "grade3_maze_nestedLoops4_markdown_instruction": "In this puzzle, two `repeat` loops will help you get to the pig with the fewest number of blocks!",
        "grade4_arist_functions_star0_markdown_instruction": "Have you drawn something like this star before? Practice making it one more time by adding a `turn` and a `repeat` block.",
        "grade4_arist_nested_loop_circles1_markdown_instruction": "**Assessment:** Use a nested loop to complete the design.",
        "grade4_arist_nested_loop_flags1_markdown_instruction": "Loop the given code to create a windmill.",
        "grade4_arist_nested_loop_polygons1_markdown_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "grade4_arist_nested_loop_polygons2_markdown_instruction": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "grade4_arist_nested_loop_squares1_markdown_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? \n\nEach square is 30 pixels.",
        "grade4_arist_nested_loop_triangles2_markdown_instruction": "Now nest this loop inside another loop to draw 10 triangles.  \nThis is called a \"nested\" loop.  ",
        "grade4_arist_nested_loop_triangles3_markdown_instruction": "Can you draw a hexagon by looping the triangle code?",
        "grade4_arist_nested_loop_triangles4_markdown_instruction": "Draw the teeth in the alligator's mouth!",
        "grade4_arist_nested_loop_triangles5_markdown_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "grade4_arist_nested_loop_triangles6_markdown_instruction": "Can you draw these 36 triangles using a nested loop?",
        "grade4_artist_freeplay_markdown_instruction": "Create your own project! This creation will be saved to your Projects dashboard so that you can easily edit it any time!",
        "grade4_artist_functions1_markdown_instruction": "*\"Me zombie artist. Me love drawing!\"*\n\nHelp the zombie draw glasses using squares with sides of 100 pixels.  \nThe bridge between the glasses is 75 pixels long.\n\n",
        "grade4_artist_functions2_markdown_instruction": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
        "grade4_artist_functions2a_markdown_instruction": "Create this image using only the blocks provided.\n\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "grade4_artist_functions3a_markdown_instruction": "Create this image using only the blocks provided.\n\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "grade4_artist_functions3b_markdown_instruction": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n- To make each hexagon, repeat the 6 times, turning 60 degrees.\n- To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
        "grade4_artist_functionsChallenge0_markdown_instruction": "**Challenge:** Create as many functions as you think you need to make this drawing of 50 pixel squares.",
        "grade4_artist_functions_challenge_markdown_instruction": "**Functions Super Challenge:** Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "grade4_artist_functions_challenge2_markdown_instruction": "**Functions Super Challenge:** Use the suggested functions to draw four rows of hexagons. Notice how our even numbered rows are shifted to the right?",
        "grade4_artist_functions_stars0_markdown_instruction": "We will come back to functions shortly. Let's take a break to practice making this star. \n\nYou can make this drawing by adding a repeat block.",
        "grade4_artist_functions_stars1_markdown_instruction": "Now that you can draw a star, try drawing four stars!\n\n- Each branch of the star is 25 pixels long\n- Turn 45 degrees between branches\n- Jump 100 pixels between each star",
        "grade4_artist_functions_stars2_markdown_instruction": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.",
        "grade4_artist_functions_stars3_markdown_instruction": "That last one is tough if you only use loops. Let's try one more time and see if this new 'function' makes it easier to **draw a star**.",
        "grade4_artist_functions_windows0_markdown_instruction": "You are doing great! \n\nMake this window by drawing a square, then turning 90 degrees before drawing another, and so on.",
        "grade4_artist_functions_windows1_markdown_instruction": "You just created a nested loop! Let's repeat all of these commands with **another** `repeat` block to draw windows on this house. Don't forget to `jump`!",
        "grade4_artist_nestedLoops_challenge2_markdown_instruction": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!  \n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You are not expected to get it perfect the first time.\n\nThe repeated shape is almost identical to the one from the last puzzle, except that the length used in the first loop is a little smaller. ",
        "grade4_artist_nested_loop_circles1_markdown_instruction": "**Assessment:** Use a nested loop to complete the design.",
        "grade4_artist_nested_loop_flags1_markdown_instruction": "Loop the given code to create a windmill.",
        "grade4_artist_nested_loop_polygons1_markdown_instruction": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
        "grade4_artist_nested_loop_polygons2_markdown_instruction": "Hi, I'm the Artist! Let's create some drawings together! For starters, try repeating this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
        "grade4_artist_nested_loop_squares1_markdown_instruction": "Can you draw these 10 squares of this sidewalk using a nested loop? \n\nEach square is 30 pixels.",
        "grade4_artist_nested_loop_triangles1_markdown_instruction": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.\n\n",
        "grade4_artist_nested_loop_triangles2_markdown_instruction": "Let's make a quick adjustment to get completely different image!  \n<b>Hint:</b> ? × 10 = 360",
        "grade4_artist_nested_loop_triangles3_markdown_instruction": "Can you draw a hexagon by looping the triangle code?\nHint: 6 × ? = 360",
        "grade4_artist_nested_loop_triangles4_markdown_instruction": "Let's try something a little different! Can you help me draw the bottom teeth in the alligator's mouth?",
        "grade4_artist_nested_loop_triangles5_markdown_instruction": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
        "grade4_artist_nested_loop_triangles6_markdown_instruction": "Can you draw these 36 triangles using a nested loop?",
        "grade4_artist_parameters_squares1_markdown_instruction": "Click \"edit\" to fill in the function definition of `draw a square` and add a parameter.  \nIt should take a length parameter just like the triangle. \n\n**This time, draw 3 squares:** 25, 50 and 75 pixels in length. The lefthand corners are each 100 pixels away from the last.",
        "grade4_artist_parameters_triangles1_markdown_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the `draw a triangle` function to find the bugs.",
        "grade4_artist_parameters_triangles2_markdown_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "grade4_artist_parameters_triangles2b_markdown_instruction": "Can you complete this drawing? \n\nThe sides of each triangle are 25 pixels larger than the last.  \nThe first triangle has 25 pixel sides.",
        "grade4_artist_parameters_triangles3_markdown_instruction": "Can you complete this drawing? \n\nThe sides of each triangle are 25 pixels larger than the last.  \nThe first triangle has 25 pixel sides.",
        "grade4_artist_parameters_triangles4_markdown_instruction": "The code for this triangle function is broken. \n\nCan you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade4_artist_parameters_trianglesx_markdown_instruction": "Can you complete this drawing? \n\nThe sides of each triangle are 25 pixels larger than the last.  \nThe first triangle has 25 pixel sides.",
        "grade4_bee_conditionals_nested_loops_markdown_instruction": "**Assessment:** Collect all of the nectar.  \nBe careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "grade4_bee_conditionals_new1_markdown_instruction": "**Assessment:** Collect all of the nectar.  \nBe careful not to try to collect nectar from a purple flower if it doesn't have any.",
        "grade4_bee_conditionals_quantum1_markdown_instruction": "This cloud is blocking my view! \n\nCheck to see if there's a flower under the cloud, and only get nectar if there's a flower.   \nBe careful, it can change!",
        "grade4_bee_conditionals_quantum2_markdown_instruction": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
        "grade4_bee_conditionals_quantum4_markdown_instruction": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar only if it is a flower.  \nElse, make honey (because it is a honeycomb).",
        "grade4_bee_conditionals_quantum5_markdown_instruction": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
        "grade4_bee_functions2_markdown_instruction": "Functions are blocks of code that perform a task.  \n\nUse the `get 2 nectar` function to collect the nectar from each flower.",
        "grade4_bee_functions3_markdown_instruction": "Build the `get 5` function to use in this puzzle.",
        "grade4_bee_functions4_markdown_instruction": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the `move and get nectar` function to collect all of the nectar.",
        "grade4_bee_functions9_markdown_instruction": "**Challenge:** These flowers can have a different amount of nectar each time you run the puzzle.   \n\nCreate a function that collects all of the nectar from each flower.",
        "grade4_bee_nestedLoops1_markdown_instruction": "*\"Can you BEE-lieve all of these flowers?\"*\n\nCollect all of the nectar from each flower. ",
        "grade4_bee_nestedLoops2_markdown_instruction": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
        "grade4_bee_nestedLoops4_markdown_instruction": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
        "grade4_bee_nestedLoops5_markdown_instruction": "**Challenge:** Collect all of the nectar from each flower and make honey at each honeycomb. \n",
        "grade4_bee_nestedLoops_assess_markdown_instruction": "**Assessment:** Collect all of the nectar and make all of the honey using loops.\n\n**Hint:** *There are several possible solutions!*",
        "grade4_frozen_freeplay_markdown_instruction": "You've officially become a master artist! Create a winter wonderland.",
        "grade4_frozen_functions0_markdown_instruction": "A circle is a special shape. Can you figure out what number to replace the question marks with to draw a circle?",
        "grade4_frozen_functions1_markdown_instruction": "Use the new “dreate a circle” `function` to create 10 overlapping circles. Don't forget to `jump` forward between circles.",
        "grade4_frozen_functions1a_markdown_instruction": "Use the new “Create a circle” block to create 10 overlapping circles. Don't forget to jump forward between circles.",
        "grade4_frozen_functions2_markdown_instruction": "Now let's create 20 overlapping circles, turning 18 degrees between each circle.",
        "grade4_frozen_functions3_markdown_instruction": "Here's a ”Create circle” block that can make circles of different sizes. Can you use this to create a small circle of size 5 and a larger circle of size 10?",
        "grade4_frozen_functions4_markdown_instruction": "Intricate snow patterns can be created with very simple shapes. Can you make a pattern by repeating 5 circles of size 5 and 5 circles of size 10?",
        "grade4_frozen_nested_loop_diamonds1_markdown_instruction": "Let’s use a repeat block to create a rhombus. Like a square, all sides are equal length, but the angles are different. This one has 60 degree and 120 degree angles instead of all 90 degree angles.",
        "grade4_frozen_nested_loop_diamonds2_markdown_instruction": "Did you know every snowflake is a different shape? Let's create a new snowflake by using another “Repeat\" block to repeat a parallelogram 4 times, turning right by 90 degrees between each parallelogram.",
        "grade4_frozen_nested_loop_diamonds3_markdown_instruction": "Now, let's create a new snowflake by using the repeat block to repeat a parallelogram 10 times, turning right by 36 degrees between each one.",
        "grade4_frozen_nested_loop_rectangle1_markdown_instruction": "Hi, I’m Anna of Arendelle! Let’s use a repeat block to create a rectangle. This one is  200 pixels long and 100 pixels tall. All of the corners are 90 degree angles.",
        "grade4_frozen_square_markdown_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "grade4_frozen_square_loop1_markdown_instruction": "Hi, I’m Anna of Arendelle! Let’s make a square with the “Repeat” block, which uses fewer blocks. How many times (???) should the “Repeat” block loop the blocks inside it to make a square?",
        "grade4_frozen_square_loop2_markdown_instruction": "Let's create three squares, turning after each square. Be sure to turn by 120 degrees before each new square.",
        "grade4_frozen_square_loop3_markdown_instruction": "Can you create a snowflake using the “Repeat” block to make a square 10 times, and the “Turn” block to turn 36 degrees between each square?",
        "grade4_playlab_freeplay_markdown_instruction": "It's free play time! Have fun with all the blocks in your tool box.  \n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Tag</strong> - Have character 2 patrol and use your arrow keys to make character 1 chase until they collide. </li>\n            <li><strong>Whack-a-Sprite</strong> - Have a character constantly pop up at a random location. Award points for clicking the sprite before it disappears. </li>\n            <li><strong>Best Guess</strong> - Make both characters disappear, change location to a random spot, then reappear as a random character.  Click on the first one and get a point...but if you click on the second one you LOSE a point! </li>\n        </ul>\n\t</h5>\n</details>\n</h5>\n",
        "grade4_playlab_test2_markdown_instruction": "Here's a function called `jump` that causes your main character to jump up 100 pixels. \n\nRun the program and use the jump function to collect all of the flags by moving the dog with the arrow keys.",
        "grade4_review_artist2_markdown_instruction": "This house needs a roof! Draw the triangle.  \n\nHint: all three sides are the same length.\n\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\" width=\"300\"/>",
        "grade4_review_artist3_markdown_instruction": "The jump block moves the artist without drawing. Draw the dashed line using both the `jump forward` and `move forward` blocks. Each line is 50 pixels long.",
        "grade4_review_bee1_markdown_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "grade4_review_bee3_markdown_instruction": "Such a busy bee!\n\nHelp Bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "grade4_scaffolded_project1_markdown_instruction": "It is amazing how much you have learned! Let's put them together to make a game, step by step.\nTo start, let's set up your game's space and actor. We've put these blocks in your tool box. Choose a background and map, and pick an actor to be your game's hero.\n\n![](https://images.code.org/745931ce34b3c47de19c36009e4a9c48-image-1471464938470.14.47 PM.png)",
        "grade4_scaffolded_project2_markdown_instruction": "Now let's get things moving! Use event handlers and actions to make your hero move.\n\nWe've added these blocks to your tool box to help you.\n\n![](https://images.code.org/6216c0559cfae16005ffb53e6532473b-image-1471472994205.23.54 PM.png)",
        "grade4_scaffolded_project3_markdown_instruction": "Now that your game has a hero, it's time to start adding other actors and assigning them behaviors. \n\nAdd two or more additional actors to your game and make them move. Do you want to have an actor patrol back and forth? Try using a these new blocks to bring these other components of your game to life!\n\n![](https://images.code.org/4cfffd476c6129891eb8bde246a711a8-image-1472065288448.00.42 PM.png)\n\n**NOTE:** Chasing and fleeing behavior commands are coming soon!",
        "grade4_scaffolded_project4_markdown_instruction": "Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.\n\n*Don't expect to get this right on the first try. Keep testing your game as you code. You'll not only want a game that works, but one that is fun to play!*\n\nWe've added these blocks to your toolbox:\n\n![](https://images.code.org/ad0df96aa91c89e3d903dce2fe19517f-image-1472070105051.20.55 PM.png)",
        "grade4_scaffolded_project4a_markdown_instruction": "Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.\n\n*Don't expect to get this right on the first try. Keep testing your game as you code. You'll not only want a game that works, but one that is fun to play!*\n\n![](https://images.code.org/876b13abf8a7984f94342dd9a5c8a8f0-image-1472069578010.42.30 PM.png)",
        "grade4_scaffolded_project5_markdown_instruction": "Great job! You have all the basic components of a working game. Now spend some time making sure the game works the way you want. Try including a way to win or lose your game.\n\n*Don't forget: Keep testing your game as you code. You'll not only want a game that works, but one that is fun to play!*\n\nYour toolbox has been re-organized to make it easier to find what you need. We've also added these blocks:\n\n![](https://images.code.org/59b92b4c288bd5fc0c3be355c968f3d1-image-1472074578380.27.57 PM.png)",
        "grade4_scaffolded_project6_markdown_instruction": "You've finished! Now you can play your game or share it with your friends and classmates!",
        "grade5_artist_binary1_markdown_instruction": "Binary is a way of representing information using only two options.  Here, we're going to use the options \"off\" (represented by the number 0) and \"on\" (represented by the number 1).   \n\nWe've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.  \n\n**Can you have the artist draw \"01010101\" in binary in the first row?**",
        "grade5_artist_binary10_markdown_instruction": "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own. \n<br/>\n",
        "grade5_artist_binary2_markdown_instruction": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\n**Run this code to see how the artist uses binary to draw this pattern.**",
        "grade5_artist_for_loops1_markdown_instruction": "Use a `for` loop to draw this triangle that is 50 pixels wide. If you count from 1 to 3 by 1s, you can use this just like a `repeat` loop.",
        "grade5_artist_for_loops10_markdown_instruction": "**Challenge:** Can you figure out how to use all of the things you've learned to create this image of polygons, all with 40 pixel sides?",
        "grade5_artist_for_loops1a_markdown_instruction": "Try using a `for loop`to create this triangular design. Don't worry that the numbers are different than the last puzzle. As long as you turn by the right number of degrees, the artist will make the correct shape!\n\n",
        "grade5_artist_for_loops1b_markdown_instruction": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  \n\n<br/><br/>\n",
        "grade5_artist_for_loops2_markdown_instruction": "Use a `repeat` inside of a `for` loop to create this stack of triangles that goes from 50 pixels to 100 pixels.",
        "grade5_artist_for_loops3_markdown_instruction": "These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last.",
        "grade5_artist_for_loops4_markdown_instruction": "These squares start at 15 pixels long, the largest is 300 pixels long, and each square is 15 pixels larger than the last.",
        "grade5_artist_for_loops5_markdown_instruction": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n\nHint:  You need to remove something!",
        "grade5_artist_for_loops6_markdown_instruction": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nTry using some of the code from the last level, but turning 89 degrees to create this twisted square spiral.",
        "grade5_artist_for_loops7_markdown_instruction": "Make three small changes to the code from the last level to get this!  \n(This time, the `for` loop increments by 2)",
        "grade5_artist_for_loops7a_markdown_instruction": "Take the angle down to 72 degrees to get a spiraled pentagon.",
        "grade5_artist_for_loops7b_markdown_instruction": "Use the counter inside the `set alpha` block to get this faded center.  \n(This hexagon pattern was made using a 60 degree turn.)",
        "grade5_artist_for_loops8_markdown_instruction": "Remember back in a previous stage when we used a variable to control the number of sides in a shape? We are going to do the same thing with the `counter` variable now.  \n\nThis pattern starts with a triangle and adds one side at a time until it draws a decagon (10 sides). Each side should be 100 pixels long. \n\nHow will you use the `counter` variable from the `for` loop to recreate this drawing?",
        "grade5_artist_for_loops9_markdown_instruction": "Let's put it all together!   \n\nUsing your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.\n\nVery little of the code has been provided for you.",
        "grade5_artist_for_loopsfreeplay11_markdown_instruction": "<br/><br/>\n<img src=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\" width=\"250px\"/>  \n<br/><br/>\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.",
        "grade5_artist_for_loopsfreeplay12_markdown_instruction": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n<img src=\"https://images.code.org/7910db8adf2ec7e4c5fdad0101c68368-image-1475911466143.24.03.png\" width=\"400px\"/>",
        "grade5_artist_freeplay_markdown_instruction": "Create your own project! This creation will be saved to your Projects dashboard so that you can easily edit it any time!",
        "grade5_artist_functionparameters10_markdown_instruction": "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.\n\nNotice: We've used the `set alpha` block to make the \"petals\" fade toward the outside.",
        "grade5_artist_functionparameters11_markdown_instruction": "**Freeplay:** Below there are functions you've written, and more for you to play with. Play with the pen width to see how different your drawings look!",
        "grade5_artist_functionparameters7_markdown_instruction": "This image is similar to the last.  \n\nCan you use a `for` loop with your function to make this design?",
        "grade5_artist_functionparameters9_markdown_instruction": "**Challenge:** Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.\n\n- The square goes from 3 pixels to 90 pixels.\n- The hexagon goes from 3 pixels to 100 pixels.\n- The triangle goes from 3 pixels to 105 pixels.",
        "grade5_artist_functionparameters9a_markdown_instruction": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.\n\n- The smallest side in the center of this square is 50 pixels long\n- The longest side at the outside of this spiral is 200 pixels long\n",
        "grade5_artist_functionparameters9b_markdown_instruction": "Can you figure out how to make this drawing using the function that you just created?\n\n- The red spiral goes from 50 to 200 pixels\n- The blue spiral goes from 25 to 125 pixels\n- The green spiral goes from 100 to 300 pixels\n",
        "grade5_artist_functionparameters_6_markdown_instruction": "Great job!  Now edit this function to add a parameter for the number of sides in your polygon.\n\nThe sides of all the shapes are 100 pixels long.",
        "grade5_artist_parameters_squares1_markdown_instruction": "Click \"edit\" to fill in the function definition of `draw a square` and add a parameter.  \nIt should take a length parameter just like the triangle. \n\n**This time, draw 3 squares:** 25, 50 and 75 pixels in length. The lefthand corners are each 100 pixels away from the last.",
        "grade5_artist_parameters_squares1a_markdown_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the `draw a square` function to find the bugs.",
        "grade5_artist_parameters_squares2a_markdown_instruction": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides. Replace the '???' with the correct values to draw the picture.",
        "grade5_artist_parameters_stars1_markdown_instruction": "That last one is tough if you only use loops. Let's try one more time and see if this new 'function' makes it easier to **draw a star**.",
        "grade5_artist_parameters_triangles1_markdown_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the `draw a square` function to find the bugs.",
        "grade5_artist_parameters_triangles1a_markdown_instruction": "Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the `draw a triangle` function to find the bugs.",
        "grade5_artist_parameters_triangles1aa_markdown_instruction": "Click \"edit\" to fill in the function definition of `draw a triangle` and add a parameter.  \nIt should take a length parameter just like the triangle. \n\n**This time, draw 3 triangles:** 25, 50 and 75 pixels in length. The lefthand corners are each 100 pixels away from the last.",
        "grade5_artist_parameters_triangles2_markdown_instruction": "Can you complete this drawing? \n\nThe sides of each triangle are 25 pixels larger than the last.  \nThe first triangle has 25 pixel sides.",
        "grade5_artist_parameters_triangles2a_markdown_instruction": "Do you notice anything different about these function blocks? Click “Run” to see what happens.",
        "grade5_artist_parameters_triangles3_markdown_instruction": "The code for this triangle function is broken.\n\nCan you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade5_artist_parameters_triangles4_markdown_instruction": "The code for this triangle function is broken. \n\nCan you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade5_artist_parameters_trianglesy_markdown_instruction": "The code for this triangle function is broken.\n\nCan you edit the function to fix it, and then make triangles of length 25, 50, and 75?",
        "grade5_artist_variables_freeplay10_markdown_instruction": "**Free Play:** Experiment with the number of sides this shape has. Can you change the algorithm so that the overall size of the shape stays the same, no matter how many sides it has? ",
        "grade5_artist_variables_freeplay14_markdown_instruction": "**Free Play**: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.\n\nFor even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.",
        "grade5_artist_variables_freeplay15_markdown_instruction": "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\" width=\"250px\"/>\n\n**Free-Play Inspiration:** You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own. ",
        "grade5_artist_variables_hexagons1_markdown_instruction": "Let's try it again! \n\nCan you set the `length` variable to 60 to make this cool design with hexagons?",
        "grade5_artist_variables_letterT11_markdown_instruction": "Here’s some more complicated code using the same concepts from the last puzzle - what should you set the `sides` variable to in order to draw this picture made of squares?\n\n<p style=\"font-size:small; padding: 15px 15px 15px 40px; background-color:#dcf3f3; border-radius:10px;\">\n\tJust for fun: Try using a few different numbers to see what happens to the pattern!\n</p>",
        "grade5_artist_variables_octagons13_markdown_instruction": "When a shape has lots of sides, each side needs to be shorter if you want the whole pattern to fit on the screen. \n\nLet's recreate the algorithm for this amazing pattern, but instead of manually setting the `length` variable, let's use a math block with the `sides` variable inside to make sure that each shape fits correctly.  \n\nThe perimeter of each polygon is 300 pixels.",
        "grade5_artist_variables_pentagon8_markdown_instruction": "Use what you learned in the last puzzle to create this hexagon using the `sides` variable.\n\nSee how you could change just one value to draw a triangle,  square, pentagon, or octagon?",
        "grade5_artist_variables_pentagon9_markdown_instruction": "Now, recreate the algorithm from the last level and create a pentagon with sides of length 150.",
        "grade5_artist_variables_pentagons1_markdown_instruction": "Draw this pattern of pentagons with 100 pixel sides by setting the right value for `length` and dropping the `length` variable into all of the the correct places. \n\nSee how you only have to set the value for `length` once, and the code uses the right value everywhere?",
        "grade5_artist_variables_rectangle6_markdown_instruction": "Now I want to make a rectangle that is twice as tall as it is wide. We've got a variable called `width` that needs to be set to 100. Can you use the math blocks to complete the code?",
        "grade5_artist_variables_square7_markdown_instruction": "Here’s some code that can draw any regular polygon. \n\nThere’s a new variable called `sides` that is set to 4. \n\nCan you use the `sides` variable (along with the math block) to turn the right amount regardless of how many sides are in the polygon?",
        "grade5_artist_variables_triangles1_markdown_instruction": "Let's draw an equilateral triangle. \n\nIt has to be exactly 50 pixels long on each side.\n\n",
        "grade5_artist_variables_triangles1_2018_markdown_instruction": "Let's draw an equilateral triangle. \n\nIt has to be exactly 50 pixels long on each side.\n\n",
        "grade5_artist_variables_triangles2_markdown_instruction": "Instead of using `move forward by 150`, the `move` block is now referencing a variable called `length`. Can you set `length` to 150 to draw this new triangle?",
        "grade5_artist_variables_triangles3_markdown_instruction": "Drag a number block to the `set length` block and to the `repeat _ times` block to draw a set of 50 pixel triangles. ",
        "grade5_bee_for_loops10_markdown_instruction": "If your loop is counting down, the increment is **subtracted** from your counter variable each time through. \n\nWhat should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
        "grade5_bee_for_loops11_markdown_instruction": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.\n",
        "grade5_bee_for_loops2_markdown_instruction": "Add the code necessary to make sure the bee collects all the nectar.\n\nLook at how much code you need for this puzzle! (We'll learn a simpler way in the next puzzle.)",
        "grade5_bee_for_loops3_markdown_instruction": "Ah, the `for` loop makes this much easier!  \n\nTry this puzzle using the `for` loop with `counter` variable and see how much shorter your code becomes.",
        "grade5_bee_for_loops4_markdown_instruction": "Help the bee collect all of the nectar.",
        "grade5_bee_for_loops5_markdown_instruction": "Now we need to `move forward` `counter` times, then `get nectar` `counter` times.  Can you use two `repeat` loops to solve this challenge?",
        "grade5_bee_for_loops6_markdown_instruction": "You can also use a `for loop` to count down. Try gathering this nectar by counting down from 5 to 1 by 1.",
        "grade5_bee_for_loops7_markdown_instruction": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the increment.\n\nTry collecting these flowers using an increment of 2.",
        "grade5_bee_for_loops8_markdown_instruction": "You've got this!  \n\nWhat should your increment be to collect 3, 6, 9, 12, 15 nectar?\n\n",
        "grade5_bee_for_loops9_markdown_instruction": "Now, let's combine the `counter` variable with a math block! \n\nHow can you use the `counter` variable to navigate this garden with the fewest number of blocks possible?",
        "grade5_bee_parameters_new1_markdown_instruction": "Check beneath the clouds to see if the flowers have any nectar.",
        "grade5_bee_parameters_new3_markdown_instruction": "Time to put the function to the test! \n\nLet's see if it makes collecting these three rows of nectar any easier.",
        "grade5_bee_parameters_new4_markdown_instruction": "*\"How is your function holding up?\"*   \n\nWe need to make some adjustments here. Click \"edit\" to add a `length` parameter to the function so that it will still work when the row is a different length.",
        "grade5_bee_parameters_new5_markdown_instruction": "*\"You're doing great so far!\"*\n\nLet's use this function to collect a lot of nectar.",
        "grade5_bee_parameters_new7_markdown_instruction": "**Challenge:** Something looks a little different. Can you modify your function to make honey as well?",
        "grade5_bee_parameters_new8a_markdown_instruction": "Use your new function to solve this spiral.",
        "grade5_bee_parameters_new9a_markdown_instruction": "Use your new function to solve this spiral.",
        "grade5_playlab_freeplay_markdown_instruction": "It's free play time! Have fun with all the blocks in your tool box.  \n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Tag</strong> - Have character 2 patrol and use your arrow keys to make character 1 chase until they collide. </li>\n            <li><strong>Whack-a-Sprite</strong> - Have a character constantly pop up at a random location. Award points for clicking the sprite before it disappears. </li>\n            <li><strong>Best Guess</strong> - Make both characters disappear, change location to a random spot, then reappear as a random character.  Click on the first one and get a point...but if you click on the second one you LOSE a point! </li>\n        </ul>\n\t</h5>\n</details>\n</h5>\n",
        "grade5_playlab_variables10_markdown_instruction": "Edit the the `patrol` function to add an `actor` parameter, so that we can call it for each of the actors on the screen. Remember, the actors correspond to numbers 1, 2, and 3.",
        "grade5_playlab_variables11_markdown_instruction": "Add another parameter called `speed` to the `patrol` function. Try using a `set speed` block with the new `speed` parameter to help Penguin get both flags before the other sprites even get one.",
        "grade5_playlab_variables12_markdown_instruction": "Let's have some fun! Look at the code provided to see if you can figure out what each block does.  \n\nWhen you're done, use the arrow keys to control Dog and collect all of the flags.\n\n**NOTE:** You don't need to make any changes to the program",
        "grade5_playlab_variables13_markdown_instruction": "Use the `when actor touches` block to send Dog back to the top-left ONLY if Dog touches any of the other actors.",
        "grade5_playlab_variables14_markdown_instruction": "It's free play time! Have fun with all the blocks in your tool box.  \n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Tag</strong> - Have character 2 patrol and use your arrow keys to make character 1 chase until they collide. </li>\n            <li><strong>Whack-a-Sprite</strong> - Have a character constantly pop up at a random location. Award points for clicking the sprite before it disappears. </li>\n            <li><strong>Best Guess</strong> - Make both characters disappear, change location to a random spot, then reappear as a random character.  Click on the first one and get a point...but if you click on the second one you LOSE a point! </li>\n        </ul>\n\t</h5>\n</details>\n</h5>\n",
        "grade5_playlab_variables1ask_markdown_instruction": "This time, when you press 'run', you will see a 'prompt' asking you for a number. This number will be stored in a variable used to set the dog's speed.\n\n\nPay attention to how this program is written!",
        "grade5_playlab_variables2_markdown_instruction": "The race in that last puzzle wasn't very fair! Change the `dog_speed` variable to make sure you can collect more flags than Cat. The first to collect 10 flags wins!",
        "grade5_playlab_variables3_markdown_instruction": "Here's a new kind of game! \n\nYou don't need to change anything on this level.\n\n**Directions:** Use the left and right arrows to move, and the up arrow to jump. See if you can collect all of the flags.",
        "grade5_playlab_variables4_markdown_instruction": "Now we're using a variable called `height` to control how high the dog can jump. Update the `height` variable so that the dog can jump high enough to reach all the flags. \n",
        "grade5_playlab_variables6_markdown_instruction": "In our game, how should we score points?\n\n1. Add 1 to your `points` variable each time Dog hits Cat with a piece of pie.\n2. Use the `when actor 2 touches anything` event to trigger an update to your score. You can increment your variable by setting `points = points + 1.`\n3. Get your score up to 10 to pass the level.\n\n**Note:** Use the right arrow to throw pie!",
        "grade5_playlab_variables6ask_markdown_instruction": "This time, you need 100 points to win!  Don't worry though, you can choose how many points you earn each time you score a hit!\nTry adding the `ask` block and changing the number 1 out for the variable `value`.\n\n**Note:** Use the right arrow to throw pie!",
        "grade5_playlab_variables7_markdown_instruction": "Nice, now let's make sure this game isn't too easy to play!\n\nAny time Dog (actor 1) gets hit by a sandwich from Cat (actor 2), you should lose a point.\n\nStart with 10 points so it's not too hard. Let your score drop down from 10 to 0 to pass the level.",
        "grade5_playlab_variables9_markdown_instruction": "Here's a function called `patrol`. \n\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels.",
        "grade5_playlab_variables_freeplay_markdown_instruction": "Free Play time! Here are all of the variables we've played with so far in this stage, as well as a few more in case you want them. \n\nNotice that there are now so many blocks in our toolbox that they need to be organized!  Here, we've put each piece into an appropriate category.  Take some time to explore everything that is available. When you're done browsing, make a game or story using repeats, variables, and events.  \n\n*Hint: scroll down to see all the commands in the workspace.*",
        "grade5_playlab_variables_jump1_markdown_instruction": "This puzzle uses a hidden function that makes the dog jump when the `up` arrow is pressed. The height of the jumps can be set at the start of the game using the `jumpPower` variable. Try to touch all of the flags!",
        "grade5_prompt_test_markdown_instruction": "Variables aren't always numbers. What if you wanted to store a word or text? Experiment with the new `ask` block.",
        "gradeK_sequence_4_markdown_instruction": "Try this one yourself from the beginning.\n\n![](https://images.code.org/43001078c4df6feea1a6edf025192d85-image-1467929743355.gif)",
        "gradek_artist_loops1_markdown_instruction": "Help the artist draw this line two times forward.\n\n![](https://images.code.org/7ddc7b43ef27197559c7defb0af56d03-image-1470776934855.gif)",
        "gradek_artist_loops2_markdown_instruction": "Our artist is trying to draw a line five times, but can't get it right. Can you help?\n\n![](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)",
        "gradek_artist_loops3_markdown_instruction": "Now, use a `repeat` loop to draw this line five times!\n\n![](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)",
        "gradek_artist_loops4_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nDraw a line seven steps long. This will become our horizon.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/c00b930eb5fb13ae946847adc51c9bd3-image-1467935631246.gif\" width=\"300\"/>\n",
        "gradek_artist_loops5_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nLet's put a nice hill in the back.<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/bbbd114642d829029fc3b0566a4437e3-image-1477107329933.gif\" width=\"300\"/>\n",
        "gradek_artist_loops7_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nWe need a ladder up to the boat.<br/>\n</div>\n\n<img src=\"https://images.code.org/6e4dc767e55d11400f35c6680bbfe1e3-image-1470788284437.gif\" width=\"300\"/>",
        "gradek_artist_loops9_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nTime to head back to land. Help me put down stones so I don't fall in!<br/><br/>\n</div>\n\n<img src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\" width=\"300\"/>\n",
        "gradek_artist_loopsA_markdown_instruction": "<div style=\"color: #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\nHelp me build steps to watch the ship sail away.<br/>\n</div>\n\n<img src=\"https://images.code.org/0dfa647dbc835fae09989a0fbfd798c7-image-1470871168220.gif\" width=\"300\"/>\n",
        "gradek_playlab_events1c_markdown_instruction": "Jorge the Dog wants to say \"Hi there.\"  Can you help him?",
        "gradek_playlab_events2c_markdown_instruction": "Help Jorge the Dog get moving by connecting the ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png) block to the ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png) event block that is already in the workspace.",
        "gradek_playlab_events3c_markdown_instruction": "Now, get Jorge to move right when the ![](https://images.code.org/b99365eb23280f158e6ef570fe1c8a76-image-1478145132820.png) button is clicked.",
        "gradek_playlab_events4c_markdown_instruction": "Add events to have Jorge move up and down when the ![](https://images.code.org/379493b95d158b273f1424538b1c635a-image-1478145402316.png) and ![](https://images.code.org/f490d78efd81c21ab74286aefe7af097-image-1478145385132.png) buttons are pressed.",
        "harvey_snowflake_artist1_markdown_instruction": "*It's time to get your snowflake ready for 3d printing!*\n\n![](https://images.code.org/ba50acd509bd25e07e7d4622a86ba158-image-1503785370113.08.08 PM.png)In order for your image to print correctly, follow these rules:\n\n* Make sure your image is all **one piece**! Separate pieces will print separately.\n* Make sure your image **fits** entirely on the canvas\n* Use just **black lines** on a white background.\n* Jump the artist off the top left corner (-10 over, -10 down) at the end of your program:\n\n<xml>    <block type=\"jump_to_xy\"><title name=\"XPOS\">-10</title><title name=\"YPOS\">-10</title>\n    </block>\n    <block type=\"jump_to\"><title name=\"VALUE\">7</title>\n    </block></xml>\n\n    When you are finished, right-click to save the image, then send it to me on <a href=\"https://classroom.google.com\">Google Classroom</a>.",
        "harvey_snowflake_artist2_markdown_instruction": "*It's time to get your snowflake ready for 3d printing!*\n\n![](https://images.code.org/ba50acd509bd25e07e7d4622a86ba158-image-1503785370113.08.08 PM.png)In order for your image to print correctly, follow these rules:\n\n* Make sure your image is all **one piece**! Separate pieces will print separately.\n* Make sure your image **fits** entirely on the canvas\n* Use just **black lines** on a white background.\n* Jump the artist off the top left corner (-10 over, -10 down) at the end of your program:\n\n<xml>    <block type=\"jump_to_xy\"><title name=\"XPOS\">-10</title><title name=\"YPOS\">-10</title>\n    </block>\n    <block type=\"jump_to\"><title name=\"VALUE\">7</title>\n    </block></xml>\n\nWhen you are finished, right-click to save the image, then send it to me on <a href=\"https://classroom.google.com\">Google Classroom</a>.",
        "iceAgeLoopsforVideo_markdown_instruction": "Can you get to the acorn with just one <xml><block type=\"maze_moveForward\"/></xml> block? Try using a loop!",
        "iceage_click_hello_markdown_instruction": "Can you help Sid call for his friends when you click on him? \nOnce you're done, press \"Run\" to play.  Click on Sid to see your code work!",
        "iceage_click_hello_2018_markdown_instruction": "Can you help Sid call for his friends when you click on him? \nOnce you're done, press \"Run\" to play.  Click on Sid to see your code work!",
        "iceage_free_play_markdown_instruction": "Time to create your own game or story!  \n\nWhen you're done, click \"Finish\" to let friends try your game on their phones, tablets, or computers!\nDon't know what to make? Click the hints for details.",
        "iceage_free_play_2018_markdown_instruction": "Time to create your own game or story!  \n\nWhen you're done, click \"Finish\" to let friends try your game on their phones, tablets, or computers!\nDon't know what to make? Click the hints for details.",
        "iceage_free_playcourseF_IceAge_11_markdown_instruction": "Time to create your own game or story!  \n\nWhen you're done, click \"Finish\" to let friends try your game on their phones, tablets, or computers!\nDon't know what to make? Click the hints for details.",
        "iceage_hello1_markdown_instruction": "Sid (actor 1) wants to gather everyone for a new adventure. Can you help him say \"Hello!\" by dragging the `say` block out and connecting it to the bottom of the `when run` event?   \n\nDon't forget to type \"Hello!\" inside!",
        "iceage_hello1_2018_markdown_instruction": "Sid (actor 1) wants to gather everyone for a new adventure. Can you help him say \"Hello!\" by dragging the `say` block out and connecting it to the bottom of the `when run` event?   \n\nDon't forget to type \"Hello!\" inside!",
        "iceage_hello2_markdown_instruction": "Manny (actor 2) found Sid (actor 1) and wants to invite him on an adventure. Help them greet each other by using the the `actor ___ say` block twice.",
        "iceage_hello2_2018_markdown_instruction": "Manny (actor 2) found Sid (actor 1) and wants to invite him on an adventure. Help them greet each other by using the the `actor ___ say` block twice.",
        "iceage_move_events_markdown_instruction": "Scrat is still looking for acorns! \nHelp him scamper around by attaching a `move actor 1` block to each of the events and changing the direction to work for each arrow key. \nWhen you’re done, click \"Run\" and try to collect all of the acorns.",
        "iceage_move_events_2018_markdown_instruction": "Scrat is still looking for acorns! \nHelp him scamper around by attaching a `move actor 1` block to each of the events and changing the direction to work for each arrow key. \nWhen you’re done, click \"Run\" and try to collect all of the acorns.",
        "iceage_move_to_actor_markdown_instruction": "Diego (actor 1) is searching for Manny (actor 2). Can you help bring the two together? Connect a block to the `when actor touches` event to play a sound when they find each other.",
        "iceage_move_to_actor_2018_markdown_instruction": "Diego (actor 1) is searching for Manny (actor 2). Can you help bring the two together? Connect a block to the `when actor touches` event to play a sound when they find each other.",
        "iceage_move_to_flag_markdown_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "iceage_move_to_flag_2018_markdown_instruction": "Scrat is looking for his acorn! Can you help him move the last 200 pixels?",
        "iceage_repeat_markdown_instruction": "The `repeat forever` block allows you to run code continuously. Can you put blocks inside of it to help Granny get some exercise by moving left and right repeatedly?",
        "iceage_repeat_2018_markdown_instruction": "The `repeat forever` block allows you to run code continuously. Can you put blocks inside of it to help Granny get some exercise by moving left and right repeatedly?",
        "iceage_sound_and_points_markdown_instruction": "Here is your code from the last puzzle, as well as the code to move Granny left and right. \nCan you finish the program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? \nPress \"Run\" to play the game.",
        "iceage_sound_and_points_2018_markdown_instruction": "Here is your code from the last puzzle, as well as the code to move Granny left and right. \nCan you finish the program to make it so that you both **play a sound** and **score a point** when Sid and Granny collide? \nPress \"Run\" to play the game.",
        "iceage_throw_hearts_markdown_instruction": "Sid wants to let his grandmother, Granny, know that he loves her.   \n\nUse the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2)! \nSet Granny's mood to happy when she gets hit with the hearts.",
        "iceage_throw_hearts_2018_markdown_instruction": "Sid wants to let his grandmother, Granny, know that he loves her.   \n\nUse the `actor __ throw` command to have Sid (actor 1) throw hearts at Granny (actor 2)! \nSet Granny's mood to happy when she gets hit with the hearts.",
        "iceage_warn_ice_age_markdown_instruction": "Everyone needs to move faster because an ice storm is coming! \nChange the scene to an icy background and set Sid’s (actor 1) speed to fast.\nPress \"Run\" and move Sid to Diego to warn him.",
        "iceage_warn_ice_age_2018_markdown_instruction": "Everyone needs to move faster because an ice storm is coming! \nChange the scene to an icy background and set Sid’s (actor 1) speed to fast.\nPress \"Run\" and move Sid to Diego to warn him.",
        "kikiTesta_markdown_instruction": "Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.  \n\nCan you help her grab as many as she can using just 4 blocks?",
        "level 'grade3_Loops_10_markdown_instruction": "Such a busy bee!\n\nHelp Bee collect all of the nectar and make all of the honey with the fewest blocks possible.",
        "level 'grade3_Loops_11_markdown_instruction": "The shape of this path is different from the others. \n\nCan you collect all of the nectar using as few blocks as possible?",
        "level 'grade3_Loops_3_markdown_instruction": "Use a `repeat` loop to collect all of the nectar.",
        "level 'grade3_Loops_4_markdown_instruction": "Now use the `repeat` block to collect all of the nectar and make all of the honey.",
        "level 'grade3_Loops_5_markdown_instruction": "What a beautiful field of flowers!   \n\nHelp the bee visit each one.\n\nCan you find a way to do it with fewer than 7 blocks?",
        "level 'grade3_Loops_6_markdown_instruction": "How many times can loops help you in this puzzle?  \n\nLoops are your friend! Use a few of them to complete this puzzle with the fewest blocks possible.",
        "level 'grade3_Loops_7_markdown_instruction": "Those flowers look tasty!\n\nCollect nectar from each of the flowers using the fewest blocks possible.",
        "loop pet test 2_markdown_instruction": "**CHALLENGE!** When Daisy gets a carrot, she gets excited. Can you make Daisy start doing a dance party? She should never stop, even after you take the carrot away.\n\nYou will have to use all these blocks:\n![](https://images.code.org/83c295bd00536dffed3c93a40bba75ae-image-1523562330282.41.06 PM.png)",
        "loop pet test 3_markdown_instruction": "**Make Predictions!** Write down your answers to these questions before clicking \"Run\". Then try the code and see what happens!\n\n* What will Daisy the dog do after you drag the carrot to her?\n* What will Daisy the dog do after you press the Up arrow key?\n",
        "loop pet test 4_markdown_instruction": "**It's time to make your own virtual pet!** You can change whatever code you want to to make your own pet. Here are some ideas:\n\n* Can you make your pet start something new when you click on it?\n* Can you make your pet run away when you drag the vacuum to it?\n* Can you add other animal friends to your pet's area?",
        "love_spring_1_markdown_instruction": "Let's celebrate Spring!  \n\nWe have put some seeds in the ground to prepare for the season's flowers.  Can you cover them up so that the birds don't eat them?",
        "love_spring_2_markdown_instruction": "Our flowers are in full bloom!  \n\nNow we need the bee to grab nectar from each one so he can make plenty of honey back at his hive!",
        "playEventsK1_markdown_instruction": "This game is called \"Play Lab\".\n\nSee if you can figure out what each block does.",
        "playEventsK2_markdown_instruction": "Jorge wants to say \"Hi there.\"\n\nCan you help?\n\n![](https://images.code.org/f32d285fa6f45e1f8d042c04c55f32c8-image-1467988839292.gif)",
        "playEventsK3_markdown_instruction": "Jorge wants to be scratched behind the ears!\n\nCan you make it so that when you click Jorge he is happy?\n\n![](https://images.code.org/04fb37990455b215e0f20884363092d0-image-1467988943134.gif)",
        "playEventsK4_markdown_instruction": "Can you make it so that Jorge the dog chases Robin the bird when you click the up arrow?\n\n![](https://images.code.org/2fbf6c793bb77a961fa7a52f27e4c59d-image-1467989013878.gif)",
        "playEventsK5_markdown_instruction": "Now add code so that Robin flies away when you click the forward arrow.\n\n![](https://images.code.org/a7e224c5f13e39e5342011f8a76d3b6b-image-1467989101328.gif)",
        "playEventsK6_markdown_instruction": "Have Robin talk back to Jorge when you click on her.\n\n![](https://images.code.org/fc80b1febbb7a472026b6bf2c535b2f4-image-1467989171517.gif)",
        "playEventsK7_markdown_instruction": "What else can you do in this fun scene?\n<br/>\n\n<h5>\n<details>\n<summary><b>Need some ideas?</b></summary>\n\t<br/>\n\t<h5>\n\t\t<ul>\n        \t<li><strong>Conversation</strong> - Have the sprites talk to eachother when you click on them.</li>\n            <li><strong>Pinball</strong> - Make one sprite play a noise when the other runs into it.</li>\n            <li><strong>Arrows</strong> - Write a program so when each arrow key is pressed, the sprite moves in that direction!</li>\n        </ul>\n\t</h5>\n</details>\n</h5>",
        "post-assessment survey q32_markdown_instruction": "(Optional): Please explain why you would/would not recommend this computer science course to another student.",
        "post-assessment survey q37_markdown_instruction": "(Optional) If you did not take the AP exam, what, if anything, would have made the difference for you to take it?",
        "pre-assessment survey q24A_markdown_instruction": "What computer science skills do you use in your everyday life? ",
        "pre-assessment survey q25A_markdown_instruction": "If yes, what computer science course(s) had you taken before your current computer science  class? ",
        "ramp_artist_loops1_markdown_instruction": "What a lovely day!  \n\nHelp the Artist cover his flowers before the winter by moving forward by 60 pixels.",
        "ramp_artist_loops1_2018_markdown_instruction": "What a lovely day!  \n\nHelp the Artist cover his flowers before the winter by moving forward by 60 pixels.",
        "ramp_artist_loops2_markdown_instruction": "Add some beauty by repeating that step five times, changing to a random color between each move.",
        "ramp_artist_loops2_2018_markdown_instruction": "Add some beauty by repeating that step five times, changing to a random color between each move.",
        "ramp_artist_loops3_markdown_instruction": "Draw the colorful line 5 times again, this time using a `repeat` loop.",
        "ramp_artist_loops3_2018_markdown_instruction": "Draw the colorful line 5 times again, this time using a `repeat` loop.",
        "ramp_artist_loops4_markdown_instruction": "What happens when you add a 72 degree right turn after everything else inside your loop?",
        "ramp_artist_loops4_2018_markdown_instruction": "What happens when you add a 72 degree right turn after everything else inside your loop?",
        "ramp_artist_loops5_markdown_instruction": "Loops sure make writing code easier!\n\nUse loops to draw this staircase.\n- Each stairstep is 50 pixels long and 50 pixels tall\n- You will need to turn 90 degrees in each direction",
        "ramp_artist_loops5_2018_markdown_instruction": "Loops sure make writing code easier!\n\nUse loops to draw this staircase.\n- Each stairstep is 50 pixels long and 50 pixels tall\n- You will need to turn 90 degrees in each direction",
        "ramp_artist_loops6_markdown_instruction": "This staircase is much bigger, but it takes the same amount of code as the last puzzle!\n\nFix this loop to complete the puzzle.",
        "ramp_artist_loops6_2018_markdown_instruction": "This staircase is much bigger, but it takes the same amount of code as the last puzzle!\n\nFix this loop to complete the puzzle.",
        "ramp_artist_loops7_markdown_instruction": "Look for a pattern and make this code shorter using loops!",
        "ramp_artist_loops7_2018_markdown_instruction": "Look for a pattern and make this code shorter using loops!",
        "ramp_artist_loops8_markdown_instruction": "**Challenge:** Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops8_2018_markdown_instruction": "**Challenge:** Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops8_clone_markdown_instruction": "**Challenge:** Look for a pattern and make this code shorter using loops.",
        "ramp_artist_loops9_markdown_instruction": "Solve this puzzle by drawing a square with 200 pixel sides.",
        "ramp_artist_loops9_2018_markdown_instruction": "Solve this puzzle by drawing a square with 200 pixel sides.",
        "sample1_markdown_instruction": "Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.  \n\nCan you help her grab as many as she can using just 4 blocks?",
        "sample4_markdown_instruction": "Our adventurer has found a stash of coins in this cave.\n\nCan you help her grab as many as she can using just 7 blocks?",
        "sample6_markdown_instruction": "**Challenge:** Help bee get all of the nectar.\n\nThis puzzle is meant to be hard.  You may need to try lots of times.",
        "sample8_markdown_instruction": "Look at this trove of coins! \n\nHow many can you get the adventurer to grab?",
        "test peer review_markdown_instruction": "At this point you've seen 7 of the 14 lessons from unit 1. Thinking about those lessons, and looking across the other lessons in <a href=\"curriculum.code.org/csp/unit1/\" target=_blank>unit 1</a> work with your partner to develop a set of recommendations for using group work and peer learning in Unit 1. Your recommendations should include:\n\n- Which lessons or activities provide opportunities for group work and peer learning? \n- What recommendations do you have for using group work and peer learning in Unit 1 lessons?  \n\nUse the space below to record any recommendations or commentary you have for others. Once you  submit, another participant will review chance to send you feedback! \n\n",
        "test_anonymous_student_survey_next_class_markdown_instruction": "What you will do next after this class?",
        "test_anonymous_student_survey_why_class_markdown_instruction": "Why are you doing this class?  Give at least two reasons.",
        "test_sarah_markdown_instruction": "hi",
        "test_sarah_freeresponse_markdown_instruction": "This is the question at hand....",
        "the Journal of Peer Learning_markdown_instruction": "The following link is to a journal out of Australia that focuses on publishing scholarly research that investigates innovations in peer learning and the implementation and evaluations of peer learning programs:",
        "valentine_artist_03_markdown_instruction": "Now make a valentine to share with someone special!  It can be anything that you want."
      }
    }
  }
}